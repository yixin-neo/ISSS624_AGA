[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this hands-on exercise, I will learn how to import and wrangle geospatial data using appropriate R packages:\n\ninstalling and loading sf and tidyverse packages into R environment,\nimporting geospatial data by using appropriate functions of sf package,\nimporting aspatial data by using appropriate function of readr package,\nexploring the content of simple feature data frame by using appropriate Base R and sf functions,\nassigning or transforming coordinate systems by using appropriate sf functions,\nconverting an aspatial data into a sf data frame by using appropriate function of sf package,\nperforming geoprocessing tasks by using appropriate functions of sf package,\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#data-acquisition",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#data-acquisition",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.2 Data Acquisition",
    "text": "1.2 Data Acquisition\nIn this hands-on exercise, data is acquired from the following sources:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#getting-started",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#getting-started",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.3 Getting Started",
    "text": "1.3 Getting Started\nThe code chunk below install and load sf and tidyverse packages into R environment:\n\npacman::p_load(sf, tidyverse)\n\n\nsf for importing, managing, and processing geospatial data, and\ntidyverse for performing data science tasks such as importing, wrangling and visualising data.\n\nThe sp package provides classes and methods for spatial data types in 2005. The sf package was released in 2016 to give standardise support for vector data in R. It is also coherent with tidyverse, that consists of the following (not exhaustive):\n\nreadr for importing csv data,\nreadxl for importing Excel worksheet,\ntidyr for manipulating data,\ndplyr for transforming data, and\nggplot2 for visualising data"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#importing-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#importing-geospatial-data",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.4 Importing Geospatial data",
    "text": "1.4 Importing Geospatial data\nThe data that we will be importing takes the following forms:\n\nMP14_SUBZONE_WEB_PL, a polygon feature layer in ESRI shapefile format,\nCyclingPath, a line feature layer in ESRI shapefile format, and\nPreSchool, a point feature layer in kml file format.\n\n\n1.4.1 Importing polygon feature data in shapefile format\nst_read() is a func from sf package, used to read files in shapefile format.\ndsn- data source name (aka data path)\nlayer - shapefile name. No extensions like .shp, .dbf, .prj and .shx are needed.\n\nmpsz <- st_read(dsn=\"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\ngeospatial objects are multipolygon features\ntotal of 323 multipolygon features and 15 fields in mpsz simple feature data frame.\nmpsz is in svy21 projected coordinates systems\nx extend and y extend of the data are given\n\n\nlibrary(knitr)\nkable(head(mpsz, n = 3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nCA_IND\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\nINC_CRC\nFMEL_UPD_D\nX_ADDR\nY_ADDR\nSHAPE_Leng\nSHAPE_Area\ngeometry\n\n\n\n\n1\n1\nMARINA SOUTH\nMSSZ01\nY\nMARINA SOUTH\nMS\nCENTRAL REGION\nCR\n5ED7EB253F99252E\n2014-12-05\n31595.84\n29220.19\n5267.381\n1630379.3\nMULTIPOLYGON (((31495.56 30…\n\n\n2\n1\nPEARL’S HILL\nOTSZ01\nY\nOUTRAM\nOT\nCENTRAL REGION\nCR\n8C7149B9EB32EEFC\n2014-12-05\n28679.06\n29782.05\n3506.107\n559816.2\nMULTIPOLYGON (((29092.28 30…\n\n\n3\n3\nBOAT QUAY\nSRSZ03\nY\nSINGAPORE RIVER\nSR\nCENTRAL REGION\nCR\nC35FEFF02B13E0E5\n2014-12-05\n29654.96\n29974.66\n1740.926\n160807.5\nMULTIPOLYGON (((29932.33 29…\n\n\n\n\n\n\n\n1.4.2 Importing polyline feature data in shapefile form\nThe code chunk below uses st_read() function of sf package to import CyclingPath shapefile into R as line feature data frame.\n\ncyclingpath = st_read(dsn='data/geospatial', layer='CyclingPathGazette')\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\nkable(head(cyclingpath, n = 3))\n\n\n\n\nPLANNING_A\nPLANNING_1\ngeometry\n\n\n\n\nNA\nNA\nMULTILINESTRING ((16001.13 …\n\n\nNA\nNA\nMULTILINESTRING ((16012.86 …\n\n\nNA\nNA\nMULTILINESTRING ((16021.49 …\n\n\n\n\n\n\n\n1.4.3 Importing GIS data in kml format\nThe pre-schools-location-kml is in kml format.\n\npreschool = st_read('data/geospatial/pre-schools-location-kml.kml')\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex1\\data\\geospatial\\pre-schools-location-kml.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nNote that preschool is in WSG84 coordinates system (3D).\n\nkable(head(preschool, n = 3))\n\n\n\n\n\n\n\n\n\nName\nDescription\ngeometry\n\n\n\n\nkml_1\n\nPOINT Z (103.7009 1.338325 0)\n\n\nkml_2\n\nPOINT Z (103.8987 1.39044 0)\n\n\nkml_3\n\nPOINT Z (103.8068 1.438017 0)\n\n\n\n\n\n\n\n1.5.1 Working with st_geometry()\nThe column in the sf data.frame that contains the geometries is a list, of class sfc. We can retrieve the geometry list-column in this case by mpsz$geom or mpsz[[1]], but the more general way uses st_geometry() as shown in the code chunk below.\n\nclass(mpsz)\n\n[1] \"sf\"         \"data.frame\"\n\n\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\n\n1.5.2 Working with glimpse()\nBeside the basic feature information, we also would like to learn more about the associated attribute information in the data frame. This is the time you will find glimpse() of dplyr. very handy as shown in the code chunk below.\n\nglimpse(head(mpsz))\n\nRows: 6\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\"\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\"\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\"\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\"\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05,…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913\n$ SHAPE_Area <dbl> 1630379.3, 559816.2, 160807.5, 595428.9, 387429.4, 1030378.8\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (((29092.28 30…\n\n\nglimpse() report reveals the data type of each fields. For example FMEL-UPD_D field is in date data type and X_ADDR, Y_ADDR, SHAPE_L and SHAPE_AREA fields are all in double-precision values.\n\n\n1.5.3 Working with head()\nSometimes we would like to reveal complete information of a feature object, this is the job of head() of Base R\n\nhead(mpsz,3)\n\nSimple feature collection with 3 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 28160.23 ymin: 28369.47 xmax: 32362.39 ymax: 30247.18\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO    SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N PLN_AREA_C\n1        1          1 MARINA SOUTH    MSSZ01      Y    MARINA SOUTH         MS\n2        2          1 PEARL'S HILL    OTSZ01      Y          OUTRAM         OT\n3        3          3    BOAT QUAY    SRSZ03      Y SINGAPORE RIVER         SR\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84 29220.19\n2 CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06 29782.05\n3 CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96 29974.66\n  SHAPE_Leng SHAPE_Area                       geometry\n1   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3   1740.926   160807.5 MULTIPOLYGON (((29932.33 29..."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#plotting-the-geospatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#plotting-the-geospatial-data",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.6 Plotting the Geospatial Data",
    "text": "1.6 Plotting the Geospatial Data\nIn geospatial data science, by looking at the feature information is not enough. We are also interested to visualise the geospatial features. One of the ways is to use the plot() of R Graphic.\n\nplot(mpsz)\n\n\n\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above. We can, however, choose to plot only the geometry (multi-polygon) by using the code chunk below.\n\nplot(st_geometry(mpsz))\n\n\n\n\nAlternatively, we can also choose the plot the sf object by using a specific attribute as shown in the code chunk below.\n\nplot(mpsz[\"REGION_N\"])\n\n\n\n\n\n\n\n\n\n\nNote: plot() is mean for plotting the geospatial object for quick look. For high cartographic quality plot, other R package such as tmap should be used."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#working-with-projection",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#working-with-projection",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.7 Working with Projection",
    "text": "1.7 Working with Projection\nMap projection is an important property of a geospatial data. In order to perform geoprocessing using two geospatial data, we need to ensure that both geospatial data are projected using similar coordinate system.\nIn this section, you will learn how to project a simple feature data frame from one coordinate system to another coordinate system. The technical term of this process is called projection transformation.\n\n1.7.1 Assigning EPSG code to a simple feature data frame\nCommon issues:\n\ncoordinate system of the source data was missing (such as due to missing .proj for ESRI shapefile)\nwrongly assigned during the importing process\n\nUsing the st_crs() to check in detail of the mpszreveals that although it claims to be in svy21 (singapore proj sys), reading until end of print shows that it is wrongly in EPSG9001 (singapore uses epsg3414)\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nIn order to assign the correct EPSG code to mpsz data frame, st_set_crs() of sf package is used as shown in the code chunk below.\n\nmpsz3414 <- st_transform(mpsz, 3414)\n\nRecheck\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNotice that the EPSG code is 3414 now.\n\n\n1.7.2 Transforming the projection of preschool from wgs84 to svy21 (EPSG3414).\nIn geospatial analytics, it is very common for us to transform the original data from geographic coordinate system (3D) to projected coordinate system (2D). This is because geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements.\nLet us take preschool simple feature data frame as an example. The print below reveals that it is in wgs84 coordinate system (3D).\n\nst_geometry(preschool)\n\nGeometry set for 1925 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\n\nst_crs(preschool)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nNote that st_set_crs() is not appropriate and st_transform() of sf package should be used. This is because we need to reproject preschool from one coordinate system to another coordinate system mathemetically.\nLet us perform the projection transformation by using the code chunk below.\n\npreschool3414 <- st_transform(preschool, crs=3414)\n\nRecheck\n\n\nGeometry set for 1925 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11203.01 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nNotice that it is in svy21 projected coordinate system now. Furthermore, if we refer to Bounding box:, the values are greater than 0-360 range of decimal degree commonly used by most of the geographic coordinate systems."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#importing-and-converting-an-aspatial-data",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#importing-and-converting-an-aspatial-data",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.8 Importing and Converting An Aspatial Data",
    "text": "1.8 Importing and Converting An Aspatial Data\nIn practice, it is not unusual that we will come across data such as listing of Inside Airbnb. We call this kind of data aspatial data. This is because it is not a geospatial data but among the data fields, there are two fields that capture the x- (long) and y-coordinates (lat) of the data points.\nIn this section, we will learn how to\n\nimport an aspatial data into R environment and save it as a tibble data frame\nconvert it into a simple feature data frame.\n\nThe listings.csv data downloaded from AirBnb will be used.\n\n1.8.1 Importing the aspatial data\nSince listings data set is in csv file format, we will use read_csv() of readr package to import listing.csv as shown the code chunk below. The output R object is called listings and it is a tibble data frame.\n\nlistings <- read_csv('data/aspatial/listings.csv')\nclass(listings)\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe code chunk below shows list() of Base R instead of glimpse() is used to do the job.\n\nlist(listings)\n\n[[1]]\n# A tibble: 4,161 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    <dbl> <chr>       <dbl> <chr>     <chr>               <chr>            <dbl>\n 1  50646 Pleasant…  227796 Sujatha   Central Region      Bukit Timah       1.33\n 2  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 3  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 4  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Booking …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Cozy Blu… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330089 Cozy Blu… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 330095 10 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n# ℹ 4,151 more rows\n# ℹ 11 more variables: longitude <dbl>, room_type <chr>, price <dbl>,\n#   minimum_nights <dbl>, number_of_reviews <dbl>, last_review <date>,\n#   reviews_per_month <dbl>, calculated_host_listings_count <dbl>,\n#   availability_365 <dbl>, number_of_reviews_ltm <dbl>, license <chr>\n\n\nOther ways of displaying tabular data in R:\n\nkablegtDT (interactive table)\n\n\n\nkable(head(listings))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nname\nhost_id\nhost_name\nneighbourhood_group\nneighbourhood\nlatitude\nlongitude\nroom_type\nprice\nminimum_nights\nnumber_of_reviews\nlast_review\nreviews_per_month\ncalculated_host_listings_count\navailability_365\nnumber_of_reviews_ltm\nlicense\n\n\n\n\n50646\nPleasant Room along Bukit Timah\n227796\nSujatha\nCentral Region\nBukit Timah\n1.33432\n103.7852\nPrivate room\n80\n92\n18\n2014-12-26\n0.18\n1\n365\n0\nNA\n\n\n71609\nEnsuite Room (Room 1 & 2) near EXPO\n367042\nBelinda\nEast Region\nTampines\n1.34537\n103.9589\nPrivate room\n145\n92\n20\n2020-01-17\n0.15\n6\n340\n0\nNA\n\n\n71896\nB&B Room 1 near Airport & EXPO\n367042\nBelinda\nEast Region\nTampines\n1.34754\n103.9596\nPrivate room\n85\n92\n24\n2019-10-13\n0.18\n6\n265\n0\nNA\n\n\n71903\nRoom 2-near Airport & EXPO\n367042\nBelinda\nEast Region\nTampines\n1.34531\n103.9610\nPrivate room\n85\n92\n47\n2020-01-09\n0.34\n6\n365\n0\nNA\n\n\n275344\n15 mins to Outram MRT Single Room\n1439258\nKay\nCentral Region\nBukit Merah\n1.28836\n103.8114\nPrivate room\n49\n60\n14\n2022-07-09\n0.11\n44\n296\n1\nS0399\n\n\n289234\nBooking for 3 bedrooms\n367042\nBelinda\nEast Region\nTampines\n1.34490\n103.9598\nPrivate room\n184\n92\n12\n2019-01-01\n0.10\n6\n285\n0\nNA\n\n\n\n\n\n\n\n\nlibrary(gt)\nhead(listings) %>% gt() %>% tab_header(title = \"AirBnB listings\")\n\n\n\n\n\n  \n    \n      AirBnB listings\n    \n    \n    \n      id\n      name\n      host_id\n      host_name\n      neighbourhood_group\n      neighbourhood\n      latitude\n      longitude\n      room_type\n      price\n      minimum_nights\n      number_of_reviews\n      last_review\n      reviews_per_month\n      calculated_host_listings_count\n      availability_365\n      number_of_reviews_ltm\n      license\n    \n  \n  \n    50646\nPleasant Room along Bukit Timah\n227796\nSujatha\nCentral Region\nBukit Timah\n1.33432\n103.7852\nPrivate room\n80\n92\n18\n2014-12-26\n0.18\n1\n365\n0\nNA\n    71609\nEnsuite Room (Room 1 & 2) near EXPO\n367042\nBelinda\nEast Region\nTampines\n1.34537\n103.9589\nPrivate room\n145\n92\n20\n2020-01-17\n0.15\n6\n340\n0\nNA\n    71896\nB&B  Room 1 near Airport & EXPO\n367042\nBelinda\nEast Region\nTampines\n1.34754\n103.9596\nPrivate room\n85\n92\n24\n2019-10-13\n0.18\n6\n265\n0\nNA\n    71903\nRoom 2-near Airport & EXPO\n367042\nBelinda\nEast Region\nTampines\n1.34531\n103.9610\nPrivate room\n85\n92\n47\n2020-01-09\n0.34\n6\n365\n0\nNA\n    275344\n15 mins to Outram MRT Single Room\n1439258\nKay\nCentral Region\nBukit Merah\n1.28836\n103.8114\nPrivate room\n49\n60\n14\n2022-07-09\n0.11\n44\n296\n1\nS0399\n    289234\nBooking for 3 bedrooms\n367042\nBelinda\nEast Region\nTampines\n1.34490\n103.9598\nPrivate room\n184\n92\n12\n2019-01-01\n0.10\n6\n285\n0\nNA\n  \n  \n  \n\n\n\n\n\n\n\nlibrary(DT)\ndatatable(head(listings), class = 'cell-border stripe', options = list(pageLength = 3))\n\n\n\n\nTwo useful fields we need are latitude and longitude and they are in decimal degree format. As a best guess, we will assume that the data is in wgs84 Geographic Coordinate System.\n\n\n1.8.2 Creating a simple feature data frame from an aspatial data frame\nThe code chunk below converts listing data frame into a simple feature data frame by using st_as_sf() of sf packages.\nEPSG 4326 is associated with WGS84.\n\nlistings_sf <- st_as_sf(listings,\n                        coords = c('longitude','latitude'),\n                        crs=4326) %>%\n  st_transform(crs=3414)\n\nclass(listings_sf)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nThings to learn from the arguments above:\n\ncoords argument requires you to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates.\ncrs argument requires you to provide the coordinates system in epsg format. EPSG: 4326 is wgs84 Geographic Coordinate System and EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other country’s epsg code by referring to epsg.io.\n\nLet us examine the content of our newly created sf dataframe\n\nglimpse(listings_sf)\n\nRows: 4,161\nColumns: 17\n$ id                             <dbl> 50646, 71609, 71896, 71903, 275344, 289…\n$ name                           <chr> \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        <dbl> 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      <chr> \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            <chr> \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  <chr> \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ room_type                      <chr> \"Private room\", \"Private room\", \"Privat…\n$ price                          <dbl> 80, 145, 85, 85, 49, 184, 79, 49, 55, 5…\n$ minimum_nights                 <dbl> 92, 92, 92, 92, 60, 92, 92, 60, 60, 60,…\n$ number_of_reviews              <dbl> 18, 20, 24, 47, 14, 12, 133, 17, 12, 3,…\n$ last_review                    <date> 2014-12-26, 2020-01-17, 2019-10-13, 20…\n$ reviews_per_month              <dbl> 0.18, 0.15, 0.18, 0.34, 0.11, 0.10, 1.0…\n$ calculated_host_listings_count <dbl> 1, 6, 6, 6, 44, 6, 7, 44, 44, 44, 6, 7,…\n$ availability_365               <dbl> 365, 340, 265, 365, 296, 285, 365, 181,…\n$ number_of_reviews_ltm          <dbl> 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 1, 0, 0, …\n$ license                        <chr> NA, NA, NA, NA, \"S0399\", NA, NA, \"S0399…\n$ geometry                       <POINT [m]> POINT (22646.02 35167.9), POINT (…\n\n\nA new column geometry has been added at the back of the df. Additionally, lat long columns were both dropped from the df."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#geoprocessing-with-sf-package",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#geoprocessing-with-sf-package",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.9 Geoprocessing with sf package",
    "text": "1.9 Geoprocessing with sf package\nBesides providing functions to handling (i.e. importing, exporting, assigning projection, transforming projection etc) geospatial data, sf package also offers a wide range of geoprocessing (also known as GIS analysis) functions.\nIn this section, we will learn how to perform two commonly used geoprocessing functions, namely buffering and point in polygon count.\n\n1.9.1 Buffering\nThe scenario:\nThe authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nThe solution:\nA buffer is a zone around a spatial object, recall that cyclingpath is a multiline-string sf object.\n\nst_geometry(cyclingpath)\n\nGeometry set for 2248 features \nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nFirstly, st_buffer() of sf package is used to compute the 5-meter buffers around cyclingpath .\n\nbuffer_cycling <- st_buffer(cyclingpath,\n                            dist = 5,\n                            nQuadSegs = 30)\n\nTake a peak at this df before calculating area.\n\nhead(buffer_cycling)\n\nSimple feature collection with 6 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 15867.37 ymin: 36795.67 xmax: 16026.95 ymax: 36953.73\nProjected CRS: SVY21\n  PLANNING_A PLANNING_1                       geometry\n1       <NA>       <NA> POLYGON ((16004.15 36799.78...\n2       <NA>       <NA> POLYGON ((16013.15 36849.86...\n3       <NA>       <NA> POLYGON ((16016.91 36892.98...\n4       <NA>       <NA> POLYGON ((16017.59 36864, 1...\n5       <NA>       <NA> POLYGON ((16022.36 36900.57...\n6       <NA>       <NA> POLYGON ((15903.87 36941.12...\n\n\nNow, we will calculate the area of the buffers as shown in the code chunk below.\nWe are also adding a derived column to buffer_cycling too.\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\nkable(head(buffer_cycling))\n\n\n\n\n\n\n\n\n\n\nPLANNING_A\nPLANNING_1\ngeometry\nAREA\n\n\n\n\nNA\nNA\nPOLYGON ((16004.15 36799.78…\n186.2934 [m^2]\n\n\nNA\nNA\nPOLYGON ((16013.15 36849.86…\n293.4840 [m^2]\n\n\nNA\nNA\nPOLYGON ((16016.91 36892.98…\n284.8275 [m^2]\n\n\nNA\nNA\nPOLYGON ((16017.59 36864, 1…\n144.8915 [m^2]\n\n\nNA\nNA\nPOLYGON ((16022.36 36900.57…\n281.2016 [m^2]\n\n\nNA\nNA\nPOLYGON ((15903.87 36941.12…\n398.7081 [m^2]\n\n\n\n\n\nLastly, sum() of Base R will be used to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]\n\n\nGood Job!\nMission Accomplished!\n\n\n1.9.2 Point-in-polygon count\nThe scenario:\nA pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\nBefore that, lets double confirm both data are using same projection system.\n\nidentical(st_crs(mpsz3414), st_crs(preschool3414))\n\n[1] TRUE\n\n\nThe solution:\nThe code chunk below performs two operations at one go.\n\nidentify pre-schools located inside each Planning Subzone by using st_intersects().\nlength() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.\n\n\nmpsz3414$`PreSch Count` <- lengths(st_intersects(mpsz3414,preschool3414))\n\n\n\n\n\n\n\nst_intersects(): count points in polygon\nst_intersection(): find polygon areas overlap\n\n\n\nNow check summary stats of PreSch Count column in each subzone.\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    3.00    5.96    9.00   58.00 \n\n\nTo list the planning subzone with the most number of pre-school, the top_n() of dplyr package can be used.\n\nkable(top_n(mpsz3414, 3, `PreSch Count`) %>%\n        arrange(desc(`PreSch Count`)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nCA_IND\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\nINC_CRC\nFMEL_UPD_D\nX_ADDR\nY_ADDR\nSHAPE_Leng\nSHAPE_Area\nPreSch Count\ngeometry\n\n\n\n\n189\n2\nTAMPINES EAST\nTMSZ02\nN\nTAMPINES\nTM\nEAST REGION\nER\n21658EAAF84F4D8D\n2014-12-05\n41122.55\n37392.39\n10180.624\n4339824\n58\nMULTIPOLYGON (((42196.76 38…\n\n\n290\n3\nWOODLANDS EAST\nWDSZ03\nN\nWOODLANDS\nWD\nNORTH REGION\nNR\nC90769E43EE6B0F2\n2014-12-05\n24506.64\n46991.63\n6603.608\n2553464\n47\nMULTIPOLYGON (((24786.75 46…\n\n\n199\n4\nBEDOK NORTH\nBDSZ04\nN\nBEDOK\nBD\nEAST REGION\nER\nA2254301F85C1EDF\n2014-12-05\n39429.21\n34737.62\n8414.962\n3203663\n31\nMULTIPOLYGON (((40284.24 35…\n\n\n\n\n\nTo calculate the density (# schools/subzone area) of preschool by planning subzone :\n\nmpsz3414 <- mpsz3414 %>%\n  mutate(AREA = st_area(mpsz3414),\n         DENSITY = `PreSch Count` /AREA * 1000000) %>% \n  arrange(desc(DENSITY))\n\nkable(head(mpsz3414))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nCA_IND\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\nINC_CRC\nFMEL_UPD_D\nX_ADDR\nY_ADDR\nSHAPE_Leng\nSHAPE_Area\nPreSch Count\nAREA\nDENSITY\ngeometry\n\n\n\n\n27\n8\nCECIL\nDTSZ08\nY\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n65AA82AF6F4D925D\n2014-12-05\n29730.20\n29011.33\n2116.0947\n196619.86\n7\n196619.86 [m^2]\n35.60169 [1/m^2]\nMULTIPOLYGON (((29808.18 28…\n\n\n278\n3\nMANDAI ESTATE\nMDSZ03\nN\nMANDAI\nMD\nNORTH REGION\nNR\nF6266F7368DBB9AB\n2014-12-05\n27082.70\n45367.46\n1633.7084\n143137.94\n5\n143137.94 [m^2]\n34.93134 [1/m^2]\nMULTIPOLYGON (((27119.56 45…\n\n\n37\n4\nPHILLIP\nDTSZ04\nY\nDOWNTOWN CORE\nDT\nCENTRAL REGION\nCR\n615D4EDDEF809F8E\n2014-12-05\n29706.72\n29744.91\n871.5549\n39437.94\n1\n39437.94 [m^2]\n25.35630 [1/m^2]\nMULTIPOLYGON (((29814.11 29…\n\n\n291\n3\nSEMBAWANG CENTRAL\nSBSZ03\nN\nSEMBAWANG\nSB\nNORTH REGION\nNR\n772A64AB9A93FC3A\n2014-12-05\n26268.73\n47558.08\n3955.1176\n962437.40\n23\n962437.40 [m^2]\n23.89766 [1/m^2]\nMULTIPOLYGON (((26311.14 46…\n\n\n253\n3\nSERANGOON NORTH\nSGSZ03\nN\nSERANGOON\nSG\nNORTH-EAST REGION\nNER\nC685042EC58E5C55\n2014-12-05\n32458.80\n39597.64\n3610.7324\n684704.30\n15\n684704.30 [m^2]\n21.90727 [1/m^2]\nMULTIPOLYGON (((32860.5 397…\n\n\n272\n3\nSENGKANG TOWN CENTRE\nSESZ03\nN\nSENGKANG\nSE\nNORTH-EAST REGION\nNER\n5A2D0E9E6B285069\n2014-12-05\n35163.81\n41501.14\n5216.4005\n1455507.86\n30\n1455507.86 [m^2]\n20.61136 [1/m^2]\nMULTIPOLYGON (((35615.75 40…\n\n\n\n\n\nThe table above shows the top 6 highest density subzones ."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#explorotary-data-analysis-eda",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#explorotary-data-analysis-eda",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "1.10 Explorotary Data Analysis (EDA)",
    "text": "1.10 Explorotary Data Analysis (EDA)\nIn practice, many geospatial analytics start with Exploratory Data Analysis. In this section, wewill learn how to use appropriate ggplot2 functions to create functional and yet truthful statistical graphs for EDA purposes.\nFirstly, we will plot a histogram to reveal the distribution of PreSch Density. Conventionally, hist() of R Graphics will be used as shown in the code chunk below.\n\nhist(mpsz3414$DENSITY)\n\n\n\n\nAlthough the syntax is very easy to use however the output is far from meeting publication quality. Furthermore, the function has limited room for further customisation.\nIn the code chunk below, appropriate ggplot2 functions will be used.\n\nStaticInteractive (plotly)\n\n\n\nq <- quantile(as.numeric(mpsz3414$DENSITY), probs = c(0.25, 0.5, 0.75))\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(DENSITY)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(xintercept = q[2]+1, linetype='dashed', size = 0.5, color='blue') +\n  geom_vline(xintercept = q[3]+1, linetype='dashed', size = 0.5) +\n  annotate('text' , x= 4, y=75, label='50th \\npercentile', size = 2) +\n  annotate('text' , x= 9, y=75, label='75th \\npercentile', size = 2) +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\n\n\nlibrary(plotly)\nq <- quantile(as.numeric(mpsz3414$DENSITY), probs = c(0.25, 0.5, 0.75))\n\np <- ggplot(data=mpsz3414, \n       aes(x= as.numeric(DENSITY)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(xintercept = q[2]+1, linetype='dashed', size = 0.5, color='blue') +\n  geom_vline(xintercept = q[3]+1, linetype='dashed', size = 0.5) +\n  annotate('text' , x= 4, y=75, label='50th \\npercentile', size = 2) +\n  annotate('text' , x= 9, y=75, label='75th \\npercentile', size = 2) +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\nggplotly(p)\n\n\n\n\n\n\n\n\nDIY: Using ggplot2 method, plot a scatterplot showing the relationship between Pre-school Density and Pre-school Count.\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(DENSITY)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_1.html#theories",
    "href": "Hands-on_Ex1/Hands-on_Ex1_1.html#theories",
    "title": "Hands-on Exercise 1.1: Geospatial Data Wrangling with R",
    "section": "Theories",
    "text": "Theories\n\nKML and shapefiles\nA KMZ file is a zipped (or compressed) KML file, and a SHZ is a zipped/compressed Shapefile.\nA shapefile is an Esri vector data storage format for storing the location, shape, and attributes of geographic features. It is stored as a set of related files and contains one feature class.\nThe shapefile format can spatially describe vector features: points, lines, and polygons, representing, for example, water wells, rivers, and lakes. Each item usually has attributes that describe it, such as name or temperature.\nKML and Shapefiles could contain the exact same data, however KML (Keyhole Markup Language) is much more suited to displaying time based track information, whereas shapefiles are more suited to displaying Geometries, like boundaries, areas, roads, etc.\nShapefiles are composed of 3 mandatory files\n·       . shp (geometry), <- multipolygon, polylines or points. Can only be one type in each file , can combined in layers\n·       . dbf (attributes) <- table\n·       . shx (index)  <- binds first two together\n\n\nGCS [Geographic Coordinate System] (3D) and PCS [Projected Coordinate System ] (2D)\nGCS: uses lat, long, elevation to locate positions on Earth. Units are in degree and metres. Earth is represented as a sphere. Eg. WGS84 (world Gedetic system 1984)\nPCS: Units are usually metres to locate position on a Flat surface. Involves projecting 3D Earth into a 2D plane. It distorts the true shapes, areas, distances, or directions to some extent, depending on the projection method chosen.\nPreserve:\n·       Conformal projections minimize distortion in shape\n·       Equidistant projections minimize distortion in distance\n·       Equal-area projection minimize distortion in area\n·       Azimuthal or True-direction projections minimize distortion in direction.\nGoogle maps uses Mercator projection system. It is chosen as it preserves direction and angles. It is useful for navigation (google map) . It is originally created for sea navigation in older days. The cons are that this projection does not preserve area and shape.\nSingapore uses SVY21 or the EPSG:3414 projected coordinate system.\n\n\nGeospatial data handling functions\n\nst_read & read sf: read simple features from file or database, or retrieve layer names and their geometry type(s)\nst write &write_sf: write simple features object to file or database\nst_as_sf: convert a sf object from a non-geospatial tabular data frame\nst as_text: convert to Well Known Text(WKT)\nst as_binary: convert to Well Known Binary(WKB)\nst_as_sfc: convert geometries to sfc (e.g., from WKT, WKB) as(x, “Spatial”): convert to Spatial*\nst transform(x, crs, …): convert coordinates of x to a different coordinate reference system\n\nThe code chunk below allows us to unsf the mpsz and work tbl_df or data.frame.\n\nmpsz_tbl_df <- as_tibble(mpsz)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_2.html",
    "href": "Hands-on_Ex1/Hands-on_Ex1_2.html",
    "title": "Hands-on Exercise 1.2: Choropleth Mapping with R",
    "section": "",
    "text": "Choropleth mapping involves the symbolisation of enumeration units, such as countries, provinces, states, counties or census units, using area patterns or graduated colors. For example, a social scientist may need to use a choropleth map to portray the spatial distribution of aged population of Singapore by Master Plan 2014 Subzone Boundary."
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_2.html#getting-started",
    "href": "Hands-on_Ex1/Hands-on_Ex1_2.html#getting-started",
    "title": "Hands-on Exercise 1.2: Choropleth Mapping with R",
    "section": "2.2 Getting Started",
    "text": "2.2 Getting Started\nIn this hands-on exercise, we learn how to plot functional and truthful choropleth maps by using r packages called tmap package.\nBeside tmap package, four other R packages will be used. They are:\n\nreadr for importing delimited text file,\ntidyr for tidying data,\ndplyr for wrangling data and\nsf for handling geospatial data.\n\nAmong the four packages, readr, tidyr and dplyr are part of tidyverse package.\nLets us first load all the required libraries.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_2.html#importing-data-into-r",
    "href": "Hands-on_Ex1/Hands-on_Ex1_2.html#importing-data-into-r",
    "title": "Hands-on Exercise 1.2: Choropleth Mapping with R",
    "section": "2.3 Importing Data into R",
    "text": "2.3 Importing Data into R\n\n2.3.1 The Data\nThe Two datasets will be used to create the choropleth map are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. It can be downloaded at Department of Statistics, Singapore, the specific link can be found here. Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile.\n\n\n\n2.3.2 Importing Geospatial Data into R\n\nmpsz <- st_read(dsn='data/geospatial',\n                layer = 'MP14_SUBZONE_WEB_PL')\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex1\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nCheck the projection system of mpsz. It is not in svy21 or epsg3414. We will need to convert it later.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nTake a look at first few records of data\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nLets convert to EPSG3414 now.\n\nmpsz3414 <- st_transform(mpsz, 3414)\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nhead(mpsz3414,3)\n\nSimple feature collection with 3 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 28160.23 ymin: 28369.47 xmax: 32362.39 ymax: 30247.18\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO    SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N PLN_AREA_C\n1        1          1 MARINA SOUTH    MSSZ01      Y    MARINA SOUTH         MS\n2        2          1 PEARL'S HILL    OTSZ01      Y          OUTRAM         OT\n3        3          3    BOAT QUAY    SRSZ03      Y SINGAPORE RIVER         SR\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84 29220.19\n2 CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06 29782.05\n3 CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96 29974.66\n  SHAPE_Leng SHAPE_Area                       geometry\n1   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n\n\n\n\n2.3.3 Importing Attribute Data into R\nNext, we will import respopagsex2000to2020.csv file into RStudio and save the file into an R dataframe called popagsex.\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\nhead(popdata)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2011\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2011\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       30  2011\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    50  2011\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2011\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Landed Properties       0  2011\n\n\nSummary stats using skimr package.\n\nlibrary(skimr)\nskim(popdata)\n\n\nData summary\n\n\nName\npopdata\n\n\nNumber of rows\n984656\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nPA\n0\n1\n4\n23\n0\n55\n0\n\n\nSZ\n0\n1\n4\n29\n0\n335\n0\n\n\nAG\n0\n1\n6\n11\n0\n19\n0\n\n\nSex\n0\n1\n5\n7\n0\n2\n0\n\n\nTOD\n0\n1\n6\n39\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPop\n0\n1\n39.86\n132.25\n0\n0\n0\n10\n2860\n▇▁▁▁▁\n\n\nTime\n0\n1\n2015.51\n2.88\n2011\n2013\n2016\n2018\n2020\n▇▇▇▇▇"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_2.html#data-preparation",
    "href": "Hands-on_Ex1/Hands-on_Ex1_2.html#data-preparation",
    "title": "Hands-on Exercise 1.2: Choropleth Mapping with R",
    "section": "2.3.4 Data preparation",
    "text": "2.3.4 Data preparation\nPrepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age group 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n2.3.4.1 Data Wrangling\n\npivot_wider() (rows to column headers) of tidyr package, and\nmutate() (create new cal col), filter() (subset rows), group_by() and select() (select cols) of dplyr package\n\nThe complete code chunk:\n\npopdata2020 <- popdata %>% \n  filter(Time==2020) %>% \n  group_by(PA,SZ,AG) %>%   #<< for calculating POP column below\n  summarise(`POP` = sum(Pop)) %>% \n  ungroup() %>%\n  pivot_wider(names_from = AG,\n              values_from = POP) %>% \n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[14])) %>% \n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %>%\n  mutate(AGED = rowSums(.[16:21])) %>%\n  mutate(TOTAL = rowSums(.[3:21])) %>% \n  mutate(DEPENDENCY = (YOUNG+AGED)/`ECONOMY ACTIVE`) %>% \n  select(PA, SZ,YOUNG,'ECONOMY ACTIVE', AGED, TOTAL, DEPENDENCY)\n\nhead(popdata2020)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  <chr>      <chr>                 <dbl>            <dbl> <dbl> <dbl>      <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1290             2760   760  4810      0.743\n2 Ang Mo Kio Cheng San              5640            16460  6050 28150      0.710\n3 Ang Mo Kio Chong Boon             5100            15000  6470 26570      0.771\n4 Ang Mo Kio Kebun Bahru            4620            13010  5120 22750      0.749\n5 Ang Mo Kio Sembawang Hills        1880             3630  1310  6820      0.879\n6 Ang Mo Kio Shangri-La             3330             9050  3610 15990      0.767\n\n\nTo understand the first 6 lines of code in the code chunk above, print the output:\n\n\n# A tibble: 6 × 21\n  PA       SZ    `0_to_4` `10_to_14` `15_to_19` `20_to_24` `25_to_29` `30_to_34`\n  <chr>    <chr>    <dbl>      <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\n1 Ang Mo … Ang …      170        280        340        270        260        310\n2 Ang Mo … Chen…     1060       1040       1160       1330       1720       2020\n3 Ang Mo … Chon…      850       1020       1070       1310       1610       1890\n4 Ang Mo … Kebu…      680        960       1010       1170       1410       1420\n5 Ang Mo … Semb…      210        400        450        500        500        340\n6 Ang Mo … Shan…      560        640        700        860        970       1030\n# ℹ 13 more variables: `35_to_39` <dbl>, `40_to_44` <dbl>, `45_to_49` <dbl>,\n#   `50_to_54` <dbl>, `55_to_59` <dbl>, `5_to_9` <dbl>, `60_to_64` <dbl>,\n#   `65_to_69` <dbl>, `70_to_74` <dbl>, `75_to_79` <dbl>, `80_to_84` <dbl>,\n#   `85_to_89` <dbl>, `90_and_over` <dbl>\n\n\n\n2.3.4.2 Joining the attribute data and geospatial data\nBefore we can perform the georelational join, one extra step is required to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper- and lowercase. On the other, hand the SUBZONE_N and PLN_AREA_N are in uppercase.\nSince mpsz’s SUBZONE_N and PLN_AREA_N are in uppercase, we have to convert PA and SZ fields in popdata2020 into all uppercase using:\n\nmutate.at()<- mutate multiple columns\nfirst argument of mutate_at(): .var <- list of columns generated by vars()\nsecond argument: .funs <- a function fun, a quosure style lambda. The function used in toupper() <- to upper case\n\nThere are many ways to achieve the final output\n\nProf’s bookAlternative\n\n\n\npopdata2020 <- popdata2020 %>% \n  mutate_at(.vars= vars(PA, SZ),\n            .funs = funs(toupper)) %>% \n  filter(`ECONOMY ACTIVE` >0)\n\npopdata2020\n\n# A tibble: 234 × 7\n   PA         SZ                   YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n   <chr>      <chr>                <dbl>            <dbl> <dbl> <dbl>      <dbl>\n 1 ANG MO KIO ANG MO KIO TOWN CEN…  1290             2760   760  4810      0.743\n 2 ANG MO KIO CHENG SAN             5640            16460  6050 28150      0.710\n 3 ANG MO KIO CHONG BOON            5100            15000  6470 26570      0.771\n 4 ANG MO KIO KEBUN BAHRU           4620            13010  5120 22750      0.749\n 5 ANG MO KIO SEMBAWANG HILLS       1880             3630  1310  6820      0.879\n 6 ANG MO KIO SHANGRI-LA            3330             9050  3610 15990      0.767\n 7 ANG MO KIO TAGORE                1940             4480  1530  7950      0.775\n 8 ANG MO KIO TOWNSVILLE            4190            11950  5100 21240      0.777\n 9 ANG MO KIO YIO CHU KANG EAST     1110             2410   750  4270      0.772\n10 ANG MO KIO YIO CHU KANG WEST     5690            13750  4680 24120      0.754\n# ℹ 224 more rows\n\n\nThe reason for filtering is because some subzones are not inhibited by residents as seen below.\n\n\n\npopdata2020 %>%\n  mutate(PA = toupper(PA),\n         SZ = toupper(SZ)) %>% \n  filter(`ECONOMY ACTIVE` >0)\n\n\n\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 <-left_join(mpsz3414, popdata2020,\n                         by = c('SUBZONE_N' = 'SZ'))\nmpsz_pop2020\n\nSimple feature collection with 323 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1  29220.19   5267.381  1630379.3            <NA>    NA             NA   NA\n2  29782.05   3506.107   559816.2          OUTRAM   930           3130 2120\n3  29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4  29933.77   3313.625   595428.9     BUKIT MERAH  2600           7450 3320\n5  30005.70   2825.594   387429.4     BUKIT MERAH  2760           6160 1740\n6  29991.38   4428.913  1030378.8     BUKIT MERAH  2800           7340 3420\n7  30230.86   3275.312   551732.0     BUKIT MERAH  2750           8080 3610\n8  30222.86   2208.619   290184.7 SINGAPORE RIVER     0             50   10\n9  29893.78   6571.323  1084792.3      QUEENSTOWN  1120           2770  610\n10 30104.18   3454.239   631644.3      QUEENSTOWN    30            160   60\n   TOTAL DEPENDENCY                       geometry\n1     NA         NA MULTIPOLYGON (((31495.56 30...\n2   6180  0.9744409 MULTIPOLYGON (((29092.28 30...\n3     50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4  13370  0.7946309 MULTIPOLYGON (((27131.28 30...\n5  10660  0.7305195 MULTIPOLYGON (((26451.03 30...\n6  13560  0.8474114 MULTIPOLYGON (((25899.7 297...\n7  14440  0.7871287 MULTIPOLYGON (((27746.95 30...\n8     60  0.2000000 MULTIPOLYGON (((29351.26 29...\n9   4500  0.6245487 MULTIPOLYGON (((20996.49 30...\n10   250  0.5625000 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\n\n\nImportant\n\n\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\nOriginal # rows in mpsz3414 = 323\nOriginal # of rows in popdata2022 = 234\nFinal # of rows in mpsz_pop2020 = 323\nWrite the data as rds, can preserve the format of data.\n\n# write_rds(mpsz_pop2020, 'data/rds/mpszpop2020.rds')\n# mpsz_pop2020 <- readRDS('data/rds/mpszpop2020.rds')\n\nLets take a look at the df mpsz_pop2020"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_2.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex1/Hands-on_Ex1_2.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Exercise 1.2: Choropleth Mapping with R",
    "section": "2.4 Choropleth Mapping Geospatial Data Using tmap",
    "text": "2.4 Choropleth Mapping Geospatial Data Using tmap\nTwo approaches can be used to prepare thematic map using tmap, they are:\n\nPlotting a thematic map quickly by using qtm().\nPlotting highly customisable thematic map by using tmap elements.\n\n\n2.4.1 Plotting a choropleth map quickly by using qtm()\nThe easiest and quickest to draw a choropleth map using tmap is using qtm(). It is concise and provides a good default visualisation in many cases.\n\ntmap_mode('plot')\n#tmap_mode('view')\n#ttm()\n#last_map()\n#tmap_options(check.and.fix = TRUE)\n\nqtm(mpsz_pop2020,\n    fill='DEPENDENCY')\n\n\n\n\nThings to learn from the code chunk above:\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)\n\n\n\n2.4.2 Creating a Choropleth map by using tmap’s elements\ntmap’ drawing elements (unlike qtm() ) is able to give us finer control over our chloropleth map.\ntm_shape() <- define input data and specify the shape object / spatial data object\ntm_fill() <- fills polygons (no border)\n\nstyle: method to process the color scale when col (data variable) is a numeric variable. To process numeric and categorical use “cat”\npalette : palettes names or vectors of colors. default is taken from tm_layout’s aes.paletttes argument. To reverse the colour scheme , add a “-” prefix.\n\ntm_borders() <- draws the borders of polygons (alpha is 0-1, transparency)\ntm_polygons() (= tm_fill() + tm_borders() )<- fills the polygon and draws the polygon borders\n*qtm = shape + polygon or * qtm = shape + fill + border\ntm_layout() <- specify map layout\n\naes.palette <- ‘seq’ (sequential palettes), ‘div’ (diverging palettes) , ‘cat’ (categorical palettes)\n\ntm_compass() <- create map compass\ntm_scale_bar() <- creates scale bar\ntm_grid() <- creates grid lines (alpha is 0-1, transparency of grid lines)\ntm_credits() <- create a text for credits\n\nHigh quality graphmpsz_pop2020 table\n\n\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nlibrary(knitr)\nkable(head(mpsz_pop2020,3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBJECTID\nSUBZONE_NO\nSUBZONE_N\nSUBZONE_C\nCA_IND\nPLN_AREA_N\nPLN_AREA_C\nREGION_N\nREGION_C\nINC_CRC\nFMEL_UPD_D\nX_ADDR\nY_ADDR\nSHAPE_Leng\nSHAPE_Area\nPA\nYOUNG\nECONOMY ACTIVE\nAGED\nTOTAL\nDEPENDENCY\ngeometry\n\n\n\n\n1\n1\nMARINA SOUTH\nMSSZ01\nY\nMARINA SOUTH\nMS\nCENTRAL REGION\nCR\n5ED7EB253F99252E\n2014-12-05\n31595.84\n29220.19\n5267.381\n1630379.3\nNA\nNA\nNA\nNA\nNA\nNA\nMULTIPOLYGON (((31495.56 30…\n\n\n2\n1\nPEARL’S HILL\nOTSZ01\nY\nOUTRAM\nOT\nCENTRAL REGION\nCR\n8C7149B9EB32EEFC\n2014-12-05\n28679.06\n29782.05\n3506.107\n559816.2\nOUTRAM\n930\n3130\n2120\n6180\n0.9744409\nMULTIPOLYGON (((29092.28 30…\n\n\n3\n3\nBOAT QUAY\nSRSZ03\nY\nSINGAPORE RIVER\nSR\nCENTRAL REGION\nCR\nC35FEFF02B13E0E5\n2014-12-05\n29654.96\n29974.66\n1740.926\n160807.5\nSINGAPORE RIVER\n0\n40\n10\n50\n0.2500000\nMULTIPOLYGON (((29932.33 29…\n\n\n\n\n\n\n\n\n\n2.4.2.1 Drawing a base map\nBasic building blocks are tm_fill() and tm_polygons().\ntm_polygons() = fill + borders\n\ntm_borders()tm_fill()\n\n\nBase Map\n\ntm_shape(mpsz_pop2020) +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\nTo show the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\ntm_shape(mpsz_pop2020)+\n  tm_fill('DEPENDENCY')\n\n\n\n\n\n\n\n\n\n2.4.2.2 Drawing a choropleth map using tm_polygons()\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\nNo variableWith variable\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\nThings to learn from tm_polygons():\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap will be provided in sub-section 4.3.\nThe default colour scheme used is YlOrRd of ColorBrewer. You will learn more about the color scheme in sub-section 4.4.\nBy default, Missing value will be shaded in grey.\n\n\n\n2.4.2.3 Drawing a choropleth map using tm_fill() + *tm_border()**\nActually, tm_polygons() is a wraper of tm_fill() and tm_border(). tm_fill() shades the polygons by using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\nApart from alpha (transparency number 0 - 1), other arguments are\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”.\n\n\n\n\n2.4.3 Data classification methods of tmap\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\n2.4.3.1 Plotting choropleth maps with built-in classification methods\nThe codes below uses quantile classification with 5 classes.\n\nfill + borderpolygons\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nUsing equal classification method\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nDistribution of quantile data classification method are more evenly distributed then equal data classification method.\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",n = 5,\n          style = \"jenks\" )\n\n\n\n\n\n\n\n\nWarning: Maps Lie!\n\n\nDIY: Using what you had learned, prepare choropleth maps by using different classification methods supported by tmap and compare their differences.\n\nUsing tmap_arrange:\n\nkmeans<- tm_shape(mpsz_pop2020)+\n    tm_fill(\"DEPENDENCY\", n = 5, style = 'kmeans') +\n  tm_borders(alpha = 0.5)\n\nsd <- tm_shape(mpsz_pop2020)+\n    tm_fill(\"DEPENDENCY\", n = 5, style = 'sd') +\n  tm_borders(alpha = 0.5)\n\nfisher <- tm_shape(mpsz_pop2020)+\n    tm_fill(\"DEPENDENCY\", n = 5, style = 'fisher') +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(kmeans, sd, fisher, asp = 4, nrow=3)\n\n\n\n\n\nDIY: Preparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?\n\nAssigning multiple values to at least one of the aesthetics arguments.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c('DEPENDENCY','DEPENDENCY'),\n          style= c('jenks','jenks'),\n          n = c(3,10),\n          palette= list('Greens', 'Greens')) +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c('right','bottom'),\n            legend.width = 0.5,\n            legend.height = 0.4,\n            legend.text.size = 0.35 )\n\n\n\n\n\n\n2.4.3.2 Plotting choropleth maps with custome break\nThe breakpoints can be set explicitly by means of the breaks argument to the tm_fill().\n\nbreaks include min and max\nto have n categories, n+1 elements to be specified in breaks option\nvalues must be in increasing order\n\nGood practise: descriptive statistics on variable before setting break points\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\nWith reference to summary stats and boxplot above,\n\nbreak points are 0.6, 0.7, 0.8, 0.9\nmin = 0 and max = 1.0\nbreak vector is thus c(0, 0.6, 0.7, 0.8, 0.9, 1.0)\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", breaks = c(0, 0.6, 0.7, 0.8, 0.9, 1.0)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n2.4.4 Colour scheme\n\n2.4.4.1 Using ColourBrewer palette (predefined)\n(YIOrRd, YIORrBr, YIGnBu, YIGn, Reds, RdPu, Purples, PuRd, PuBuGn, PuBu, OrRd, Oranges, Greys, Greens, GnBu, BuPu, BuGn, Blues)\n\n\n\n\n\nAssign the preferred colour to palette argument of tm_fill()\n\nnormalreverse\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nReverse the colour scheme by adding “-”\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n2.4.5 Map Layouts\n\ncustomise title, scale bar, compass, margins, aspect ratios\nother than colour palette and data classification (breaks) which is done in tm_fill()\n\n\n2.4.5.1 Map Legend\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n2.4.5.2 Map style\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style()\nPredefined styles: ‘white’, ‘gray’, ‘natural’, ‘bw’, ‘classic’, ‘cobalt’, albatross’, ‘beaver’, ‘col_blind’, ‘watercolor’\nBelow is an example of classic style\n\ngraynaturalbwclassiccobaltbeaver\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)+\n  tmap_style('gray')\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)+\n  tmap_style('natural')\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)+\n  tmap_style('bw')\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)+\n  tmap_style('classic')\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-RdPu\") +\n  tm_borders(alpha = 0.5)+\n  tmap_style('cobalt')\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Purples\") +\n  tm_borders(alpha = 0.5)+\n  tmap_style('beaver')\n\n\n\n\n\n\n\n\n\n2.4.5.3 Cartographic Furniture\nCan include other map furniture like compass, scale bar, and grid lines\ntmap_style has to be used at the last, think cannot mix with tm\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\")) +\n  tmap_style('natural')\n\n\n\n\nTo reset the default style, refer below\n\ntmap_style(\"white\")\n\n\n\n\n2.4.6 Drawing Small Multiple Choropleth Maps\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\n2.4.6.1 By assigning multiple values to at least one of the aesthetic arguments\nSmall multiple choropleth maps are created by\n\n2.4.6.1.1 Defining ncols in tm_fill() : c(‘YOUNG’, ‘AGED’)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"),\n            legend.height = 0.35, \n            legend.width = 0.35) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n2.4.6.1.2 Assigning multiple values to at least one of the aesthetic arguments\n\nshape + polygon method (Prof’s)\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"),\n            legend.height = 0.35, \n            legend.width = 0.35) +\n  tmap_style('white')\n\n\n\n\n\n\n\n\nshape + fill + borders method (NYX’s)\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c('YOUNG', 'AGED','TOTAL'),\n          style=c('equal', 'quantile', 'equal'),\n          palette= list('Blues', 'Greens', 'Reds')) +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.position = c('right','bottom'),\n            legend.height = 0.35, \n            legend.width = 0.35)\n\n\n\n\n\n\n\n2.4.6.2 By defining a group-by variable in tm_facets()\nIn this example, multiple small choropleth maps are created by using tm_facets().\nthres.poly: number that specifies the threshold at which polygons are taken into account. The number itself corresponds to the proportion of the area sizes of the polygons to the total polygon size. By default, all polygons are drawn.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n2.4.6.3 By creating multiple stand-alone maps with tmap_arrange()\nCreating multiple stand-alone maps with tmap_arrange() asp : aspect ratio\nnrow : number of rows (ncols)\n\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\") +\n  tm_layout(legend.position = c('right','bottom'),\n          legend.height = 0.5, \n          legend.width = 0.35)\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\") +\n  tm_layout(legend.position = c('right','bottom'),\n        legend.height = 0.5, \n        legend.width = 0.35)\n\ntmap_arrange(youngmap, agedmap, asp=3, ncol=1, nrow=2)\n\n\n\n\n\n\n\n2.4.7 Mappping Spatial Object Meeting a Selection Criterion\nUse selection funtion to map spatial objects meeting the selection criterion. The comma , is used to indicate that we want to select all columns for the rows that meet the condition.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.3) +\n  tm_layout(main.title = \"Mapping spatial obj with conditions \\n(Central Region)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.outside = TRUE,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            legend.title.size= 0.8,\n            legend.text.size= 0.6,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE,\n            bg.color = \"mintcream\") + #call colors()\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nWhat to do if legend overlaps with map?\n\n\nreduce legend.text.size or legend.height and legend.width\nadjust inner.margin\n\n\nAdjust background colours with its corresponding text colours.\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons(\"DEPENDENCY\") +\n    tm_layout(main.title = \"Mapping spatial obj with conditions \\n(Central Region)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            #legend.outside = TRUE,\n            legend.height = 0.3, \n            legend.width = 0.3,\n            legend.title.size= 0.8,\n            legend.text.size= 0.6,\n            inner.margins = c(0.01, 0.01, 0, .15), # ensures legend does not overlap with chart c(bottom,top,left,right)\n            frame = FALSE,\n            legend.position = c(\"right\", \"top\"),\n            bg.color = \"black\",\n            main.title.color = 'white',\n            legend.title.color = 'white',\n            legend.text.color= 'white')\n\n\n\n\n\n\n\n\n\n2.4.8. Tmap summary\nFrom chap 2, using tmap package to plot\n1. tm_shape+ tm_polygon\n2. tm_shape+ tm_fill + tm_borders _ tm_layout\n3. qtm\nChap 2: To plot small multiple chloroplath maps via qtm or tmap elements:\n1. Add multiple values to tm_polygon or tm_fill\n2. Tm_facets\n3. Tm_arrange\nChap 3: To plot small multiple layered chloroplath maps via plot() method:\n 4. To arrange the maps via plot(),\npar(mfrow=c(2,2)) <- 2x2 layout\nFrom chap 3: to add layers to a plot\n1. just keep repeating plot(weight matrix ,coords,add=TRUE)\nhttps://rstudio-pubs-static.s3.amazonaws.com/730482_d7889d9c65c8422f843b3d4e0196633c.html"
  },
  {
    "objectID": "Hands-on_Ex1/Hands-on_Ex1_2.html#reference",
    "href": "Hands-on_Ex1/Hands-on_Ex1_2.html#reference",
    "title": "Hands-on Exercise 1.2: Choropleth Mapping with R",
    "section": "2.5 Reference",
    "text": "2.5 Reference\n\n2.5.1 All about tmap package\n\ntmp arguments and defaults : Introduction to Geospatial Visualization with the tmap package\ntmap: Thematic Maps in R\ntmap\ntmap: get started!\ntmap: changes in version 2.0\ntmap: creating thematic maps in a flexible way (useR!2015)\nExploring and presenting maps with tmap (useR!2017)\n\n\n\n2.5.2 Geospatial data wrangling\n\nsf: Simple Features for R\nSimple Features for R: StandardizedSupport for Spatial Vector Data\nReading, Writing and Converting Simple Features\n\n\n\n2.5.3 Data wrangling\n\ndplyr\nTidy data\ntidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions\n\n\n# there are 111 arguments, run the code below to see the defaults\ntmap_options()"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "",
    "text": "In this hands-on exercise, we will learn how to compute spatial weights using R. By the end to this hands-on exercise, we will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute spatial weights using appropriate functions of spdep package, and\ncalculate spatially lagged variables using appropriate functions of spdep package."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#the-study-area-and-data",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#the-study-area-and-data",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "8.2 The Study Area and Data",
    "text": "8.2 The Study Area and Data\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan county boundary layer. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file (aspatial) contains selected Hunan’s local development indicators in 2012.\n\n\n8.2.1 Getting Started\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#getting-the-data-into-r-environment",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "8.3 Getting the Data Into R Environment",
    "text": "8.3 Getting the Data Into R Environment\n8.3.1 Import shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan <- st_read(dsn='data/geospatial',\n                 layer = 'Hunan')\n\nReading layer `Hunan' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nclass(hunan)\n\n[1] \"sf\"         \"data.frame\"\n\n\nhunan is in WSG84 coordinate system.\n\nhead(hunan,3) %>% kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nShape_Leng\nShape_Area\nCounty\ngeometry\n\n\n\n\nChangde\n21098\nAnxiang\nCounty\n1.869074\n0.1005619\nAnxiang\nPOLYGON ((112.0625 29.75523…\n\n\nChangde\n21100\nHanshou\nCounty\n2.360691\n0.1997875\nHanshou\nPOLYGON ((112.2288 29.11684…\n\n\nChangde\n21101\nJinshi\nCounty City\n1.425620\n0.0530241\nJinshi\nPOLYGON ((111.8927 29.6013,…\n\n\n\n\n\n\n8.3.2 Import csv file into r environment\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R dataframe class.\n\nhunan2012 <- read_csv('data/aspatial/Hunan_2012.csv')\nhead(hunan2012,3) %>% kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCounty\nCity\navg_wage\ndeposite\nFAI\nGov_Rev\nGov_Exp\nGDP\nGDPPC\nGIO\nLoan\nNIPCR\nBed\nEmp\nEmpR\nEmpRT\nPri_Stu\nSec_Stu\nHousehold\nHousehold_R\nNOIP\nPop_R\nRSCG\nPop_T\nAgri\nService\nDisp_Inc\nRORP\nROREmp\n\n\n\n\nAnhua\nYiyang\n30544\n10967.0\n6831.7\n456.72\n2703.0\n13225.0\n14567\n9276.9\n3954.9\n3528.3\n2718\n494.31\n441.4\n338.0\n54.175\n32.830\n290.4\n234.5\n101\n670.3\n5760.6\n910.8\n4942.253\n5414.5\n12373\n0.7359464\n0.8929619\n\n\nAnren\nChenzhou\n28058\n4598.9\n6386.1\n220.57\n1454.7\n4941.2\n12761\n4189.2\n2555.3\n3271.8\n970\n290.82\n255.4\n99.4\n33.171\n17.505\n104.6\n121.9\n34\n243.2\n2386.4\n388.7\n2357.764\n3814.1\n16072\n0.6256753\n0.8782065\n\n\nAnxiang\nChangde\n31935\n5517.2\n3541.0\n243.64\n1779.5\n12482.0\n23667\n5108.9\n2806.9\n7693.7\n1931\n336.39\n270.5\n205.9\n19.584\n17.819\n148.1\n135.4\n53\n346.0\n3957.9\n528.3\n4524.410\n14100.0\n16610\n0.6549309\n0.8041262\n\n\n\n\n\n\n\n8.3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\nAs the join columns are not specified, this function will assume that columns with the same names, e.g., ‘county’ in both dfs will be the join columns.\nThe select() will retain the columns indicated in the resulting joined df.\n\nhunan <- left_join(hunan, hunan2012) %>% \n  select(1:4,7,15)\nclass(hunan)\n\n[1] \"sf\"         \"data.frame\"\n\n\nNote the geospatial characteristics of hunan is retained.\n\nhead(hunan,3) %>% kable\n\n\n\n\n\n\n\n\n\n\n\n\n\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#visualising-regional-development-indicator",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#visualising-regional-development-indicator",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "8.4 Visualising Regional Development Indicator",
    "text": "8.4 Visualising Regional Development Indicator\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nbasemap <- tm_shape(hunan)+\n  tm_polygons() +\n  tm_text('NAME_3',\n          size = 0.5)\n\ngdppc <- tm_shape(hunan)+\n  tm_polygons('GDPPC') +\n    tm_layout(legend.height = 0.20, \n            legend.width = 0.25)\n  \n# or gdppc <- qtm(hunan, \"GDPPC\")\n\ntmap_arrange(basemap, gdppc,\n           asp=1,\n           ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#computing-contiguity-spatial-weights",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "8.5 Computing Contiguity Spatial Weights",
    "text": "8.5 Computing Contiguity Spatial Weights\nIn this section, we will use poly2nb() of spdep package to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. Use this if we know that for a variable, sharing common boundary increases spatial interaction.\nBy default, ‘queen’ argument is set to TRUE: two polygons sharing one shared boundary point will meet contiguity condition. Returns a list of first order neighbours using the Queen criteria.\nIf ‘queen’ argument is set to FALSE: requires more than one shared boundary point. (but may not mean a shared boundary line)\n\n8.5.1 Computing (QUEEN) contiguity based neighbours\nThe code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one heighbours.\nwm_q (weights matrix queen) class: ‘nb’\n\nclass(wm_q)\n\n[1] \"nb\"\n\n\nA quick peak at wm_q\n\nhead(wm_q,3)\n\n[[1]]\n[1]  2  3  4 57 85\n\n[[2]]\n[1]  1 57 58 78 85\n\n[[3]]\n[1]  1  4  5 85\n\n\nFor each polygon in our polygon object, wm_q lists all neighboring polygons. For example, to see the neighbors for the first polygon in the object, type:\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nPolygon 1 has 5 neighbors. The numbers represent the polygon IDs as stored in hunan SpatialPolygonsDataFrame class.\nWe can retrive the county name of Polygon ID=1 by using the code chunk below:\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nPolygon ID=1 is Anxiang county.\nTo reveal the county names of the five neighboring polygons, the code chunk will be used:\n\nx1 <- wm_q[[1]]\nhunan$County[c(x1)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nThe printed output above shows that the GDPPC of the five nearest neighbours based on Queen’s method are 20981, 34592, 24473, 21311 and 22879 respectively.\nTo display the complete weight matrix, use str()\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n#wm_q[1:10]\n#methods(class = class(wm_q))\n\n\n\n8.5.2 Creating (ROOK) contiguity based neighbours\nThe code chunk below is used to compute Rook contiguity weight matrix.\n\nwm_r <- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connect area unit has 10 neighbours. There are two area units with only one heighbours.\n\n\n8.5.3 Visualising contiguity weights (find centroid coords first)\nA connectivity graph takes a point and displays a line to each neighbouring point.\n\nneed a point in polygon via polygon centroids (its lat & long) <- calculate using the sf package first\n\nTo obtain coordinates in a separate data frame\n\ninput vector is the geometry column of us.bound (in hunan), an sf object <- a polygon\nUsing hunan$geometry[[1]]: The input vector of the FIRST POLYGON looks like POLYGON ((112.0625 29.75523, 112.069 29.74544, 112.0707 29.7415, 112.0716 29.73667, …. , 112.0625 29.75523).\nTo find the centroid (CG) of one polygon, use the st_centroid() function, which is a formula shorthand for a small anonymous function (lambda function). It takes an argument represented by .x. st_centroid(.x)[[1]] extracts the X-coordinate (longitude) of the centroid while st_centroid(.x)[[2]] extracts the Y-coords.\n\nX and YX onlyY only\n\n\n\n#hunan$geometry[[1]]\nst_centroid(hunan$geometry[[1]])\n\n\n\n\nst_centroid(hunan$geometry[[1]])[[1]]\n\n[1] 112.1531\n\n\n\n\n\nst_centroid(hunan$geometry[[1]])[[2]]\n\n[1] 29.44362\n\n\n\n\n\n\nmap_dbl(...) is a function from the purrr package that applies a function to each element of a list or vector and returns the results as a double vector. In this case, the function being applied is the expression following ~. Example of how this function is used in a simple way:\n\n# Example list of vectors\nlist_of_vectors <- list(a = c(1, 2, 3), b = c(4, 5, 6), c = c(7, 8, 9))\n\n# Applying a function to calculate the sum of each vector\nmap_dbl(list_of_vectors, ~ sum(.x))\n\n a  b  c \n 6 15 24 \n\n\nAfter finding centroid, to access longitude values\n\ndouble bracket notation [[ ]] and 1\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlongitude\n\n [1] 112.1531 112.0372 111.8917 111.7031 111.6138 111.0341 113.7065 112.3460\n [9] 112.8169 113.3534 113.8942 112.4006 112.5542 113.6636 112.9206 113.1883\n[17] 113.4521 112.4209 113.0152 112.6350 112.7087 112.9095 111.9522 110.2606\n[25] 110.0921 109.7985 109.5765 109.7211 109.7339 109.1537 110.6442 110.5916\n[33] 109.5984 111.4783 112.1745 111.2315 110.3149 111.3248 110.5859 110.9593\n[41] 111.8296 110.1926 110.7334 110.9123 111.4599 112.5268 112.3406 109.5602\n[49] 109.5071 109.9954 109.4273 109.7587 109.5044 109.9899 109.9664 111.3785\n[57] 112.4350 112.5558 111.7379 112.1831 111.9743 111.7009 112.2196 112.6472\n[65] 113.5102 113.1172 113.7089 112.7963 110.9276 113.6420 113.4577 113.8404\n[73] 113.4758 113.1428 110.3017 113.1957 111.7410 112.1831 111.3390 111.8208\n[81] 110.0753 112.3965 112.7683 113.1679 111.4495 112.7956 111.5896 111.2393\n\n\n\nTo access the latitude value\n\ndouble bracket notation [[ ]] and 2\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\n\nWith both longitude and latitude, use cbind() to combine both in the same object,\n\ncoords <- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n8.5.3.1 Plotting Queen contiguity based neighbours map\nwm_ q is weight matrix using queen method (88 rows of list of neighbours)\ncoords is an array of x,y coordinates of centroids for each of the 88 counties\n\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen's contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\nUse the plot() function\n\nThe shape of the markers: The plot markers are by default small, empty circles. These are also known as plot characters - denoted by pch. Pch values 0 to 25 are valid and give several different symbols on the graph. Pch 0 is for a square, 1 is for a circle, 3 is for a triangle, 4 is for a cross and so on.\nSize of the plot markers: The cex parameter can be set to 0.5 if we want the markers to be 50% smaller and 1.5 if wewant them to be 50% larger.\nColor of the plot markers: These colors can be selected from a list provided by R under the colors() function.\n\n\n\n\n8.5.3.2 Plotting Rook contiguity based neighbours map\n\nplot(hunan$geometry, border = 'lightgrey', main='Rooks contiguity')\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col =\"blue\")\n\n\n\n\n\n\n8.5.3.3 Plotting both Queen and Rook contiguity based neighbours maps side-by-side\npar(mfrow = c(1, 2)) arranges subsequent plots in a grid with one row and two columns\n\npar(mfrow=c(1,2))\n\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen's contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\", main=\"Queen Contiguity\")\nplot(hunan$geometry, border=\"lightgrey\",main=\"Rook's contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"blue\", main=\"Rook Contiguity\")"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#computing-distance-based-neighbours",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#computing-distance-based-neighbours",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "8.6 Computing distance based neighbours",
    "text": "8.6 Computing distance based neighbours\n\nIn this section, we will derive distance-based weight matrices by using dnearneigh() of spdep package.\ndnearneigh(x, d1, d2, row.names = NULL, longlat = NULL, bounds=c(“GE”, “LE”),\n use_kd_tree=TRUE, symtest=FALSE, use_s2=packageVersion(“s2”) > “1.0.7”, k=200,\n dwithin=TRUE)\nidentifies neighbours using distance band with lower d1= and upper d2= bounds controlled by the bounds= argument\nIf unprojected coordinates are used (WSG84 geographic) and either specified in the coordinates object x or with x as a two column matrix and longlat=TRUE, great circle distances in km will be calculated assuming the WGS84 reference ellipsoid.\n\n\n8.6.1 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep. Class: ‘knn’. Output: NN of poly1 = poly3, NN of poly2 = poly 78 etc…\n\nstr(knearneigh(coords,\n           k=1))\n\nList of 5\n $ nn       : int [1:88, 1] 3 78 1 5 4 69 67 46 84 70 ...\n $ np       : int 88\n $ k        : num 1\n $ dimension: int 2\n $ x        : num [1:88, 1:2] 112 112 112 112 112 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:2] \"longitude\" \"latitude\"\n - attr(*, \"class\")= chr \"knn\"\n - attr(*, \"call\")= language knearneigh(x = coords, k = 1)\n\n#knearneigh(coords,k=1)['nn']  #<< shows matrix\n\nConvert the matrix knn object returned by knearneigh() into a neighbours list with a list of integer vectors containing neighbour region number ids by using knn2nb(). Class: nb\n\nknn2nb(knearneigh(coords))[1:5]\n\n[[1]]\n[1] 3\n\n[[2]]\n[1] 78\n\n[[3]]\n[1] 1\n\n[[4]]\n[1] 5\n\n[[5]]\n[1] 4\n\n\nReturn a list of the length (the distance to one’s nearest neighbour) of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km if in WSG84. Class: ‘nbdist’\n\nnbdists(knn2nb(knearneigh(coords, k=1)),\n        coords,\n        longlat = TRUE) [1:5]\n\n[[1]]\n[1] 25.53398\n\n[[2]]\n[1] 43.03114\n\n[[3]]\n[1] 25.53398\n\n[[4]]\n[1] 29.2848\n\n[[5]]\n[1] 29.2848\n\n\nRemove the list structure of the returned object by using unlist(). Class of k1dists: numeric.\nOutput: 25.53398 43.03114 25.53398 29.28480 29.28480 45.98097 58.52704 28.95985 34.45062 37.99885 44.49442 33.48816 35.98123\n\nk1 <- knn2nb(knearneigh(coords, k=1))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79. So using this as the upper threshold (62km) will help to ensure that all units (polygons) will have at least one neighbour.\n\n\n8.6.2 Computing fixed distance weight matrix\n(Earlier, we had used poly2nb(hunan, queen=TRUE/FALSE) to define neighbours using Queen or Rook method, resulting in wm_q and wm_r.)\n(We also have k1 of ‘nb’ class where each polygon has 1 nb. Additionally, we used summary(unlist(nbdists())) to calculate the distance between furthest neighbours.)\nNow, to define neighbours using a distance threshold, we use the dnearneigh() ,\n\nlonglat argument: TRUE if point coordinates are geographical longitude-latitude decimal degrees (WSG84)\nsome polygons have more than 1 nb, but all polygons have at least 1 nb here due to distance threshold.\n\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat=TRUE )\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nAverage number of links is calculated by dividing the total number of links by the number of regions. On average, each region has approximately 3.68 neighboring regions. Class of wm_d62: ‘nb’\n\nclass(wm_d62)\n\n[1] \"nb\"\n\n\nNext, we will use str() to display the content of wm_d62 weight matrix.\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAnother way to display the structure of the weight matrix is to combine table() and card() of spdep.\nThe column headers “1” means the count of counties that have 1 neighbor within the specified distance of 62km, “2” means the count of counties that have 2 neighbors, and so on.\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\nTO find the number of connected components (aka see if there are any spatial units / regions without a neighbour)\n\nn_comp <- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\nIn this connected component, there are 88 elements (spatial units)\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\n8.6.2.1 Plotting fixed distance weight matrix\nNext, we will plot the distance weight matrix by using the code chunk below.\n\nwm_d62 is the fixed distance weight matrix,\ncoords refers to long, lat coordinates for CG of each polygon\nk1 is the list of integer ID of the polygon which is the nearest neighbour to me. The topmost layer of the plot colours the nearest neighbour edge to red colour.\n\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08) \n\n\n\n\nThe red lines shows the links of 1st nearest neighbours and the black lines show the lines of neighbours within the cut-off distance of 62km.\nTo plot red and black side by side,\n\npar(mfrow = c(1, 2))\nplot(hunan$geometry, border=\"lightgrey\", main = 'Neighbours within 62 km')\nplot(wm_d62, coords, add=TRUE)\nplot(hunan$geometry, border=\"lightgrey\", main = 'Nearest Neighbour')\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08) \n\n\n\n\n\n\n\n8.6.3 Computing adaptive distance weight matrix\nUse this method if the dataset is highly skewed to fix the # of nbs.\nEarlier, we used k1 <- knn2nb(knearneigh(coords, k=1)) and wm_d62 <- dnearneigh(coords, 0, 62, longlat=TRUE ) to plot maps of nearest nb and nbs within 62km range.\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below. class of knn6: ‘nb’\n\nknn6 <- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nSimilarly, we can display the content of the matrix by using str(). Note that each spatial units has exactly 6 neighbours.\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\n8.6.3.1 Plotting distance based neighbours\n\nplot(st_geometry(hunan), border = 'lightgray')\nplot(knn6, coords, pch=18, cex=0.6, add= TRUE, col='red')"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#weights-based-on-inverse-distance-method",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#weights-based-on-inverse-distance-method",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "8.7 Weights based on Inverse Distance Method",
    "text": "8.7 Weights based on Inverse Distance Method\nIn this section, we will learn how to derive a spatial weight matrix based on Inversed Distance method. This will assign greater weightage to closer polygons, use this if we know that closer proximity will result in more spatial interaction.\nEarlier, we applied nbdists() nbdists(knn2nb(knearneigh(coords, k=1)), coords, longlat = TRUE) to compute the distance of one’s nearest neighbour.\nFirst, we will compute the distances between areas (defined using Queen contiguity method) by using nbdists() of spdep. Class of dist: nbdist\n\ndist <- nbdists(wm_q, coords, longlat=TRUE)\nhead(dist,3)\n\n[[1]]\n[1] 65.12941 25.53398 54.91802 35.61352 87.32760\n\n[[2]]\n[1] 65.12941 56.67944 51.92312 43.03114 58.16151\n\n[[3]]\n[1] 25.53398 35.43536 27.05778 71.64530\n\n\nNow compute the inverse distances for all polygons to their neighbours. Class of ids: matrix of list. ids is also glist (general weights for each nb).\n\nids <- lapply(dist, function(x) 1/(x))\nhead(ids,3)\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n\n\n8.7.1 Row-standardised weights matrix\nnb2listw(neighbours, glist=NULL, style=\"W\", zero.policy=NULL)\nArguments\n\n\n\n\n\n\n\nneighbours\nan object of class nb\n\n\n\n\nglist\nlist of general weights corresponding to neighbours\n\n\nstyle\nstyle can take values “W”, “B”, “C”, “U”, “minmax” and “S”\n\n\nzero.policy\ndefault NULL, use global option value; if FALSE stop with error for any empty neighbour sets, if TRUE permit the weights list to be formed with zero-length weights vectors\n\n\n\nDetails\nStarting from a binary neighbours list, in which regions are either listed as neighbours or are absent (thus not in the set of neighbours for some definition), the function adds a weights list with values given by the coding scheme style chosen.\nWeights to each neighboring polygon\n\neach neighboring polygon will be assigned equal weight (style=“W”) <- row standardised. This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values\ndrawback of this method is that polygon along the edge will base their lagged values on fewer polygons, thus over estimating the true nature of spatial autocorrelation in the data. Next time can consider other more robust options are available, notably style=“B” <- basic binary coding\nThe zero.policy=TRUE option allows for lists of non-neighbors. This should be used with caution since the user may not be aware of missing neighbors in their dataset however, a zero.policy of FALSE would return an error. Class of rsmq_q = ‘listw’ and ‘nb’\n\n\nstyle = ‘W’style = ‘B’\n\n\n\n# wm_q is a matrix containing nb indexes\nrswm_q <- nb2listw(wm_q, style = 'W', zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\nnb2listw(wm_q, style = 'B', zero.policy = TRUE)$weights[1]\n\n[[1]]\n[1] 1 1 1 1 1\n\n\n\n\n\n\nclass(rswm_q)\n\n[1] \"listw\" \"nb\"   \n\n\nTo see the weight of the first polygon’s 5 neighbours type:\n\nrswm_q$weights[1]\n\n[[1]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n\nThe 5 neighbours are\n\nrswm_q$neighbours[1]\n\n[[1]]\n[1]  2  3  4 57 85\n\n\nExplanation of above: Each neighbor is assigned a 0.125 of the total weight. This means that when R computes the average neighboring income values, each neighbor’s income will be multiplied by 0.125 before being tallied.\nUsing the same queen’s method, we can also derive a (row standardised ?) inverse-distance weight matrix by using the code chunk below. Recall ids contains inverse-distances to neighbours, also our glist (general weights of neighbours) , originally from queens wm_q which is a neighbour structure. We will now use nb2listw() and wm_q and ids to create a spatial weights matrix. Class of rswm_ids is ‘listw’ and ‘nb’. It contains 3 lists, ‘style’ of class character ,‘neighbours’ of class nb, ‘weights’ of class nb\n\nrswm_ids <- nb2listw(wm_q, glist=ids, style ='W', zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 40.39879 361.0957\n\n\nTo see the weights of the 1st polygon; it is actually the similar as ids, but not identical.\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.1367760 0.3488740 0.1622080 0.2501337 0.1020083\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n0.05894 0.13342 0.17603 0.19643 0.23961 1.00000 \n\n\nFinally, a comparison of the weights for polygon 1 across three spatial weights methods:\n\na <- unlist(rswm_q$weights[1])\nb <- unlist(nb2listw(wm_q, style = 'B', zero.policy = TRUE)$weights[1])\nc <- unlist(rswm_ids$weights[1])\n\nweights_comparison <- as.data.frame(cbind(a,b,c))\ncolnames(weights_comparison) <- c(\"row standardised\", \"binary\", 'row standardised inverse distance')\nweights_comparison\n\n  row standardised binary row standardised inverse distance\n1              0.2      1                         0.1367760\n2              0.2      1                         0.3488740\n3              0.2      1                         0.1622080\n4              0.2      1                         0.2501337\n5              0.2      1                         0.1020083"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#application-of-spatial-weight-matrix",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#application-of-spatial-weight-matrix",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "8.8 Application of Spatial Weight Matrix",
    "text": "8.8 Application of Spatial Weight Matrix\nIn this section, you will learn how to create four different spatial lagged variables, they are:\n\nspatial lag with row-standardized weights,\nspatial lag as a sum of neighbouring values,\nspatial window average, and\nspatial window sum.\n\n\n8.8.1 Spatial lag with row-standardized weights\n\ncompute the average neighbour GDPCC values for each polygon\ncommonly called spatially lagged values\ndoes not include itself\nRecalled in the previous section, we retrieved the GDPPC of these five countries (neighbours of poly1 using queen method) by using the code chunk below.\n\n\nx1 <- wm_q[[1]]\nhunan$GDPPC[c(x1)]\n\n[1] 20981 34592 24473 21311 22879\n\n\n\nNow we compute the row-standardised lag variable using lag.listw() and rsqm_q (neighbour structure).\nIn the code below, use spatial weight matrix (equal weightage of 0.2 for poly1 etc.. ) by 0.2 * 20981 + 0.2 * 34592 + 0.2 * 24473 + 0.2 * 21311 + 0.2 * 22879 = 24847.20 for poly1 “Anxiang”\n22724.80 is the average GDPPC for poly2 based on equal weightage (0.2) of all its five neighbours . 24143.25 for poly3 based on equal weightage (0.25) based on four neighbours.\n\n\nGDPPC.lag <- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nWe can append the spatially lag GDPPC values onto hunan sf data frame by using the code chunk below.\nFirst, create lag.list that contains two individual lists, namely NAME_3 column in hunan and the lag variable. Next, transform both lists into a dataframe. Rename the column headers. Perform a left join with hunan and lag.res will automatically use NAME_3 column as the join column.\n\nlag.list <- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nstr(lag.list)\n\nList of 2\n $ : chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n $ : num [1:88] 24847 22725 24143 27738 27270 ...\n\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"NAME_3\", \"lag GDPPC\")\nhunan <- left_join(hunan,lag.res)\n\nhead(as_tibble(hunan),3)\n\n# A tibble: 3 × 8\n  NAME_2   ID_3 NAME_3  ENGTYPE_3   County  GDPPC `lag GDPPC`\n  <chr>   <int> <chr>   <chr>       <chr>   <dbl>       <dbl>\n1 Changde 21098 Anxiang County      Anxiang 23667      24847.\n2 Changde 21100 Hanshou County      Hanshou 20981      22725.\n3 Changde 21101 Jinshi  County City Jinshi  34592      24143.\n# ℹ 1 more variable: geometry <POLYGON [°]>\n\n# head(hunan,3) %>%  kable()\n\nThe following table shows the average neighboring income values (stored in the Inc.lag object) for each county.\nNext, we will plot both the GDPPC and spatial lag GDPPC for comparison using the code chunk below.\n\ngdppc <- qtm(hunan, 'GDPPC') +\n    tm_layout(main.title='No lag variable',\n              legend.height = 0.2,\n              legend.width=0.2)\nlag_gdppc <- qtm(hunan, 'lag GDPPC') +\n  tm_layout(main.title='With lag variable (Row-stand)',\n            legend.height = 0.2,\n            legend.width=0.4)\n\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe chart on the left plots the original GDPPC values of respective spatial units. The chart on the right plots the average GDPPC values of all spatial units that shares a boundary (Queen) for a particular spatial unit. Does not include diagonal (own’s) GDPPC value.\n\n\nCompute lag variable using rswm_ids (inverse-distance method)\n\nlag.list.2 <- list(hunan$NAME_3, lag.listw(rswm_ids, hunan$GDPPC))\nstr(lag.list.2)\n\nList of 2\n $ : chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n $ : num [1:88] 26572 22568 24356 28108 28265 ...\n\nlag.res.2 <- as.data.frame(lag.list.2)\ncolnames(lag.res.2) <- c(\"NAME_3\", \"lag GDPPC ID\")\nhunan <- left_join(hunan,lag.res.2)\n\nhead(as_tibble(hunan),3)\n\n# A tibble: 3 × 9\n  NAME_2   ID_3 NAME_3  ENGTYPE_3   County  GDPPC `lag GDPPC` `lag GDPPC ID`\n  <chr>   <int> <chr>   <chr>       <chr>   <dbl>       <dbl>          <dbl>\n1 Changde 21098 Anxiang County      Anxiang 23667      24847.         26572.\n2 Changde 21100 Hanshou County      Hanshou 20981      22725.         22568.\n3 Changde 21101 Jinshi  County City Jinshi  34592      24143.         24356.\n# ℹ 1 more variable: geometry <POLYGON [°]>\n\nlag_gdppc_id <- qtm(hunan, 'lag GDPPC ID') +\n  tm_layout(main.title='With lag variable (Inv_dist)',\n            legend.height = 0.2,\n            legend.width=0.4)\n\ntmap_arrange(lag_gdppc, lag_gdppc_id, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nLag variable using Queen’s contiguity (Row standardised weight matrix)\nThe lag variable represents the spatial AVERAGE of GDPPC for neighbouring areas based on Queen contiguity.\nLag variable using Inverse-Distance Weight matrix\nThe lag variable is calculated as a WEIGHTED AVERAGE of GDPPC. Further neighbours are penalised (assign lesser weights) when we use inverse-distance.\n\n\n\n\n8.8.2 Spatial lag as a sum of neighboring values\nPart 1: Obtain binary weights matrix called 'b_weights' (glist):\nwm_q (aka neighbour list) is a 'nb' class containing neighbour IDs for each polygon. E.g. Neighbours list of the first three polygons:\n\n\n[[1]]\n[1]  2  3  4 57 85\n\n[[2]]\n[1]  1 57 58 78 85\n\n[[3]]\n[1]  1  4  5 85\n\n\nTo create a binary list, we will now apply lambda function of 0*neighbour ID + 1 ; so that if there is a neighbour, the value is 1. Class of b_weights is a matrix with lists of 1 .\nSimilar to ids earlier, b_weights is the glist (general weights corresponding to neighbours). We need the neighbour structure wm_q and glist to convert to spatial weights matrix using nb2listw().\n\nb_weights <- lapply(wm_q, function(x) 0*x+1)\nclass(b_weights)\n\n[1] \"list\"\n\nb_weights[1:3]\n\n[[1]]\n[1] 1 1 1 1 1\n\n[[2]]\n[1] 1 1 1 1 1\n\n[[3]]\n[1] 1 1 1 1\n\n\nPart 2: Create the spatial weights matrix using nb2listw() , wm_q (neighbour structure) and b_weights (glist)\n\nb_weights2 <- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nSneakpeak at b_weights2\n\nb_weights2$weights[1:3]\n\n[[1]]\n[1] 1 1 1 1 1\n\n[[2]]\n[1] 1 1 1 1 1\n\n[[3]]\n[1] 1 1 1 1\n\n\nWith the proper weights assigned, we can use lag.listw to compute a lag variable from our weight and GDPPC. Since the weights are all ‘1’s, we will be summing all our neighbours’ GDPPC.\nlag_sum contains two lists, namely NAME_3 and lag_sum GDPPC. Combine both lists into a df. Rename the df column headers.\n\nlag_sum <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nstr(lag_sum)\n\nList of 2\n $ : chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n $ : num [1:88] 124236 113624 96573 110950 109081 ...\n\nlag.res <- as.data.frame(lag_sum)\ncolnames(lag.res) <- c('NAME_3', 'lag_sum GDPPC')\n\nNext, append lag.res to hunan sf dataframe\n\nhunan <- left_join(hunan, lag.res)\n\nPlot both the GDPPC and Spatial Lag Sum GDPPC for comparison using the code chunk below.\n\ngdppc <- qtm(hunan, 'GDPPC') +\n    tm_layout(main.title='No lag variable',\n              legend.height = 0.2,\n              legend.width=0.2)\n\nlag_sum_gdppc <- qtm(hunan, 'lag_sum GDPPC') +\n  tm_layout(main.title = 'spatial lag as lag sum of nb values',\n            legend.height = 0.2,\n            legend.width=0.2)\n\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe lag variable created by summing up neighbours’ GDPPC look more alike the lag variable created using inverse-distance weights matrix.\n\n\n\n\n8.8.3 Spatial window average\n\nmust use row-standardized weights\nsimilar to 8.8.1 but only difference is that it includes the diagonal element;\nTo include diagonal in R, we need to go back to the neighbors structure wm_q and add the diagonal element before assigning weights.\n\n\n# weight matrix queen self\nwm_qs <- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nwm_qs[1:3]\n\n[[1]]\n[1]  1  2  3  4 57 85\n\n[[2]]\n[1]  1  2 57 58 78 85\n\n[[3]]\n[1]  1  3  4  5 85\n\n\nWe can see that polygon 1 has its diagonal (1) inside and polygon 2 has its diagonal (2) inside.We can see that polygon 1 has its diagonal (1) inside and polygon 2 has its diagonal (2) inside.\nAs expected, the Number of nonzero links, Percentage nonzero weights and Average number of links are 536, 6.921488 and 6.090909 respectively as compared to wm_q of 448, 5.785124 and 5.090909.\nNow, proceed to create the spatial weights matrix that includes self:\nDefault style is ‘W’ - row standardised.\n\nwm_qs <- nb2listw(wm_qs, style ='W', zero.policy = TRUE)\nwm_qs$weights[1:3]\n\n[[1]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[2]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[3]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n\nNow, create lag variable using spatial weights matrix wm_qs and hunan$GDPCC variable:\n\nlag_w_ave_gdppc <- lag.listw(wm_qs,\n                             hunan$GDPPC)\nlag_w_ave_gdppc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nAppend lag_w_ave_gdppc to the hunan dataframe by using the series of steps below:\n\nlag.list.wm_qs <- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nstr(lag.list.wm_qs)\n\nList of 2\n $ : chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n $ : num [1:88] 24651 22434 26233 27085 26927 ...\n\nlag_wm_qs.res <- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) <- c('NAME_3', 'lag_window_avg GDPPC')\n\nhunan <- left_join(hunan, lag_wm_qs.res)\n\nhunan %>% \n  select('County', 'lag GDPPC', 'lag_window_avg GDPPC') %>% \n  head() %>% \n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\n\n\n#as_tibble(hunan)  #<< will isolate the geometry part\n\nUse dtm() to plot ‘lag GDPPC’ and ‘lag_window_avg GDPPC’ side-by-side\n\nW_avg_gdppc <- qtm(hunan, 'lag_window_avg GDPPC') +\n  tm_layout(main.title='With lag_sum variable',\n            legend.height = 0.2,\n            legend.width=0.4)\n\ntmap_arrange(lag_gdppc, W_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBoth charts use row-standardised spatial weights matrix.\nDifference between charts is that left does not include self’s GDPPC but the right includes self’s GDPPC.\n\n\n\n\n8.8.4 Spatial window sum\nThe spatial window sum is the counter part of the window average, but without using row-standardized weights. (similar to 8.8.2 but including self)\nTo add the diagonal element to the neighbour list, we just need to use include.self() from spdep.\n\nwm_qs <- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nNext, we will assign binary general weights to the neighbour structure that includes the diagonal element.\n\nb_weights <- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1:3]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n[[2]]\n[1] 1 1 1 1 1 1\n\n[[3]]\n[1] 1 1 1 1 1\n\n\nEach spatial unit has one more element, that is itself.\nAgain, we use nb2listw() and wm_qs (nb structure) and b_weights (glist) to create spatial weights matrix b_weights\n\nb_weights2 <- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nCompute the window sum lag variable using lag.listw(), b_weights2 (spatial weights matrix) and hunan$GDPCC (variable). The below also appends the window sum lag variable to hunan df.\n\nw_sum_gdppc <- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nstr(w_sum_gdppc)\n\nList of 2\n $ : chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n $ : num [1:88] 147903 134605 131165 135423 134635 ...\n\nw_sum_gdppc.res <- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) <- c(\"NAME_3\", \"w_sum GDPPC\")\n\nhunan <- left_join(hunan, w_sum_gdppc.res)\nhunan %>%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %>%\n  head() %>% \n  kable()\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\n\n\n\nLastly, qtm() of tmap package is used to plot the lag_sum GDPPC and w_sum_gdppc maps next to each other for quick comparison.\n\nW_sum_gdppc <- qtm(hunan, 'w_sum GDPPC') +\n  tm_layout(main.title='With lag_win_sum variable',\n            legend.height = 0.2,\n            legend.width=0.4)\n\ntmap_arrange(lag_sum_gdppc, W_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBoth charts do not use row-standardised spatial matrix, instead they use binary ‘1’ because of the need to sum up the GDPPC values. Difference is that left does not include self but right includes self.\n\n\n\n#| eval: false\n#| echo: false\n#| fig-width: 14\n#| fig-asp: 0.68\n#| code-fold: True"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_1.html#summaries",
    "href": "Hands-on_Ex2/Hands-on_Ex2_1.html#summaries",
    "title": "Hands-on Exercise 2.1: Spatial Weights and Applications",
    "section": "Summaries",
    "text": "Summaries\nSummary of deriving spatial weights matrix\n\nSummary of deriving lag variables"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, we will learn to\n\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdep package,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\ncompute Local Indicator of Spatial Association (LISA) statistics for detecting clusters and outliers by using appropriate functions spdep package;\ncompute Getis-Ord’s Gi-statistics for detecting hot spot or/and cold spot area by using appropriate functions of spdep package; and\nto visualise the analysis output by using tmap package."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#getting-started",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#getting-started",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "9.2 Getting Started",
    "text": "9.2 Getting Started\n\n9.2.1 The analytical question\n\nIn spatial policy, local government/planners aims to ensure equal distribution of development in the province.\nwe should apply appropriate spatial statistical methods to discover if development are even distributed geographically in the province\nif answer is NO, we ask “is there sign of clustering?” (GLOBAL spatial autocorrelation)\nif YES, “Where are the clusters” (LOCAL spatial autocorrelation)\n\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China. (https://en.wikipedia.org/wiki/Hunan)\n\n\n\n\n\n9.2.2 The Study Area and Data\nTwo data sets will be used in this hands-on exercise:\n\nGeospatial data: Hunan province administrative boundary layer at county level in ESRI shapefile format\nAspatial data: Hunan_2012.csv containing local development indicators\n\n\n\n9.2.3 Setting the Analytical Tools\nPackages we need:\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#getting-the-data-into-r-environment",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#getting-the-data-into-r-environment",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "9.3 Getting the Data Into R Environment",
    "text": "9.3 Getting the Data Into R Environment\nThe geospatial data is in ESRI shapefile format and the attribute table is in csv fomat.\n\n9.3.1 Import shapefile into r environment\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\nhunan is in WSG84 geographical system.\n\nhunan <- st_read(dsn='data/geospatial',\n                 layer='Hunan')\n\nReading layer `Hunan' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n#st_crs(hunan)\nhead(hunan,3)\n\nSimple feature collection with 3 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 111.7027 ymin: 28.61762 xmax: 112.3013 ymax: 29.77344\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3 Shape_Leng Shape_Area  County\n1 Changde 21098 Anxiang      County   1.869074 0.10056190 Anxiang\n2 Changde 21100 Hanshou      County   2.360691 0.19978745 Hanshou\n3 Changde 21101  Jinshi County City   1.425620 0.05302413  Jinshi\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n\n\n\n\n9.3.2 Import csv file into r environment\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R data frame class.\n\nhunan2012 <- read_csv('data/aspatial/Hunan_2012.csv')\nhead(hunan2012,3)\n\n# A tibble: 3 × 29\n  County  City  avg_wage deposite   FAI Gov_Rev Gov_Exp    GDP GDPPC   GIO  Loan\n  <chr>   <chr>    <dbl>    <dbl> <dbl>   <dbl>   <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 Anhua   Yiya…    30544   10967  6832.    457.   2703  13225  14567 9277. 3955.\n2 Anren   Chen…    28058    4599. 6386.    221.   1455.  4941. 12761 4189. 2555.\n3 Anxiang Chan…    31935    5517. 3541     244.   1780. 12482  23667 5109. 2807.\n# ℹ 18 more variables: NIPCR <dbl>, Bed <dbl>, Emp <dbl>, EmpR <dbl>,\n#   EmpRT <dbl>, Pri_Stu <dbl>, Sec_Stu <dbl>, Household <dbl>,\n#   Household_R <dbl>, NOIP <dbl>, Pop_R <dbl>, RSCG <dbl>, Pop_T <dbl>,\n#   Agri <dbl>, Service <dbl>, Disp_Inc <dbl>, RORP <dbl>, ROREmp <dbl>\n\n\n\n\n9.3.3 Performing relational join\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame (geospatial) with the attribute fields of hunan2012 dataframe (aspatial) . This is performed by using left_join() of dplyr package. Since the join columns are not specified, identical columns names (‘County’) form both dataset will be used for the join.\nColumn 7 and 15 are the ‘County’ and ‘GDPPC’ columns respectively.\n\nhunan <- left_join(hunan, hunan2012) %>% \n  select(1:4, 7,15)\nhead(hunan,3)\n\nSimple feature collection with 3 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 111.7027 ymin: 28.61762 xmax: 112.3013 ymax: 29.77344\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667\n2 Changde 21100 Hanshou      County Hanshou 20981\n3 Changde 21101  Jinshi County City  Jinshi 34592\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n\n\n\n\n9.3.4 Visualising Regional Development Indicator\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\ntm_fill() ’s n refer to the number of equal intervals\n\n\nequal <- tm_shape(hunan)+\n  tm_fill('GDPPC',\n          n=5,\n          style='equal') +\n  tm_borders(alpha=0.5) +\n  tm_layout(main.title = 'Equal interval classification',\n            main.title.size=1.5,\n            legend.height = 0.25,\n            legend.width = 0.25)\n\nquantile <- tm_shape(hunan)+\n  tm_fill('GDPPC',\n          n=5,\n          style='quantile') +\n  tm_borders(alpha=0.5) +\n  tm_layout(main.title = 'Equal quantile classification',\n            main.title.size=1.5,\n            legend.height = 0.25,\n            legend.width = 0.25)\n\ntmap_arrange(equal, quantile, asp =1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#global-spatial-autocorrelation",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#global-spatial-autocorrelation",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "9.4 Global Spatial Autocorrelation",
    "text": "9.4 Global Spatial Autocorrelation\nIn this section, we will\n\ncompute global spatial autocorrelation statistics\nperform spatial complete randomness test for global spatial autocorrelation (test for significance).\n\n\n9.4.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function will\n\nbuild a neighbours list based on regions with contiguous boundaries.\nif ‘queen’ argument is TRUE: spatial units are considered neighbours if they share a common point. A list of first order neighbours using the Queen criteria will be returned.\nif ‘queen’ argument is FALSE: spatial unit are considered neighbours if they share a least two common points.\n\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(hunan,\n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nSneakpeak at the neighbours’ list of the first three polygons.\n\nwm_q[1:3]\n\n[[1]]\n[1]  2  3  4 57 85\n\n[[2]]\n[1]  1 57 58 78 85\n\n[[3]]\n[1]  1  4  5 85\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n\n\n9.4.2 Row-standardised weights matrix\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q <- nb2listw(wm_q,\n                   style='W',\n                   zero.policy=TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nSneak peak at the neighbour weights of the first three polygons\n\nrswm_q$weights[1:3]\n\n[[1]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[2]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[3]]\n[1] 0.25 0.25 0.25 0.25\n\n\nThe input of nb2listw() must be an object of class nb. The syntax of the function has two major arguments, namely style and zero.poly.\n\nstyle can take values “W”, “B”, “C”, “U”, “minmax” and “S”. B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nIf zero policy is set to TRUE, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice.\n\n\nattributes(rswm_q)\n\n$names\n[1] \"style\"      \"neighbours\" \"weights\"   \n\n$class\n[1] \"listw\" \"nb\"   \n\n$region.id\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\"\n[31] \"31\" \"32\" \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"43\" \"44\" \"45\"\n[46] \"46\" \"47\" \"48\" \"49\" \"50\" \"51\" \"52\" \"53\" \"54\" \"55\" \"56\" \"57\" \"58\" \"59\" \"60\"\n[61] \"61\" \"62\" \"63\" \"64\" \"65\" \"66\" \"67\" \"68\" \"69\" \"70\" \"71\" \"72\" \"73\" \"74\" \"75\"\n[76] \"76\" \"77\" \"78\" \"79\" \"80\" \"81\" \"82\" \"83\" \"84\" \"85\" \"86\" \"87\" \"88\"\n\n$call\nnb2listw(neighbours = wm_q, style = \"W\", zero.policy = TRUE)\n\nmethods(class=class(rswm_q))\n\n[1] coerce      initialize  lag         plot        print       show       \n[7] slotsFromS3 subset      summary    \nsee '?methods' for accessing help and source code\n\n\n\n\n9.4.3 Global Spatial Autocorrelation: Moran’s I\nIn this section, we will learn how to perform Moran’s I statistics testing by using moran.test() of spdep.\n\n\n9.4.4 Moran’s I test\nGlobal spatial association assesses the overall spatial pattern of a variable across the entire study area. It provides a single value or metric that summarizes the extent to which similar values cluster together or are dispersed across the entire geographic space.\nThe Moran’s I assumes data follows a normal distribution and are randomised.\nMoran’s I values range from -1 to 1 while Geary’s C ranges from 0 to 2. The chart below summarises our lecture material.\n\nThe code chunk below performs Moran’s I statistical testing using moran.test() of spdep. It takes in the main arguments:\n\nvariable\nlistw , our spatial weights matrix that defines the neighbourhood and relationship between them.\n\n\nmoran.test(hunan$GDPPC,\n           listw = rswm_q,\n           zero.policy=TRUE,\n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nThe null hypothesis: Observed spatial patterns of values is equally likely as any random spatial pattern.\nSince the p-value is less than 0.05 and Moran I statistic is greater than 1, we can reject the null hypothesis and conclude that similar values tend to cluster together in our area of study.\n\n\n9.4.4.1 Computing Monte Carlo Moran’s I\nIn the event we are unsure whether the data follows a normal distribution and are randomised, we can use the Monte Carlo Simulation to simulate Moran’s I n times under the assumption of no spatial pattern (shuffle/permutate the variable across all spatial units). This creates a baseline to compare with the observed Moran’s I value from dataset.\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm = moran.mc(hunan$GDPPC,\n                 listw=rswm_q,\n                 nsim=999,\n                 zero.policy=TRUE,\n                 na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nSince the p-value is less than 0.05 and Moran I statistic is greater than 1, we can reject the null hypothesis and conclude that similar values tend to cluster together in our area of study.\n\n\n9.4.4.2 Visualising Monte Carlo Moran’s I\nIt is always a good practice for us the examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\nGet the mean of simulated moran’s I values. The ‘res’ column contains the simulated moran’s i values.\n\nmean(bperm$res[1:999]) \n\n[1] -0.01504572\n\n\nGet the variance\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\nSummary statistics\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\nPlotting\n\nggplot2Base Graph\n\n\nWe will use ggplot2 to create the histogram instead of base r.\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\n\nShow the code\nlibrary(ggplot2)\nlibrary(ggthemes)\n\nbperm_df <- as.data.frame(bperm$res)\ncolnames(bperm_df) <- c('res')\n\n#q <- quantile(bperm_df$res[1:999], probs = c(0.25, 0.5, 0.75))\nmean <- mean(bperm_df$res[1:999])\nmean\n\n\n[1] -0.01504572\n\n\nShow the code\nggplot(data=bperm_df,\n       aes(x=res)) +\n  geom_histogram(bins=20,\n                 color='grey25',\n                 fill='grey90',size=0.8) +\n  #geom_vline(xintercept = q[2], linetype='dotted', size = 0.8, color='blue') +\n  #geom_vline(xintercept = q[3], linetype='dotted', size = 0.8) +\n  geom_vline(xintercept = mean, linetype='dotted', size = 0.8, color='red') +\n  #annotate('text' , x= -0.055, y=180, label='50th \\npercentile', size = 5, color='blue') +\n  #annotate('text' , x= 0.06, y=180, label='75th \\npercentile', size = 5) +\n  annotate('text' , x= 0.015, y=180, label='mean', size = 5, color='red') +\n  labs(y= 'Frequency', x=\"Moran's I values\") +\n  theme_economist() +\n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle(\"Histogram of Simulated Moran's I\")\n\n\n\n\n\n\n\n\nhist(bperm$res,\n     freq=TRUE,\n     breaks=20,\n     xlab=\"Simulated Moran's I\",\n     main = paste(\"Histogram of Simulated Moran I\"))\nabline(v=0,\n       col='red')\n\n\n\n\n\n\n\n\n\n\n9.4.5 Global Spatial Autocorrelation: Geary’s\nIn this section, we will learn how to perform Geary’s c statistics testing by using appropriate functions of spdep package.\n\n9.4.5.1 Geary’s C test\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\nThe null hypothesis: Observed spatial patterns of values is equally likely as any random spatial pattern.\nSince the p-value is less than 0.05 and Geary’s C statistic is greater 0 and less than 1, we can reject the null hypothesis and conclude that similar values tend to cluster together in our area of study.\n\n\n\n9.4.5.2 Computing Monte Carlo Geary’s C\nIn the event we are unsure whether the data follows a normal distribution and are randomised, the code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\nSince the p-value is less than 0.05 and Geary’s C statistic is greater 0 and less than 1, we can reject the null hypothesis and conclude that similar values tend to cluster together in our area of study.\n\n\n9.4.5.3 Visualising the Monte Carlo Geary’s C\nNext, we will plot a histogram to reveal the distribution of the simulated values by using the code chunk below.\nGet the mean of simulated Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\nGet the variance\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\nSummary statistics\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\nPlot the histogram using ggplot2\n\n\nShow the code\nbperm_df <- as.data.frame(bperm$res)\ncolnames(bperm_df) <- c('res')\n\n#q <- quantile(bperm_df$res[1:999], probs = c(0.25, 0.5, 0.75))\nmean <- mean(bperm_df$res[1:999])\nmean\n\n\n[1] 1.004402\n\n\nShow the code\nggplot(data=bperm_df,\n       aes(x=res)) +\n  geom_histogram(bins=20,\n                 color='grey25',\n                 fill='grey90',size=0.8) +\n  geom_vline(xintercept = mean, linetype='dotted', size = 0.8, color='red') +\n  annotate('text' , x= 1.05, y=180, label='mean', size = 5, color='red') +\n  labs(y= 'Frequency', x=\"Geary's C values\") +\n  theme_economist() +\n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle(\"Histogram of Simulated Geary's C\")"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#spatial-correlogram",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#spatial-correlogram",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "9.5 Spatial Correlogram",
    "text": "9.5 Spatial Correlogram\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\n\n9.5.1 Compute Moran’s I correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\nArguments:\n\n‘order’ refers to number of layers away from each polygon using contiguity method. We want to check how the Moran’s I values changes (and its statistical significance changes) as the neighbours get further and further away.\n‘method’: ‘corr’ for correlation, ‘I’ for Moran’s I and ‘C’ for Gerary’s C.\n\nUnderstanding the plot\nY-Axis: The y-axis typically represents the Moran’s I coefficient, which quantifies spatial autocorrelation. Above zero, similar values cluster. Below zero, dissimilar values cluster.\nX-Axis: The x-axis represents spatial distance lags. Each point on the correlogram corresponds to a specific distance lag (e.g., distance between observations). The points are usually organized in bins or distance classes.\nBars or Lines: Bars or lines connect the Moran’s I values at different distance lags, forming a pattern that shows how spatial autocorrelation changes with distance.\nUsefulness of Moran’s I Correlogram\nDetecting Spatial Patterns: A Moran’s I correlogram provides insights into the presence and structure of spatial patterns in our data. It helps identify at what distances spatial autocorrelation is significant.\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe see that with the exception of Lag 4, the rest of the results are statistically significant at the 95% level of confidence.\nAs we consider order lag from 1 to 3, there is significant positive autocorrelation (similar values cluster) and we note the Moran’s I values decreases as order increases. For order 5 and 6, there is significant negative autocorrelation (dissimilar values cluster)\nPossible reason for the change of polarity:\nLocal clusters could dominate at smaller distances while at larger distances, can detect dispersion more.\n9.5.2 Compute Geary’s C correlogram and plot\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n0< Geary C < 1 : similar values cluster\n1 < Geary C < 2: dissimilar values cluster\nNow examine the full report to check which values are significant.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe results of Geary’s C statistics test is similar to Moran’s I.\nAll lag orders except Lag order of 3, 4 and 6 are statistically significant at 95% confidence level.\nLag order 1 and 2: clustering of similar values, order 2 is less clustered than order 1. (Moran’s I and Geary’s C are inversely related.)\nLag order 5: clustering of dissimilar values."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#cluster-and-outlier-analysis",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#cluster-and-outlier-analysis",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "10.6 Cluster and Outlier Analysis",
    "text": "10.6 Cluster and Outlier Analysis\nLocal Indicators of Spatial Association or LISA are statistics that evaluate the existence of clusters in the spatial arrangement of a given variable. For instance if we are studying cancer rates among census tracts in a given city local clusters in the rates mean that there are localised areas that have higher or lower rates than is to be expected by chance alone; that is, the values occurring are above or below those of a random distribution in space.\nIn this section, we will learn how to apply appropriate Local Indicators for Spatial Association (LISA), especially local Moran’I to detect cluster (HH or LL) and/or outlier (HL, LH) from GDP per capita 2012 of Hunan Province, PRC.\n\n10.6.1 Computing local Moran’s I\nTo compute local Moran’s I, the localmoran() function of spdep will be used. It computes Ii values, given a set of zi values (variable) and a listw object (spatial weights matrix) providing neighbour weighting information for the polygon associated with the zi values.\nThe code chunks below are used to compute local Moran’s I of GDPPC2012 at the county level.\n\nfips <- order(hunan$County)\nlocalMI <- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\n\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(z != E(Ii)): the p-value of local moran statistic\n\nNote there is no County’s name in the output above.\nWe must first create a dataframe that appends the County’s name to its local moran (li) values.\n\nFips is an object of integer class. It contains the row ids if rows are to be arranged in alphabetical order.\nlocalMI[Fips,] would arrange the rows of localMI in alphabetical order of its countys’ name, retaining all the columns.\nThe row names would take the countys’ name.\n\n\ndata.frame(\n  localMI[fips,],\n  row.names=hunan$County[fips]) %>% \n  head()\n\n                     Ii          E.Ii       Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua     -2.249264e-02 -5.004845e-03 5.823550e-02 -0.07246715      0.9422301\nAnren     -3.993226e-01 -7.011066e-03 7.034768e-02 -1.47912938      0.1391057\nAnxiang   -1.468468e-03 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\nBaojing    3.473702e-01 -5.008916e-03 8.363556e-02  1.21846947      0.2230456\nChaling    2.055902e-02 -9.681197e-04 2.771090e-02  0.12931859      0.8971056\nChangning -2.986822e-05 -9.001050e-09 1.510502e-07 -0.07682771      0.9387606\n\n\nThe code chunk below list the content of the local Moran matrix derived by using printCoefmat().\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]))\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n10.6.1.1 Mapping the local Moran’s I\nBefore mapping the local Moran’s I map, it is wise to append the local Moran’s I dataframe (i.e. localMI) onto hunan SpatialPolygonDataFrame. The code chunks below can be used to perform the task. The out SpatialPolygonDataFrame is called hunan.localMI.\nThe Pr.z….E.Ii.. containing p-value of the local moran I is renamed to PR.Ii\n\nhunan.localMI <- cbind(hunan,localMI) %>% \n    rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n10.6.1.2 Mapping local Moran’s I values\nUsing choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chunks below. For paletter colours, refer to colorbrewers link.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col='Ii',\n          style = 'pretty',\n          #palette = 'RdBu', # << refer to colourbrewer\n          title = 'Local Moran statistics') +\n  tm_borders(alpha= 0.5) + \n  tm_layout(main.title = \"Local Moran's I\",\n            legend.width= 0.25,\n            legend.height = 0.25)\n\n\n\n\n\n\n10.6.1.3 Mapping local Moran’s I p-values\nThe choropleth shows there is evidence for both positive and negative Ii values. However, it is useful to consider the p-values for each of these values, as consider above.\nThe code chunks below produce a choropleth map of Moran’s I p-values by using functions of tmap package.\n\nVarious p valuesp values at 95% confidence level\n\n\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Local Moran's I p-values\",\n            legend.width= 0.25,\n            legend.height = 0.25)\n\n\n\n\n\n\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks = c(-Inf, 0.05, Inf),\n          palette = c('lightblue', 'grey'), \n          title = \"Local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Significant Local Moran's I \\np-values at 95% Confidence level\",\n            main.title.size = 1,\n            legend.width = 0.25,\n            legend.height = 0.25)\n\n\n\n\n\n\n\n\n\n10.6.1.4 Mapping both local Moran’s I values and p-values\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\nlocalMI.map <- tm_shape(hunan.localMI) +\n  tm_fill(col='Ii',\n          style = 'pretty',\n          #palette = 'RdBu', # << reger to colourbrewer\n          title = 'Local Moran statistics') +\n  tm_borders(alpha= 0.5) + \n  tm_layout(main.title = \"Local Moran's I\",\n            legend.width= 0.25,\n            legend.height = 0.25)\n\npvalue.map <-tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks = c(-Inf, 0.05, Inf),\n          palette = c('lightblue', 'grey'), \n          title = \"Local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Significant Local Moran's I \\np-values at 95% Confidence level\",\n            main.title.size = 1,\n            legend.width = 0.25,\n            legend.height = 0.25)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1,ncol=2)\n\n\n\n\n\nFor the choropleth chart on the left, dark green represents clustering of similar values (HH or LL, to be determine by Moran scatterplot or LISAmap) while orange represents outlier regions (LH or HL). THe chart on the right would show us the significant clusters or outliers."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#creating-a-lisa-cluster-map",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "10.7 Creating a LISA Cluster Map",
    "text": "10.7 Creating a LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\n10.7.1 Plotting Moran scatterplot\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\nThe code chunk below plots the Moran scatterplot of GDPPC 2012 by using moran.plot() of spdep.\n\nnci <- moran.plot(hunan$GDPPC,\n                  listw = rswm_q,\n                  labels = as.character(hunan$County),\n                  xlab = 'GDPPC 2012',\n                  ylab = 'Spatially lag GDPPC 2012')\n\n\n\n\n\nThe x -axis shows the original variable value at a particular spatial unit and the y-axis is the (weighted or without) average of the neighbouring variable values. The neighbour definition and relationship is embedded in the ‘listw’ argument where it could be\n\nspatial lag with row-standardised weights\nspatial lag as sum of neighbours values (binary)\nspatial window average (self-included)\nspatial window sum (self-included and binary)\ninverse-distance\n\nNotice that the plot is split in 4 quadrants.\n\nClusters and + spatial autocorrelation: The top right corner belongs to areas that have high GDPPC and are surrounded by other areas that have the average level of GDPPC. This are the high-high locations in the lesson slide.\nCluster and + spatial autocorrelation: Bottom left are the Low-low.\nOutlier and - spatial autocorrelation: Top left contains spatial units with low GDPPC and surrounded by higher values.\nOutlier and - spatial autocorrelation: Bottom right contains spatial units with higher GDPPC and surrounded by relatively lower values.\n\n\n\n\n10.7.2 Plotting Moran scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\nhunan$GDPPC will have a mean of 0 and a standard deviation of 1.\n\nhunan$Z.GDPPC <- scale(hunan$GDPPC) %>% \n  as.vector \n\nThe as.vector() added to the end is to make sure that the data type we get out of this is a vector, that map neatly into our hunan dataframe\nWithout setting as vector, scale(hunan$GDPPC) is a matrix array.\nNow, plot the Moran scatterplot again by using the code chunk below.\n\nnci2 <- moran.plot(hunan$Z.GDPPC,\n                  listw = rswm_q,\n                  labels = as.character(hunan$County),\n                  xlab = 'GDPPC 2012',\n                  ylab = 'Spatially lag z-GDPPC 2012')\n\n\n\n\n\nWe notice that both axes are standardised with mean =0 and sd of 1.\n\n10.7.3 Preparing LISA map classes\nThe code chunks below show the steps to prepare a LISA cluster map.\n\nThe code initializes a numeric vector named quadrant with a length equal to the number of rows in the localMI data frame. The vector is initially filled with NA.\n\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n\nNext, derive the spatially lagged variable of interest (i.e. GDPPC) using lag.listw() from the spdep package and centers the spatially lagged variable around its mean via subtraction.\n\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nclass(DV)\n\n[1] \"numeric\"\n\n\nRetrieve the first column (li aka Moran’s I values) from the localMI matrix and centered around its mean via subtraction.\n\n#colnames(localMI)\nLM_I <- localMI[,1] - mean(localMI[,1])\nclass(LM_I)\n\n[1] \"numeric\"\n\n\nNext, we will set a statistical significance level for the local Moran.\n\nsignif <- 0.05\n\nThese four command lines define the (1) low-low, (2) low-high , (3) high-low and (4) high-high categories. Comparing the local Moran’s I values with its lag-variable values.\n\nquadrant[DV <0 & LM_I>0] <- 1 # LL\nquadrant[DV >0 & LM_I<0] <- 2 # LH\nquadrant[DV <0 & LM_I<0] <- 3 # HL\nquadrant[DV >0 & LM_I>0] <- 4 # HH\n\n\nLM_I > 0 : cluster of similar values.\n(1) When DV < 0 and LM_I > 0, low values of spatial lag variables cluster together with low non-lag variable. Thus Low-low.\n(4) When DV > 0 and LM_I > 0, high values of spatial lag variables cluster together with high non-lag variable. Thus high-high.\nLM_I <0 : cluster of dissimilar values.\n(2) When DV > 0 and LM < 0, high values of spatial lag variables are among low non-lag variable, thus low-high. (see moran scatterplot’s Y axis)\n(3) When DV < 0 and LM_I < 0 , low values of spatial lag variables are among the high non-lag variable, thus high-low.\n\n\nquadrant\n\n [1] 2 3 3 2 2 3 4 4 4 2 2 3 2 2 2 4 3 3 2 3 3 2 3 3 3 3 3 3 1 3 1 3 3 3 3 3 1 3\n[39] 1 1 3 1 1 1 3 4 2 1 3 3 3 3 1 3 1 2 2 2 3 3 3 3 2 3 2 4 2 4 3 3 4 2 2 4 3 2\n[77] 3 2 1 2 3 3 2 4 3 2 3 3\n\n\nLastly, places non-significant Moran in the category 0. The fifth column of the localMI matrix is the significant value.\n\nquadrant[localMI[,5]>signif] <- 0\nquadrant\n\n [1] 0 0 0 0 0 0 4 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[39] 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 2 0 0 0 4 0 0 4 0 0\n[77] 0 2 0 0 0 0 0 4 0 2 0 0\n\n\nCombining all the steps above into one code chunk:\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1 # LL\nquadrant[DV >0 & LM_I<0] <- 2 # LH\nquadrant[DV <0 & LM_I<0] <- 3 # HL\nquadrant[DV >0 & LM_I>0] <- 4 # HH\nquadrant[localMI[,5]>signif] <- 0 # non-sig\n\n\n\n10.7.4 Plotting LISA map\nNow, we can build the LISA map by using the code chunks below.\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\n\nLISAmap <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], #index starts from 1\n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_text('County',\n          size = 0.5)+\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5) +\n  tm_layout(main.title='LISA map (significant)',\n            legend.width = 0.25,\n            legend.height = 0.25)\n\nLISAmap\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding LISA map next to each other.\nThe code chunk below will be used to create such visualisation.\n\ntmap_arrange(localMI.map, LISAmap,\n             asp=1,\n             ncol=2 )\n\n\n\n\n\n‘Clustering of dissimilar values’ (Local Moran I < 0) is also known as ‘dispersion’ or ‘outlier’ region.\nThe darker green regions shows signs of clustering of similar values while the orange regions shows signs of dispersion (cluster of dissimilar values). The LISA map on the right will be able to give more detailed insights, for e.g. for cluster regions whether is it HH or LL and for the outliers region whether its LH or HL.\n\nThe GDPPC and LISA Map can also be placed side by side .\n\ngdppc <- qtm(hunan, 'GDPPC') +\n  tm_layout(main.title= 'GDPPC')\n\ntmap_arrange(gdppc, LISAmap,\n             asp=1,\n             ncol=2)\n\n\n\n\n\nLISAmap:\nThe dark blue and red regions are clusters of LL and HH respectively.\nThe light blue regions are outliers (LH), where those regions have relatively lower values than their neighbours."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "10.8 Hot Spot and Cold Spot Area Analysis",
    "text": "10.8 Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot (high values amongst high) and/or cold spot areas (low values amongst low).\nThe term ‘hot spot’ has been used generically across disciplines to describe a region or value that is higher relative to its surroundings (Lepers et al 2005, Aben et al 2012, Isobe et al 2015).\n\n10.8.1 Getis and Ord’s G-Statistics\nAn alternative spatial statistics to detect spatial anomalies is the Getis and Ord’s G-statistics (Getis and Ord, 1972; Ord and Getis, 1995). It looks at neighbours within a defined proximity (use of distance) to identify where either high or low values cluster spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics\n\n\n\n10.8.2 Deriving distance-based weight matrix\nFirst, we need to define a new set of neighbours. Whist the spatial autocorrelation considered units which shared borders, for Getis-Ord we are defining neighbours based on distance. The spatial weights matrix used in this section is binary.\nThere are two type of distance-based proximity matrix, they are:\n\nfixed distance weight matrix; and\nadaptive distance weight matrix.\n\nFrom Hands-on_Ex2.1:\n\n\n10.8.2.1 Deriving the centroid\nWe will need points to associate with each polygon before we can make our connectivity graph. It will be a little more complicated than just running st_centroid() on the sf object: us.bound. We need the coordinates in a separate data frame for this to work. To do this we will use a mapping function. The mapping function applies a given function to each element of a vector and returns a vector of the same length. Our input vector will be the geometry column of us.bound. Our function will be st_centroid(). We will be using map_dbl variation of map from the purrr package. For more documentation, check out map documentation\nTo get our longitude values we map the st_centroid() function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the first value in each centroid.\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nThe latitude can be accessed using [[2]]\n\nlatitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\nWith both long and lat, we use cbind to put longitude and latitude into the same object. The object coords represents the CG of all 88 spatial units/ features/ polygons.\n\ncoords <- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n\n10.8.2.2 Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep. (k=1)\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length (distance) of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist(). The purpose of doing so it to run the summary() function on it in order for us to decide on a distance threshold. Decide on a distance threshold value such that each spatial unit has at least a neighbour.\n\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 61.79 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour. The threshold chosen is 62 km.\n\n\n10.8.2.3 Computing fixed distance weight matrix\nNow, we will compute the ‘nb’ class by using dnearneigh() as shown in the code chunk below.\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nsummary(wm_d62)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\n\nSneak peak into neighbours lists of first 3 polygons\n\nwm_d62[1:3]\n\n[[1]]\n[1]  3  4  5 57 64\n\n[[2]]\n[1] 57 58 78 85\n\n[[3]]\n[1]  1  4  5 57\n\n\nNext, nb2listw() is used to convert the nb object into spatial weights matrix object.\n\nwm62_lw <- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\nSneak peak of wm62_lw spatial weights matrix (binary). The class is ‘listw’ and ‘nb’.\n\nwm62_lw$weights[1:3]\n\n[[1]]\n[1] 1 1 1 1 1\n\n[[2]]\n[1] 1 1 1 1\n\n[[3]]\n[1] 1 1 1 1\n\n\n\n\n\n10.8.3 Computing adaptive distance weight matrix (Fixed # of nb)\nOne of the characteristics of fixed distance weight matrix is that more densely settled areas (usually the urban areas) tend to have more neighbours and the less densely settled areas (usually the rural counties) tend to have lesser neighbours. Having many neighbours smoothes the neighbour relationship across more neighbours.\nIt is possible to control the numbers of neighbours directly using k-nearest neighbours, either accepting asymmetric neighbours or imposing symmetry as shown in the code chunk below.\nknn is a nb object.\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nSneak peak into the neighbour structure/list of knn.\n\nknn[1:3]\n\n[[1]]\n[1]  2  3  4  5 57 58 64 85\n\n[[2]]\n[1]  1  3  5 57 58 68 78 85\n\n[[3]]\n[1]  1  2  4  5 57 58 64 85\n\n\n\nEach spatial unit has exactly 8 neighbours.\n\nNext, nb2listw() is used to convert the nb object into spatial weights object, knn_lw.\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014\n\n\nSneak peak into the weights of knn_lw spatial weights matrix.\n\nknn_lw$weights[1:3]\n\n[[1]]\n[1] 1 1 1 1 1 1 1 1\n\n[[2]]\n[1] 1 1 1 1 1 1 1 1\n\n[[3]]\n[1] 1 1 1 1 1 1 1 1\n\n# attributes(knn_lw)"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#computing-gi-statistics",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#computing-gi-statistics",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "10.9 Computing Gi statistics",
    "text": "10.9 Computing Gi statistics\n\n10.9.1 Gi statistics using fixed distance\n\nfips <- order(hunan$County)\ngi.fixed <- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n#attributes(gi.fixed)\n\nThe output of localG() is a vector of G or Gstar values, with attributes “gstari” set to FALSE (as default), “call” set to the function call, and class “localG”.\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\nhunan.gi <- cbind(hunan, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nThe code chunk above performs three tasks. First, it converts the output vector (i.e. gi.fixed) into r matrix object by using as.matrix(). Next, cbind() is used to join hunan@data and gi.fixed matrix to produce a new SpatialPolygonDataFrame called hunan.gi. Lastly, the field name of the gi values is renamed to gstat_fixed by using rename().\n\n\n10.9.2 Mapping Gi values with fixed distance weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\ngdppc <- qtm(hunan, \"GDPPC\") +\n    tm_layout(main.title= 'GDPPC')\n\nGimap <-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title= 'local Gi (fixed-dist)')\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\nChart on the right has Red regions (hotspots with high values clustering together) and Blue regions (Coldspots with low values clustering together).\n\nBut we are not sure of the hot/cold spots are statistically significant. We should extract the p-values in order to know.\n\n10.9.2.1 Including significant Gi values\nExamine the structure of gi.fixed\n\nstr(gi.fixed)\n\n 'localG' num [1:88] 0.436 -0.266 -0.073 0.413 0.273 ...\n - attr(*, \"internals\")= num [1:88, 1:5] 0.0642 0.0423 0.045 0.0395 0.0498 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:5] \"Gi\" \"E(Gi)\" \"V(Gi)\" \"Z(Gi)\" ...\n - attr(*, \"cluster\")= Factor w/ 2 levels \"Low\",\"High\": 1 1 2 2 2 2 2 2 2 1 ...\n - attr(*, \"gstari\")= logi FALSE\n - attr(*, \"call\")= language localG(x = hunan$GDPPC, listw = wm62_lw)\n\n\ngi.fixed is a numeric vector (or array) with some additional attributes. To access the Gi p-values, we can access the “Pr(z != E(Gi))” column using the attribute function attr()\n\np_value_fix <- attr(gi.fixed, \"internals\")[, \"Pr(z != E(Gi))\"]\n\nAppend p-values to hunan.gi\n\nhunan.gi <- cbind(hunan.gi, as.vector(p_value_fix)) %>% \n  rename(p_value_fix = as.vector.p_value_fix.)\n\nPlot only significant Gi regions\n\nGimap_sig<-tm_shape(hunan.gi) +\n  tm_fill(col = \"p_value_fix\", \n          breaks = c(-Inf, 0.05, Inf),\n          palette = c('lightgreen', 'grey'),\n          title = \"local Gi p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title= 'local Gi signif 95%')\n\ntmap_arrange(gdppc, Gimap, Gimap_sig,\n             asp=1,\n             nrow=2,\n             ncol=2)\n\n\n\n\n\nThe bottom left chart shows significant hot/cold spots at 95% confidence level. We can see that all of the coldspots are not statistically significant here.\n\n\n\n\n10.9.3 Gi statistics using adaptive distance\nThe code chunk below are used to compute the Gi values for GDPPC2012 by using an adaptive distance weight matrix (i.e knn_lw).\n\nfips <- order(hunan$County)\ngi.adaptive <- localG(hunan$GDPPC, knn_lw)\nhunan.gi <- cbind(hunan, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n10.9.4 Mapping Gi values with adaptive distance weights\nTo visualise the locations of hot spot and cold spot areas. The choropleth mapping functions of tmap package will be used to map the Gi values.\nThe code chunk below shows the functions used to map the Gi values derived using adaptive distance weight matrix.\n\ngdppc<- qtm(hunan, \"GDPPC\") +\n    tm_layout(main.title= 'GDPPC')\n\nGimap <- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)+\n    tm_layout(main.title= 'local Gi (adaptive)')\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\n\n\n\n\nFrom fixed-dist to adaptive-dist spatial weights matrix, the definition of neighbours and the way they interact with one another have changed, we can observe differences in identified cold/hot spots between the above chart and the one from the previous section."
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#references",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#references",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "11 References",
    "text": "11 References\nTin Seong Kam. “9 Global Measures of Spatial Autocorrelation” From R for Geospatial Data Science and Analytics https://r4gdsa.netlify.app/chap09\nTin Seong Kam. “10 Local Measures of Spatial Autocorrelation” From R for Geospatial Data Science and Analytics https://r4gdsa.netlify.app/chap10"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_2.html#summary",
    "href": "Hands-on_Ex2/Hands-on_Ex2_2.html#summary",
    "title": "Hands-on Exercise 2.2 and 2.3: Global and Local Measures of Spatial Autocorrelation",
    "section": "12 Summary",
    "text": "12 Summary\n\nWays to check R object\nclass(), methods(class=class(object_name)), str(), attributes(), spatial_weights_matrix$weights"
  },
  {
    "objectID": "Hands-on_Ex2/Hands-on_Ex2_3.html",
    "href": "Hands-on_Ex2/Hands-on_Ex2_3.html",
    "title": "Hands-on Exercise 2.3:Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "This hands-on exercise is combined with Hands-on_Ex2_2."
  },
  {
    "objectID": "Hands-on_Ex3/data/geospatial/hexagon/hexagon.html",
    "href": "Hands-on_Ex3/data/geospatial/hexagon/hexagon.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n                 +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs 0 0     false"
  },
  {
    "objectID": "Hands-on_Ex3/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "Hands-on_Ex3/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_1.html",
    "href": "Hands-on_Ex3/Hands-on_Ex3_1.html",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "",
    "text": "Spatial interaction represent the flow of people, material, or information between locations in geographical space. It encompasses everything from freight shipments, energy flows, and the global trade in rare antiquities, to flight schedules, rush hour woes, and pedestrian foot traffic.\nEach spatial interaction, as an analogy for a set of movements, is composed of a discrete origin/destination pair. Each pair can be represented as a cell in a matrix where rows are related to the locations (centroids) of origin, while columns are related to locations (centroids) of destination. Such a matrix is commonly known as an origin/destination matrix, or a spatial interaction matrix.\nIn this hands-on exercise, build an OD matrix by using Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall.\nBy the end to this hands-on exercise, we will be able to:\n\nto import and extract OD data for a selected time interval,\nto import and save geospatial data (i.e. bus stops and mpsz) into sf tibble data frame objects,\nto populate planning subzone code into bus stops sf tibble data frame,\nto construct desire lines geospatial data from the OD data, and\nto visualise passenger volume by origin and destination bus stops by using the desire lines data."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_1.html#getting-started",
    "href": "Hands-on_Ex3/Hands-on_Ex3_1.html#getting-started",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "15.2 Getting Started",
    "text": "15.2 Getting Started\nFor the purpose of this exercise, four R packages will be used. They are:\n\nsf for importing, integrating, processing and transforming geospatial data.\ntidyverse for importing, integrating, wrangling and visualising data.\ntmap for creating thematic maps\nstplanr for solving common problems in transport planning and modelling, such as how to best get from point A to point B\nggpubr for some easy-to-use functions for creating and customizing ‘ggplot2’- based publication ready plots.\nperformance for for computing measures to assess model quality, which are not directly provided by R’s ‘base’ or ‘stats’ packages. The primary goal of the performance package is to provide utilities for computing indices of model quality and goodness of fit. These include measures like r-squared (R2), root mean squared error (RMSE)\n\n\npacman::p_load(tmap, sf, DT, stplanr,\n               performance,\n               ggpubr, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_1.html#preparing-the-flow-data",
    "href": "Hands-on_Ex3/Hands-on_Ex3_1.html#preparing-the-flow-data",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "15.3 Preparing the Flow Data",
    "text": "15.3 Preparing the Flow Data\n\n15.3.1 Importing the OD data\nImport the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\nDisplay the odbus tibble data table by using the code chunk below.\n\nglimpse(odbus)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nA quick check of odbus tibble data frame shows that the values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. Hence, the code chunk below is used to convert these data values into character data type.\n\nodbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE) \n\n\n\n15.3.2 Extracting the study data\nThe data in odbus is generalised into weekend and weekday data. For the purpose of this exercise, we will extract commuting flows on weekday and between 6 and 9 o’clock. After the group-by and sum, the total rows reduced from 5,709,512 ro 241,503.\n\nodbus6_9 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKDAY\") %>%\n  filter(TIME_PER_HOUR >= 6 &\n           TIME_PER_HOUR <= 9) %>%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\nPrint the content of odbus6_9\n\ndatatable(odbus6_9,\n          class = 'cell-border stripe',\n          options = list(pageLength = 5))\n\n\n\n\n\n\nIf we would like to, we could save the output in rds format for future use. We need to ensure that there exists a folder called ‘rds’ in ‘data’ folder before running the code chunk.\n\nwrite_rds(odbus6_9, \"data/rds/odbus6_9.rds\")\n\nTo read rds files:\n\nodbus6_9 <- read_rds(\"data/rds/odbus6_9.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_1.html#working-with-geospatial-data",
    "href": "Hands-on_Ex3/Hands-on_Ex3_1.html#working-with-geospatial-data",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "15.4 Working with Geospatial Data",
    "text": "15.4 Working with Geospatial Data\nIn this exercise, two geospatial data will be used. They are:\n\nBusStop: This data provides the location of bus stop as at the third quarter of 2023. This data is refreshed quarterly by LTA. The last update was in July 2023.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\n\nBoth data sets are in ESRI shapefile format.\n\n15.4.1 Importing geospatial data\nLoad the BusStop geospatial data using the st_read() function of sf package. Using the st_crs(busstop) will show that the coordinate system used is WSG84 (decimal deg). Using st_tranform(), we will convert the geographical coordinates system to SIngapore’s projected coordinate system crs=3414.\nNote that there are repeated bus stop ids , however they have different bus stop roof ids and geometry values.\n\nbusstop <- st_read(dsn = \"data/geospatial/BusStopLocation/BusStopLocation_Jul2023\",\n                   layer = \"BusStop\") %>%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex3\\data\\geospatial\\BusStopLocation\\BusStopLocation_Jul2023' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nNext load the mpsz data. There are 332 planning subzones in Singapore.\n\nmpsz <- st_read(dsn = \"data/geospatial/MPSZ-2019\",\n                   layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex3\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_read() function of sf package is used to import the shapefile into R as sf data frame.\nst_transform() function of sf package is used to transform the projection to crs 3414."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_1.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex3/Hands-on_Ex3_1.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "15.5 Geospatial data wrangling",
    "text": "15.5 Geospatial data wrangling\n\n15.5.1 Combining Busstop and mpsz\nCode chunk below populates the planning subzone code (i.e. SUBZONE_C) of mpsz sf data frame into busstop sf data frame. The output of st_intersection() is a point sf object. We do not need and therefore will drop the geometry. The number of observations reduced from 5,161 to 5,156 after operation, suggesting that 5 bus stops have been dropped as their point geometry is not within the polygon boundary of sf df mpsz.\n\nbusstop_mpsz <- st_intersection(busstop, mpsz) %>%\n  select(BUS_STOP_N, SUBZONE_C, LOC_DESC) %>%\n  st_drop_geometry()\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.\nfive bus stops are excluded in the resultant data frame because they are outside of Singapore boundary.\n\n\n\n\ndatatable(busstop_mpsz,\n          class = 'cell-border stripe',\n          options = list(pageLength = 5))\n\n\n\n\n\n\nSave the output into rds format\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.rds\")  \n\nNext, we are going to append the planning subzone code from busstop_mpsz data frame onto odbus6_9 data frame. By doing so, we get the fields ‘ORIGIN_BS’, ‘DESTIN_BS” and ’ORIGIN_SZ’ all in a df .\n\nbusstop_mpsz %>%\n  group_by(BUS_STOP_N, SUBZONE_C) %>%\n  filter(n()>1) %>%\n  ungroup()\n\n# A tibble: 26 × 3\n   BUS_STOP_N SUBZONE_C LOC_DESC       \n   <chr>      <chr>     <chr>          \n 1 11009      QTSZ01    Ghim Moh Ter   \n 2 11009      QTSZ01    GHIM MOH TER   \n 3 82221      GLSZ05    BLK 3A         \n 4 82221      GLSZ05    Blk 3A         \n 5 22501      JWSZ09    Blk 662A       \n 6 22501      JWSZ09    BLK 662A       \n 7 96319      TMSZ05    Yusen Logistics\n 8 96319      TMSZ05    YUSEN LOGISTICS\n 9 43709      BKSZ07    BLK 644        \n10 43709      BKSZ07    BLK 644        \n# ℹ 16 more rows\n\n\nThe join columns will be ‘ORIGIN_PT_CODE’ from odbus6_9 df and ‘BUS_STOP_N’ from busstop_mpsz df. The columns will also be renamed.\nBefore left_join, odbus6_9 has 241,503 rows, after left join od_data has 242,235 rows.\n\nod_data <- left_join(odbus6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nCheck for duplicate for proceeding\n\nduplicate <- od_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n\n# A tibble: 794 × 5\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ LOC_DESC\n   <chr>     <fct>     <dbl> <chr>     <chr>   \n 1 43709     43009        15 BKSZ07    BLK 644 \n 2 43709     43009        15 BKSZ07    BLK 644 \n 3 43709     43419        42 BKSZ07    BLK 644 \n 4 43709     43419        42 BKSZ07    BLK 644 \n 5 43709     43469         1 BKSZ07    BLK 644 \n 6 43709     43469         1 BKSZ07    BLK 644 \n 7 43709     43479        62 BKSZ07    BLK 644 \n 8 43709     43479        62 BKSZ07    BLK 644 \n 9 43709     43489        23 BKSZ07    BLK 644 \n10 43709     43489        23 BKSZ07    BLK 644 \n# ℹ 784 more rows\n\n\nRemove the duplicated records. The od_data df reduced from 242,235 rows to 241,838 rows after moving duplicates.\n\nod_data <- unique(od_data)\n\nDouble check again\n\nod_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\n# A tibble: 0 × 5\n# ℹ 5 variables: ORIGIN_BS <chr>, DESTIN_BS <fct>, TRIPS <dbl>,\n#   ORIGIN_SZ <chr>, LOC_DESC <chr>\n\n\nPrint the current od_data df to see what we are still lacking. We are will missing the destination subzone codes.\n\nknitr::kable(head(od_data,3))\n\n\n\n\nORIGIN_BS\nDESTIN_BS\nTRIPS\nORIGIN_SZ\nLOC_DESC\n\n\n\n\n01012\n01112\n276\nRCSZ10\nHOTEL GRAND PACIFIC\n\n\n01012\n01113\n143\nRCSZ10\nHOTEL GRAND PACIFIC\n\n\n01012\n01121\n66\nRCSZ10\nHOTEL GRAND PACIFIC\n\n\n\n\n\nAgain, get the destination subzone code for each destination bus stops by performing a left_join again with busstop_mpsz (contains subzone_c codes for each bus stop id).\nAfter left_join, the number of rows increased from 241,838 rows to 242,831 rows.\n\nod_data <- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\"))\n\nCheck for duplicates\n\nduplicate <- od_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n\n# A tibble: 880 × 7\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ LOC_DESC.x           SUBZONE_C LOC_DESC.y\n   <chr>     <chr>     <dbl> <chr>     <chr>                <chr>     <chr>     \n 1 01013     51071         1 RCSZ10    ST JOSEPH'S CH       CCSZ01    MACRITCHI…\n 2 01013     51071         1 RCSZ10    ST JOSEPH'S CH       CCSZ01    MACRITCHI…\n 3 01112     51071        65 RCSZ10    OPP BUGIS STN EXIT C CCSZ01    MACRITCHI…\n 4 01112     51071        65 RCSZ10    OPP BUGIS STN EXIT C CCSZ01    MACRITCHI…\n 5 01112     53041         5 RCSZ10    OPP BUGIS STN EXIT C BSSZ01    Upp Thoms…\n 6 01112     53041         5 RCSZ10    OPP BUGIS STN EXIT C BSSZ01    Upp Thoms…\n 7 01121     51071         3 RCSZ04    STAMFORD PR SCH      CCSZ01    MACRITCHI…\n 8 01121     51071         3 RCSZ04    STAMFORD PR SCH      CCSZ01    MACRITCHI…\n 9 01239     51071        22 KLSZ09    SULTAN PLAZA         CCSZ01    MACRITCHI…\n10 01239     51071        22 KLSZ09    SULTAN PLAZA         CCSZ01    MACRITCHI…\n# ℹ 870 more rows\n\n\nRemove duplicates\n\nod_data <- unique(od_data)\n\nSneak peak of the current od_data\n\nknitr::kable(head(od_data,3))\n\n\n\n\n\n\n\n\n\n\n\n\n\nORIGIN_BS\nDESTIN_BS\nTRIPS\nORIGIN_SZ\nLOC_DESC.x\nSUBZONE_C\nLOC_DESC.y\n\n\n\n\n01012\n01112\n276\nRCSZ10\nHOTEL GRAND PACIFIC\nRCSZ10\nOPP BUGIS STN EXIT C\n\n\n01012\n01113\n143\nRCSZ10\nHOTEL GRAND PACIFIC\nDTSZ01\nBUGIS STN EXIT B\n\n\n01012\n01121\n66\nRCSZ10\nHOTEL GRAND PACIFIC\nRCSZ04\nSTAMFORD PR SCH\n\n\n\n\n\nThe code chunk below will do the following:\n\nRenames the destination ‘SUBZONE_C’ to ‘DESTIN_SZ’.\nThere are missing subzone codes for some of the origin and destination bus stop because the bus stops location in July 2023 could be more outdated than August bus stop 2023. We will drop columns with missing values.\nGroup-by origin subzone and destination subzone to generate a new field ‘MORNING_PEAK’ that contains the summation of all trips from subzone A to subzone B.\n\n\nod_data <- od_data %>%\n  rename(DESTIN_SZ = SUBZONE_C) %>%\n  drop_na() %>%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %>%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\nTake a look at our final od_data df\n\nknitr::kable(head(od_data %>% \n                    arrange(desc(MORNING_PEAK)),\n                  10))\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nMORNING_PEAK\n\n\n\n\nTMSZ02\nTMSZ02\n350755\n\n\nWDSZ03\nWDSZ03\n239791\n\n\nJWSZ08\nJWSZ09\n234343\n\n\nBDSZ04\nBDSZ04\n217917\n\n\nJWSZ09\nJWSZ09\n153055\n\n\nYSSZ03\nYSSZ01\n152800\n\n\nJWSZ04\nJWSZ04\n149110\n\n\nTMSZ03\nTMSZ02\n134196\n\n\nPRSZ05\nPRSZ03\n103148\n\n\nJWSZ03\nJWSZ04\n99666\n\n\n\n\n\nSave the output into an rds file format.\n\nwrite_rds(od_data, \"data/rds/od_data.rds\")\n\n\nod_data <- read_rds(\"data/rds/od_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_1.html#visualising-spatial-interaction",
    "href": "Hands-on_Ex3/Hands-on_Ex3_1.html#visualising-spatial-interaction",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "15.6 Visualising Spatial Interaction",
    "text": "15.6 Visualising Spatial Interaction\nIn this section, wewill learn how to prepare a desire line by using stplanr package.\n\n15.6.1 Removing intra-zonal flows\nWe will not plot the intra-zonal flows. The code chunk below will be used to remove intra-zonal flows. It does so by removing the flows that originate and ends in the same subzone.\nRows reduced from 20,987 to 20,697.\n\nod_data1 <- od_data[od_data$ORIGIN_SZ!=od_data$DESTIN_SZ,]\n\n\n\n15.6.2 Creating desire lines\nIn this code chunk below, od2line() of stplanr package is used to create the desire lines.\nod_data1 is aspatial while mpsz is geospatial data.\nArguments\n\nflow\n\nA data frame representing origin-destination data. The first two columns of this data frame should correspond to the first column of the data in the zones. Thus in cents_sf(), the first column is geo_code. This corresponds to the first two columns of flow().\n\nzones\n\nA spatial object representing origins (and destinations if no separate destinations object is provided) of travel.\n\ndestinations\n\nA spatial object representing destinations of travel flows.\n\nzone_code\n\nName of the variable in zones containing the ids of the zone. By default this is the first column names in the zones.\n\n\nThe output flowLine is a sf LINESTRING object.\n\nflowLine <- od2line(flow=od_data1,\n                    zones= mpsz,\n                    zone_code= 'SUBZONE_C')\n\nflowLine\n\nSimple feature collection with 20697 features and 3 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 5105.594 ymin: 25813.33 xmax: 49483.22 ymax: 49552.79\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK                       geometry\n1     AMSZ01    AMSZ02        11742 LINESTRING (29501.77 39419....\n2     AMSZ01    AMSZ03        14886 LINESTRING (29501.77 39419....\n3     AMSZ01    AMSZ04         3237 LINESTRING (29501.77 39419....\n4     AMSZ01    AMSZ05         9349 LINESTRING (29501.77 39419....\n5     AMSZ01    AMSZ06         2231 LINESTRING (29501.77 39419....\n6     AMSZ01    AMSZ07         1714 LINESTRING (29501.77 39419....\n7     AMSZ01    AMSZ08         2624 LINESTRING (29501.77 39419....\n8     AMSZ01    AMSZ09         2371 LINESTRING (29501.77 39419....\n9     AMSZ01    AMSZ10          183 LINESTRING (29501.77 39419....\n10    AMSZ01    AMSZ11          930 LINESTRING (29501.77 39419....\n\n\n\n\n15.6.3 Visualising the desire lines\nTo visualise the resulting desire lines, the code chunk below is used.\nArguments of tm_lines():\nlwd: line width. Either a numeric value or a data variable. In the latter case, the class of the highest values (see style) will get the line width defined by scale. If multiple values are specified, small multiples are drawn (see details).\nstyle: method to process the color scale when col is a numeric variable. Discrete gradient options are \"cat\", \"fixed\", \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\", \"dpih\", \"headtails\", and \"log10_pretty\". A numeric variable is processed as a categorical variable when using \"cat\", i.e. each unique value will correspond to a distinct category\nscale: line width multiplier number.\nn: preferred number of color scale classes. Only applicable when lwd is the name of a numeric variable.\n\ntm_shape(mpsz) +\n  tm_polygons() +\n  flowLine %>% \n  tm_shape() +\n  tm_lines(lwd = 'MORNING_PEAK',\n           style = 'quantile',\n           scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.3)\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nRendering process takes about 1 min because of the transparency argument alpha.\n\n\nWhen the flow data are very messy and highly skewed like the one shown above, it is wiser to focus on selected flows, for example flow greater than or equal to 5000 as shown below.\n\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %>%  \n  filter(MORNING_PEAK >= 5000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\n\n\n\n\n\n\nttm()\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %>%  \n  filter(MORNING_PEAK >= 5000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\n\n\n\n\n#| eval: false\n#| echo: false\n#| fig-width: 14\n#| fig-asp: 0.68\n#| code-fold: True"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_1.html#summaries",
    "href": "Hands-on_Ex3/Hands-on_Ex3_1.html#summaries",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "Summaries",
    "text": "Summaries\nOD matrix is often incomplete. Imagine trying to complete the OD matrix, it would involve us doing spatial interaction or OD surveys to find the missing values. There are 332 subzones in Singapore, and each survey is expensive,. In additon, OD matrix is constantly changing as flow patterns changes. We are trying to predict flows between origins and destinations. Flow could be thought of a function of (1) attribute of origin (propulsiveness) (2) attribute of destination (attractiveness) and (3) cost friction (like distance or transport cost or public transport stops). Assumption is that the benefits must outweigh the cost in order for flow to happen.\nGravity model takes into consideration the interaction between all origin and destination locations.\nPotential model takes in consideration the interaction between a location and all other location pairs. (Good for measuring accessibility)\nRetail model is commonly used by franchise like KFC / Pizza Hut to determine their area/region of service (aka delivery zones) for each outlet.\nThere are 4 variations in the Gravity model:\n\nUncontrained: only the overall outflow is fixed and total outflow from origins = total inflow to destinations\nOrigin constrained: outflow by origin is fixed.\nDestination constrained: inflow by destination is fixed.\nDoubly constrained: outflow by origin and inflow by destination is fixed.\n\nTo calculate flow from each origin to each destination, we need parameters like k, alpha, lambda and beta. The beta for distance is usually negative because we assume that there is an inverse relationship between interaction and distance, like Newtonian physics and laws of gravity."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "",
    "text": "Spatial interaction represent the flow of people, material, or information between locations in geographical space. It encompasses everything from freight shipments, energy flows, and the global trade in rare antiquities, to flight schedules, rush hour woes, and pedestrian foot traffic. Understanding what factors and logic went into the decision-making behind those human-induced movements and interdependencies is important because it enables policy makwers to better understand, predict, manage, and help plan for such circulation. For example, policy makers can make informed decisions about how to better allocate resources to improve traffic in a city or to speed up shipments of perishable foodstuffs. It has to do with having a good understanding of the overall situation.\nSpatial Interaction Models (SIMs) are mathematical models for estimating movement between spatial entities developed by Alan Wilson in the late 1960s and early 1970, with considerable uptake and refinement for transport modelling since then Boyce and Williams (2015). There are four main types of traditional SIMs (Wilson 1971): - Unconstrained - Production-constrained - Attraction-constrained - Doubly-constrained\nBoth ordinary least square (OLS) and negative binomial (NB) regression methods have been used extensively to calibrate OD flow models by processing flow data as different types of dependent variables.\nBy the end to this hands-on exercise, we will be able to:\n\nto import and extract OD data for a selected time interval,\nto import and save geospatial data (i.e. bus stops and mpsz) into sf tibble data frame objects,\nto populate planning subzone code into bus stops sf tibble data frame,\nto construct desire lines geospatial data from the OD data, and\nto visualise passenger volume by origin and destination bus stops by using the desire lines data."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#getting-started",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#getting-started",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.2 Getting Started",
    "text": "16.2 Getting Started\nFor the purpose of this exercise, four R packages will be used. They are:\n\nsf for importing, integrating, processing and transforming geospatial data.\ntidyverse for importing, integrating, wrangling and visualising data.\ntmap for creating thematic maps\nstplanr for solving common problems in transport planning and modelling, such as how to best get from point A to point B\nggpubr for some easy-to-use functions for creating and customizing ‘ggplot2’- based publication ready plots.\nperformance for for computing measures to assess model quality, which are not directly provided by R’s ‘base’ or ‘stats’ packages. The primary goal of the performance package is to provide utilities for computing indices of model quality and goodness of fit. These include measures like r-squared (R2), root mean squared error (RMSE)\n\n\npacman::p_load(tmap, sf, DT, stplanr,\n               performance,\n               ggpubr, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#preparing-the-flow-data",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#preparing-the-flow-data",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.3 Preparing the Flow Data",
    "text": "16.3 Preparing the Flow Data\n\n16.3.1 Importing the OD data\nImport the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\nDisplay the odbus tibble data table by using the code chunk below.\n\nglimpse(odbus)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nA quick check of odbus tibble data frame shows that the values in ORIGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type. Hence, the code chunk below is used to convert these data values into character data type.\n\nodbus$ORIGIN_PT_CODE <- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE <- as.factor(odbus$DESTINATION_PT_CODE) \n\n\n\n16.3.2 Extracting the study data\nThe data in odbus is generalised into weekend and weekday data. For the purpose of this exercise, we will extract commuting flows on weekday and between 6 and 9 o’clock. After the group-by and sum, the total rows reduced from 5,709,512 ro 241,503.\n\nodbus6_9 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKDAY\") %>%\n  filter(TIME_PER_HOUR >= 6 &\n           TIME_PER_HOUR <= 9) %>%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\nPrint the content of odbus6_9\n\ndatatable(odbus6_9,\n          class = 'cell-border stripe',\n          options = list(pageLength = 5))\n\n\n\n\n\n\nIf we would like to, we could save the output in rds format for future use. We need to ensure that there exists a folder called ‘rds’ in ‘data’ folder before running the code chunk.\n\nwrite_rds(odbus6_9, \"data/rds/odbus6_9.rds\")\n\nTo read rds files:\n\nodbus6_9 <- read_rds(\"data/rds/odbus6_9.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#working-with-geospatial-data",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#working-with-geospatial-data",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.4 Working with Geospatial Data",
    "text": "16.4 Working with Geospatial Data\nIn this exercise, two geospatial data will be used. They are:\n\nBusStop: This data provides the location of bus stop as at the third quarter of 2023. This data is refreshed quarterly by LTA. The last update was in July 2023.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\n\nBoth data sets are in ESRI shapefile format.\n\n16.4.1 Importing geospatial data\nLoad the BusStop geospatial data using the st_read() function of sf package. Using the st_crs(busstop) will show that the coordinate system used is WSG84 (decimal deg). Using st_tranform(), we will convert the geographical coordinates system to SIngapore’s projected coordinate system crs=3414.\nNote that there are repeated bus stop ids , however they have different bus stop roof ids and geometry values.\n\nbusstop <- st_read(dsn = \"data/geospatial/BusStopLocation/BusStopLocation_Jul2023\",\n                   layer = \"BusStop\") %>%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex3\\data\\geospatial\\BusStopLocation\\BusStopLocation_Jul2023' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nNext load the mpsz data. There are 332 planning subzones in Singapore.\n\nmpsz <- st_read(dsn = \"data/geospatial/MPSZ-2019\",\n                   layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex3\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_read() function of sf package is used to import the shapefile into R as sf data frame.\nst_transform() function of sf package is used to transform the projection to crs 3414."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.5 Geospatial data wrangling",
    "text": "16.5 Geospatial data wrangling\n\n16.5.1 Combining Busstop and mpsz\nCode chunk below populates the planning subzone code (i.e. SUBZONE_C) of mpsz sf data frame into busstop sf data frame. The output of st_intersection() is a point sf object. We do not need and therefore will drop the geometry. The number of observations reduced from 5,161 to 5,156 after operation, suggesting that 5 bus stops have been dropped as their point geometry is not within the polygon boundary of sf df mpsz.\n\nbusstop_mpsz <- st_intersection(busstop, mpsz) %>%\n  select(BUS_STOP_N, SUBZONE_C, LOC_DESC) %>%\n  st_drop_geometry()\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_intersection() is used to perform point and polygon overly and the output will be in point sf object.\nselect() of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.\nfive bus stops are excluded in the resultant data frame because they are outside of Singapore boundary.\n\n\n\n\ndatatable(busstop_mpsz,\n          class = 'cell-border stripe',\n          options = list(pageLength = 5))\n\n\n\n\n\n\nSave the output into rds format\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.rds\")  \n\nNext, we are going to append the planning subzone code from busstop_mpsz data frame onto odbus6_9 data frame. By doing so, we get the fields ‘ORIGIN_BS’, ‘DESTIN_BS” and ’ORIGIN_SZ’ all in a df .\n\nbusstop_mpsz %>%\n  group_by(BUS_STOP_N, SUBZONE_C) %>%\n  filter(n()>1) %>%\n  ungroup()\n\n# A tibble: 26 × 3\n   BUS_STOP_N SUBZONE_C LOC_DESC       \n   <chr>      <chr>     <chr>          \n 1 11009      QTSZ01    Ghim Moh Ter   \n 2 11009      QTSZ01    GHIM MOH TER   \n 3 82221      GLSZ05    BLK 3A         \n 4 82221      GLSZ05    Blk 3A         \n 5 22501      JWSZ09    Blk 662A       \n 6 22501      JWSZ09    BLK 662A       \n 7 96319      TMSZ05    Yusen Logistics\n 8 96319      TMSZ05    YUSEN LOGISTICS\n 9 43709      BKSZ07    BLK 644        \n10 43709      BKSZ07    BLK 644        \n# ℹ 16 more rows\n\n\nThe join columns will be ‘ORIGIN_PT_CODE’ from odbus6_9 df and ‘BUS_STOP_N’ from busstop_mpsz df. The columns will also be renamed.\nBefore left_join, odbus6_9 has 241,503 rows, after left join od_data has 242,235 rows.\n\nod_data <- left_join(odbus6_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nCheck for duplicate for proceeding\n\nduplicate <- od_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n\n# A tibble: 794 × 5\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ LOC_DESC\n   <chr>     <fct>     <dbl> <chr>     <chr>   \n 1 43709     43009        15 BKSZ07    BLK 644 \n 2 43709     43009        15 BKSZ07    BLK 644 \n 3 43709     43419        42 BKSZ07    BLK 644 \n 4 43709     43419        42 BKSZ07    BLK 644 \n 5 43709     43469         1 BKSZ07    BLK 644 \n 6 43709     43469         1 BKSZ07    BLK 644 \n 7 43709     43479        62 BKSZ07    BLK 644 \n 8 43709     43479        62 BKSZ07    BLK 644 \n 9 43709     43489        23 BKSZ07    BLK 644 \n10 43709     43489        23 BKSZ07    BLK 644 \n# ℹ 784 more rows\n\n\nRemove the duplicated records. The od_data df reduced from 242,235 rows to 241,838 rows after moving duplicates.\n\nod_data <- unique(od_data)\n\nDouble check again\n\nod_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\n# A tibble: 0 × 5\n# ℹ 5 variables: ORIGIN_BS <chr>, DESTIN_BS <fct>, TRIPS <dbl>,\n#   ORIGIN_SZ <chr>, LOC_DESC <chr>\n\n\nPrint the current od_data df to see what we are still lacking. We are will missing the destination subzone codes.\n\nknitr::kable(head(od_data,3))\n\n\n\n\nORIGIN_BS\nDESTIN_BS\nTRIPS\nORIGIN_SZ\nLOC_DESC\n\n\n\n\n01012\n01112\n276\nRCSZ10\nHOTEL GRAND PACIFIC\n\n\n01012\n01113\n143\nRCSZ10\nHOTEL GRAND PACIFIC\n\n\n01012\n01121\n66\nRCSZ10\nHOTEL GRAND PACIFIC\n\n\n\n\n\nAgain, get the destination subzone code for each destination bus stops by performing a left_join again with busstop_mpsz (contains subzone_c codes for each bus stop id).\nAfter left_join, the number of rows increased from 241,838 rows to 242,831 rows.\n\nod_data <- left_join(od_data , busstop_mpsz,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\"))\n\nCheck for duplicates\n\nduplicate <- od_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n\n# A tibble: 880 × 7\n   ORIGIN_BS DESTIN_BS TRIPS ORIGIN_SZ LOC_DESC.x           SUBZONE_C LOC_DESC.y\n   <chr>     <chr>     <dbl> <chr>     <chr>                <chr>     <chr>     \n 1 01013     51071         1 RCSZ10    ST JOSEPH'S CH       CCSZ01    MACRITCHI…\n 2 01013     51071         1 RCSZ10    ST JOSEPH'S CH       CCSZ01    MACRITCHI…\n 3 01112     51071        65 RCSZ10    OPP BUGIS STN EXIT C CCSZ01    MACRITCHI…\n 4 01112     51071        65 RCSZ10    OPP BUGIS STN EXIT C CCSZ01    MACRITCHI…\n 5 01112     53041         5 RCSZ10    OPP BUGIS STN EXIT C BSSZ01    Upp Thoms…\n 6 01112     53041         5 RCSZ10    OPP BUGIS STN EXIT C BSSZ01    Upp Thoms…\n 7 01121     51071         3 RCSZ04    STAMFORD PR SCH      CCSZ01    MACRITCHI…\n 8 01121     51071         3 RCSZ04    STAMFORD PR SCH      CCSZ01    MACRITCHI…\n 9 01239     51071        22 KLSZ09    SULTAN PLAZA         CCSZ01    MACRITCHI…\n10 01239     51071        22 KLSZ09    SULTAN PLAZA         CCSZ01    MACRITCHI…\n# ℹ 870 more rows\n\n\nRemove duplicates\n\nod_data <- unique(od_data)\n\nSneak peak of the current od_data\n\nknitr::kable(head(od_data,3))\n\n\n\n\n\n\n\n\n\n\n\n\n\nORIGIN_BS\nDESTIN_BS\nTRIPS\nORIGIN_SZ\nLOC_DESC.x\nSUBZONE_C\nLOC_DESC.y\n\n\n\n\n01012\n01112\n276\nRCSZ10\nHOTEL GRAND PACIFIC\nRCSZ10\nOPP BUGIS STN EXIT C\n\n\n01012\n01113\n143\nRCSZ10\nHOTEL GRAND PACIFIC\nDTSZ01\nBUGIS STN EXIT B\n\n\n01012\n01121\n66\nRCSZ10\nHOTEL GRAND PACIFIC\nRCSZ04\nSTAMFORD PR SCH\n\n\n\n\n\nThe code chunk below will do the following:\n\nRenames the destination ‘SUBZONE_C’ to ‘DESTIN_SZ’.\nThere are missing subzone codes for some of the origin and destination bus stop because the bus stops location in July 2023 could be more outdated than August bus stop 2023. We will drop columns with missing values.\nGroup-by origin subzone and destination subzone to generate a new field ‘MORNING_PEAK’ that contains the summation of all trips from subzone A to subzone B.\n\n\nod_data <- od_data %>%\n  rename(DESTIN_SZ = SUBZONE_C) %>%\n  drop_na() %>%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %>%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\nTake a look at our final od_data df\n\nknitr::kable(head(od_data %>% \n                    arrange(desc(MORNING_PEAK)),\n                  10))\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nMORNING_PEAK\n\n\n\n\nTMSZ02\nTMSZ02\n350755\n\n\nWDSZ03\nWDSZ03\n239791\n\n\nJWSZ08\nJWSZ09\n234343\n\n\nBDSZ04\nBDSZ04\n217917\n\n\nJWSZ09\nJWSZ09\n153055\n\n\nYSSZ03\nYSSZ01\n152800\n\n\nJWSZ04\nJWSZ04\n149110\n\n\nTMSZ03\nTMSZ02\n134196\n\n\nPRSZ05\nPRSZ03\n103148\n\n\nJWSZ03\nJWSZ04\n99666\n\n\n\n\n\nSave the output into an rds file format.\n\nwrite_rds(od_data, \"data/rds/od_data.rds\")\n\n\nod_data <- read_rds(\"data/rds/od_data.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#visualising-spatial-interaction",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#visualising-spatial-interaction",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.6 Visualising Spatial Interaction",
    "text": "16.6 Visualising Spatial Interaction\nIn this section, wewill learn how to prepare a desire line by using stplanr package.\n\n16.6.1 Removing intra-zonal flows\nWe will not plot the intra-zonal flows. The code chunk below will be used to remove intra-zonal flows. It does so by removing the flows that originate and ends in the same subzone.\nRows reduced from 20,987 to 20,697.\n\nod_data1 <- od_data[od_data$ORIGIN_SZ!=od_data$DESTIN_SZ,]\n\n\n\n16.6.2 Creating desire lines\nIn this code chunk below, od2line() of stplanr package is used to create the desire lines.\nod_data1 is aspatial while mpsz is geospatial data.\nArguments\n\nflow\n\nA data frame representing origin-destination data. The first two columns of this data frame should correspond to the first column of the data in the zones. Thus in cents_sf(), the first column is geo_code. This corresponds to the first two columns of flow().\n\nzones\n\nA spatial object representing origins (and destinations if no separate destinations object is provided) of travel.\n\ndestinations\n\nA spatial object representing destinations of travel flows.\n\nzone_code\n\nName of the variable in zones containing the ids of the zone. By default this is the first column names in the zones.\n\n\nThe output flowLine is a sf LINESTRING object.\n\nflowLine <- od2line(flow=od_data1,\n                    zones= mpsz,\n                    zone_code= 'SUBZONE_C')\n\nflowLine\n\nSimple feature collection with 20697 features and 3 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 5105.594 ymin: 25813.33 xmax: 49483.22 ymax: 49552.79\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   ORIGIN_SZ DESTIN_SZ MORNING_PEAK                       geometry\n1     AMSZ01    AMSZ02        11742 LINESTRING (29501.77 39419....\n2     AMSZ01    AMSZ03        14886 LINESTRING (29501.77 39419....\n3     AMSZ01    AMSZ04         3237 LINESTRING (29501.77 39419....\n4     AMSZ01    AMSZ05         9349 LINESTRING (29501.77 39419....\n5     AMSZ01    AMSZ06         2231 LINESTRING (29501.77 39419....\n6     AMSZ01    AMSZ07         1714 LINESTRING (29501.77 39419....\n7     AMSZ01    AMSZ08         2624 LINESTRING (29501.77 39419....\n8     AMSZ01    AMSZ09         2371 LINESTRING (29501.77 39419....\n9     AMSZ01    AMSZ10          183 LINESTRING (29501.77 39419....\n10    AMSZ01    AMSZ11          930 LINESTRING (29501.77 39419....\n\n\n\n\n16.6.3 Visualising the desire lines\nTo visualise the resulting desire lines, the code chunk below is used.\nArguments of tm_lines():\nlwd: line width. Either a numeric value or a data variable. In the latter case, the class of the highest values (see style) will get the line width defined by scale. If multiple values are specified, small multiples are drawn (see details).\nstyle: method to process the color scale when col is a numeric variable. Discrete gradient options are \"cat\", \"fixed\", \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\", \"dpih\", \"headtails\", and \"log10_pretty\". A numeric variable is processed as a categorical variable when using \"cat\", i.e. each unique value will correspond to a distinct category\nscale: line width multiplier number.\nn: preferred number of color scale classes. Only applicable when lwd is the name of a numeric variable.\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nRendering process takes about 1 min because of the transparency argument alpha.\n\n\nWhen the flow data are very messy and highly skewed like the one shown above, it is wiser to focus on selected flows, for example flow greater than or equal to 5000 as shown below.\n\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz) +\n  tm_polygons() +\nflowLine %>%  \n  filter(MORNING_PEAK >= 5000) %>%\ntm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#viewing-the-subzone-spatial-file",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#viewing-the-subzone-spatial-file",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.8 Viewing the Subzone spatial file",
    "text": "16.8 Viewing the Subzone spatial file\n\nhead(mpsz, 10)\n\nSimple feature collection with 10 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 8012.578 ymin: 15748.72 xmax: 35287.9 ymax: 31092.38\nProjected CRS: SVY21 / Singapore TM\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26..."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#isolating-subzone_c-subzone_code-into-a-new-df",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#isolating-subzone_c-subzone_code-into-a-new-df",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.9 Isolating SUBZONE_C (subzone_code) into a new df",
    "text": "16.9 Isolating SUBZONE_C (subzone_code) into a new df\nSort mpsz based on values of SUBZONE_C column in ascending order.\n\nmpsz <- mpsz[order(mpsz$SUBZONE_C),]\nhead(mpsz, 10)\n\nSimple feature collection with 10 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 26154.57 ymin: 37511.2 xmax: 31072.47 ymax: 41804.65\nProjected CRS: SVY21 / Singapore TM\n                 SUBZONE_N SUBZONE_C PLN_AREA_N PLN_AREA_C          REGION_N\n171 ANG MO KIO TOWN CENTRE    AMSZ01 ANG MO KIO         AM NORTH-EAST REGION\n170              CHENG SAN    AMSZ02 ANG MO KIO         AM NORTH-EAST REGION\n163             CHONG BOON    AMSZ03 ANG MO KIO         AM NORTH-EAST REGION\n330             TOWNSVILLE    AMSZ04 ANG MO KIO         AM NORTH-EAST REGION\n329             SHANGRI-LA    AMSZ05 ANG MO KIO         AM NORTH-EAST REGION\n172            KEBUN BAHRU    AMSZ06 ANG MO KIO         AM NORTH-EAST REGION\n233        SEMBAWANG HILLS    AMSZ07 ANG MO KIO         AM NORTH-EAST REGION\n254                 TAGORE    AMSZ08 ANG MO KIO         AM NORTH-EAST REGION\n242      YIO CHU KANG WEST    AMSZ09 ANG MO KIO         AM NORTH-EAST REGION\n252           YIO CHU KANG    AMSZ10 ANG MO KIO         AM NORTH-EAST REGION\n    REGION_C                       geometry\n171      NER MULTIPOLYGON (((29692.8 389...\n170      NER MULTIPOLYGON (((30384.33 39...\n163      NER MULTIPOLYGON (((30676.17 39...\n330      NER MULTIPOLYGON (((29649.88 38...\n329      NER MULTIPOLYGON (((28228.2 392...\n172      NER MULTIPOLYGON (((28491.21 39...\n233      NER MULTIPOLYGON (((27744.03 38...\n254      NER MULTIPOLYGON (((27193.46 41...\n242      NER MULTIPOLYGON (((29269.91 39...\n252      NER MULTIPOLYGON (((29598.36 39..."
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#computing-distance-matrix",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#computing-distance-matrix",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.10 Computing Distance Matrix",
    "text": "16.10 Computing Distance Matrix\nThe are at least two ways to compute the required distance matrix. One is based on sf and the other is based on sp. Past experience shows that computing distance matrix by using sf function took relatively longer time that sp method. In view of this, sp method is used in the code chunks below.\n\n16.10.1 Converting from sf data.table to SpatialPolygonDataFrame\nConvert mpsz from simple feature collection to SpatialPolygonDataFrame.\n\nmpsz_sp <- as(mpsz, \"Spatial\")\nmpsz_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n\n\nExploration: How to access a SpatialPolygonDataFrame object of the sp package.\n\nmpsz_sp['SUBZONE_N'][[1]]\nmpsz_sp@data  # class dataframe\nmpsz_sp@polygons # class: list\nmpsz_sp@polygons[[1]]  # access the first polygon / subzone\nmpsz_sp@polygons[[1]]@Polygons # access the slot in the polygon object that contains information about individual Polygons within the overall geometry\nmpsz_sp@polygons[[1]]@Polygons[[1]] # same as above, enter another layer\nmpsz_sp@polygons[[1]]@Polygons[[1]]@coords #get the coordinates of the first polygon / subzone\nmpsz_sp@polygons[[332]]@Polygons[[1]]@coords #total of 333 subzones\n\n\n\n16.10.2 Computing the distance matrix\nspDists(x, y = x, longlat = FALSE, segments = FALSE, diagonal = FALSE)\nspDists returns a full matrix of distances in the metric of the points if longlat=FALSE, or in kilometers if longlat=TRUE; it uses spDistsN1 in case points are two-dimensional. In case of spDists(x,x), it will compute all n x n distances, not the sufficient n x (n-1).\nArguments\nx: A matrix of n-D points with row denoting points, first column x/longitude, second column y/latitude, or a Spatial object that has a coordinates method\ny: A matrix of n-D points with row denoting points, first column x/longitude, second column y/latitude, or a Spatial object that has a coordinates method\nlonglat: logical; if FALSE (default), Euclidean distance, if TRUE Great Circle (WGS84 ellipsoid) distance; if x is a Spatial object, longlat should not be specified but will be derived from is.projected(x)\nsegments: logical; if TRUE, y must be missing; the vector of distances between consecutive points in x is returned.\ndiagonal: logical; if TRUE, y must be given and have the same number of points as x; the vector with distances between points with identical index is returned.\nThe diagonals of the ouput (332 by 332) are all 0. Distance with itself. The unit of distance is if ‘m’ (euclidean?) and km if WSG84?\n\nlibrary(sp)\ndist <- spDists(mpsz_sp)\nclass(dist) \n\n[1] \"matrix\" \"array\" \n\n\n\ndist[1:5,1:5]\n\n          [,1]      [,2]      [,3]      [,4]     [,5]\n[1,]    0.0000  810.4491 1360.9294  840.4432 1076.792\n[2,]  810.4491    0.0000  950.2937 1026.5876 1824.476\n[3,] 1360.9294  950.2937    0.0000  808.0902 1964.059\n[4,]  840.4432 1026.5876  808.0902    0.0000 1158.484\n[5,] 1076.7916 1824.4762 1964.0592 1158.4844    0.000\n\n\nWe can use the code to check for the default arguments of a function quickly.\n\nformals(spDists)\n\n\n\n16.10.3 Get the sorted column and row names of out dist matrix\nmpsz was previoulsy sorted by ‘SUBZONE_C’ in ascending order. The code below will extract only the column of ‘SUBZONE_C’.\n\nsz_names <- mpsz$SUBZONE_C\nsz_names[1:10] \n\n [1] \"AMSZ01\" \"AMSZ02\" \"AMSZ03\" \"AMSZ04\" \"AMSZ05\" \"AMSZ06\" \"AMSZ07\" \"AMSZ08\"\n [9] \"AMSZ09\" \"AMSZ10\"\n\n\n\n\n16.10.4 Attaching SUBZONE_C to row and column for distance matrix matching ahead\nWe would like to set the column names and row names for our distance matrix .\n\ncolnames(dist): This is used to access or set the column names of the object. Note that colnames() is applicable to matrices and arrays.\nrownames(dist): This is used to access or set the row names of the object. Note that rownames() is applicable to matrices and arrays.\npaste0(sz_names): This part creates a character vector by concatenating elements of the sz_names vector without any separator. The resulting vector will be used as column names.\n\n\ncolnames(dist) <- paste0(sz_names)\nrownames(dist) <- paste0(sz_names)\ndist[1:5,1:5]\n\n          AMSZ01    AMSZ02    AMSZ03    AMSZ04   AMSZ05\nAMSZ01    0.0000  810.4491 1360.9294  840.4432 1076.792\nAMSZ02  810.4491    0.0000  950.2937 1026.5876 1824.476\nAMSZ03 1360.9294  950.2937    0.0000  808.0902 1964.059\nAMSZ04  840.4432 1026.5876  808.0902    0.0000 1158.484\nAMSZ05 1076.7916 1824.4762 1964.0592 1158.4844    0.000\n\n\n\n\n16.10.5 Pivoting distance value by SUBZONE_C\nWe will use the melt() function of the reshape2 package to convert wide-format data to long-format data. This function will convert wide-format data to a data frame with columns for each combination of row and column indices and their corresponding values.\nTo do the opposite, used cast().\n\nWideLong\n\n\n\nmatrix(1:6, nrow = 2, ncol = 3)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\n\n\n\nreshape2::melt(matrix(1:6, nrow = 2, ncol = 3)) %>% knitr::kable()\n\n\n\n\nVar1\nVar2\nvalue\n\n\n\n\n1\n1\n1\n\n\n2\n1\n2\n\n\n1\n2\n3\n\n\n2\n2\n4\n\n\n1\n3\n5\n\n\n2\n3\n6\n\n\n\n\n\n\n\n\nThree new columns generated, (1) ‘var1’, (2) ‘var2’ and (3) ‘value’ containing the distance for the corresponding var1-var2 pair; thus rename to ‘dist’.\nThere are 110,224 rows in distPair due to 332P2 + 332 = 332*331 + 332. Number of possible permutations with replacement.\n\ndistPair <- reshape2::melt(dist) %>%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  AMSZ01 AMSZ01    0.0000\n2  AMSZ02 AMSZ01  810.4491\n3  AMSZ03 AMSZ01 1360.9294\n4  AMSZ04 AMSZ01  840.4432\n5  AMSZ05 AMSZ01 1076.7916\n6  AMSZ06 AMSZ01  805.2979\n7  AMSZ07 AMSZ01 1798.7526\n8  AMSZ08 AMSZ01 2576.0199\n9  AMSZ09 AMSZ01 1204.2846\n10 AMSZ10 AMSZ01 1417.8035\n\n\n\n\n16.10.6 Updating intra-zonal distances\nThe row contain subzone A to subzone A (distance = 0) can be removed by filtering.\n\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n\n      Var1             Var2             dist        \n AMSZ01 :   331   AMSZ01 :   331   Min.   :  173.8  \n AMSZ02 :   331   AMSZ02 :   331   1st Qu.: 7149.5  \n AMSZ03 :   331   AMSZ03 :   331   Median :11890.0  \n AMSZ04 :   331   AMSZ04 :   331   Mean   :12229.4  \n AMSZ05 :   331   AMSZ05 :   331   3rd Qu.:16401.7  \n AMSZ06 :   331   AMSZ06 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\nThe code chunk below adds a constant distance value of 50m into the intra-zones commute. The diagonals of dist matrix (if still a matrix) would have been 50m.\n\ndistPair$dist <- ifelse(distPair$dist==0,\n                        50,\n                        distPair$dist)\n\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  AMSZ01 AMSZ01   50.0000\n2  AMSZ02 AMSZ01  810.4491\n3  AMSZ03 AMSZ01 1360.9294\n4  AMSZ04 AMSZ01  840.4432\n5  AMSZ05 AMSZ01 1076.7916\n6  AMSZ06 AMSZ01  805.2979\n7  AMSZ07 AMSZ01 1798.7526\n8  AMSZ08 AMSZ01 2576.0199\n9  AMSZ09 AMSZ01 1204.2846\n10 AMSZ10 AMSZ01 1417.8035\n\n\nLastly, code chunk is used to save the data frame for future use.\n\nwrite_rds(distPair, \"data/distPair.rds\")"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#preparing-flow-data",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#preparing-flow-data",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.11 Preparing flow data",
    "text": "16.11 Preparing flow data\nThe code chunk below is used to prepare the flow_data. od_data contains intra-zonal trips (unlike od_trip1 ). There are 310 unique origin subzone values and 311 unique destin subzone values.\n\nflow_data <- od_data\n\n\n16.11.1 Separating intra-flow from passenger volume df\nTwo new fields called ‘FlowNoIntra’ and ‘offset’ are created.\ncheck code\n\nflow_data$FlowNoIntra <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$MORNING_PEAK)\nflow_data$offset <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\nPrint flow_data\n\nhead(flow_data,3) %>% knitr::kable()\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nMORNING_PEAK\nFlowNoIntra\noffset\n\n\n\n\nAMSZ01\nAMSZ01\n2575\n0\n1e-06\n\n\nAMSZ01\nAMSZ02\n11742\n11742\n1e+00\n\n\nAMSZ01\nAMSZ03\n14886\n14886\n1e+00\n\n\n\n\nglimpse(flow_data)\n\nRows: 20,987\nColumns: 5\nGroups: ORIGIN_SZ [310]\n$ ORIGIN_SZ    <chr> \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01…\n$ DESTIN_SZ    <chr> \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06…\n$ MORNING_PEAK <dbl> 2575, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 1…\n$ FlowNoIntra  <dbl> 0, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 183,…\n$ offset       <dbl> 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1…\n\n\nThe ‘ORIGIN_SZ’ and ‘DESTIN_SZ’ fields are in character format. Let us convert to factor format\n\nflow_data$ORIGIN_SZ <- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ <- as.factor(flow_data$DESTIN_SZ)\n\nhead(flow_data,5)\n\n# A tibble: 5 × 5\n# Groups:   ORIGIN_SZ [1]\n  ORIGIN_SZ DESTIN_SZ MORNING_PEAK FlowNoIntra   offset\n  <fct>     <fct>            <dbl>       <dbl>    <dbl>\n1 AMSZ01    AMSZ01            2575           0 0.000001\n2 AMSZ01    AMSZ02           11742       11742 1       \n3 AMSZ01    AMSZ03           14886       14886 1       \n4 AMSZ01    AMSZ04            3237        3237 1       \n5 AMSZ01    AMSZ05            9349        9349 1       \n\n\n\n\n16.11.2 Combining passenger volume data with distance value\ndistPair is a df containing distances for all corresponding subzone pairs (including self, default to 50m). ‘var1’, ‘var2’, ‘dist’\nflow_data is a df containing ‘origin_sz’, ‘destin_sb’ and ‘morning_peak’\nWe will now perform a left join with two sets join keys.\nThe output contains distance and total morning peak trips for each possible pairs of subzones (self included).\nBefore left join:\nflow_data has 20,987 rows.\ndistPair has 110,224 rows (is the all possible pairs out of 332 subzones, order matters and with replacement.)\nAfter join:\nflow_data1 has 20,987 rows.\n\nflow_data1 <- left_join(flow_data, distPair,\n                        by = c('ORIGIN_SZ'= 'Var1',\n                               'DESTIN_SZ'= 'Var2'))\n\nglimpse(flow_data1)\n\nRows: 20,987\nColumns: 6\nGroups: ORIGIN_SZ [310]\n$ ORIGIN_SZ    <fct> AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, A…\n$ DESTIN_SZ    <fct> AMSZ01, AMSZ02, AMSZ03, AMSZ04, AMSZ05, AMSZ06, AMSZ07, A…\n$ MORNING_PEAK <dbl> 2575, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 1…\n$ FlowNoIntra  <dbl> 0, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 183,…\n$ offset       <dbl> 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1…\n$ dist         <dbl> 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805.29…\n\n\nPrint out\n\nhead(flow_data1) %>% knitr::kable()\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nMORNING_PEAK\nFlowNoIntra\noffset\ndist\n\n\n\n\nAMSZ01\nAMSZ01\n2575\n0\n1e-06\n50.0000\n\n\nAMSZ01\nAMSZ02\n11742\n11742\n1e+00\n810.4491\n\n\nAMSZ01\nAMSZ03\n14886\n14886\n1e+00\n1360.9294\n\n\nAMSZ01\nAMSZ04\n3237\n3237\n1e+00\n840.4432\n\n\nAMSZ01\nAMSZ05\n9349\n9349\n1e+00\n1076.7916\n\n\nAMSZ01\nAMSZ06\n2231\n2231\n1e+00\n805.2979"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#preparing-origin-and-destination-attributes",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#preparing-origin-and-destination-attributes",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "16.12 Preparing Origin and Destination Attributes",
    "text": "16.12 Preparing Origin and Destination Attributes\n\n16.12.1 Importing population data\nThe dataset used here is the Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format .(i.e. respopagesextod2011to2020.csv). This is an aspatial data file. It can be downloaded at Department of Statistics, Singapore, the specific link can be found here. Although it does not contain any coordinates values, but it’s ‘PA’ and ‘SZ’ fields can be used as unique identifiers to geocode to ‘PLAN_AREA_N’ and ‘SUBZONE_N’ of the MP14_SUBZONE_WEB_PL shapefile respectively.\n\npop <- read_csv(\"data/aspatial/pop.csv\")\nhead(pop)\n\n# A tibble: 6 × 5\n  PA         SZ                     AGE7_12 AGE13_24 AGE25_64\n  <chr>      <chr>                    <dbl>    <dbl>    <dbl>\n1 ANG MO KIO ANG MO KIO TOWN CENTRE     310      710     2780\n2 ANG MO KIO CHENG SAN                 1140     2770    15700\n3 ANG MO KIO CHONG BOON                1010     2650    14240\n4 ANG MO KIO KEBUN BAHRU               1050     2390    12460\n5 ANG MO KIO SEMBAWANG HILLS            420     1120     3620\n6 ANG MO KIO SHANGRI-LA                 810     1920     9650\n\n\n\n\n16.12.2 Geospatial data wrangling\nLet us append the population data for different age group range to the mpsz df.\npop has 984,656 rows\nmpsz has 332 rows\nAfter join: 984,656 rows\nColumn selected are ‘PA’, ‘SZ’, ‘AGE7-12’, ‘AGE13-24’, ‘AGE25_64’ from pop df and ‘SUBZONE_C’ from mpsz df.\n\npop<- pop %>%\n  left_join(mpsz,\n            by = c(\"PA\" = \"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %>%\n  select(1:6) %>%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)\n\n\n\n16.7.3 Preparing origin attribute\n\n\n\n\n#| eval: false\n#| echo: false\n#| fig-width: 14\n#| fig-asp: 0.68\n#| code-fold: True"
  },
  {
    "objectID": "Hands-on_Ex3/Hands-on_Ex3_2.html#summaries",
    "href": "Hands-on_Ex3/Hands-on_Ex3_2.html#summaries",
    "title": "Hands-on Exercise 3.1: Processing and Visualising Flow Data",
    "section": "Summaries",
    "text": "Summaries\nOD matrix is often incomplete. Imagine trying to complete the OD matrix, it would involve us doing spatial interaction or OD surveys to find the missing values. There are 332 subzones in Singapore, and each survey is expensive,. In addition, OD matrix is constantly changing as flow patterns changes. We are trying to predict flows between origins and destinations. Flow could be thought of a function of (1) attribute of origin (propulsiveness) (2) attribute of destination (attractiveness) and (3) cost friction (like distance or transport cost or public transport stops). Assumption is that the benefits must outweigh the cost in order for flow to happen.\nGravity model takes into consideration the interaction between all origin and destination locations.\nPotential model takes in consideration the interaction between a location and all other location pairs. (Good for measuring accessibility)\nRetail model is commonly used by franchise like KFC / Pizza Hut to determine their area/region of service (aka delivery zones) for each outlet.\nThere are 4 variations in the Gravity model:\n\nUnconstrained: only the overall outflow is fixed and total outflow from origins = total inflow to destinations\nOrigin constrained: outflow by origin is fixed.\nDestination constrained: inflow by destination is fixed.\nDoubly constrained: outflow by origin and inflow by destination is fixed.\n\nTo calculate flow from each origin to each destination, we need parameters like k, alpha, lambda and beta. The beta for distance is usually negative because we assume that there is an inverse relationship between interaction and distance, like Newtonian physics and laws of gravity."
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable).\nIn this hands-on exercise, we will learn how to build hedonic pricing models by using GWR methods.\nHedonic Pricing is a model that identifies price factors according to the premise that price is determined by internal and external factors affecting it. For housing, internal could mean size, height, appearance, solar panels while external could mean crime rate, distance to school or downtown area.\nThe dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational."
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#the-data",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#the-data",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "13.2 The Data",
    "text": "13.2 The Data\nTwo data sets will be used in this model building exercise, they are:\n\nURA Master Plan subzone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL)\nCondo_resale_2015 in csv format (i.e. Condo_resale_2015.csv)\n\nUsing MP14 instead of MP19 because of condo_resale_2015."
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#getting-started",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#getting-started",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "13.3 Getting Started",
    "text": "13.3 Getting Started\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows:\n\nR package for building OLS and performing diagnostics tests\n\nolsrr\nIt enhances the capabilities of the basic linear modeling functionality and provides a comprehensive set of regression diagnostics, model comparisons, and other statistics, including normality of residuals, homoscedasticity, and influential observations.\n\nR package for calibrating geographical weighted family of models\n\nGWmodel\n\nR package for multivariate data visualisation and analysis\n\ncorrplot\nIn this exercise, we will be using this package to visualise the correlation matrix\n\nggpubr for some easy-to-use functions for creating and customizing ‘ggplot2’- based publication ready plots.\nSpatial data handling\n\nsf for importing, integrating, processing and transforming geospatial data.\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap for creating thematic maps\n\nCreate publication ready summary tables in R\n\ngtsummary package and its tbl_regression() function\n\n\nThe code chunks below installs and launches these R packages into R environment.\n\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, DT, knitr)"
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#a-short-note-about-gwmodel",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#a-short-note-about-gwmodel",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "13.4 A short note about GWmodel",
    "text": "13.4 A short note about GWmodel\nGWmodel package provides a collection of localised spatial statistical methods, namely: GW summary statistics, GW principal components analysis, GW discriminant analysis and various forms of GW regression; some of which are provided in basic and robust (outlier resistant) forms. Commonly, outputs or parameters of the GWmodel are mapped to provide a useful exploratory tool, which can often precede (and direct) a more traditional or sophisticated statistical analysis."
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "13.5 Geospatial Data Wrangling",
    "text": "13.5 Geospatial Data Wrangling\n\n13.5.1 Importing geospatial data\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014’s planning subzone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\nThe code chunk below is used to import MP_SUBZONE_WEB_PL shapefile by using st_read() of sf packages.\n\nmpsz = st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Hands-on_Ex4\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nThe report above shows that the R object used to contain the imported MP14_SUBZONE_WEB_PL shapefile is called mpsz and it is a simple feature object. The geometry type is multipolygon. it is also important to note that mpsz simple feature object does not have EPSG information.\n\n\n13.5.2 Updating CRS information\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 3414)\n\nmpsz_svy21 <- mpsz %>%  \n  st_transform(crs=3414)\n\nThe EPSG: is indicated as 3414 now.\nNext, we will reveal the extent (rectangular boundary) of mpsz_svy21 by using st_bbox() of sf package.\n\nst_bbox(mpsz_svy21)\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334"
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#aspatial-data-wrangling",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#aspatial-data-wrangling",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "13.6 Aspatial Data Wrangling",
    "text": "13.6 Aspatial Data Wrangling\n\n13.6.1 Importing the aspatial data\nThe condo_resale_2015 is in csv file format. The codes chunk below uses read_csv() function of readr package to import condo_resale_2015 into R as a tibble data frame called condo_resale.\n\ncondo_resale <- read_csv('data/aspatial/Condo_resale_2015.csv')\n\nLet us examine if the data file has been imported correctly.\nThe codes chunks below uses glimpse() to display the data structure.\n\nglimpse(condo_resale)\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             <dbl> 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            <dbl> 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             <dbl> 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nCheck the first five longitude (X) and latitude (Y) columns.\n\ncondo_resale %>% select(1,2) %>% head()\n\n# A tibble: 6 × 2\n  LATITUDE LONGITUDE\n     <dbl>     <dbl>\n1     1.29      104.\n2     1.33      104.\n3     1.31      104.\n4     1.31      104.\n5     1.32      104.\n6     1.31      104.\n\n\nNext, summary() of base R is used to display the summary statistics of cond_resale tibble data frame.\nLongitude and latitude are in decimal deg (< 360deg) , WSG84 (or crs 4326).\nSome postal codes are only 5 digits, the number 0 in front could have been truncated.\n\nsummary(condo_resale)\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n\n13.6.2 Converting aspatial data frame into a sf object\nCurrently, the condo_resale tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts condo_resale data frame into a simple feature POINT data frame by using st_as_sf() of sf packages.\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c('LONGITUDE',\n                                       'LATITUDE'),\n                            crs = 4326) %>% \n  st_transform(crs= 3414)\n\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\nNext, head() is used to list the content of condo_resale.sf object.\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     <dbl>         <dbl>    <dbl> <dbl>    <dbl>          <dbl>            <dbl>\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA <dbl>, PROX_HAWKER_MARKET <dbl>,\n#   PROX_KINDERGARTEN <dbl>, PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>\n\n\nNotice that the output is in point feature data frame."
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#exploratory-data-analysis-eda",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#exploratory-data-analysis-eda",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "13.7 Exploratory Data Analysis (EDA)",
    "text": "13.7 Exploratory Data Analysis (EDA)\nIn the section, wewill learn how to use statistical graphics functions of ggplot2 package to perform EDA.\n\n13.7.1 EDA using statistical graphics\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed distribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf <- condo_resale.sf %>% \n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow, we can plot the LOG_SELLING_PRICE using the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\") \n\n\n\n\nCheck for normality of the LOG_SELLING_PRICE. Although it is still not normally-distributed, it is less skewed after the transformation.\n\nnortest::ad.test(condo_resale.sf$`LOG_SELLING_PRICE`)\n\n\n    Anderson-Darling normality test\n\ndata:  condo_resale.sf$LOG_SELLING_PRICE\nA = 19.973, p-value < 2.2e-16\n\n\n\n\n13.7.2 Multiple Histogram Plots distribution of variables\nIn this section, we will learn how to draw a small multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package.\nThe code chunk below is used to create 12 histograms. Then, ggarrange() is used to organised these histogram into a 3 columns by 4 rows small multiple plot.\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\n\n\n\n\n\n\n\n\n13.7.3 Drawing Statistical Point Map\nLastly, we want to reveal the geospatial distribution condominium resale prices in Singapore. The map will be prepared by using tmap package.\n\ntmap_mode('plot')\n#tmap_mode('view')\n#tmap_options(check.and.fix = TRUE)\n \ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha=0.5) +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\nNotice that tm_dots() is used instead of tm_bubbles().\nIf in tmap_mode(‘view’) mode,\nset.zoom.limits argument of tm_view() sets the minimum and maximum zoom level to 11 and 14 respectively."
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#hedonic-pricing-modelling-in-r",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#hedonic-pricing-modelling-in-r",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "13.8 Hedonic Pricing Modelling in R",
    "text": "13.8 Hedonic Pricing Modelling in R\nIn this section, we will learn how to building hedonic pricing models for condominium resale units using lm() of R base.\nBy calibration, we meant estimating local parameters that vary spatially for each location in the study area, considering nearby observations with higher weights and more distant observations with lower weights. This allows the relationship between variables to vary spatially, capturing local variations in the relationships.\nThe significance of the variables can be assessed locally, telling us where (at which location) specific predictors have a more significant impact on our dependent variable.\nModel Evaluation:: The calibration process in GWR involves fitting the model to the data at each location, and the quality of the fit can be assessed through various diagnostics (e.g., residuals, local R-squared values).\nWhen calibrating a Geographically Weighted Regression model, the emphasis is on capturing spatial heterogeneity in the relationships between variables and understanding how these relationships change across the study area. This is different from traditional models that assume a globally constant relationship. (Hands-on3 and In-class3)\n\n13.8.1 Simple Linear Regression Method\nFirst, we will build a simple linear regression model by using SELLING_PRICE as the dependent variable and AREA_SQM as the independent variable.\n\ncondo.slr <- lm(formula=SELLING_PRICE ~ AREA_SQM, \n                data = condo_resale.sf)\nclass(condo.slr)\n\n[1] \"lm\"\n\n\n\nattributes(condo.slr)\n\n$names\n [1] \"coefficients\"  \"residuals\"     \"effects\"       \"rank\"         \n [5] \"fitted.values\" \"assign\"        \"qr\"            \"df.residual\"  \n [9] \"xlevels\"       \"call\"          \"terms\"         \"model\"        \n\n$class\n[1] \"lm\"\n\n\n\nmethods(class=class(condo.slr))\n\n [1] add1               alias              anova              case.names        \n [5] coerce             confint            cooks.distance     deviance          \n [9] dfbeta             dfbetas            drop1              dummy.coef        \n[13] effects            extractAIC         family             formula           \n[17] fortify            hatvalues          influence          initialize        \n[21] kappa              labels             logLik             model.frame       \n[25] model.matrix       nobs               ols_regress        ols_test_normality\n[29] plot               predict            print              proj              \n[33] qqnorm             qr                 residuals          rstandard         \n[37] rstudent           show               simulate           slotsFromS3       \n[41] summary            variable.names     vcov              \nsee '?methods' for accessing help and source code\n\n\nlm() returns an object of class “lm” or for multiple responses of class c(“mlm”, “lm”).\nThe functions summary() and anova() can be used to obtain and print a summary and analysis of variance table of the results. The generic accessor functions coefficients, effects, fitted.values and residuals extract various useful features of the value returned by lm.\n\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nThe output report reveals that the SELLING_PRICE can be explained by using the formula:\n*y = -258121.1 + 14719x1*\nThe R-squared of 0.4518 reveals that the independent variable is able to explain about 45% of the variation in the dependent variable, resale prices.\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nThe Coefficients: section of the report reveals that the p-values of both the estimates of the Intercept and ARA_SQM are smaller than 0.001. In view of this, the null hypothesis of the B0 and B1 are equal to 0 will be rejected. As a results, we will be able to infer that the B0 and B1 are good parameter estimates.\nTo visualise the best fit curve on a scatterplot, we can incorporate lm() as a method function in ggplot’s geometry as shown in the code chunk below.\n\nplotly::ggplotly(ggplot(data= condo_resale.sf,\n      aes(x = `AREA_SQM`,\n          y= `SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm))\n\n\n\n\n\nFigure above reveals that there are a few statistical outliers with relatively high selling prices.\n\n\n13.8.2 Multiple Linear Regression Method\n\n13.8.2.1 Visualising the relationships of the independent variables\nBefore building a multiple regression model, it is important to ensure that the indepdent variables used are not highly correlated to each other. If these highly correlated independent variables are used in building a regression model by mistake, the quality of the model will be compromised. This phenomenon is known as multicollinearity in statistics.\nCorrelation matrix is commonly used to visualise the relationships between the independent variables. Beside the pairs() of R, there are many packages support the display of a correlation matrix. We will be using the corrplot package.\nThe code chunk below is used to plot a scatterplot matrix of the relationship between the independent variables in condo_resale data.frame.\n\ncolnames(condo_resale)\n\n [1] \"LATITUDE\"             \"LONGITUDE\"            \"POSTCODE\"            \n [4] \"SELLING_PRICE\"        \"AREA_SQM\"             \"AGE\"                 \n [7] \"PROX_CBD\"             \"PROX_CHILDCARE\"       \"PROX_ELDERLYCARE\"    \n[10] \"PROX_URA_GROWTH_AREA\" \"PROX_HAWKER_MARKET\"   \"PROX_KINDERGARTEN\"   \n[13] \"PROX_MRT\"             \"PROX_PARK\"            \"PROX_PRIMARY_SCH\"    \n[16] \"PROX_TOP_PRIMARY_SCH\" \"PROX_SHOPPING_MALL\"   \"PROX_SUPERMARKET\"    \n[19] \"PROX_BUS_STOP\"        \"NO_Of_UNITS\"          \"FAMILY_FRIENDLY\"     \n[22] \"FREEHOLD\"             \"LEASEHOLD_99YR\"      \n\n\ncor(condo_resale[,5:23]) gives a matrix array of the correlation values between each pair of variables.\n\ncorrplot(cor(condo_resale[,5:23]),\n         diag= FALSE,\n         order= 'AOE',\n         tl.pos= 'td',\n         tl.cex = 0.8, # increase or decrease the size of variable names\n         method = 'number',\n         type = 'upper')\n\n\n\n\nMatrix reorder is very important for mining the hiden structure and patter in the matrix. There are four methods in corrplot (parameter order), named “AOE”, “FPC”, “hclust”, “alphabet”. In the code chunk above, AOE order is used. It orders the variables by using the angular order of the eigenvectors method suggested by Michael Friendly.\ntl.pos: This parameter specifies the position of the variable names (text labels) around the correlation plot. It can take one of the following values:\n\n\"n\": Names are displayed on the top of the plot.\n\"ne\": Names are displayed on the top-right corner of the plot.\n\"e\": Names are displayed on the right side of the plot.\n\"se\": Names are displayed on the bottom-right corner of the plot.\n\"s\": Names are displayed at the bottom of the plot.\n\"sw\": Names are displayed on the bottom-left corner of the plot.\n\"w\": Names are displayed on the left side of the plot.\n\"nw\": Names are displayed on the top-left corner of the plot.\n\"td\": Names are displayed outside of the plot.\n\nFrom the scatterplot matrix, it is clear that Freehold is highly correlated to LEASE_99YEAR. In view of this, it is wiser to only include either one of them in the subsequent model building. As a result, LEASE_99YEAR is excluded in the subsequent model building.\n\n\n\n13.8.3 Building a hedonic pricing model using multiple linear regression method\nPreviously, we have use lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf) to fit only one independent variable.\nThe code chunk below using lm() to calibrate the multiple linear regression model, LEASE_99YEAR has been excluded.\n\n\n13.8.4 Preparing Publication Quality Table: olsrr method\nWith reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those 4 variables above which are not statistically significant.\nNow, we are ready to calibrate the revised model by using the code chunk below.\n\ncondo.mlr14 <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\n\nols_regress(condo.mlr14)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\nConfidence Interval Interpretation: The entire confidence interval for age predictor is [-30091.739, -19283.740]. It means that out of 100 trials, 95/100 times the true coefficient for AGE lies within this range.\nOther tools in the olsrr package\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\n\nVariable selection methodsResidual DiagnosticsHeteroskedasticityCollinearity Diagnostics\n\n\n1.Best subset Regression\nSelect the subset of predictors that do the best at meeting some well-defined objective criterion, such as having the largest R2 value or the smallest MSE, Mallow’s Cp or AIC. Plot is available.\n\nols_step_best_subset(condo.mlr14)\n\n2.Stepwise Forward Regression\nBuild regression model from a set of candidate predictor variables by entering predictors based on p values, in a stepwise manner until there is no variable left to enter any more. The model should include all the candidate predictor variables. If details is set to TRUE, each step is displayed.\n\nols_step_forward_p(condo.mlr14)\n\n\n                                      Selection Summary                                       \n---------------------------------------------------------------------------------------------\n        Variable                              Adj.                                               \nStep          Entered           R-Square    R-Square      C(p)         AIC           RMSE        \n---------------------------------------------------------------------------------------------\n   1    AREA_SQM                  0.4518      0.4515    797.8050    43587.7528    942662.2747    \n   2    PROX_CBD                  0.5693      0.5687    322.0864    43243.5234    835895.3746    \n   3    PROX_PARK                 0.5892      0.5883    243.2469    43177.6906    816668.9726    \n   4    FREEHOLD                  0.6044      0.6033    183.3246    43125.4738    801676.7017    \n   5    AGE                       0.6201      0.6188    121.3482    43069.2221    785854.9939    \n   6    PROX_ELDERLYCARE          0.6266      0.6250     96.9872    43046.5150    779396.0565    \n   7    PROX_SHOPPING_MALL        0.6337      0.6319     70.1492    43020.9904    772232.4254    \n   8    PROX_URA_GROWTH_AREA      0.6372      0.6352     57.7965    43009.0922    768773.6747    \n   9    PROX_MRT                  0.6402      0.6380     47.4808    42999.0584    765827.6052    \n  10    PROX_BUS_STOP             0.6442      0.6417     33.1566    42984.9507    761811.6155    \n  11    FAMILY_FRIENDLY           0.6457      0.6430     29.2576    42981.0852    760524.2672    \n  12    NO_Of_UNITS               0.6476      0.6447     23.4115    42975.2464    758717.7596    \n  13    PROX_CHILDCARE            0.6489      0.6457     20.0431    42971.8582    757561.9002    \n  14    PROX_PRIMARY_SCH          0.6507      0.6472     15.0000    42966.7583    755957.2886    \n---------------------------------------------------------------------------------------------\n\n\n\n\n1.Residual QQ plot: Detects violation of standard regression assumptions.\nAssumptions:\n\nThe error has a normal distribution (normality assumption).\nThe errors have mean zero.\nThe errors have same but unknown variance (homoscedasticity assumption).\nThe error are independent of each other (independent errors assumption).\n\n\nols_plot_resid_qq(condo.mlr14)\n\n\n\n\n2.Residual Normality test\n\nols_test_normality(condo.mlr14)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n3.Residual vs Fitted Values Plot\nIt is a scatter plot of residuals on the y axis and fitted values on the x axis to detect non-linearity, unequal error variances, and outliers.\nCharacteristics of a well behaved residual vs fitted plot:\n\nThe residuals spread randomly around the 0 line indicating that the relationship is linear.\nThe residuals form an approximate horizontal band around the 0 line indicating homogeneity of error variance.\nNo one residual is visibly away from the random pattern of the residuals indicating that there are no outliers\n\n\nols_plot_resid_fit(condo.mlr14)\n\n\n\n\nThe spread of residual is wider for higher fitted values .\n4.Residual Histogram\nHistogram of residuals for detecting violation of normality assumption.\n\nols_plot_resid_hist(condo.mlr14)\n\n\n\n\nThe residual appears to resemble a normal distribution, but chart 2 above shows that the residuals are not normal distributed.\nLink\n\n\nF Test for heteroskedasticity under the assumption that the errors are independent and identically distributed (i.i.d.). We can perform the test using the fitted values of the model, the predictors in the model and a subset of the independent variables.\n\nols_test_f(condo.mlr14)\n\n\n F Test for Heteroskedasticity\n -----------------------------\n Ho: Variance is homogenous\n Ha: Variance is not homogenous\n\n Variables: fitted values of SELLING_PRICE \n\n        Test Summary         \n ----------------------------\n Num DF     =    1 \n Den DF     =    1434 \n F          =    138.994 \n Prob > F   =    1.096016e-30 \n\n\n\n\n1.Check for signs of multicollinearity\n\nols_vif_tol(condo.mlr14)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince the VIF of the independent variables are less than 10. We can safely conclude that there are no sign of multicollinearity among the independent variables.\n2.Observed vs Predicted plot\nPlot of observed vs fitted values to assess the fit of the model. Ideally, all points should be close to a regressed diagonal line. Draw such a diagonal line within your graph and check out where the points lie. If your model had a high R Square, all the points would be close to this diagonal line. The lower the R Square, the weaker the Goodness of fit of your model, the more foggy or dispersed your points are from this diagonal line.\n\nols_plot_obs_fit(condo.mlr14)\n\n\n\n\nLink\n\n\n\n\n\n13.8.5 Preparing Publication Quality Table: gtsummary method\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R.\nIn the code chunk below, tbl_regression() is used to create a well formatted regression report.\n\ntbl_regression(condo.mlr14, intercept = TRUE)\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr14, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n13.8.5.4 Testing for Spatial Autocorrelation\nThe hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visualise the residual of the hedonic pricing model spatially.\nIn order to perform spatial autocorrelation test, we need to convert condo_resale.sf from sf data frame into a SpatialPointsDataFrame (sp object)\nFirst, we will export the residual of the hedonic pricing model and save it as a data frame.\n\nattributes(condo.mlr14)\n\n$names\n [1] \"coefficients\"  \"residuals\"     \"effects\"       \"rank\"         \n [5] \"fitted.values\" \"assign\"        \"qr\"            \"df.residual\"  \n [9] \"xlevels\"       \"call\"          \"terms\"         \"model\"        \n\n$class\n[1] \"lm\"\n\n\n\nmlr.output <- as.data.frame(condo.mlr14$residuals)\n\nNext, join the newly created data frame with condo_resale.sf object.\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                        condo.mlr14$residuals) %>%\nrename(`MLR_RES` = `condo.mlr14.residuals`)\n\ncondo_resale.sf is still a sf object. Next, convert from simple feature obj into a SpatialPointDataFrame object because spdep package can only process sp conform spatial data objects.\n*Recall in In-class_Ex3, we used SpatialPolygonDataFrame for spdep functions.\nThe code chunk below will be used to perform the data conversion process.\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nHow to access SpatialPointDataFrame object (similar to SpatialPolygonDataFrame object).\n\n#attributes(condo_resale.sp)\n#str(condo_resale.sp)\ncondo_resale.sp@coords[1:10, 1:2]\n\n   coords.x1 coords.x2\n1   22085.12  29951.54\n2   25656.84  34546.20\n3   23963.99  32890.80\n4   27044.28  32319.77\n5   41042.56  33743.64\n6   39717.04  32943.10\n7   28419.10  33513.37\n8   40763.57  33879.61\n9   23595.63  28884.78\n10  24586.56  33194.31\n\ncondo_resale.sp@data\n\n     POSTCODE SELLING_PRICE AREA_SQM AGE   PROX_CBD PROX_CHILDCARE\n1      118635       3000000      309  30  7.9412588    0.165979317\n2      288420       3880000      290  32  6.6097971    0.280272464\n3      267833       3325000      248  33  6.8979999    0.429226695\n4      258380       4250000      127   7  4.0388614    0.394735433\n5      467169       1400000      145  28 11.7834021    0.119466632\n6      466472       1320000      139  22 10.2635447    0.125310614\n7      309502       3410000      218  24  4.2431523    0.326167433\n8      468497       1420000      141  24 11.5727792    0.162167213\n9      118450       2025000      165  27  6.4623024    0.122677995\n10     268157       2550000      168  31  6.5220714    0.609362707\n11     416558        927000      112  17  7.1330116    0.219890679\n12     439089       1305000       89  22  4.0923569    0.111912582\n13     249617       8200000      302   6  3.5824670    0.736902148\n14     466671        970000       97  31 11.4035345    0.079437547\n15     259709       2400000      164  21  4.2081595    0.275674462\n16     258371       4850000      216  18  3.8124831    0.227969226\n17     259792       3100000      177  12  4.0296742    0.460979088\n18     488067       1300000      152  21 13.7202572    0.161722913\n19     425569       1317500      148  22  7.7574548    0.341751613\n20     259945      15844000      368   1  3.9262533    0.288053637\n21     288411       1668000      116  18  6.4933093    0.202748711\n22     238352       1830000      129  22  1.7717222    0.208649144\n23     466609       1000000      136  24 12.2093916    0.141115048\n24     598008       1340000      133  31 10.8853693    0.199309403\n25     598010        900000      115  31 10.8332937    0.241468207\n26     258502       8575376      258   5  4.2849944    0.888215714\n27     229717       3828000      199  13  3.1985245    0.216950334\n28     509032       1080000      121  22 15.7832167    0.427666744\n29     509039       1090000      123  22 15.7855348    0.408404298\n30     509042       1080000      123  22 15.8048465    0.415767293\n31     437830       1980000      152   4  5.6584360    0.101522862\n32     437831       1440000      134   4  5.6742513    0.085066759\n33     276957       5100000      322  30  9.0087544    0.380171026\n34     269031       1750000       96  10  6.6662691    0.368237999\n35     429974       1510000      111  10  6.1119518    0.162409026\n36     257536       5236000      278  13  5.8780452    0.280054004\n37     276958       2900000      191  31  9.1178020    0.393302084\n38     438051       3225000      207   3  4.4090430    0.105259863\n39     417771       1400000      129  20  7.2394798    0.175675236\n40     438686        750000       65  21  5.3306957    0.291357690\n41     426323       1149000      122  11  7.5883759    0.240502371\n42     259811       1700000      117  21  4.1169069    0.282785029\n43     589318       1080000      117  15 10.9557004    0.366080255\n44     509506       1107500      227  18 16.3448471    0.147310653\n45     259830       2200000      115   6  4.3972407    0.193773470\n46     258361       3300000      179   6  4.4279439    0.096449504\n47     576438       1900000      156  23  8.7636589    0.142670737\n48     238142       4091520      198   3  2.1580648    0.319576000\n49     259844       3180000      171   7  4.4256121    0.206694851\n50     466580       1315000      109   7 10.9811811    0.368108763\n51     269030       2680000      149   8  6.6560556    0.395816363\n52     424968        880000       58   9  6.7319067    0.146868250\n53     424980        690000       60   9  6.7218474    0.146906023\n54     509050       1430000      211   3 15.7584629    0.438212699\n55     509051       1030000      109   3 15.7557667    0.440704540\n56     309767       2988000      131   1  4.0139584    0.087708461\n57     229657       4770000      197   2  2.7235282    0.281129453\n58     229720       5787000      235   2  2.7118931    0.317515093\n59     599717       1138000      112  11 10.8015205    0.102923829\n60     486365        880000       89  15 12.3662184    0.302700343\n61     248743       3175000      167   1  3.0040210    0.126980952\n62     417786       1018000       80   8  7.2480849    0.183303566\n63     238568      10000000      284   4  3.1486449    0.369751761\n64     239106       3950000      241   9  1.9485499    0.128475631\n65     308729       1130000       81  16  4.4820396    0.232986883\n66     118699       1390000      137  21  8.5554920    0.563171199\n67     278735       1950000      157  25  6.3990320    0.141999810\n68     598435       1124000      111  19 11.3446327    0.169599090\n69     247855       8090000      376   1  3.4425222    0.386105118\n70     307674       2250000      264  10  4.6554138    0.401909883\n71     307686       1530000       98  10  4.6576277    0.406056761\n72     307687       1810000      116  10  4.6859811    0.437020314\n73     287164       2750000      244  36  7.0209815    0.386469353\n74     287566       1320000       97  36  6.9713390    0.438172113\n75     509456       1030000      103   5 16.3801573    0.191160664\n76     248648       4534000      300  31  3.6079946    0.584645768\n77     118864       1520000       92   1  7.5101844    0.200608469\n78     117503       1340000      120  10  9.2272502    1.107041468\n79     117504       1630000      147  10  9.1751565    1.063692720\n80     117506        880000       74  10  9.2616659    1.101199868\n81     486364        855000       91  17 12.3070164    0.349011139\n82     117755       2408888      204  29  6.4935992    0.198951950\n83     117756       2420000      188  29  6.4740882    0.262088459\n84     119520       3637000      334  31  6.6011473    0.367726700\n85     119522       4000000      325  31  6.4530242    0.324528425\n86     228232       5718000      322   6  3.4889935    0.167579830\n87     228239       2180000      162   6  3.5064484    0.167564164\n88     758930        950000      118   8 17.2733386    0.099222649\n89     599427       1040000       97  16 10.7605304    0.199756913\n90     599428        880000       78  16 10.7461037    0.215871909\n91     429099        980000      105   7  7.0232610    0.390161815\n92     437906       2250000      164  23  4.6197481    0.315573475\n93     288383       1850000      118   4  6.4003775    0.219134221\n94     425612       1668888      129   5  7.0602805    0.265178741\n95     425781       2080000      188   5  7.0749013    0.250993444\n96     679692       1327000      112   6 13.5110438    0.101169650\n97     679693       1520000      164   6 13.4569011    0.143526786\n98     425562       1087500       81   6  7.7052804    0.346371216\n99     425602       1410000      109   6  7.7052804    0.346371216\n100    425603       1140000      101   6  7.7028482    0.426952742\n101    439069       1425000      112  10  4.1612167    0.062380732\n102    249441       2319000      145  14  2.9991215    0.176161207\n103    118571       1108000       92  21  7.1509107    0.228479533\n104    545551        872000       98   3  8.5279981    0.169353843\n105    259847       4100000      291  29  4.2719812    0.285135516\n106    266338       2785000      192  10  7.3002277    0.206821486\n107    269187       2100000      120  10  7.2638974    0.250070604\n108    259985       2200000      148  16  4.0693187    0.312436375\n109    259986       6000000      422  16  4.0586080    0.327652755\n110     99200       3100000      228  32  3.4439282    0.430727942\n111    268685        900000       47   6  7.2170436    0.336999174\n112    249570       6960000      351  32  3.2985506    0.428388318\n113    437920       5525000      307  22  4.8814894    0.253333748\n114    465521       2050000      190   4 10.1625830    0.131695076\n115    465522       2000000      165   4 10.1420400    0.091932191\n116    465523       2250000      203   4 10.1350639    0.117350460\n117    465884       2600000      236   4 10.1309810    0.184715142\n118    117489       1190000       94   7  7.3719445    0.075437720\n119    117490       1680000      162   7  7.3529750    0.099743626\n120    117491       1500000      117   7  7.3338044    0.128084834\n121    117493       1200000       90   7  7.3253570    0.117308991\n122    117494        858000       49   7  7.3544651    0.085144167\n123    118707        688000       47   7  8.6155989    0.637692632\n124    118709       1544000      186   7  8.6482245    0.668032713\n125    238539       3300000      209  11  2.9757754    0.178935855\n126    486356       1025000      124  15 12.6455738    0.582183457\n127    278698       1830000      143  11  8.8476370    0.134383835\n128    589632       2900000      188  23  9.4453896    0.198553548\n129     98393       3300000      203   5  4.7940346    3.125326657\n130     98395       4134444      226   5  4.8337311    3.113159510\n131    307943       3060000      113   6  3.5767000    0.341670216\n132    249046       1680000      118  22  3.5787302    0.381784252\n133    249047       3500000      218  22  3.5741688    0.340430797\n134    417611       1260000      116   9  8.2898016    0.247524020\n135    279889       1966110       94  27  8.2509877    0.357202596\n136    279888       2600000      202  28  8.2675399    0.406259688\n137    249631       5200000      212   7  3.6262729    0.760782211\n138    249633       4150000      164   7  3.5943039    0.735741756\n139    257872       1965000      116  14  4.9654161    0.241355836\n140    536443        970000      105  14  7.5867429    0.271321195\n141    536445       1050000      105  14  7.5166620    0.309659513\n142    259275       2292500      175  19  6.1171757    0.220624330\n143    239427       4650000      115   2  2.2329026    0.218035781\n144    259725       1905000      136  19  4.5362044    0.286431586\n145    307762       3364444      171   4  3.6199192    0.217205242\n146    269632       1780000       97  10  6.4897448    0.245406480\n147    276337       2550000      135   3  6.5419628    0.159489240\n148    276340       1160000       56   3  6.5454673    0.121645970\n149    258462      18000000      323   4  4.2098532    0.585294569\n150    308214       1620000      119  11  4.3654420    0.068332869\n151    428099       1030000       96  11  6.5153096    0.166054018\n152    428125       1050000      113  11  6.5090548    0.173417555\n153    428127        985000      113  11  6.4375594    0.186370940\n154    439845       2125000      157  24  5.5018523    0.284798528\n155    419535       1090000      135  33  7.8857474    0.239605672\n156    598326       1500000      109  18  9.8912377    0.431370004\n157    238551      13900000      619   5  3.0068843    0.221502152\n158    546694       1537500      152   2  9.6944994    0.238868828\n159    419572       1204000      124  12  7.9320637    0.324853839\n160    538749       1020000      112  13  8.2335933    0.064356943\n161    119749       1350000      151  20  7.0083568    0.211684180\n162    288433       1201200       93  32  6.7958678    0.347392806\n163    288435       3050000      241  32  6.7794927    0.280831990\n164    556820       1710000       87   8  7.4006236    0.234195389\n165    457269       1480000      131  19  8.9489979    0.248601477\n166    546684       1138000      106  21  9.7019634    0.262843103\n167    546685       1160000      134  21  9.6989471    0.321189206\n168    546687       1390000      173  21  9.6423255    0.305012085\n169    457909       2196000      204  29  9.0220305    0.187143332\n170    457911       2196000      204  29  9.0508769    0.146599676\n171    249591       5500000      200   4  3.2468822    0.458717811\n172    238549       2530000      122   7  2.9680691    0.180551712\n173    547315       1660000      171  13  8.9227550    0.251853913\n174    466112       2080000      281  18 11.6040104    0.277762256\n175    466143       1850000      264  18 11.5708495    0.310915351\n176    466164       2050000      281  18 11.7567499    0.141385199\n177    466175       1858888      272  18 11.7714179    0.110474752\n178    466184       2700000      361  18 11.7106149    0.172239369\n179    439888       2310000      167   4  5.8455503    0.281115725\n180    309422       2750000      155  23  3.6519323    0.272120716\n181    277116       2130000      156   7  9.0276283    0.241402078\n182    455273        595000       34   3  9.5817081    0.254907271\n183    455275        630000       35   3  9.5822684    0.255472172\n184    598669        980000       89  17 11.5216474    0.236218117\n185    278102       1980000      126  20  6.7249981    0.259996740\n186    278104       2400000      158  20  6.7258641    0.229034351\n187    278106       1940000      127  20  6.7871745    0.290649845\n188    259947       4865000      188   5  3.8169404    0.177066211\n189    259962       5425000      188   5  3.9122596    0.245411894\n190    229768       3350000      189  11  2.8967407    0.439734032\n191    289895       1699000      108  11  6.4332248    0.358086435\n192    289902       1580000      106  11  6.5333398    0.298866970\n193    778904        950000      108  12 13.9550165    0.246892287\n194    778905        990000      111  12 13.8864471    0.208874259\n195    458711        753800       47   3  9.3590360    0.169606374\n196    266311       2750000      149   4  7.1935901    0.169523199\n197    266312       3060000      174   4  7.1492727    0.233682102\n198    266313       2550000      136   4  7.1010657    0.241258477\n199    239949       1690000       87   6  1.6548681    0.241919886\n200    669581       1140000      120  17 12.9432958    0.130162488\n201    468726       1065000       99  17  9.8597258    0.112086784\n202    669604       1900000      206  16 13.0151796    0.125676889\n203    669605       1200000      124  16 13.0151796    0.125676889\n204    468698       1430000      115  19  9.9323875    0.094617763\n205    468700       1350000      106  19  9.9336111    0.082664657\n206    588377       1400000      164  26  9.8302501    0.286716432\n207    546785       1657500      115   5  9.6706537    0.283451365\n208    546789       1095000       95   5  9.7292318    0.224644947\n209    238427       2465900      122   8  1.9817421    0.365701198\n210    268836       1290000       74  11  6.1724724    0.525737529\n211    427710       1759000       84   2  6.4663739    0.211835808\n212    249208       5100000      259   5  2.9332903    0.125933508\n213    669743       1383944      120   5 12.8824525    0.265132159\n214    807584       1606000      170  29 10.8235849    0.481045411\n215    807585       1480000      170  29 10.8020270    0.476138670\n216    807586       1545750      170  29 10.8618097    0.415558413\n217    438639       1485000      105   5  5.8696069    0.215737498\n218    438641       1514400      105   5  5.8747131    0.213863166\n219    424160       1280000       88   6  7.4502738    0.176330813\n220    424163       1700000      114   6  7.4347748    0.272049734\n221    424215       2150000      210   6  7.3776870    0.280468760\n222    219647       1540000       97   7  3.5094117    0.328923697\n223    219648       1677500      144   7  3.5150570    0.331567999\n224    239347       1860000      106  16  1.7517790    0.299724770\n225    389778       1172500      115  14  5.1410456    0.220461739\n226    389779       1159000      113  14  5.1483138    0.229579583\n227    268820       2750000      170   5  6.1184684    0.632933026\n228    268822       3400000      204   5  6.0369615    0.647844378\n229    538420       1349000      114   6  7.0513294    0.377635988\n230    538421       1720000      137   6  7.0166232    0.345330176\n231    538422       1300000      115   6  7.0215377    0.353953250\n232    486860        912500      123  21 14.2004802    0.124627403\n233    436593       1731500      124   7  3.8627456    0.328859278\n234    259403       2930000      153  10  3.6639781    0.295419123\n235    259405       5000000      266  10  3.6993263    0.320072207\n236    307605       2060000      120  13  3.8590459    0.341638517\n237    228223       2250900      102  17  3.4261309    0.164255959\n238    117423        640000       37   5  7.5694294    0.196485233\n239    118618       1100000       84   5  7.5268098    0.158068550\n240    467202       1472500      119   8 10.7614936    0.190889024\n241    467203       1680000      134   8 10.7492060    0.256273250\n242    467205       1440000      113   8 10.7150532    0.149409454\n243    416729       1025000       86  17  7.3914451    0.145403758\n244    416730       1030000      103  17  7.4535440    0.193104245\n245    239224       3325000      236  22  2.6862411    0.133292307\n246    239225       3750000      303  22  2.6378377    0.159705395\n247    589488       2725000      176   3  9.9267531    0.412390581\n248    589489       1538000      102   3  9.8902693    0.390148996\n249    757487       1088000      122   6 16.1051202    0.090685516\n250    757488       1400000      185   6 16.1406148    0.129184342\n251    759158       1182500      135   6 16.0893850    0.039872138\n252    268850       4600000      246  18  6.0803011    0.157647530\n253    268851       5050000      266  18  5.9860695    0.236587709\n254    268852       2750000      163  18  5.9312265    0.278037486\n255    169813       1950000       82   8  3.0050950    0.267579255\n256    169814       1500000       86   8  2.9854212    0.258555403\n257    298088       1925000      139  14  5.2363576    0.511083289\n258    298090       2400000      161  14  5.2172461    0.485661049\n259    229543       8500000      311  30  3.5138226    0.134239538\n260    438797       1180000      111  11  5.8589600    0.155050971\n261    438798       1265000      116  11  5.8597479    0.149005216\n262    679646       1288000      137  32 13.2977229    0.253619159\n263    259850       2480000      151  25  4.3375119    0.333655688\n264    259852       2300000      154  25  4.2900940    0.405202493\n265    259854       2809500      195  25  4.2282546    0.467024324\n266    297722       3650000      156   2  5.2662693    0.529948604\n267    249722       3075000      139  13  3.6023958    0.297804887\n268    249723       2737500      138  13  3.5929124    0.233373876\n269    298063       3323000      204  24  5.2594562    0.558952615\n270    298069       1790000      116  24  5.4434961    0.752101599\n271    298071       2700000      179  24  5.3476048    0.661918575\n272     98309       5800000      384   4  5.0622490    3.465726330\n273    308162       2135000      192   5  4.4296110    0.100128451\n274    239896       2975000      123   4  2.1315944    0.177839952\n275    436917       2050000      153  20  2.5549400    1.055819679\n276    109258       1440000       74  21  4.9633173    0.187157374\n277    288061       2000000      154  22  9.7737264    1.020768477\n278    298127       1688715      121   1  4.9191365    0.410484773\n279    239899       3200000      157   6  2.3119569    0.275577997\n280    587972        868000       84  18 11.1581615    0.201653724\n281    587973       1190000      122  18 11.1771431    0.242434782\n282    437885       1787500       97  19  4.4403760    0.186979685\n283    169905       1520000       86   5  2.3568161    0.117146547\n284    169907       2100000      119   5  2.3772082    0.095351575\n285    229920       2880000      117  19  2.8693518    0.190037841\n286    576194       1950000      195  27  8.4580186    0.339546904\n287    576191       1835000      179  28  8.5674931    0.367055069\n288    469360       1452840      126  12 12.2344338    0.222172688\n289    469565       1420000      122  12 12.1488980    0.136780906\n290    469566       1427500      145  12 12.1350872    0.162774690\n291    469567       1170000      101  12 12.1226420    0.194654833\n292    469568       1420000      122  12 12.1578921    0.198093796\n293    436904       1650000      129  19  2.9664782    1.198080831\n294    575728       1800000      170  26  8.9077593    0.211232003\n295    599970       1650000      150  32 10.5435574    0.159277084\n296    126822       1580000      124   7  9.4170049    0.880257671\n297    126824       1255000       88   7  9.4301339    0.912028134\n298    127302       1660000      129   7  9.3913110    0.816134009\n299    268818       3600000      316  28  6.1982691    0.449764279\n300    558962        680000       39   1  8.0422934    0.168276874\n301    357920       1440000      142  19  6.0489493    0.215810473\n302    579653       1310000       87  10  8.6683636    0.107543743\n303    249613       5350000      240  11  3.8451119    0.666140151\n304    249614       5500000      240  11  3.8605129    0.644792670\n305    249616       6750000      240  11  3.8837108    0.655716661\n306    289844       4130000      354  32  7.2931713    0.852242187\n307    289845       4150000      322  32  7.2931713    0.852242187\n308    229158       4150000      146   2  2.6195654    0.335488857\n309    276750       1450000       88   7  6.1413827    0.364413494\n310    437874       1890000      121   8  4.2728791    0.100198123\n311    437876       1994000      117   8  4.3003709    0.093034926\n312    259324       1458000       88  18  4.2284027    0.310240971\n313    259326       2200000      280  18  4.2440671    0.306049871\n314    259328       1450000       98  18  4.2871308    0.307410575\n315    436914       1361740      112  18  2.9474703    1.202173164\n316    239864       1440000       53   8  2.3609547    0.304901821\n317    248903       3194000      353  15  2.6415079    0.207003852\n318    248904       2060000      120  15  2.5642054    0.158055895\n319    597590       1205000       91  20  9.1386476    0.244874451\n320    597591       1445000      137  20  9.1406190    0.278591499\n321    597592       1500000      142  20  9.1569075    0.244787657\n322    278639       1520000       96  30  8.7934234    0.169725610\n323    278640       2530000      182  30  8.8366477    0.152727518\n324    598681       1385000      144   2 11.0186409    0.149859936\n325    239497       1820000      363   5  2.0530220    0.399955593\n326    276541       2080000      152   6  8.0739651    0.216796968\n327    276543       2000000      126   6  8.0278578    0.148970219\n328    276544       1645000       90   6  8.0278578    0.148970219\n329    276545       1500000      126   6  8.1145115    0.205636074\n330    808005       1610000      176  36 11.1270298    0.337444914\n331    808012       1780000      200  36 11.0647142    0.293379046\n332    808014       1770000      200  36 11.0250593    0.378748756\n333    573964       1868000      144   3  7.5379520    0.246540122\n334    238113       4515000      349   5  2.2895635    0.347076112\n335    238141       3450000      169   5  2.3231851    0.379397928\n336    238595       3800000      211   5  1.6441709    0.099673538\n337    277054       2490000      185  10  8.2619787    0.314577273\n338    277055       2410000      341  10  8.2771680    0.261469537\n339    298130       1395000      137   2  5.0542469    0.476127768\n340    806107       1150000      123  20 11.6828432    0.169451577\n341    806109       1220000      123  20 11.8347134    0.066422738\n342    357741       1600000      119  24  6.4917172    0.049586573\n343    119916       2500000      181   4  7.4746705    0.311213965\n344    309978       1606444      138   6  4.4671576    0.158969816\n345    309979       2115000      138   6  4.4761436    0.161018999\n346    467298       2418000      207  18 10.8972318    0.156516793\n347    467302       1500000      135  18 10.8918275    0.197411252\n348    467303       1319000      113  18 10.8805181    0.134807373\n349    467304       1050000       96  18 10.8670946    0.126521157\n350    669554        875000       71  20 13.0664534    0.496854057\n351    669555       1310000      123  20 13.0560844    0.422187236\n352    238002       1950304       96   3  1.6676238    0.218869150\n353    238008       2855000      143   3  1.6274473    0.179036418\n354    238026       2062094      100   3  1.6142919    0.166233021\n355    239616       2170000      125   9  1.6045050    0.124987087\n356    239617       4125000      193   9  1.5985858    0.135546942\n357    239618       3015000      188   9  1.5539521    0.037580297\n358    576149       1070000      106  15  7.6615577    0.124555943\n359    576150       1089000      106  15  7.6665597    0.187751824\n360    419154       1400000       91  10  8.0009702    0.096836018\n361    554774       1540000      108  11  7.4392262    0.156405707\n362    554775       1590000      108  11  7.4820813    0.117251987\n363    659763       1490000      131   4 11.8334159    0.295318614\n364    659764       1630000      134   4 11.7561324    0.246780908\n365    659765       1900000      215   4 11.7802935    0.256751448\n366     99196       2388000      218  10  3.3713619    0.296515042\n367     99197       1610000      129  10  3.3236955    0.248930221\n368     99208       1940000      169  10  3.3460795    0.272553846\n369     99209       1236000      108  10  3.3258526    0.253469799\n370    669619        983000      115  14 13.0676827    0.112752854\n371    669620       1065000      138  14 13.0676827    0.112752854\n372    669621       1030000      153  14 13.1724029    0.046824158\n373    358828       1360000      107   7  5.3955539    0.320614846\n374    437980       2730000      144   5  5.3405912    0.256447556\n375    437981       3486000      182   5  5.3591886    0.272781460\n376    737874        894444       62   4 17.6959459    0.459520522\n377    737875        890000       99   4 17.6549312    0.493231479\n378    737876        818000       93   4 17.6742244    0.519310943\n379     98619       2000000      151   9  3.8027073    2.577448722\n380     98621       2500000      175   9  3.7999150    2.574733776\n381     98622       2520000      186   9  3.8029910    2.578601982\n382     98626       2475000      109   9  3.9224585    2.700451222\n383     98629       2620000      176   9  3.9104721    2.692452623\n384    574045       1290000      109  15  7.3089317    0.192673862\n385    574044       1300000      108  16  7.2555698    0.219813497\n386    439960       2200000      162  29  5.6520842    0.334460407\n387    439961       2140000      162  29  5.6949481    0.249822836\n388    419591       3900000      462  32  8.0071207    0.251045908\n389    419592       1988000      230  32  8.0918186    0.277005023\n390    419593       1910000      230  32  8.0857715    0.176827799\n391    419594       1780000      230  32  8.1608481    0.270462076\n392    249693      10500000      355  21  3.3999269    0.345741649\n393    249694      10000000      210  21  3.4386846    0.255468388\n394    329111       1272500      119   9  4.9015614    0.397522133\n395    329112       1590000      119   9  4.9388130    0.349861764\n396    307945       2450000      108   3  3.6496968    0.241909985\n397    579599       1200000      188  28  8.3757214    0.190147464\n398    309306       1870000      103   8  3.7548775    0.186728260\n399    309311       3900000      209   8  3.8198112    0.139225644\n400    269257       3400000      190  25  7.4636533    0.808222463\n401    269266       2200000      126  25  7.3572481    0.839137643\n402    118170        850000       89  30  6.7714936    0.198573148\n403    118173        863888       90  30  6.8179334    0.209132417\n404    118175        685000       68  30  6.9550075    0.145150136\n405    259703       5180000      188   2  3.7623536    0.122253685\n406    259704       5500000      183   2  3.8877268    0.089361397\n407    247965       1299000       90  17  4.0671226    0.250104151\n408    247966       1441875       79  17  3.9857734    0.319957798\n409    239194       2750000      240  31  2.5753710    0.223747161\n410    239228       2600000      231  31  2.5796063    0.234281918\n411    596710       1690000      159  31 11.1263463    0.101350845\n412    596716       1780000      181  31 11.2162053    0.114468621\n413    259801       2210000      152  11  4.0756970    0.484568518\n414    259816       2300000      130  11  4.1164020    0.449107853\n415    259817       1848500       89  11  4.1576279    0.448073888\n416    259818       2260000       99  11  4.1659576    0.413041015\n417    457266       2149500      183  21  8.9149440    0.352988966\n418    457268       1680000      144  21  9.0184754    0.328104741\n419    328689       1080000       62   3  4.8625557    0.296920239\n420    169568       1550000      122   9  2.6513689    0.136353559\n421    669600       2250000      128   1 12.8603986    0.218720915\n422    286889       2350000      143  10  6.4648708    0.102741077\n423    286890       3600000      224  10  6.4752194    0.121387049\n424    288534       1935000       96  10  6.3552954    0.215733864\n425    288535       1230000       72  10  6.3552954    0.215733864\n426    458554       2300000      232  21  8.6349316    0.126434016\n427    458555       1762500      258  21  8.6418528    0.132885988\n428    458556       1460000      111  21  8.6490443    0.139733551\n429    439422       1580000      122  11  5.7742401    0.184928847\n430    439423       1557500      122  11  5.8040379    0.220178767\n431    439445       1432500      136  11  5.7404883    0.125715975\n432    596733       1378000      138  20 11.4175667    0.172211818\n433     18965       6500000      250   2  0.3869164    0.244723392\n434    469336       1080000      125  16  9.8200274    0.276141980\n435    469337        958000       97  16  9.8664063    0.358615736\n436    469338       1195000      128  16  9.7974414    0.179650101\n437    588132       1620000      143  20 11.3880271    0.283569563\n438    268846       1950000      150  28  6.0878450    0.395574156\n439    268847       2050000      155  28  6.1014808    0.343328021\n440    268848       2658000      190  28  6.1234206    0.305658185\n441    239471       2965000      130   7  2.5228067    0.159418850\n442    239496       3180000      156   7  2.5228067    0.159418850\n443    409044       1549444       85   9  6.6270802    0.073884490\n444    579800       1234000      111  12  7.1701961    0.179570227\n445    579801       1270000      121  12  7.1417983    0.233989007\n446    529869       1360000      135  14 13.2344421    0.222723922\n447    529870        892500       90  14 13.1928344    0.222904028\n448    529871       1214000       90  14 13.1875063    0.163065401\n449    239432       3240000      222   5  2.3182866    0.152847539\n450    239434       3800000      167   5  2.4097584    0.105593134\n451    239435       3874000      130   5  2.4086509    0.102157507\n452    479241       1107500      131   9 10.7771053    0.468042222\n453    479243       1427500      270   9 10.8175705    0.512645612\n454    596288       1950000      134  15  9.6397498    0.173403918\n455    169277       2425000      165   8  2.5289800    0.194294949\n456    169278       2950000      197   8  2.5595181    0.221678796\n457    128041        985000      113  17  9.6155495    0.507171461\n458    128044       1050000      113  17  9.6319149    0.525476892\n459    307462       2750000      125   3  3.5636853    0.347951489\n460    307464       4050000      182   3  3.5553022    0.347562432\n461    437918       1620000       81   1  4.8116858    0.322326148\n462    437986       2501000      191   1  4.8131894    0.281250217\n463    276952       2458800      137  10  8.8294641    0.314110105\n464    276953       2230000      136  10  8.8274213    0.395279690\n465    276954       2550000      139  10  8.8601899    0.432062636\n466    229809       4840000      124   4  2.9485686    0.349413106\n467    357905       1560000      112   8  6.1286263    0.224772098\n468    357907       1465000      111   8  6.0777944    0.157518200\n469    589650       1315000       88   9  9.1160158    0.218088525\n470    589651       1980000      128   9  9.1183362    0.220741016\n471    589652       1850000      125   9  9.1034624    0.160618745\n472    589653       2095000      139   9  9.1025971    0.155843525\n473    589655       2125000      140   9  9.0823233    0.203174608\n474    529874       1267600      125  13 13.1996292    0.311525364\n475    529878       1350000      142  13 13.2024579    0.314271490\n476    529880       1498888      160  13 13.2020661    0.312889922\n477    466503       1535000      155  23 10.6283216    0.192438742\n478    466504       1309888      115  23 10.6605131    0.130303422\n479    466502       1440000      116  24 10.5589249    0.220768357\n480    466506       1367500      115  24 10.5854111    0.180563225\n481    248348       1802500       80   0  2.8360448    0.098600580\n482    278743       1900000       92   3  6.3615768    0.173893949\n483    278745       3900000      185   3  6.4584410    0.075763055\n484    278746       3100000       92   3  6.4200008    0.081954036\n485    229811       3455000      159  11  2.8243506    0.385013132\n486    229813       3219444      184  11  2.7850449    0.436836284\n487    229814       1794000      112  11  2.8062621    0.466244739\n488    738207       1175000      141  16 17.8257159    0.171979028\n489    738209       1250000      183  16 17.8621989    0.167075674\n490    738210       1438000      191  16 17.8621989    0.167075674\n491    738211       1042500      150  16 17.8621989    0.167075674\n492    239426       2290000      114  19  2.1231311    0.343162211\n493     98449       3850000      244   6  4.1967991    2.924141997\n494     98450       3550000      188   6  4.3618434    3.072945293\n495     98451       3227500      219   6  4.3469711    3.060703951\n496    229658       1935000       93   2  2.8269322    0.247115399\n497    229660       3800000      169   2  2.7621326    0.318866228\n498    417455       1160000      113   9  8.2674642    0.276258669\n499    417456       1145000      113   9  8.3109220    0.303672821\n500    417471       1205500      113   9  8.3515440    0.325373563\n501    417472       1490000      144   9  8.3815638    0.339827025\n502    269197       1758000       87  17  6.8840028    0.450804685\n503    269198       2185000      162  17  6.8101616    0.438358923\n504    269199       2030000      147  17  6.8738064    0.410179963\n505    269200       1345000      101  17  6.9458289    0.402005195\n506    269201       2200000      175  17  7.0209375    0.318962152\n507    269203       1730000      127  17  7.0802659    0.252268913\n508    269204       1950000      171  17  7.0385794    0.283176772\n509    806746       1210000      189  17 11.7521600    0.310033648\n510    806747        940000      119  17 11.7521600    0.310033648\n511    806748       1035000      135  17 11.7521600    0.310033648\n512    597593       1292500      131  19  9.2696603    0.460592869\n513    597594       1070000       86  19  9.2021326    0.430612662\n514    597595       1250000       89  19  9.1526777    0.364722931\n515    486843        990000      113  17 14.2359648    0.170556632\n516    486850        960000       93  17 14.1600156    0.235558319\n517    288408       1347500       84  18  6.4895018    0.106300627\n518     98529       4590000      259   5  4.5305826    3.229235223\n519     98530       3500000      193   5  4.6353721    3.318247008\n520     98532       2698000      176   5  4.6374646    3.320871591\n521     98535       1850000      113   5  4.5027981    3.197555921\n522    239403       2350000       83  20  2.5535269    0.136036159\n523     99309       2150000      179  29  3.0963445    0.270189554\n524     99310       2030000      184  29  3.1658431    0.274693698\n525     69415       1690000       77  16  0.5963565    0.135942674\n526    489929       1240000      140  17 12.1865711    0.148043309\n527    669587       1220000      126  13 12.7298521    0.125745845\n528    669626       1210000      117  13 12.6548969    0.203366879\n529    289850       2000000      183  35  7.2895575    0.703399822\n530    289851       1512500      167  35  7.3501367    0.764572856\n531    289852       1630000      159  35  7.4234542    0.824914565\n532    289853       1680000      159  35  7.4877920    0.908958064\n533    297724       4577500      262   5  5.3882297    0.271893382\n534    297726       3550000      211   5  5.3188567    0.328633519\n535    297727       2920000      172   5  5.4080313    0.331538925\n536    248479       1990000       96  26  4.3909061    0.203067333\n537    248480       2400000      124  26  4.3890796    0.257192430\n538    248469       1825000       95  27  4.2128713    0.239300258\n539    249099       1613700       92   6  3.1203086    0.414508142\n540    249103       2125000      139   6  3.1298689    0.373543746\n541    249105       1705000       99   6  3.1589894    0.411341209\n542    249107       2039888      122   6  3.1649197    0.413149247\n543    128803        869800       76  18 10.6676290    0.245116429\n544    128805        850000       75  18 10.7231767    0.201233875\n545    258709       3103000      154   1  4.4571465    0.220114382\n546    258710       2030000       93   1  4.4027690    0.325567926\n547    127466       1380000      117  10 11.4768773    0.060116531\n548    127468       1615000      151  10 11.5264934    0.089211295\n549    127470       1630000      158  10 11.5661562    0.129874807\n550    127472       1240000       95  10 11.5522231    0.154918036\n551    127474       1542500      116  10 11.5164266    0.166922587\n552    658074       1275000      137  11 13.5058688    0.254353811\n553    169586       1145000       94  22  2.5104655    0.162969986\n554    169588       1390000      115  22  2.4961410    0.129945106\n555    469296       1281500      224  30 11.1865151    0.196116885\n556    469297       1570000      211  30 11.3208454    0.102075721\n557    469298       1550000      224  30 11.1464375    0.096499067\n558    329425       1350000       84   2  4.9680495    0.274267111\n559    329426       1800000      112   2  4.9752955    0.276982700\n560    486060       1140000      149  11 11.4118509    0.132367533\n561    486061        984000      111  11 11.4548315    0.119932311\n562    466665        840000       88  21 11.2348308    0.153259619\n563    238359       6500000      319  29  2.1625957    0.387990299\n564    276693       3025000      202   3  8.9117927    0.136151279\n565    276697       2875000      196   3  8.9191770    0.232282448\n566    276698       1877500       94   3  9.0075161    0.160209868\n567    579981       1820000      146  31  9.0945119    0.219953974\n568    809694       1330000      115  22 11.6072638    0.251703690\n569    809688       1160000      115  23 11.6034437    0.225182082\n570    809689       1330000      153  23 11.5469179    0.280071189\n571    809690       1380000      153  23 11.5449232    0.284121574\n572    248730       5375000      295  25  3.1728326    0.269628342\n573    248741       3900000      210  28  3.0734077    0.173888667\n574    126793       1200000      117   1  9.7954570    0.489155824\n575    126794       1510000      121   1  9.8252090    0.510405769\n576    228490       1045000       51   7  2.2777904    0.124704000\n577    228491       1660000       93   7  2.2929626    0.121923808\n578    228492       1900000       55   7  2.1984004    0.092766401\n579    228493       1535000       84   7  2.2006894    0.094763583\n580    228495       1638000       84   7  2.1857271    0.138596519\n581    486069       1375000      189  13 14.2785423    0.101271400\n582    486828        863000       78  18 14.0540343    0.100998634\n583    458968       2325000      196  31  7.9927633    0.473735382\n584    458970       2125000      196  31  7.9894930    0.481494179\n585    507009       1075000      118  12 15.2012844    0.201058289\n586    507012        950000      120  12 15.1394603    0.264366726\n587    507013        815000      104  12 15.1267785    0.192056003\n588    669592       1127500       99  16 12.8374369    0.141844907\n589    669610       1200000      115  16 12.9375538    0.040246610\n590    529901       1265000       87   1 13.0511405    0.154780933\n591    237988       1311200       55   4  1.8010586    0.349016433\n592    237990       3605000      160   4  1.8746937    0.422962127\n593    648923       1190000      206   0 16.2646637    0.340216477\n594    648927       1180000       93   0 16.1446701    0.360561052\n595    759075       1030000      170  14 15.9988459    0.081528759\n596    759150        823000      110  14 15.9169382    0.114777444\n597    759151        800000      108  14 15.8844550    0.124695264\n598    759152       1320444      113  14 15.8603179    0.126913358\n599    759153        792500      110  14 15.9108896    0.075700245\n600    759155        808000      106  14 16.0126025    0.066749636\n601    455286        900000       67  30  9.6325937    0.278176937\n602    455287       1160000       83  30  9.6435778    0.281009209\n603    466402       1064000       93  30  9.8340697    0.078317755\n604    466403       1150000       99  30  9.8340697    0.078317755\n605    307953       1615000      115  11  3.5879461    0.237397119\n606    307990       1830000       91  11  3.5847799    0.235530455\n607    228459       2272500       96   8  1.9953702    0.071101326\n608    228462       2080000      128   8  1.9786408    0.057828768\n609    228463       1395000       85   8  0.8583542    0.215440352\n610    127712       1150000      115   7 11.3862791    0.160587354\n611    127713        990000       84   7 11.3862791    0.160587354\n612    127715       1356444      121   7 11.3862791    0.160587354\n613    127716       1400000      127   7 11.3862791    0.160587354\n614    127717       1215000      118   7 11.3862791    0.160587354\n615    127718       1192500      121   7 11.3862791    0.160587354\n616    587842       1280000      122   7 11.2346463    0.446837418\n617    587843       1295000      120   7 11.2392895    0.426073388\n618    587844       1295000      122   7 11.2361433    0.401289124\n619    587845       1145000       88   7 11.2533275    0.388562182\n620    587846       1204000      118   7 11.2220260    0.362742190\n621    587848       1255000      118   7 11.1258383    0.353675150\n622    509726       1010000      122  19 15.1236846    0.105919165\n623    509727       1100000      140  19 15.0182022    0.183400294\n624    509729       1273000      140  19 14.9547387    0.263221861\n625    509730       1025000      122  19 15.0119309    0.228492058\n626    509731       1150000      140  19 15.0557298    0.200991165\n627    557324       1785500      154  25  9.5198340    0.328827437\n628    557325       1540000      116  25  9.4267318    0.306201531\n629    589474       1388000       76   9  9.9617636    0.435102000\n630    589482       1005000       81   9 10.0459319    0.506144525\n631    589483       1425000      105   9 10.0095101    0.470316172\n632    589484       1530000      116   9  9.9811806    0.442064285\n633    589485       1500000      134   9  9.9480651    0.410899135\n634    589486       1406500      105   9  9.9247392    0.391553352\n635    589487       1100000       80   9  9.9006350    0.373319199\n636    128035        770000       81  22  9.7144017    0.422018607\n637    128036        780000       83  22  9.6116697    0.416802746\n638    128038        782500       79  22  9.6578070    0.369587547\n639    128040        840000       83  22  9.7144017    0.422018607\n640    768124        660000       57   2 18.7046222    0.143844606\n641    768127       1000000      107   2 18.7046222    0.143844606\n642    768128        660000       57   2 18.7046222    0.143844606\n643    768129       1210000      143   2 19.1804283    0.004927023\n644    768130        682500       57   2 18.7046222    0.143844606\n645    768131        888000       79   2 18.7046222    0.143844606\n646    768132        667500       57   2 18.7046222    0.143844606\n647    768134        818000       82   2 18.7046222    0.143844606\n648    768135        950000      100   2 18.7046222    0.143844606\n649    768136        675000       57   2 18.7046222    0.143844606\n650    575570       1160000      123  21  9.2742274    0.409861750\n651    575571       1350000      142  21  9.3736116    0.449121458\n652    575572       1388000      141  21  9.4253256    0.397672250\n653    598727       1089000       89  18 12.1328952    0.797538828\n654    598729       1295944      116  18 12.1995403    0.778695892\n655    249565       1700000       94  19  3.1043078    0.363095362\n656    249566       2202500      166  19  3.1316847    0.316658203\n657    437878       2950000      213   5  4.3918298    0.171561724\n658    437880       2590000      149   5  4.3522348    0.233124523\n659    437978       2070000      194   5  4.3431367    0.145037976\n660    757707       1000000      152  14 17.0897936    0.271361126\n661    757708        770000      104  14 17.1271018    0.291516337\n662    757711        968000      132  14 17.1573664    0.096140117\n663    598718        850000       84  20 12.0138012    0.649690855\n664    598719       1160000      118  20 12.0492379    0.627539571\n665    598720       1360000      139  20 12.1172868    0.669631267\n666    598723       1291500      125  20 12.1021926    0.742779176\n667    567752       1238000       81   1  9.6019133    0.136788792\n668    506911       1080000      107   2 15.3219542    0.310615266\n669    506912       1600000      152   2 15.3448703    0.343422744\n670    506914        760000       64   2 15.3507031    0.365690719\n671    506917        929000       97   2 15.2666233    0.309030389\n672    357902        655000       37   3  6.0942461    0.183594817\n673    357903       1330000      102   3  6.0888616    0.172757348\n674    259955       8300000      268  14  3.7193026    0.112074829\n675    259957       8450000      268  14  3.7193026    0.112074829\n676    589649       1620000       90   3  9.1316143    0.369126780\n677    589662       1545000      120   3  9.0956299    0.252202860\n678    589663       3000000      170   3  9.0928094    0.302644398\n679    589664       2742500      154   3  9.1750937    0.355940271\n680    329215       1825000      142   5  4.9653105    0.359194653\n681    737808        690000       58   0 17.8012434    0.350838749\n682    737811        870000       79   0 17.8768404    0.294209605\n683    127017       1038888       82   6 11.3118898    0.169496694\n684    127018       1150000       88   6 11.3390008    0.210543837\n685    127019       1705000      193   6 11.3135988    0.217180708\n686    127020       2400000      192   6 11.2799992    0.246647327\n687    127021       1670000      130   6 11.2246430    0.305067138\n688    127022       1125000       88   6 11.2234154    0.307054203\n689    588195       1380000      121  14 11.9753063    0.528506454\n690    588196       1350000      142  14 12.0519089    0.519903527\n691    588197       1388000      122  14 12.0380929    0.591979771\n692    798592       1230000      192  15 11.9538547    0.170673389\n693    798593       1317500      192  15 11.9734421    0.237534600\n694    798594        945000      121  15 11.9772977    0.307522765\n695    798595       1100000      145  15 11.9142229    0.292015797\n696    799035        902500      121  15 11.8201932    0.288841010\n697    799036       1300000      192  15 11.8850261    0.221450144\n698    587968       1818000      171  16 11.2275158    0.162859908\n699    587970       1900000      274  16 11.1419907    0.132533966\n700    587971       1380000      129  16 11.0883731    0.148344631\n701    509732       1350000      163  20 15.2724650    0.055814412\n702    509737       1250000      149  20 15.1832177    0.120824316\n703    399938       2530000      170   5  4.7227984    0.323447813\n704    399939       2528000      176   5  4.6874939    0.295135123\n705    399940       1630000      122   5  4.7046172    0.303068890\n706    509739        965000       87  16 15.4152392    0.236052296\n707    509740       1120000      170  16 15.4487755    0.216799172\n708    509741       1310000      170  16 15.4067530    0.268527155\n709    509742        900000      106  16 15.3110443    0.236779204\n710     88660       1350000       58   2  1.8830050    0.219381907\n711    416826       1050000      109  20  7.9450079    0.191931016\n712    416827        980000       93  20  7.8788319    0.211057430\n713    416828        900000       79  20  7.9204129    0.223231714\n714    438791       1220000      100  11  5.8001387    0.252874868\n715    438793       1200000      100  11  5.8361220    0.290019550\n716    438794       1700000      130  11  5.7228029    0.195685796\n717    438795       1850000      144  11  5.7262295    0.178779474\n718    129195       1019444      115  14 11.4269525    0.224280249\n719    129196       1449000      162  14 11.4857937    0.273826167\n720    129198       1025000      115  14 11.5220763    0.318284013\n721    129199       1625000      194  14 11.4452214    0.285750707\n722    129200       1225000      135  14 11.3765198    0.217225004\n723    129202       1300000      146  14 11.2321346    0.179448545\n724    129205       1648000      194  14 11.2696994    0.126800749\n725    669559       1495000      108  19 12.8562641    0.445735603\n726    669561       1300000      118  19 12.8394542    0.521529194\n727    669562       1284000       91  19 12.8651289    0.439745668\n728    509059       1190000      177  30 16.1204172    0.557274192\n729    509061        930000      142  30 16.0860236    0.555624503\n730    509067       1180000      174  30 16.3336152    0.767648140\n731    509069       1490000      174  30 16.2904665    0.711884737\n732    507079        992500      132  15 15.5059186    0.293659598\n733    507080        860000      119  15 15.4579637    0.411746268\n734    507082        940000      119  15 15.3445430    0.472657835\n735    507083        950000      134  15 15.3652820    0.412345494\n736    649820       1730000      122  10 16.3236863    0.360470469\n737    649821       1204000      115  10 16.2903377    0.341015106\n738    649822       1363000      146  10 16.3262549    0.291651831\n739    649823       1150000      115  10 16.3667800    0.315641613\n740    649824       1355000      116  10 16.3777519    0.325402507\n741    556119       1197500      121  16  7.5589195    0.263159912\n742    556121       1282500      121  16  7.5984414    0.330592603\n743    556122       1525000      143  16  7.5168307    0.251021967\n744    158748       1620000       94   2  3.9145228    0.319348499\n745    158749       2662500      172   2  3.9140439    0.318742206\n746    768434        795000      110  14 17.3912508    0.194844861\n747    768436        768000       93  14 17.3912508    0.194844861\n748    768438        910000      133  14 17.3912508    0.194844861\n749    768440        888888      110  14 17.3912508    0.194844861\n750    158746       1125000       72   6  4.0543912    0.209358642\n751    158747       2100000      300   6  4.0085686    0.254835699\n752    449305       1580000       91   1  5.8627801    0.383768535\n753    449306       2430000      138   1  5.8609830    0.379428354\n754    449307       3550000      229   1  5.9741686    0.302988266\n755    449308       2300000      138   1  5.9882084    0.288609050\n756    159012       1398888      107  14  3.7713033    0.152678736\n757    159013       1340000      108  14  3.8416315    0.222187101\n758    159015       1329000       81  14  3.9093155    0.289693261\n759    319773       1233800      138  15  5.2284121    0.409381340\n760    229955       2930000      202   8  3.1985259    0.179681950\n761    519939        880000       91   4 14.4110181    0.114911830\n762    519942        884000       91   4 14.4639360    0.064588334\n763    519943       1100000      129   4 14.4110181    0.114911830\n764    568426       2005000      145  11  7.7789196    0.209791033\n765    568429       1480000      124  11  7.6463303    0.177017986\n766    568430       1920000      145  11  7.6924357    0.169007994\n767    568431       1730000      122  11  7.7434278    0.200930133\n768    298189       1824000      132  16  6.4607964    0.291051719\n769    298190       1950000      151  16  6.5013114    0.253443496\n770    787078       1130000      103  18 11.3498209    0.542566103\n771    787080       1128000      116  18 11.2385568    0.577028361\n772    787082       1340000      143  18 11.3112734    0.613233521\n773    454852       3093000      239   1  8.6623504    0.151953918\n774    454855       1238000       77   1  8.6555557    0.157026646\n775    455939       2420000      207   1  8.7113186    0.269578496\n776    127997       1650000      345   2 10.9615613    0.183917132\n777    127999       1720000      121   2 10.9327833    0.170259131\n778    128001       2335000      345   2 10.8953357    0.154626465\n779    128016       1125000       85   2 10.8361113    0.160786103\n780    128018        734000       45   2 10.7833592    0.244287509\n781    439966       2100000      131   7  5.7243705    0.171720430\n782    439967       2060000      137   7  5.7864128    0.178961647\n783    439968       2140000      130   7  5.7628560    0.167555980\n784    439969       1879000      131   7  5.7155389    0.124540626\n785    439970       2141115      159   7  5.7679162    0.120700563\n786    598741       1339000      142  17 12.7390350    0.262196141\n787    598744       1231000      119  17 12.6459257    0.334861854\n788    598745        955000       91  17 12.7238205    0.254727919\n789    598747       1270000      120  17 12.7679555    0.256211946\n790    596229       1780000      149  13 12.6045564    0.442856176\n791    596230       1038888       88  13 12.6243517    0.420289634\n792    596231       1307500      117  13 12.7240895    0.432649705\n793    439893       1378000       83   1  5.9506711    0.122680196\n794    439894       2075000      140   1  5.9456658    0.101288487\n795    439897       1311000       55   1  6.0215198    0.122482289\n796    768108       1480000      106   1 14.8728770    0.313125317\n797    768112        910000       93   1 14.8728770    0.313125317\n798    768117        594500       55   1 14.8728770    0.313125317\n799    169480       1670000       85  20  2.5908651    0.164296036\n800    169483       2021440      196  20  2.6890321    0.121238315\n801    307467       1668000       89   4  3.9996356    0.252423382\n802    307468       2440000       54   4  4.0019350    0.256583051\n803    519959        940000      150  21 13.9460811    0.578592288\n804    519960       1035000      144  21 13.9579190    0.529380757\n805    519961        898400      140  21 13.9719098    0.496930629\n806    519962        900000      140  21 13.9580355    0.490885557\n807    519963        860000      140  21 14.0012909    0.462893824\n808    479236       1150000      128  14 10.9505841    0.521637949\n809    479237       1125000      120  14 11.0438227    0.606443949\n810    787066       1360000      106   8 11.1127146    0.307822905\n811    787067       1430000      100   8 11.0619756    0.301603659\n812    787083       1438000      116   8 11.0281293    0.319327582\n813    787084       1700000      134   8 10.9684232    0.209491253\n814     18980       3970000      152   5  0.6338633    0.579570477\n815    679517       1305000      179   2 12.6991012    0.513311862\n816    679518       1255000      107   2 12.6163611    0.603686442\n817    679520       1160000      107   2 12.6921173    0.528025430\n818    679521       1335000      271   2 12.6840162    0.549637139\n819    457398       1267500      215  16  9.0338388    0.335461909\n820    457400       1145000      116  16  9.0157932    0.407457655\n821    457401       1540000      188  16  8.9184252    0.404331392\n822    457402       1050000      105  16  8.9131901    0.402125277\n823    128797       1320000      176  29 10.7553603    0.056665211\n824    128799       1330000      176  29 10.7915287    0.131128931\n825    128793        970000      116  30 10.8448441    0.143391756\n826    128794       1020000      116  30 10.8702835    0.111675254\n827    128795        982500      116  30 10.8970210    0.098644290\n828    768425        968000      126  13 17.3445714    0.212462866\n829    768426        760000       93  13 17.3370655    0.206978794\n830    768427       1030000      130  13 17.3370655    0.206978794\n831    768428        880000      113  13 17.3370655    0.206978794\n832    768431        870000      112  13 17.3370655    0.206978794\n833    479250       1475000      126   3 10.6476177    0.380472558\n834    479251       1600000      117   3 10.7130529    0.418597040\n835    479253       1355000       90   3 10.7048319    0.400307762\n836    479254       1225000      113   3 10.6476177    0.380472558\n837    436606       1530000      126  11  2.7738667    1.288906016\n838    436607       1838888      145  11  2.7052518    1.264836200\n839    436608       1570000      114  11  2.6768327    1.217241634\n840    436931       1165000       84  11  2.7159627    1.173786684\n841    436932       1660000      126  11  2.7659216    1.219191954\n842    737934        862500       95  12 17.9054388    0.341782623\n843    737935        923000      110  12 17.8949667    0.327411291\n844    737936        937500      110  12 17.8855387    0.314150737\n845    737937       1277500      132  12 17.8767376    0.295043532\n846    737938       1050000      137  12 17.8942649    0.236409502\n847    737939        900000      109  12 17.8810741    0.231839561\n848    276305       1930000      122  12  8.8057301    0.241041424\n849    276306       2105000       89  12  8.7536931    0.285672949\n850    276308       1790000      127  12  8.6645747    0.378187305\n851    276309       1990000       92  12  8.6769184    0.403393604\n852    276310       1850000      149  12  8.7658780    0.309840757\n853    669556       1200888      112  15 13.0148573    0.574198488\n854    669557       1590000      155  15 12.9773657    0.527490607\n855    669558       1230000      116  15 12.9086500    0.603732142\n856    669617       1230000      112  15 12.9693592    0.554943523\n857    598734       1293000      113  17 12.3448970    0.658328134\n858    598738       1100000      107  17 12.4335279    0.566887339\n859    598739        990000       92  17 12.3677848    0.635085836\n860    534037        960000       81   0 10.0006749    0.421167423\n861    534038       1150000       66   0 10.0006749    0.421167423\n862    534041        940000       81   0 10.0006749    0.421167423\n863    609477       1105000      108  15 14.7837550    0.182149567\n864    609478        985000      109  15 14.8431018    0.122385195\n865    609479        985000      110  15 14.8179887    0.169623577\n866    609480        900000       83  15 14.8201389    0.166993717\n867    556745       1141344      109  30  7.8171965    0.185062858\n868    556748       1085000      109  30  7.7434867    0.268110398\n869    556743        750000       66  31  7.6699204    0.298511414\n870    556744       1230000      139  31  7.7868824    0.183696297\n871    556747       1608000      172  31  7.7061399    0.294610544\n872    519929       1180000      126  10 14.0381390    0.325487676\n873    519932       1300444      120  10 14.0045408    0.286872609\n874    519933       1040000       99  10 14.0500037    0.249076529\n875    519934       1307500      126  10 14.0822699    0.244822347\n876    519935       1225000      127  10 14.0387654    0.325454206\n877    659442        995000      116  12 13.9898800    0.175144901\n878    659443       1265000      126  12 13.9287828    0.135666829\n879    659445       1020000       87  12 13.9418757    0.125166660\n880    259281       1930000      121  30  5.9664866    0.648569549\n881    259282       1938000      121  30  5.9712811    0.582006607\n882    259283       2850000      181  30  6.0129626    0.484671142\n883    259294       3050000      217  30  5.9116899    0.608847874\n884    259295       2938000      216  30  5.8582223    0.619969095\n885    689862        950000      104   3 16.0277266    0.155320515\n886    689863       1200000      127   3 15.9881526    0.132380390\n887    689864       1100000      115   3 15.9644081    0.134023621\n888    689865       1124000      117   3 15.9623510    0.151570231\n889    689866        950000      104   3 15.9757633    0.190077667\n890    689867       1350000      184   3 15.9818254    0.220449174\n891    479245       1650000      149   4 10.5908449    0.411253571\n892    479246       1375000      137   4 10.5381593    0.325402309\n893    479248       1360000      120   4 10.5346716    0.294289521\n894    479249       1375000      119   4 10.5640650    0.295055656\n895    239197       3268000       98   0  2.5985951    0.249711097\n896    276692       2405000      209  34  8.9484030    0.071358422\n897    276694       2150000      162  34  8.8640379    0.115389576\n898    277107       2150000      160  34  8.7742185    0.174530006\n899    277113       2120000      162  34  8.8297852    0.103680348\n900    506941       1485000      159   6 14.9595558    0.384721307\n901    506942        908000       95   6 14.9579081    0.383205869\n902    506943       1085000      111   6 14.9613942    0.386936709\n903    506944       1130000      111   6 14.9606980    0.385844538\n904    506945       1160000      121   6 14.8914207    0.324744650\n905    506946       1110000      115   6 14.9519065    0.363372953\n906    506948       1130000      113   6 14.9496675    0.366567888\n907    506950       1189998      128   6 14.9505044    0.366185661\n908    506951       1150000      126   6 15.0367943    0.345204274\n909    789096       1033000      115  22 12.0003384    0.941264526\n910    789097       1230000      115  22 12.0396958    0.978637519\n911    789098       1505000      174  22 12.1108412    1.029614984\n912    789099       1065000       75  22 12.1604375    1.066407624\n913    789095        830000       75  23 11.9788876    0.896670836\n914    518180        870000       82   0 15.9429169    0.157989562\n915    518183        642888       54   0 15.8816064    0.095276971\n916    518187       1230000      103   0 15.9624153    0.189361292\n917    518188       1150000      103   0 15.9845854    0.204381081\n918    518189        660000       55   0 15.9021239    0.148351522\n919    417391        733888       75   1  8.6247975    0.283813790\n920    417392       1132500       95   1  8.6247975    0.283813790\n921    417396       1050000       78   1  8.6247975    0.283813790\n922    417398       1000000       75   1  8.6247975    0.283813790\n923    556131       1220000      107  12  7.4796301    0.133042079\n924    556132       1458500       97  12  7.4824062    0.112445296\n925    556133       1060000       80  12  7.4860491    0.118153529\n926    556135       1179000      108  12  7.5326244    0.061865497\n927    679048       2250000      198  26 12.7217397    0.351803359\n928    679052       1430000      141  26 12.7429869    0.368458406\n929    679053       1456000      129  26 12.6508438    0.464109625\n930    679035       1680000      154  27 12.7827726    0.435084267\n931    679038       2200000      199  30 12.8201708    0.349550606\n932    679042       1642000      146  30 12.8819650    0.262257179\n933    737918       1018500      129  10 17.8264841    0.352020321\n934    737919        819000       87  10 17.8048947    0.328502228\n935    737922        960000      103  10 17.7881610    0.430059561\n936    787130       1718600      141   3 10.8075397    0.233498027\n937    787131       1792500      172   3 10.9993340    0.345447108\n938    787133       1300000       59   3 11.1341626    0.284054071\n939    587975       1219000      107  17 11.3925035    0.412509194\n940    587976       1188888      107  17 11.4050583    0.351527701\n941    587977       1055000      103  17 11.3415135    0.283661228\n942    207852       1290000      117  10  3.3353495    0.265726831\n943    207853       1350000      119  10  3.2923276    0.246493845\n944    207855       1257500       92  10  3.3163531    0.274955553\n945    465559       1116000      112  13 11.4312403    0.209771621\n946    465560       1210000      126  13 11.4853734    0.279227965\n947    465558       1070000      113  14 11.4546847    0.267015914\n948    308342       2380000      134   7  3.4733504    0.325736361\n949    308345       3500000      186   7  3.4886174    0.355665693\n950    308364       2630000      105   7  3.5083101    0.343024114\n951    308366       2140000      124   7  3.4931506    0.354323179\n952    597159       1965000      221  29 10.8342694    0.430249718\n953    597158       1995000      174  30 10.6914895    0.301945243\n954    597157       1135000      108  32 10.8109000    0.458421031\n955    169658       1052500       73  15  1.3170229    0.243499518\n956    169659       1230000       79  16  1.3694034    0.251096978\n957    169661       1690000      113  16  1.3211717    0.193703210\n958    127647       1465000      118   6 11.5352079    0.256214985\n959    127649       1750000      147   6 11.5834256    0.329884968\n960    127651       1717100      149   6 11.4821063    0.227585547\n961    127720       2350000      250   6 11.5462845    0.296777654\n962    127721       1929400      120   6 11.4690591    0.241367859\n963    127722       1520000      118   6 11.5003368    0.240090372\n964    127723       1420000      114   6 11.5606361    0.247711114\n965    127725       1530000      152   6 11.5583605    0.299710717\n966    678272        730000       62   1 12.5618454    0.657640370\n967    678273       1358888      110   1 12.5898430    0.632910763\n968    678274       1320000      110   1 12.5852752    0.637010130\n969    678275       1445260      118   1 12.6491742    0.566481771\n970    678276        635000       43   1 12.5954731    0.628535812\n971    556112       1115000      118  20  7.5541797    0.202074502\n972    556113       1460000      141  20  7.5541797    0.202074502\n973    556114       1270000       85  20  7.5460532    0.202365039\n974    436879       3105000      224  22  3.9439373    0.279913932\n975    436882       2855000      199  23  3.8808436    0.331481972\n976    436887       3172500      199  23  3.8724643    0.336430953\n977    437932       1688800       86  17  5.0311189    0.072722693\n978    437934       2120000      147  17  5.0752282    0.161530441\n979    437936       1950000      153  17  4.9621552    0.211024356\n980    573908       2173480      108   0  4.3966709    0.221472694\n981    573909       2672235      163   0  7.3722562    0.156083745\n982    436918       2855000      256  18  2.7313578    1.113026878\n983    436919       3720000      244  18  2.5985876    1.002865674\n984    436920       4120000      284  18  2.6000449    0.944163682\n985    436921       3675000      206  18  2.6750254    0.976273435\n986    506999       1080000      124   9 15.2219261    0.496161808\n987    507000        875000       98   9 15.2544391    0.529594986\n988    507001        800000       77   9 15.2782619    0.531728030\n989    507002       1048000      119   9 15.3169658    0.537189607\n990    507004       1635000      297   9 15.3141752    0.591093552\n991    507007        880000       95   9 15.2362904    0.625957366\n992    509744       2000000      297   9 15.2060649    0.564955116\n993    598748       1468000      138  16 12.5125819    0.508053743\n994    598749       1940000      249  16 12.4998608    0.495908876\n995    598750       1315000      129  16 12.5345643    0.450270610\n996    598751       1390000      112  16 12.5376963    0.439636703\n997    598752        962500       92  16 12.6144309    0.371294517\n998    598753       1260000      124  16 12.5850486    0.396359986\n999    544894       2075000      164   4  9.3402683    0.214521122\n1000   544895       1724000      118   4  9.3160066    0.152554504\n1001   544896       1950000      173   4  9.3131025    0.213254688\n1002   544897       2062000      167   4  9.2752738    0.130083778\n1003   544915       1420000      117   4  9.4222283    0.257230391\n1004   544916       1100000       82   4  9.3770487    0.200151790\n1005   544917       1442500      117   4  9.3869699    0.234067288\n1006   544918       1120000       83   4  9.3483817    0.175464637\n1007   436922       1288888      106  11  2.6333727    1.212620640\n1008   436923       1465000      107  11  2.5851945    1.188972620\n1009   436924       1057500       77  12  2.4734699    1.147909402\n1010   436925       1680000      113  12  2.5224471    1.143484775\n1011   669566       1500000      126  13 12.7586445    0.280515448\n1012   669568       1490000      142  13 12.8353870    0.308058891\n1013   669613       1040000       92  13 12.8050718    0.384674279\n1014   669614       1250000      126  13 12.7794988    0.355078742\n1015   669615       1367500      126  13 12.7426804    0.352668035\n1016   669616       1252500       92  13 12.8525021    0.400045682\n1017   669565       1738444      163  16 12.6916600    0.351664536\n1018   389754        920000       91  17  5.6688809    0.102333978\n1019   389756       1400000      142  17  5.6595445    0.122762860\n1020   389757       1040000      142  17  5.5885113    0.101711245\n1021   389758        930000       91  17  5.5402178    0.102385738\n1022   507025        860000       90  14 14.9931857    0.289718389\n1023   126827       1255000       99   7  9.4615624    0.746045734\n1024   126831       1760000      137   7  9.3286064    0.675455021\n1025   126833       1680000      135   7  9.3277654    0.675641539\n1026   126839       1745000      122   7  9.3183168    0.663207879\n1027   127335       1840000      121   7  9.3119569    0.801534487\n1028   127446       1880000      211   7  9.4219351    0.826733280\n1029   127451       2170900      169   7  9.3542949    0.724607662\n1030   589624       1600000      162   5  8.9856680    0.114318986\n1031   589640       1850000      178   5  8.9642668    0.179033739\n1032   589643       1430000      115   5  8.9730157    0.292409320\n1033   589644       1360000       82   5  9.0210596    0.305794611\n1034   589645       1600000      162   5  9.0284523    0.276805713\n1035   589646       1720000      183   5  9.0296656    0.252984733\n1036   589657       1045000       54   5  9.0181305    0.225904200\n1037   589658       1430000      140   5  9.0250955    0.182170443\n1038   589660       1710000      156   5  9.0240799    0.120034206\n1039   529771        970000      115  15 11.2075858    0.228746466\n1040   529772        988000      114  15 11.1216469    0.095645669\n1041   529773       1108000      139  15 11.0846820    0.075407630\n1042   529774        828000       92  15 11.0001002    0.080365172\n1043   529776        815000       92  15 10.9635493    0.153266521\n1044   529777        970000      114  15 11.0182710    0.174534891\n1045   529778       1038000      114  15 11.1005544    0.200357993\n1046   439942       2620000      153   7  5.8940276    0.300502598\n1047   439943       2065000      113   7  6.0034083    0.294455823\n1048   439944       2610084      153   7  6.0549797    0.256712959\n1049   439945       2280000      131   7  6.0446741    0.240572050\n1050   439946       1679000       52   7  5.9710101    0.223392381\n1051   439947       2640000      141   7  5.8749929    0.245259420\n1052   689527        830000      108  15 17.1035734    0.234257834\n1053   689528        849000      108  15 17.1012903    0.235430828\n1054   689529        928000      117  15 17.1052605    0.231602896\n1055   521119        840000      158   0 12.5797400    0.144348962\n1056   521120        950000      158   0 12.6601623    0.182039694\n1057   521123        906500      156   0 12.7096512    0.128546296\n1058   521128        890000      154   0 12.7033111    0.210304007\n1059   521129        875000      155   0 12.6285034    0.251889938\n1060   521131        920500      157   0 12.5858775    0.229656744\n1061   521134        872500      160   0 12.5284370    0.148190552\n1062   439957       1900000      135   5  5.5116475    0.180865829\n1063   439958       1797500      124   5  5.6111380    0.225396647\n1064   439972       2260000      121   5  5.5631040    0.229751827\n1065   439974       2130000      123   5  5.5960268    0.228563040\n1066   659920        955000      103  10 12.7286135    0.208316073\n1067   659921        920000       84  10 12.8542012    0.198395654\n1068   567741       1207500      113  10 10.1741593    0.352209208\n1069   567743       1450000      132  10 10.1650733    0.328545294\n1070   567744       1230000      114  10 10.1643995    0.290672011\n1071   567745       1168000      114  10 10.1822325    0.274338555\n1072   567746       1405000      132  10 10.2489801    0.289700848\n1073   567747       1225000      117  10 10.2759875    0.316249792\n1074   567748       1212544      114  10 10.2807918    0.342778625\n1075   567749       1290000      114  10 10.2857230    0.374581391\n1076   319581       1388444      105   4  5.9613315    0.216357317\n1077   319582       1635000      168   4  6.0005309    0.218026618\n1078   319583       1590000      119   4  6.0296923    0.172587856\n1079   679668       1380000      154  23 13.7755690    0.148530089\n1080   679670       1395000      154  23 13.7729728    0.148179251\n1081   679672       1202500      114  23 13.6730888    0.069145002\n1082   679674       1400000      154  23 13.6146255    0.060828591\n1083   679656       1300000      114  25 13.5477402    0.092810335\n1084   679662       1219000      114  25 13.6179860    0.095905772\n1085   679664       1520000      154  25 13.6688879    0.097528323\n1086   679666       1408000      154  25 13.7310940    0.121956588\n1087   528801        890000      105  11 13.9207191    0.175116486\n1088   528802       1065000      117  11 13.9426894    0.210931545\n1089   528803       1705000      139  11 13.9541438    0.242698855\n1090   528804        860000      117  11 13.9227103    0.227384654\n1091   528805        980000      119  11 13.9589121    0.240430279\n1092   528807       1057500      117  11 13.9786644    0.251015062\n1093   528808       1050000      117  11 14.0711725    0.259639673\n1094   528811       1100000      137  11 14.1111470    0.285499447\n1095   208741       3050000      299   8  3.0098560    0.048183000\n1096   208745       1395000       86   8  3.1142987    0.103798780\n1097   208747       1155000       63   8  3.0820674    0.068350131\n1098   208749       1125000       63   8  3.0098560    0.048183000\n1099   208766       1900000      122   8  3.0321244    0.097505825\n1100   238307       2085444       82  17  1.6493584    0.144549126\n1101   238309       1952900      123  17  1.7485547    0.218860791\n1102   769133        700000       55   2 14.2377562    0.659267926\n1103   769134        965000      104   2 14.2797012    0.602737484\n1104   769135        908000       86   2 14.2286048    0.610833862\n1105   769136       1119000      121   2 14.2286048    0.610833862\n1106   769137       1320000      142   2 14.2305743    0.556636461\n1107   769138        940000       93   2 14.2518381    0.508957252\n1108   769139       1320000      121   2 14.2510747    0.488977220\n1109   768446       1019000      161  21 14.4501182    0.150571711\n1110   768447        840000       89  21 14.4659851    0.122357990\n1111   768448        767500       89  21 14.4395752    0.158487074\n1112   768449        807000       91  21 14.3922917    0.205263174\n1113   768451        787500      109  21 14.3654974    0.256051771\n1114   768452        775000       81  21 14.4213744    0.213695281\n1115   399941       1350000       45   2  4.8010590    0.375680050\n1116   399942       1660000      105   2  4.8135611    0.389968112\n1117   399944       1760000      106   2  4.8058103    0.363642795\n1118   399945       1955000      146   2  4.8951863    0.454080630\n1119   399946       1940000      106   2  4.8863887    0.430119059\n1120   399948       1328000       45   2  4.9792584    0.367380487\n1121   573973       1855000      113   4  8.3846573    0.184167149\n1122   573975       1694444      147   4  8.4578863    0.140232179\n1123   128045       1206000      107  10  9.6804309    0.642914667\n1124   128046       1230000      108  10  9.7158436    0.637502733\n1125   128047       1260000      108  10  9.6983791    0.627480289\n1126   128048       1045000      107  10  9.7483975    0.601556013\n1127   128049       1015000       86  10  9.7494959    0.553712141\n1128   138678       1382500      112  15  7.7960908    0.559809591\n1129   138679       1382000       90  15  7.8949446    0.489898190\n1130   138680       1370000       90  15  7.8128077    0.567348700\n1131   597625       2650000      297  37  9.1136433    0.172546324\n1132   597627       1655000      167  37  8.9424551    0.028525094\n1133   597628       1665000      153  37  8.9408700    0.068042652\n1134   597630       2100000      194  37  9.0505402    0.133295186\n1135   544985       1055000       97   6 11.7866617    0.198344372\n1136   544986       1010700       99   6 11.7667996    0.213419746\n1137   544987       1142500      113   6 11.7391243    0.240313539\n1138   544988       1063000      127   6 11.7133440    0.266315258\n1139   544989       1128000      143   6 11.6980091    0.280591831\n1140   544990        940000       98   6 11.6813387    0.297575023\n1141   544992       1138000      106   6 11.7155455    0.272272232\n1142   544993       1145000      100   6 11.7232747    0.272266285\n1143   648305       1270000       47   1 16.0739313    0.296621662\n1144   648322       1892010      225   1 16.0378489    0.341461916\n1145   648324       1185000       99   1 16.0378489    0.341461916\n1146   649811        982888      100  17 16.2851033    0.064199703\n1147   649812       1095000      141  17 16.3074543    0.089115438\n1148   649813       1027500      116  18 16.3456443    0.131543007\n1149   649814       1040500      118  18 16.3878361    0.158931819\n1150   649816       1030584      116  18 16.4169627    0.107479866\n1151   518190       2000000      233   2 14.1298515    0.337025154\n1152   518192       1365000      110   2 14.1490274    0.317006873\n1153   518194       1100000      103   2 14.1874343    0.283003238\n1154   518211        800000       69   2 14.2025007    0.261751203\n1155   518212       1270000      114   2 14.2112584    0.258257584\n1156   518213        840000       74   2 14.1904267    0.281584627\n1157   659801        851500      108  16 12.9765315    0.201450657\n1158   659802        900000       95  16 13.0117986    0.178544692\n1159   659804        869444       95  16 13.0886316    0.218022343\n1160   528715       1050000       87   3 13.2977616    0.243060562\n1161   528716       1350000      127   3 13.2986363    0.208428369\n1162   528718       1380000      122   3 13.2890712    0.169657255\n1163   528719       1320000      122   3 13.2599868    0.171883799\n1164   528720       1580000      145   3 13.2363428    0.187128757\n1165   528721       1560000      170   3 13.2194280    0.224706723\n1166   529881       1060000       87   3 13.3078526    0.268521660\n1167   529883       1072500       93   3 13.2311053    0.316591365\n1168   529884        834444       86   3 13.2050685    0.337956195\n1169   529885       1060000       87   3 13.2211086    0.294877181\n1170   528779       1080000      115  10 14.1909497    0.177457385\n1171   528780       1067500       92  10 14.2771561    0.185607018\n1172   528781       1332500      190  10 14.2975472    0.202082929\n1173   528783       1190000      135  10 14.3237032    0.260647450\n1174   528784       1218000      135  10 14.3304420    0.253929128\n1175   528785       1260000      135  10 14.3332408    0.231461116\n1176   528786       1095000      114  10 14.3251688    0.206394300\n1177   528787       1650000      211  10 14.3196916    0.183063114\n1178   528788       1235000      135  10 14.2665774    0.182513316\n1179   528789       1698000      214  10 14.2457436    0.197913589\n1180   528790        990000      114  10 14.2155965    0.194509586\n1181   528791       1120000      112  10 14.2068614    0.224304628\n1182   528792       1400000      190  10 14.1964144    0.250860993\n1183   528794       1108000      114  10 14.1874634    0.209641166\n1184   528795        980000      114  10 14.1870895    0.186910714\n1185   528796       1007500      114  10 14.1952891    0.157362911\n1186   600117       1100000      158   0 14.2606157    0.174333081\n1187   600118       1260000      181   0 14.2425261    0.119418683\n1188   600122       1145000      158   0 13.9602322    0.297178032\n1189   600124       1150000      155   0 13.8984201    0.417357286\n1190   659246       1000000      117  15 13.5613573    0.136304383\n1191   659247       1015000       80  15 13.5255880    0.107240400\n1192   659248       1328000      158  15 13.4776377    0.106013867\n1193   659245       1084000      119  16 13.5950124    0.193347615\n1194   768097        780000       70   1 17.3338046    0.205882972\n1195   768098        950000       89   1 17.3338046    0.205882972\n1196   768140        969444       80   1 17.3338046    0.205882972\n1197   768141        852000       80   1 17.3338046    0.205882972\n1198   127140       1605400      121   5 10.4605290    0.097896972\n1199   127146       1739000      121   5 10.4489877    0.080109961\n1200   127158       1481500      113   5 10.4624532    0.094230506\n1201   127159       1635000      132   5 10.4367850    0.079925362\n1202   127160       1612000      120   5 10.4022447    0.106333742\n1203   127161       2000000      141   5 10.3688677    0.140041437\n1204   127162       1935000      141   5 10.3225321    0.186355933\n1205   591301       1220000      123   0  9.4645126    0.548746356\n1206   591401       1239800      164   0  9.4263070    0.543984873\n1207   592001       1501500      163   0  9.4107022    0.571604067\n1208   597001       1500000      163   0  9.2406667    0.343822188\n1209   599001       1300000      163   0  9.2951837    0.409490796\n1210   787056        918000       88  18 11.4480386    0.340976249\n1211   787057        970000      107  18 11.3588648    0.359287566\n1212   787058        915000      109  18 11.3225598    0.458749241\n1213   787059       1025000      131  18 11.4027117    0.449726742\n1214   529890        907500       89  16 12.6471915    0.217033212\n1215   529891        860000      109  16 12.7037605    0.312530680\n1216   529892        920000      109  16 12.5640338    0.268001147\n1217   138684        990000       90  18  7.8197011    0.560066888\n1218   138685        995000      120  18  7.9659464    0.460621118\n1219   138686       1080000       90  18  7.9674332    0.512632614\n1220   138687       1350000      116  18  7.8197011    0.560066888\n1221   737783        545000       40   1 17.6666513    0.492111679\n1222   737784        628000       56   1 17.6558623    0.494675090\n1223   737786        600000       40   1 17.6342870    0.483780034\n1224   737788        547000       40   1 17.6123363    0.471109030\n1225   737793        720000       56   1 17.5578393    0.469580676\n1226   737794        599444       47   1 17.5578393    0.469580676\n1227   737795        540000       40   1 17.5578393    0.469580676\n1228   737796        615000       40   1 17.5578393    0.469580676\n1229   737797        555000       40   1 17.5578393    0.469580676\n1230   689048        920000      113  15 15.6987189    0.047350958\n1231   689049        888000      180  15 15.6858420    0.070145038\n1232   689050        780000       89  15 15.6455618    0.110082255\n1233   689051        860000      112  15 15.5600999    0.108637526\n1234   648163       1276238       92   0 15.5294551    0.246038030\n1235   528685       2550000      409   1 11.1394291    0.272492766\n1236   528686       1168000       73   1 11.1626287    0.233010245\n1237   528688        947500      333   1 11.1626287    0.233010245\n1238   528690        935000       86   1 11.1640300    0.234075442\n1239   529782       1328000      351   1 11.1394291    0.272492766\n1240   678946       1430000      141  15 13.8508772    0.260137351\n1241   678948       1330000      124  15 13.7480394    0.201318516\n1242   678949       1250000      124  15 13.7339542    0.198689979\n1243   678950       1069000      112  15 13.7683314    0.225462903\n1244   589627       1720000      124  18  9.2968402    0.190894874\n1245   589628       1869000      124  18  9.2281716    0.294596493\n1246   589629       3690000      251  18  9.2729323    0.344828245\n1247   589630       1880000      271  18  9.4072696    0.291955077\n1248   589631       1268888       95  18  9.3488928    0.201946418\n1249   689675       1035000      141  11 16.5569769    0.189622861\n1250   689676       1050000      113  11 16.5782109    0.132780790\n1251   689677       1250000      146  11 16.6092625    0.151496575\n1252   689680       1035000      114  11 16.6129148    0.195308027\n1253   689681       1270000      137  11 16.6101962    0.220171916\n1254   689683        950000      114  11 16.6044391    0.322999933\n1255   689684        935000      119  11 16.5902831    0.318116624\n1256   689685       1050000      115  11 16.4948218    0.219892881\n1257   689686       1035000      115  11 16.5552222    0.260193094\n1258   648316       1300000      129   3 16.2374129    0.294967373\n1259   648317        930000       81   3 16.2487190    0.223138192\n1260   648318       1357500      130   3 16.2517368    0.222630467\n1261   648320       1240000      112   3 16.1605534    0.264495365\n1262   534198       1430000      116  11 11.3744545    0.460464441\n1263   534199        950000      116  11 11.3449990    0.442014204\n1264   534201       1239440      167  11 11.3134200    0.414966734\n1265   534202       1130000      128  11 11.2716702    0.375870698\n1266   534203        950000      115  11 11.2223133    0.340457500\n1267   534204       1100000      116  11 11.2547958    0.341910077\n1268   534205        918000      116  11 11.2653402    0.329836868\n1269   534206        857500       98  11 11.2781839    0.325243163\n1270   534207        960000      116  11 11.3127762    0.361716883\n1271   534208        950000      116  11 11.3545015    0.404688499\n1272   534209        965000      115  11 11.3922708    0.445638026\n1273   478929       1030000      112  14 11.1669966    0.682524895\n1274   478930       1030000      114  14 11.1828762    0.646943362\n1275   478931        838000      102  14 11.1935563    0.611026603\n1276   478932       1200000      143  14 11.2022652    0.574830800\n1277   478927       1150000      114  15 11.0697644    0.558803440\n1278   478928       1160000      123  15 11.0691578    0.560218024\n1279   478936       1270000      123  15 11.0704879    0.559544881\n1280   148954       1515000      111  13  5.1936678    0.125990721\n1281   148955       1455000      110  13  5.1324941    0.173496546\n1282   148957       1450000      110  13  5.0921394    0.245231295\n1283   518205        905000       85   0 14.1565440    0.411136937\n1284   518206       1220000      123   0 14.1674056    0.393607319\n1285   518210       1044000       82   0 14.2873110    0.214755733\n1286   518216       1360000      143   0 14.1783116    0.315115714\n1287   518209       1245000      123   4 14.2637738    0.267640591\n1288   518215       1409000      143   4 14.2169959    0.275470642\n1289   248358       1680000      113  18  2.8213227    0.228813030\n1290   248362       2552000      158  18  2.6965868    0.231610885\n1291   248364       1630000      113  18  2.6492306    0.241775028\n1292   248368       1305000      126  18  2.7448700    0.232468882\n1293   437431       1422500      130  18  2.2148477    0.978589897\n1294   437433       2200000      183  18  2.1474509    1.038720090\n1295   437434       1719999      124  18  2.1371583    0.972375170\n1296   437436       2861667      208  18  2.2905843    0.859594365\n1297   575574       1215000      114  11  9.1257912    0.329575584\n1298   575575       1214000      130  11  9.1469944    0.306947984\n1299   575577       1195000      114  11  9.2129472    0.329437840\n1300   575578       1200000      114  11  9.2847709    0.393222955\n1301   689408       1380000      187  31 14.6873085    0.137848706\n1302   689426       1225000      180  31 14.6558244    0.101293403\n1303   689433       1320000      180  31 14.6636523    0.097639653\n1304   159957       1825000      140  18  5.2628184    0.385009065\n1305   159958       2105000      164  18  5.2968217    0.331345024\n1306   159959       1413888      115  18  5.2758249    0.174181965\n1307   159960       2220000      170  18  5.2554116    0.236624832\n1308   159961       2450000      193  18  5.2038804    0.308962669\n1309   545018       1091500       84   9  9.0521377    0.211875731\n1310   545020       1421500      132   9  9.0513618    0.193776840\n1311   545022       1120000       84   9  9.0860785    0.175951623\n1312   545023       1120000       84   9  9.1138787    0.152009227\n1313   545024       1295000      121   9  9.2348548    0.208403710\n1314   548189       1310000      114   9  9.0973399    0.229240806\n1315   548190       1400000      157   9  9.1199515    0.207914668\n1316   548191       1358000      114   9  9.1558003    0.199662874\n1317   548192       1500000      131   9  9.1810785    0.224189767\n1318   548193       1239000      114   9  9.2086485    0.216745987\n1319   649411       1112500      104   7 15.8591507    0.128375339\n1320   649412       1225000      103   8 15.8443383    0.263479265\n1321   649413       1010000       86   8 15.8495614    0.194713542\n1322   828779       1007500       72   0 14.4667549    0.287456277\n1323   828780       1050000       97   0 14.4670612    0.291696004\n1324   828781       1120000      112   0 14.4670612    0.291696004\n1325   828782       1230000       72   0 14.4670612    0.291696004\n1326   828783       1180000       97   0 14.4670612    0.291696004\n1327   828784        860000       85   0 14.5193959    0.246383110\n1328   828786       1250000      105   0 14.4670612    0.291696004\n1329   828787       1190000      112   0 14.4670612    0.291696004\n1330   828830        980000       85   0 14.4670612    0.291696004\n1331   828831       1180000       97   0 14.5295352    0.314896849\n1332   828833       1119000       97   0 14.4670612    0.291696004\n1333   469987       1600000      122  11 10.2189509    0.324996359\n1334   469988       2285000      145  11 10.1643725    0.380564342\n1335   469986       1570000      125  12 10.2596301    0.294693091\n1336   469990       1690000      181  12 10.2710052    0.345736140\n1337   469991       2000000      145  12 10.3221143    0.316580627\n1338   469992       1650000      115  12 10.3513317    0.277327132\n1339   469993       1519952      115  12 10.3638845    0.240445146\n1340   207227       1300000       53   6  3.0773464    0.155400147\n1341   207229       1292500      112   6  3.1108669    0.082428977\n1342   207223       1350000       80   7  2.9914796    0.143559173\n1343   207224       1350000      115   7  3.0048843    0.147150947\n1344   207225       1660000      112   7  3.0095148    0.159976756\n1345   596738       1115000       96  17 11.2722000    0.093548361\n1346   596739       1255000      127  17 11.3297650    0.175285341\n1347   596740       1330000      126  17 11.3758907    0.090069040\n1348   596741       1365000      130  17 11.2951998    0.139501192\n1349   596742       1820000       96  17 11.1454334    0.081886733\n1350   596743       1396500      132  17 11.2262155    0.106205236\n1351   596744       1350000      131  17 11.1440580    0.105663243\n1352   596746       1362500      130  17 11.2376466    0.175218571\n1353   596748       1365000      132  17 11.2598283    0.175373574\n1354   609774       1009750      100  21 14.6622245    0.325373097\n1355   609775       1260000      129  21 14.5935212    0.365379444\n1356   609776       1070700      114  21 14.6121504    0.404511636\n1357   609778       1090000      114  21 14.4685114    0.380208615\n1358   609781        995000      114  21 14.5999568    0.369563271\n1359   609782       1050000      114  21 14.8236807    0.192827354\n1360   609783        975000      114  21 14.7400912    0.257448111\n1361    98635       2060000      126  11  4.4271840    0.385683058\n1362    98637       1890000      119  11  4.3534494    0.423238010\n1363    98638       1825000      118  11  4.3251216    0.431504206\n1364    98639       3095590      432  11  4.3138138    0.382774323\n1365    98641       1870000      119  11  4.3157385    0.294411894\n1366    98642       1900000      119  11  4.3627367    0.332943162\n1367    98643       1380000       83  11  4.4025714    0.347850165\n1368    98644       1970000      123  11  4.4276406    0.337563280\n1369    98645       1950000      124  11  4.4612894    0.363037875\n1370    98650       1940000      124  11  4.4516158    0.418597200\n1371    98651       2065000      112  11  4.4910759    0.432560948\n1372    98652       1845000      114  11  4.5676511    0.463283829\n1373    98654       3759000      193  11  4.6485685    0.383380067\n1374    98655       2565000      152  11  4.6027005    0.364118999\n1375    98657       1870000      124  11  4.4868788    0.373555397\n1376   469974       1030000      110  18 10.3613185    0.145153869\n1377   469975        832500       90  18 10.2801438    0.215741519\n1378   469976       1012000       86  18 10.2801438    0.215741519\n1379   469970        958000      133  19 10.2115553    0.286728746\n1380   469971        885000       89  19 10.1797626    0.295518542\n1381   469972        940000      110  19 10.1573072    0.275732903\n1382   469973        905000       91  19 10.2801438    0.215741519\n1383   109684       3392440      350   2  5.3914452    0.330440286\n1384   109685       2743530      211   2  5.4192563    0.297289594\n1385   109686       2700000       99   2  5.4522638    0.259786747\n1386   109687       2362400      174   2  5.4408918    0.258012351\n1387   109688       2382100      184   2  5.4490851    0.243018870\n1388   109689       2629000      191   2  5.4929500    0.195635542\n1389   109690       1830000       95   2  5.5086289    0.175846470\n1390   109691       1380000       93   2  5.4799596    0.204331538\n1391   109693       1668000      191   2  5.4078407    0.275844259\n1392   109694       2228550      191   2  5.3230291    0.383800991\n1393   109695       1300000      100   2  5.3201547    0.363506530\n1394   109696       2124700      191   2  5.2784774    0.380065841\n1395   109697       1853000      191   2  5.2595244    0.403762249\n1396   109698       2571350      191   2  5.2713306    0.415189848\n1397   109699       1280000       93   2  5.2557316    0.434084099\n1398   109701       3123900      355   2  5.2967746    0.400718690\n1399   109702       2290890      174   2  5.3296290    0.364189224\n1400   109703       2359200      174   2  5.3170494    0.370380080\n1401   109704       2427336      174   2  5.3417102    0.342953977\n1402   109705       2444000      174   2  5.3521915    0.341780084\n1403   109707       1365000       97   2  5.4018447    0.290725368\n1404   469977       1132500      204  29 10.0752058    0.303918371\n1405   469978       1080000       87  29 10.0205827    0.235879272\n1406   469981        825000       87  29  9.8586107    0.232389136\n1407   469982        968000       87  29  9.8114890    0.271713380\n1408   469983       1095000       87  29  9.9119023    0.356607326\n1409   469984        990000       87  29 10.0196802    0.396404017\n1410   469985        870000       87  29 10.0874100    0.452467647\n1411    98411       9600000      371   4  4.9297803    0.311385147\n1412    98414       4500000      243   4  5.0169779    0.343846717\n1413    98415       2900000      120   4  5.0139679    0.325789712\n1414    98416       1500000       76   4  4.9478437    0.297987380\n1415    98417       4680000      193   4  4.9607446    0.300395434\n1416    98418       1919000      106   4  4.8695854    0.211397848\n1417    98419       2550000       91   4  4.8869749    0.215066091\n1418   534071       1445000      113   2  8.2298254    0.035436619\n1419   534073       2750000      259   2  8.2026777    0.019195247\n1420   534074       1185000      103   2  8.2026777    0.019195247\n1421   534076        780000       74   2  8.2170436    0.044037835\n1422   534077        758000       51   2  8.2170436    0.044037835\n1423   534080       1420000      113   2  8.2170436    0.044037835\n1424   534083       1340000      113   2  8.2254359    0.040204731\n1425   538752       1120000       92   2  8.2143495    0.047943806\n1426   538755       1400000      113   2  8.2254359    0.040204731\n1427   529942        835000       97  19 14.0185590    0.253623983\n1428   529943        820000       97  19 13.9452416    0.201740430\n1429   529944        750000       87  19 13.8331027    0.110712315\n1430   529945        975000      128  19 13.8622969    0.126078624\n1431   529946        780000       92  19 13.8412872    0.123516452\n1432   529947        750250       89  19 13.8231735    0.126323904\n1433   529948        765000       92  19 13.8149460    0.139036530\n1434   267951       3282200      196   1  6.3662384    0.582540213\n1435   267954       2595900      140   1  6.3302360    0.585121858\n1436   267955       1466100       73   1  6.5235490    0.543030275\n     PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN\n1          2.51981180            6.6187407         1.76542207       0.058355518\n2          1.93333382            7.5051087         0.54507614       0.615924123\n3          0.50213952            6.4638866         0.37789301       0.141203091\n4          1.99103159            4.9065124         1.68259969       0.382000759\n5          1.12125705            6.4106317         0.56478397       0.460973863\n6          0.78929802            5.0921600         0.78120472       0.099392846\n7          1.33037141            5.1829872         0.83674383       0.157603494\n8          0.81264108            6.1419978         0.78448028       0.301875629\n9          1.82197767            6.7823855         0.31466665       0.882689460\n10         1.04002595            6.9670298         0.33358877       0.369527825\n11         1.79698580            1.3816656         0.22730954       0.368038485\n12         0.39496088            2.2816127         0.37326290       0.138633609\n13         1.19019176            4.3745536         1.22732018       0.559265886\n14         0.71190405            5.9880787         0.66933149       0.144010028\n15         1.72354292            5.1440218         0.86634767       0.226605002\n16         1.80491284            4.6803130         1.57501380       0.396548477\n17         1.99344669            4.9585186         0.84929151       0.559271355\n18         0.26827657            7.9527551         1.82016872       0.242363061\n19         0.82908027            2.5510218         0.72583632       0.221424429\n20         2.13052550            4.8220470         1.30284861       0.749895122\n21         1.95394353            7.3851386         0.40836086       0.482082907\n22         0.95288649            2.6859057         0.91627145       1.325923645\n23         1.64264336            6.9075052         0.05181711       0.414885030\n24         2.01939754            3.1183706         0.69970004       0.315084506\n25         2.01626839            3.1671202         0.65277738       0.266045560\n26         1.95987673            5.1082827         1.94954955       0.319147383\n27         1.32140463            4.1309721         0.47590044       0.741043924\n28         1.16363127            6.8719611         3.60078172       0.044829032\n29         1.14490970            6.9046641         3.58631730       0.076114938\n30         1.15906307            6.9145162         3.56732081       0.065553579\n31         1.19443765            1.8020162         0.80904230       0.275416044\n32         1.19619727            1.7897642         0.78930922       0.259615716\n33         0.96109332            4.3181267         0.68723901       0.386683788\n34         1.45794987            7.2872746         0.76747578       0.412994715\n35         1.16944631            0.8284685         0.39497726       0.197858347\n36         1.45706816            6.6942271         0.36062906       0.412397429\n37         0.85122554            4.2072539         0.61802219       0.497543898\n38         0.69066838            2.2017752         0.61711818       0.296858618\n39         1.70805275            1.5204848         0.33994178       0.447786315\n40         0.47873791            0.7573199         0.66749689       0.667496803\n41         1.42174779            1.9985555         0.81501894       0.335627376\n42         1.71100465            5.0538974         0.75871148       0.253404578\n43         2.45500043            4.0385857         0.84987035       0.276240485\n44         1.53645809            7.3805933         2.96989075       0.594811726\n45         2.36609285            5.3090218         1.39842513       0.919880073\n46         2.55287107            5.3244126         1.60922928       0.935127566\n47         1.18376864            8.3481370         1.13149484       0.157091557\n48         1.07731528            3.0288928         0.79940820       0.865482704\n49         2.24263504            5.3427695         1.34908790       0.805853176\n50         1.06250518            5.7764596         1.01887101       0.561196190\n51         1.45693640            7.2793950         0.77864612       0.415547372\n52         1.36365164            1.4152511         0.49362877       0.063116947\n53         1.42590890            1.3595730         0.51168048       0.123935577\n54         1.17056214            6.8234084         3.63934494       0.046894537\n55         1.17234484            6.8168011         3.64409860       0.050351803\n56         1.16139676            4.9516384         0.68819196       0.118530653\n57         1.05886864            3.6486182         0.90113878       1.005776240\n58         1.02568102            3.6387617         0.88501838       1.042188314\n59         2.30890927            3.5868325         0.38893058       0.151252673\n60         1.73821213            7.0419080         0.11670532       0.387381860\n61         0.49929871            3.7461597         0.57189850       0.235744600\n62         1.74163805            1.4963268         0.28381821       0.384824243\n63         1.04723339            3.9776408         0.95376884       0.132684615\n64         1.02411128            2.8534133         0.98379835       1.199987687\n65         0.78113673            5.4142550         1.22920169       0.559795696\n66         1.88777870            5.9672486         1.89860615       0.432953259\n67         0.44498880            6.9412671         0.40200934       0.501894410\n68         1.75796794            3.1835231         0.93416296       0.468697977\n69         1.33968954            4.2846858         1.27093280       0.279339427\n70         0.61062202            5.5868235         1.36422327       0.635581854\n71         0.62095021            5.5896773         1.38038987       0.645313952\n72         0.60823225            5.6185550         1.40994146       0.631710111\n73         1.56788404            7.4163194         0.92439017       0.814403526\n74         1.64669870            7.4949386         0.88088181       0.844650466\n75         1.56242901            7.4235379         2.92685972       0.640813571\n76         1.33594325            4.4266596         1.32789579       0.405933361\n77         2.45412262            7.3331180         1.06327791       0.263439289\n78         1.54560320            5.4938511         1.46874927       0.250642236\n79         1.51398064            5.4875061         1.44880421       0.196220861\n80         1.53301083            5.4699216         1.45080246       0.284295938\n81         1.58017313            6.9273657         0.25763374       0.176582626\n82         1.81581876            6.8226761         0.32894723       0.825963201\n83         1.76346835            6.8134203         0.39715087       0.820164932\n84         1.81033284            6.9614583         0.48990979       0.667389612\n85         1.71402165            6.8016837         0.46441867       0.825559442\n86         1.50273941            4.4258226         0.27666396       0.471514909\n87         1.51759022            4.4430663         0.29277517       0.465857487\n88         0.31591098            4.2854412         0.74966220       0.438367217\n89         1.74143169            3.0510912         0.83423204       0.466966866\n90         1.74450191            3.0674442         0.82063787       0.455577197\n91         0.61866575            2.1380434         0.74073841       0.045950090\n92         1.10122146            2.4090895         1.03042438       0.375021721\n93         1.99404636            7.2903382         0.30770544       0.382894763\n94         1.04238846            1.8092128         0.78255560       0.087642044\n95         1.03520410            1.8225166         0.79734199       0.101713778\n96         1.04217852            4.7723080         3.55203641       0.383950722\n97         1.06094080            4.7525097         3.49948597       0.334337161\n98         0.85548536            2.4713594         0.77062221       0.144479669\n99         0.85548536            2.4713594         0.77062221       0.144479669\n100        0.94409360            2.4070315         0.86834291       0.130881086\n101        0.32444556            2.1663193         0.27541154       0.102319797\n102        0.45015462            3.7289599         0.55945025       0.173388178\n103        2.37249525            7.4905564         0.54045845       0.205352047\n104        0.43790017            4.6968004         1.15547214       0.352722330\n105        2.36533819            5.1847457         1.29064688       0.890322075\n106        0.73854348            6.4625043         1.11636778       0.325624945\n107        0.77948109            6.4755446         1.07110153       0.328920251\n108        2.31523032            4.9801262         1.17851662       0.951025106\n109        2.30109481            4.9699874         1.16327853       0.942357876\n110        0.69845498            3.4481654         0.54754934       0.553837232\n111        0.58380827            6.1213635         0.28994579       0.279718329\n112        0.88801153            4.0768550         0.91991343       0.440311661\n113        1.30643015            2.3690236         1.22997200       0.459299012\n114        0.82459409            5.0084041         0.79154369       0.192552464\n115        0.77690966            4.9674443         0.74143277       0.197763989\n116        0.80393229            4.9718786         0.76776711       0.220129255\n117        0.87575830            4.9986218         0.73698467       0.224496521\n118        2.41780118            7.5355152         0.86112976       0.060626129\n119        2.39330975            7.5343354         0.85726371       0.060550310\n120        2.36493599            7.5281809         0.85844223       0.076204679\n121        2.38127558            7.5659198         0.82421967       0.034723350\n122        2.41422791            7.5612596         0.83543255       0.035269681\n123        1.80826739            5.8861115         1.81735639       0.365149983\n124        1.79088830            5.8650704         1.79603794       0.332803091\n125        1.06270077            3.8218038         0.90741569       0.187504114\n126        1.96574254            7.3038702         0.39124919       0.538986024\n127        1.10261878            4.4836714         1.13495876       0.537908001\n128        1.43225398            4.5877229         0.97235521       0.683578295\n129        3.64538166            4.1420255         3.66730391       0.739053500\n130        3.67844018            4.1868345         3.66789975       0.791297063\n131        1.16701030            4.5164565         0.19496845       0.131720839\n132        0.86139694            4.2631353         0.82353190       0.684934900\n133        0.81975913            4.2517258         0.78209163       0.684742054\n134        0.68721229            2.3539023         0.66258485       0.300402324\n135        0.27674903            5.7994863         2.09617732       0.354900688\n136        0.25359402            5.7423669         2.09616621       0.293451621\n137        1.25168996            4.4237692         1.28308456       0.495906705\n138        1.23551013            4.3944760         1.25909954       0.504678680\n139        2.24093514            5.8820568         1.30390385       1.054480243\n140        0.95660084            3.4744112         1.45072489       0.283013264\n141        1.02869914            3.4444135         1.52088767       0.232194631\n142        1.33150846            6.9307064         0.12129014       0.245652125\n143        0.58530394            3.0085776         0.27585495       0.585128756\n144        1.95902899            5.4631968         1.30691550       0.577498920\n145        0.86079735            4.5553949         0.47616590       0.215858616\n146        0.52085585            6.8710060         0.57274736       0.480042860\n147        0.41635887            6.8061046         0.52430759       0.406708849\n148        0.37714002            6.7974923         0.49467257       0.399077597\n149        2.06301147            5.0659026         1.89061331       0.341837741\n150        0.55042121            4.9225506         0.55522930       0.800073849\n151        1.58757731            1.1598111         0.41958321       0.298396796\n152        1.58072809            1.1520609         0.42021545       0.306452232\n153        1.51541362            1.1514772         0.34761558       0.333473833\n154        1.40300276            2.1758118         0.93793928       0.578092620\n155        1.31554335            1.9103809         1.00218869       0.282242586\n156        1.88498469            4.1972537         0.52251637       0.253266353\n157        1.13369324            3.8602485         0.97516167       0.169600293\n158        1.21896099            5.0553231         1.21344613       0.085322037\n159        1.04861826            1.9917128         0.83064608       0.476888689\n160        0.80652693            4.2016771         1.07857812       0.217813016\n161        2.26272065            7.3403165         0.38632804       0.353424228\n162        1.79818434            7.6586161         0.71835003       0.744458229\n163        1.74799024            7.6142420         0.68781309       0.678794919\n164        1.05782523            5.0296322         1.30160797       0.731802941\n165        1.24548884            3.7133872         1.21427484       0.382908746\n166        1.23056794            5.0408550         1.23847536       0.106625305\n167        1.23910127            5.0274622         1.28546884       0.164254903\n168        1.17849602            5.0886990         1.23442761       0.161770070\n169        1.16949645            3.7649403         1.19696489       0.439666976\n170        1.12305900            3.7706812         1.16012993       0.471077921\n171        0.94666446            4.0463909         0.92657518       0.363434896\n172        0.99800259            3.8056021         0.85258450       0.207871621\n173        0.77601348            4.8654257         0.80849248       0.350563477\n174        1.20776403            6.3250399         0.65742910       0.478995893\n175        1.19020135            6.2940070         0.69054492       0.458898447\n176        1.33657279            6.4846807         0.50518491       0.620034089\n177        1.30485004            6.4816659         0.49044059       0.596200140\n178        1.27483661            6.4275326         0.55073280       0.557552856\n179        1.48904972            2.0653115         0.59896121       0.281115725\n180        1.28577378            4.5917144         0.24286405       0.204923588\n181        0.94902852            4.2921055         0.76829032       0.438150956\n182        0.94733686            4.3799725         0.80509707       0.313681492\n183        0.94693459            4.3805147         0.80499737       0.313713787\n184        1.62272293            3.1684687         1.10796026       0.412321905\n185        0.36578002            6.6216185         0.37530737       0.222344667\n186        0.27909238            6.6107285         0.31728091       0.224077785\n187        0.31764195            6.5526751         0.28880492       0.158665416\n188        2.01984505            4.7101456         1.28434066       0.713979803\n189        2.08221766            4.8041385         1.34554799       0.690751407\n190        1.03801698            3.8310363         0.62087453       0.863051082\n191        2.09719230            7.3310754         0.41393240       0.474621648\n192        2.00104968            7.4295934         0.48236848       0.550221494\n193        2.92760422            4.9880860         3.14435167       2.131305628\n194        3.02949480            5.0107704         3.24651440       2.229045366\n195        1.27635387            4.2983336         0.60821670       0.169991021\n196        0.84203925            6.5980965         1.04268996       0.430097278\n197        0.88655465            6.6136399         0.98484244       0.467634755\n198        0.93470619            6.6814049         0.95953647       0.467679296\n199        0.52101677            2.4863655         0.43753807       0.777538505\n200        1.56244041            3.7166402         2.66376676       0.623315260\n201        0.93906762            4.7361553         0.61723356       0.347306785\n202        1.11794929            3.2640298         2.63656128       0.703912060\n203        1.11794929            3.2640298         2.63656128       0.703912060\n204        0.89310151            4.7960146         0.66086250       0.400758790\n205        0.88089244            4.7914795         0.67291476       0.394305754\n206        1.79676892            4.4300917         0.65090716       0.353868997\n207        1.27059518            4.9906558         1.04612044       0.334775169\n208        1.24542589            4.9375717         1.09618571       0.366629548\n209        0.89878741            2.8455542         0.79785928       0.971056917\n210        1.03453743            6.9633933         0.27454998       0.466163984\n211        0.90740629            2.0645228         0.26106262       0.064568646\n212        0.61006872            3.7101147         0.56709929       0.089745448\n213        1.67036454            3.8363975         2.64244223       0.487038721\n214        2.07044910            5.1538110         1.30374861       0.927308902\n215        2.08401404            5.1095575         1.33690534       0.952898098\n216        2.14234430            5.0630619         1.38868055       0.894623954\n217        0.92590836            0.7268986         0.32182275       0.243496988\n218        0.93102461            0.7259005         0.31925751       0.240221313\n219        0.34626610            2.5838909         0.32109330       0.195070778\n220        0.25318153            2.6424864         0.23969603       0.279649681\n221        0.20479248            2.6275043         0.24827873       0.215054582\n222        0.35234068            4.4265169         0.37604209       0.152199887\n223        0.35854803            4.4324072         0.38017993       0.146447996\n224        0.69999748            2.6111722         0.61226754       0.946468845\n225        0.48007917            0.9346001         0.57993162       0.345901950\n226        0.47330239            0.9312232         0.57076621       0.336415670\n227        0.93637755            6.8979228         0.42999419       0.592697130\n228        0.99515974            6.8176633         0.44508421       0.516528942\n229        1.15315351            2.5915521         1.33473949       0.478107818\n230        1.10888623            2.5486790         1.29088674       0.453626531\n231        1.09426101            2.5312060         1.27515111       0.467020612\n232        0.72901250            8.3884624         2.05096220       0.319466302\n233        0.18098707            2.2825573         0.28869523       0.279712663\n234        1.91397705            4.5795005         0.89031169       0.941076135\n235        1.93752295            4.6157097         0.88888359       0.921050699\n236        0.70039668            4.7846604         0.65089115       0.157471764\n237        1.58255445            4.3538480         0.57388719       0.757701324\n238        2.52659586            7.3309396         1.08257137       0.285050084\n239        2.49771731            7.3684355         1.03974988       0.240864050\n240        0.82702731            5.5226322         0.88970930       0.424043968\n241        0.87859467            5.5355865         0.95680945       0.398656100\n242        0.76545950            5.4631677         0.85477523       0.395167704\n243        1.58834710            1.5952515         0.32608753       0.320993864\n244        1.51979872            1.6342485         0.35708902       0.289670877\n245        0.88354338            3.5236715         0.66664210       0.375344219\n246        0.93369799            3.4838923         0.69912471       0.449894542\n247        1.90605932            4.2423717         0.50045478       0.203046132\n248        1.87304063            4.2502740         0.53068964       0.238839882\n249        0.50209155            4.3702644         0.71950808       0.672446894\n250        0.46523509            4.3726294         0.68157022       0.637039484\n251        0.56533591            4.3183516         0.78102648       0.737281345\n252        1.40112327            6.8982716         0.18060741       0.223894108\n253        1.38511136            6.8000966         0.24993795       0.333482503\n254        1.39464341            6.7441281         0.30266653       0.387807456\n255        0.35150556            3.6749935         0.38971879       0.205619963\n256        0.33168443            3.6569527         0.38026518       0.189948338\n257        2.07942927            6.1599928         1.24068191       1.122992012\n258        2.10934551            6.1398112         1.22666476       1.126661136\n259        1.89209890            4.4165187         1.05262047       0.746044468\n260        0.94731111            1.0146727         0.51194460       0.459802199\n261        0.94612208            1.0062971         0.51632522       0.466748115\n262        0.82946965            5.0218980         3.50175135       0.253619159\n263        2.16543607            5.2585098         1.22383540       0.702264852\n264        2.12270593            5.2131962         1.15397327       0.646601782\n265        2.11500728            5.1522859         1.08974314       0.626334956\n266        2.26071503            6.1839623         1.08872075       1.023649544\n267        1.51396669            4.4524032         1.45120485       0.403603664\n268        1.54921684            4.4492465         1.47479116       0.440140440\n269        1.99597218            6.1857265         1.29878402       1.095304436\n270        1.98612635            6.3712734         1.25603563       1.206138085\n271        1.96047604            6.2753940         1.30020959       1.146559882\n272        3.94915721            4.3738927         4.02236235       0.924431073\n273        0.46643421            4.8224602         0.44737030       0.676119708\n274        1.13699584            3.0208624         0.94319348       0.986428500\n275        1.12597385            2.8941094         1.01840571       1.378501416\n276        0.40585041            5.1609164         0.18145094       0.165631919\n277        2.12566591            5.6377581         1.88479820       1.020768477\n278        0.32290217            5.7853887         1.25019262       0.347589220\n279        1.20108568            3.2045543         0.97803566       0.919819712\n280        2.19813897            3.8048137         0.90017829       0.374881757\n281        2.20354946            3.8287474         0.93598288       0.401021623\n282        0.91545289            2.3959635         0.85462469       0.368760551\n283        0.56756364            2.7823676         0.37077178       0.212663137\n284        0.54918072            2.8046677         0.37668273       0.207747267\n285        1.21301084            3.7902726         0.86858400       0.900914521\n286        1.40626572            8.4009735         1.11780910       0.211524765\n287        1.44729302            8.4821265         1.19519081       0.154562565\n288        1.57557505            6.8882171         0.14800988       0.266728171\n289        1.52726013            6.8170519         0.15597851       0.313872400\n290        1.49345744            6.7926870         0.19330230       0.281506773\n291        1.46072878            6.7695274         0.23136527       0.250545857\n292        1.49560531            6.8063192         0.20318852       0.247584370\n293        1.06812542            3.0804805         1.18444454       1.129289019\n294        1.41232625            8.5728448         1.26475752       0.375647232\n295        1.08962126            2.9373495         1.36213105       0.157620535\n296        1.27957750            5.1982138         1.18322315       0.475876532\n297        1.30700774            5.2138615         1.20626931       0.477373749\n298        1.22458675            5.1665062         1.13767105       0.480583633\n299        0.75301871            6.9635448         0.58944762       0.657523917\n300        0.77604553            5.1083270         0.90387585       0.165880444\n301        0.76273335            3.4764804         1.16270138       0.375396211\n302        0.97898498            8.1531642         0.98145215       0.128471359\n303        1.53451259            4.6625365         1.54980608       0.213457448\n304        1.56564801            4.6815962         1.57602354       0.176992400\n305        1.58669315            4.7049111         1.59862831       0.160658034\n306        1.79681177            7.5320583         1.26969436       0.959099061\n307        1.79681177            7.5320583         1.26969436       0.959099061\n308        0.99012933            3.5448597         0.97519040       1.041439961\n309        0.58703056            6.8743975         0.23386053       0.383910690\n310        0.75635776            2.4059866         0.71077873       0.460466854\n311        0.73592072            2.3615275         0.68464863       0.423005637\n312        1.91680385            5.1591662         0.97710575       0.421016861\n313        1.92349529            5.1744658         0.99700203       0.430317166\n314        1.95017204            5.2162768         1.05532460       0.467105526\n315        1.08820244            3.1233040         1.20267181       1.131545380\n316        1.18283629            3.2576646         1.02493340       0.908449234\n317        0.34244361            3.3911812         0.22472680       0.313695199\n318        0.31752442            3.3090670         0.14105242       0.316663022\n319        0.86078825            4.1807652         0.77420177       0.580746252\n320        0.84503962            4.1785505         0.72631563       0.559265391\n321        0.85603988            4.1634111         0.79961712       0.616326988\n322        1.06661751            4.5422877         1.20604601       0.560769523\n323        1.14809674            4.5129990         1.26954114       0.678807607\n324        2.06341158            3.3474038         0.61358725       0.142080547\n325        0.60226164            2.7984133         0.38783301       0.613861047\n326        0.36205540            5.6533393         1.72815692       0.212564705\n327        0.30943912            5.7176915         1.73314610       0.190800041\n328        0.30943912            5.7176915         1.73314610       0.190800041\n329        0.29649899            5.6546605         1.81060763       0.128624926\n330        2.30873408            5.0598166         1.49131255       0.632032728\n331        2.28382583            5.0215474         1.48630818       0.686163183\n332        2.21787858            5.1080888         1.41049472       0.731119680\n333        0.52968085            6.8618102         0.44591297       0.406697206\n334        1.13191999            3.1655307         0.83397871       0.811146440\n335        1.11641463            3.1972939         0.82182280       0.780813988\n336        0.89281723            2.5591018         0.83973714       1.281101742\n337        0.56350026            5.0662475         0.72051391       0.583978805\n338        0.61925116            5.0575717         0.77270990       0.636669237\n339        0.22366519            5.8552491         1.14143718       0.242253408\n340        2.60348187            5.1318309         1.87164581       0.519053842\n341        2.73807780            5.0575066         2.02298773       0.511420711\n342        0.47618841            3.5150342         1.48997755       0.832181651\n343        2.36158885            7.2589518         1.12206236       0.342639923\n344        0.61596255            4.9740946         0.59877702       0.758375783\n345        0.61130301            4.9668522         0.59151359       0.745581961\n346        0.79384481            5.5979661         0.73429223       0.437377099\n347        0.85620651            5.6239287         0.82260342       0.485200234\n348        0.76627348            5.5745846         0.71262775       0.444359983\n349        0.77001064            5.5681454         0.73089256       0.463291041\n350        1.55385668            4.3035718         2.98009722       0.368981303\n351        1.48677686            4.3792248         3.00267917       0.366262715\n352        0.67542598            2.5344943         0.57935174       0.959365227\n353        0.65181865            2.4946660         0.55302321       0.950066654\n354        0.64527720            2.4818019         0.54555788       0.948332679\n355        0.89586941            2.5246219         0.86036468       1.316339269\n356        0.89976451            2.5198732         0.86770565       1.326162873\n357        0.79649411            2.4645895         0.75580268       1.214603810\n358        0.40650760            6.8752019         0.50478917       0.482431039\n359        0.39961176            6.9295905         0.43604565       0.414037846\n360        1.07312433            2.3088349         1.04567731       0.096836018\n361        0.64049614            4.5058587         1.54575786       0.066250378\n362        0.71183012            4.5873202         1.48827084       0.114705541\n363        1.34109788            3.0309083         1.41972232       0.228357484\n364        1.41015897            3.0634902         1.34244176       0.252333719\n365        1.36209552            2.9989236         1.36762637       0.187878798\n366        0.43710202            3.4481018         0.31165096       0.316060995\n367        0.44178657            3.4020555         0.33479474       0.281587410\n368        0.49680941            3.4077446         0.37549413       0.339156399\n369        0.50534206            3.3863802         0.39019850       0.331773425\n370        1.07948203            3.2246130         2.68284631       0.666243661\n371        1.07948203            3.2246130         2.68284631       0.666243661\n372        1.06834957            3.2062900         2.74484738       0.661709402\n373        0.45569613            3.1067109         0.95810776       0.150260681\n374        1.33296567            2.1910589         1.09920991       0.706246908\n375        1.41198284            2.2674070         1.08824673       0.740093209\n376        1.10476834            0.8491350         1.86704356       0.516517648\n377        1.12697606            0.8933660         1.90478796       0.560499011\n378        1.07866938            0.9017379         1.87780724       0.573538077\n379        2.86048152            3.0363023         2.96825631       0.550958853\n380        2.85778288            3.0335597         2.96554149       0.552538474\n381        2.86170774            3.0360549         2.96941000       0.553469330\n382        2.98335962            3.1501754         3.09125758       0.516402907\n383        2.97573397            3.1362258         3.08325919       0.533849308\n384        0.23480055            6.1967155         1.15810848       0.402402580\n385        0.30236253            6.2017705         1.12946606       0.441940143\n386        1.42629525            2.1047188         0.78692205       0.423239883\n387        1.39216730            2.0301923         0.75145660       0.338095561\n388        0.96764391            2.0719674         0.89564640       0.400282167\n389        0.89862386            2.1463065         0.80531506       0.408382312\n390        0.88252073            2.1573676         0.85279498       0.318243556\n391        0.83121855            2.2152129         0.74245434       0.383059336\n392        1.35009792            4.2484313         1.26491698       0.241294057\n393        1.43580303            4.2954059         1.34224389       0.302881298\n394        0.77494621            4.9343257         0.70003463       0.455264574\n395        0.76880483            5.0035815         0.74900635       0.515375066\n396        1.10906635            4.5889807         0.30261388       0.110161940\n397        1.09032768            8.1348087         0.85019905       0.304371154\n398        1.17079189            4.6943270         0.38250175       0.186728260\n399        1.19367274            4.7592168         0.44492305       0.139225644\n400        1.03058506            6.0139324         0.94494368       0.540074132\n401        1.05602460            6.1275851         0.92633825       0.522548622\n402        1.96229886            7.1332723         0.49862945       0.496481234\n403        1.94697487            7.1943391         0.62488223       0.465938291\n404        2.05100319            7.3301897         0.66000837       0.335238283\n405        1.57281615            4.6995351         0.43465063       0.298710857\n406        1.62471076            4.8249541         0.54176044       0.285999025\n407        0.76864299            4.6731145         0.55439360       0.578102321\n408        0.70762844            4.5938473         0.50700741       0.554298262\n409        0.96625635            3.4275039         0.71481389       0.514958902\n410        0.85444166            3.4160847         0.60984571       0.418529338\n411        1.91497607            3.1057623         0.78116073       0.335538298\n412        1.81178413            2.9224386         0.93508825       0.515069878\n413        2.03358177            5.0039201         0.89688707       0.553845587\n414        2.03325983            5.0447518         0.92677797       0.533328373\n415        2.06075383            5.0844886         0.98623581       0.562237710\n416        2.01867836            5.0941857         0.96906347       0.519876858\n417        1.00026192            3.4482745         1.04878448       0.589995630\n418        0.95390832            3.5613100         0.97168076       0.637215660\n419        0.28555429            3.5456211         0.80159276       0.303251211\n420        0.14263607            3.2305607         0.18179034       0.365591247\n421        1.20636503            3.3459818         2.49744305       0.797798159\n422        1.84980116            7.3478543         0.37623428       0.323145282\n423        1.80243860            7.3549788         0.40629278       0.277009657\n424        1.96894866            7.2408099         0.25897646       0.325480479\n425        1.96894866            7.2408099         0.25897646       0.325480479\n426        0.92358892            3.6475737         1.08657245       0.257495651\n427        0.93037682            3.6531537         1.09349484       0.258462905\n428        0.93735751            3.6591336         1.10066440       0.259346428\n429        0.83200688            0.7057632         0.34278340       0.284132261\n430        0.86068234            0.7231834         0.34319894       0.276359775\n431        0.80266288            0.6667210         0.33332507       0.289300981\n432        1.61323449            2.8331581         1.09506746       0.512962435\n433        0.98837801            0.5606748         0.44974336       1.311046282\n434        0.68591931            4.5451070         0.55721003       0.515328470\n435        0.59377609            4.5499732         0.45761569       0.519294138\n436        0.78126988            4.5737488         0.66415137       0.418104523\n437        1.90851777            3.5439438         1.03198269       0.608877240\n438        1.18026915            6.8882561         0.20526806       0.405305335\n439        1.22209642            6.9058531         0.16037011       0.356929915\n440        1.25015467            6.9307235         0.12106348       0.313173218\n441        0.61684269            3.3226626         0.36612822       0.340718493\n442        0.61684269            3.3226626         0.36612822       0.340718493\n443        0.33170313            1.4724236         0.35001793       0.272930523\n444        0.69093249            6.4526948         0.83465333       0.780604088\n445        0.74410906            6.4717529         0.81824994       0.762095531\n446        0.35295867            7.4172361         1.20640500       0.231032103\n447        0.35505523            7.3826117         1.21271383       0.288285696\n448        0.41257022            7.3656224         1.14701561       0.266483201\n449        0.58368742            3.1037741         0.27442913       0.542422746\n450        0.56240309            3.1971003         0.27116148       0.449698951\n451        0.55886900            3.1952441         0.26707425       0.451119352\n452        0.44798098            4.8752529         0.51162580       0.380179103\n453        0.50667295            4.9091368         0.57209244       0.390182844\n454        1.62031860            4.4584599         0.78328202       0.489833472\n455        0.19448652            3.0507761         0.33525492       0.190167765\n456        0.20811541            3.0650685         0.39529587       0.133560038\n457        0.80981424            4.7354735         0.69951556       0.563377303\n458        0.81934681            4.7328351         0.70285226       0.571365845\n459        0.61875706            4.4922829         0.63625285       0.057320369\n460        0.64419014            4.4849329         0.64013132       0.034051403\n461        1.27794953            2.4071990         1.19855114       0.452794065\n462        1.20067833            2.3015202         1.11581553       0.347935038\n463        1.02854368            4.4929952         0.87570982       0.223134150\n464        1.03229255            4.5001463         0.83853824       0.204996591\n465        1.07005010            4.4710640         0.79102545       0.241433109\n466        1.03844344            3.8848967         0.53499620       0.773241036\n467        0.67392479            3.3993230         1.29242100       0.473986537\n468        0.58143830            3.3049107         1.35007759       0.457247589\n469        1.09183643            4.9064157         1.31162220       0.517047632\n470        1.09439328            4.9034095         1.30903384       0.519819455\n471        1.07295739            4.9519852         1.33420610       0.491148294\n472        1.07166869            4.9557345         1.33604770       0.489387487\n473        1.05782189            4.9357845         1.34563120       0.483456677\n474        0.30277777            7.4041771         1.29561100       0.342618435\n475        0.29960352            7.4072039         1.29859941       0.341651042\n476        0.30040733            7.4066150         1.29729109       0.340984727\n477        0.73235637            5.3845742         0.80731997       0.314906586\n478        0.69676288            5.3945241         0.78292690       0.363395054\n479        0.67395908            5.3066819         0.73915830       0.262035015\n480        0.64975876            5.3181252         0.72392184       0.289168144\n481        0.39506652            3.5816609         0.40792342       0.217355382\n482        0.47441639            6.9790553         0.39204140       0.501087629\n483        0.37897148            6.8783274         0.40100940       0.482205103\n484        0.36029762            6.9105581         0.32565213       0.408641701\n485        1.04619714            3.7550111         0.74333006       0.988745502\n486        0.98294821            3.7176866         0.74105550       0.978242883\n487        0.97964173            3.7399271         0.70635388       0.942197983\n488        0.77743835            1.0333758         1.72073867       0.770547494\n489        0.73886341            1.0221215         1.68578414       0.767307678\n490        0.73886341            1.0221215         1.68578414       0.767307678\n491        0.73886341            1.0221215         1.68578414       0.767307678\n492        0.59700711            2.8770878         0.32297189       0.597203831\n493        3.20074644            3.4486156         3.31359087       0.296565825\n494        3.34674097            3.6207340         3.46125921       0.318386866\n495        3.33493179            3.6043460         3.44920873       0.317208743\n496        1.14081202            3.7512090         0.84328439       0.968233610\n497        1.04919930            3.6897199         0.83774992       1.045184507\n498        0.72161443            2.3244797         0.65703048       0.346941282\n499        0.68191569            2.3667309         0.61636587       0.357110539\n500        0.64209610            2.4075645         0.58367679       0.362040334\n501        0.61089852            2.4385023         0.56328551       0.363441512\n502        1.18456124            6.9895169         0.90197390       0.502426410\n503        1.26809326            7.0766795         0.88054818       0.564086854\n504        1.21203998            7.0322660         0.93698658       0.498678918\n505        1.13216076            6.9516338         0.96585615       0.435860997\n506        1.05005166            6.8693099         1.00359854       0.376839988\n507        0.98457274            6.8026160         1.03526704       0.339350099\n508        1.01774902            6.8212244         0.98350506       0.391152454\n509        2.51174068            5.3706364         1.89759424       0.310033648\n510        2.51174068            5.3706364         1.89759424       0.310033648\n511        2.51174068            5.3706364         1.89759424       0.310033648\n512        0.70010032            4.0532975         0.54574344       0.652942497\n513        0.76687235            4.1221576         0.56799898       0.582921099\n514        0.81799701            4.1692278         0.63417945       0.540353543\n515        0.75202353            8.4536844         2.19480620       0.330344441\n516        0.67426606            8.3625188         2.06888178       0.247247493\n517        1.88096993            7.3762666         0.39074315       0.406181604\n518        3.50054457            3.7945798         3.61636937       0.427278744\n519        3.58651538            3.9092609         3.70374403       0.499823560\n520        3.58922887            3.9108811         3.70641964       0.502624486\n521        3.46832480            3.7704055         3.58440698       0.392049619\n522        0.51930690            3.3364131         0.28864140       0.307942132\n523        0.36175660            3.3468824         0.40519013       0.370281768\n524        0.27593849            3.3994290         0.44784221       0.322192977\n525        0.35108150            1.1635521         0.29000739       0.861256831\n526        1.23029609            6.6235694         0.97263461       0.559412317\n527        0.91178327            3.0271824         2.32529802       0.478943725\n528        0.95624684            3.0551154         2.25241980       0.499400050\n529        1.63819084            7.4022860         1.22219299       0.808290869\n530        1.64824919            7.3889733         1.28837320       0.810208077\n531        1.64556367            7.3586257         1.36433163       0.801986849\n532        1.68354946            7.3629914         1.43968915       0.838094265\n533        0.22942578            6.0126857         0.88558567       0.232076538\n534        0.22712763            5.9991357         0.94977096       0.211655546\n535        0.12102513            5.9131187         0.79112954       0.179078122\n536        1.39363407            5.1076015         1.36618664       0.144465066\n537        1.44226306            5.1139886         1.41625366       0.209015317\n538        1.45911168            4.9398442         1.32147231       0.280229416\n539        0.47237826            3.8056504         0.53670619       0.240462922\n540        0.47608083            3.7996997         0.49435158       0.286727708\n541        0.50566990            3.8329585         0.53233213       0.299220062\n542        0.51138714            3.8376360         0.53381495       0.307309216\n543        0.59549098            2.7741234         0.54757287       0.361733182\n544        0.64364889            2.7280156         0.58619422       0.420172443\n545        1.88229999            5.3869296         1.19551315       0.462649515\n546        1.99029510            5.3296177         1.19150739       0.545875600\n547        0.85806327            2.2477773         0.78580351       0.999657570\n548        0.81589063            2.2144152         0.82977622       0.954215424\n549        0.77482838            2.1761395         0.87118388       0.912794122\n550        0.76538931            2.1500555         0.87849491       0.911823556\n551        0.78797056            2.1562628         0.86050165       0.940123442\n552        0.53073218            1.9428794         1.41418216       0.608792608\n553        0.19390729            3.1644950         0.17814821       0.195245606\n554        0.17120432            3.1651131         0.23571951       0.172343191\n555        0.46459251            5.7357980         0.41188182       0.269739347\n556        0.57899116            5.8779132         0.53765755       0.201938371\n557        0.53420924            5.7270107         0.47005553       0.212363873\n558        0.24328713            5.6531801         1.14026082       0.272239382\n559        0.23620136            5.6549816         1.13310539       0.265158842\n560        0.20222678            5.6790971         0.37765142       0.533899295\n561        0.21484163            5.7138978         0.40167500       0.541489602\n562        0.30092000            5.6278657         0.37143454       0.443791870\n563        0.81762563            2.9843545         0.50577967       0.712722480\n564        1.07706727            4.4074166         0.90876810       0.379716080\n565        1.05493297            4.4008720         0.84009690       0.332947134\n566        0.98325490            4.3116872         0.84078127       0.456980291\n567        1.32867663            8.5112619         0.95278111       0.478339722\n568        2.14540050            5.9421440         1.48767325       0.338427024\n569        2.22909444            5.7319551         1.67403274       0.225182082\n570        2.20015837            5.7047312         1.68709912       0.280071189\n571        2.17315476            5.7589793         1.63842780       0.284121574\n572        0.66813817            3.9223538         0.74821880       0.372988018\n573        0.57799190            3.8212952         0.64714606       0.303898550\n574        0.78469994            4.5990568         0.61899677       0.530886133\n575        0.81118871            4.5969008         0.63631496       0.557880984\n576        0.27044540            3.1933151         0.27304231       0.594628676\n577        0.27215522            3.2090711         0.26935298       0.587646605\n578        0.19879644            3.1173692         0.35839386       0.683116749\n579        0.20300780            3.1193736         0.35419293       0.679074951\n580        0.23927828            3.1011855         0.33925367       0.667967764\n581        0.67090921            8.4437526         2.04344552       0.486536313\n582        0.58539472            8.2846576         2.08762392       0.209677269\n583        0.49740964            3.0023798         0.52537698       0.287195213\n584        0.37902186            3.0926879         0.46098304       0.361021510\n585        0.67431336            8.6761623         2.77618787       0.586656283\n586        0.59839165            8.6961559         2.71488186       0.513424144\n587        0.64161777            8.6034993         2.70181131       0.539468094\n588        1.42682450            3.5653754         2.52216106       0.679520558\n589        1.45343247            3.5978367         2.62679963       0.711272100\n590        0.48525265            7.2401904         1.11190176       0.322513063\n591        0.72172319            2.6568276         0.63886401       0.946238212\n592        0.76728028            2.7272910         0.69059915       0.962013782\n593        0.30451647            2.9735471         0.68751073       0.418351936\n594        0.27263462            2.8318093         0.72410792       0.289653825\n595        0.54930601            4.4469507         0.76968067       0.709322063\n596        0.60442582            4.4964457         0.82395505       0.756149642\n597        0.64134772            4.4959396         0.86073670       0.792159753\n598        0.68928775            4.4660810         0.90919904       0.842578343\n599        0.65599102            4.4339167         0.87634493       0.813839093\n600        0.55310158            4.4230477         0.77329465       0.715804861\n601        1.04061265            4.5140569         0.60799842       0.158687759\n602        1.06686174            4.5442381         0.56381097       0.140892054\n603        0.83959248            4.6536183         0.73613302       0.375372534\n604        0.83959248            4.6536183         0.73613302       0.375372534\n605        0.98094062            4.5259497         0.34287874       0.077935107\n606        0.90752339            4.5215131         0.40613728       0.147356156\n607        0.17138754            2.9302444         0.69265333       0.954917318\n608        0.21173568            2.9152257         0.74063752       0.999119760\n609        0.28717508            1.5994987         0.20787658       0.891141502\n610        0.88927234            2.1499536         0.86985313       1.054317908\n611        0.88927234            2.1499536         0.86985313       1.054317908\n612        0.88927234            2.1499536         0.86985313       1.054317908\n613        0.88927234            2.1499536         0.86985313       1.054317908\n614        0.88927234            2.1499536         0.86985313       1.054317908\n615        0.88927234            2.1499536         0.86985313       1.054317908\n616        2.28234065            3.9838488         1.10066990       0.534252415\n617        2.26283040            3.9597801         1.08890730       0.525553581\n618        2.24846305            3.9375896         1.07053522       0.510303995\n619        2.22102745            3.9104040         1.07077554       0.515719615\n620        2.23621798            3.9105638         1.03745777       0.481524342\n621        2.32219134            3.9670567         0.97404599       0.406180873\n622        0.81637802            8.3688227         2.71061292       0.650029629\n623        0.75988006            8.3286109         2.60602126       0.544476271\n624        0.68059673            8.3595500         2.53826114       0.489860440\n625        0.69813138            8.3923799         2.59421869       0.548950926\n626        0.71561328            8.4164809         2.63724005       0.588334655\n627        1.15974311            5.5298860         0.52182106       0.316331784\n628        1.07677340            5.6113003         0.44256977       0.304386344\n629        1.93746681            4.2402017         0.47600455       0.175057318\n630        2.01652162            4.2229929         0.42358715       0.138929724\n631        1.98034036            4.2466902         0.45437660       0.161707946\n632        1.95198014            4.2674850         0.48026068       0.184398655\n633        1.91966410            4.2839037         0.50622168       0.206907819\n634        1.89781528            4.2881471         0.52124711       0.220361051\n635        1.87556142            4.2916496         0.53752810       0.236824681\n636        0.69580863            4.5908419         0.56173799       0.443282880\n637        0.70771778            4.6634869         0.61098697       0.464024964\n638        0.61557495            4.5702899         0.51383612       0.368631232\n639        0.69580863            4.5908419         0.56173799       0.443282880\n640        1.12019288            4.2053899         2.16077447       0.179501429\n641        1.12019288            4.2053899         2.16077447       0.179501429\n642        1.12019288            4.2053899         2.16077447       0.179501429\n643        1.60984208            4.1252114         2.66274066       0.004927023\n644        1.12019288            4.2053899         2.16077447       0.179501429\n645        1.12019288            4.2053899         2.16077447       0.179501429\n646        1.12019288            4.2053899         2.16077447       0.179501429\n647        1.12019288            4.2053899         2.16077447       0.179501429\n648        1.12019288            4.2053899         2.16077447       0.179501429\n649        1.12019288            4.2053899         2.16077447       0.179501429\n650        1.44270356            8.6095067         0.85544943       0.485085261\n651        1.54643003            8.7092434         0.75392207       0.507049820\n652        1.58398141            8.7399761         0.70326170       0.492361194\n653        1.74975947            3.7562101         1.89365991       0.582994641\n654        1.66246819            3.6816333         1.93185405       0.598923371\n655        0.85445050            3.9058898         0.80236373       0.275565526\n656        0.80628492            3.9205489         0.78670127       0.276334700\n657        0.85870567            2.3878834         0.80100284       0.381339401\n658        0.88687387            2.4537990         0.83643476       0.445151843\n659        0.78170225            2.3619839         0.72638328       0.393277496\n660        0.50303574            4.1821823         0.65735802       0.531729181\n661        0.48187120            4.1153163         0.72404323       0.598076389\n662        0.43446844            4.3304371         0.63263456       0.516242695\n663        1.72790018            3.6878619         1.74779303       0.731280339\n664        1.65921714            3.6226525         1.75975515       0.755594241\n665        1.61542787            3.5995241         1.82085138       0.725830010\n666        1.72385363            3.7168054         1.84777206       0.637979575\n667        0.43731130            7.1115467         0.31377899       0.314796173\n668        0.73706640            8.8206616         2.89901364       0.676175197\n669        0.74756543            8.8630362         2.92337001       0.694292325\n670        0.73996550            8.9140888         2.93193682       0.696783944\n671        0.68298532            8.8062234         2.84394316       0.620557649\n672        0.52460459            3.2504657         1.41418818       0.502446087\n673        0.54379787            3.2690152         1.39249263       0.486836300\n674        2.03779062            4.6215403         1.12171604       0.861842476\n675        2.03779062            4.6215403         1.12171604       0.861842476\n676        1.13677007            4.8009119         1.28234628       0.592615844\n677        1.07818116            4.8963433         1.32601410       0.511733910\n678        1.08545550            4.8670007         1.32387005       0.530612120\n679        1.17207188            4.7836418         1.23996425       0.617310060\n680        0.25464404            5.7401570         1.17863234       0.281421061\n681        0.91143349            0.8600064         1.74073622       0.557417742\n682        0.84763835            0.8055180         1.66512991       0.516822929\n683        0.96359722            2.2275436         0.79747047       1.010381337\n684        0.93789617            2.2228656         0.79159370       1.046736815\n685        0.96375140            2.2489628         0.76696246       1.024539983\n686        0.99940144            2.2915618         0.72380824       1.000523743\n687        1.06166947            2.3696664         0.64260948       0.969472599\n688        1.06264646            2.3699117         0.64270731       0.967730649\n689        1.64679985            3.5751120         1.66776903       0.853023142\n690        1.52190471            3.4606953         1.71148094       0.776909918\n691        1.63328293            3.5875596         1.73631673       0.793549129\n692        1.14044062            3.2671797         2.97327495       0.543813130\n693        1.09195176            3.2054273         3.00810233       0.577586738\n694        1.03810837            3.1583245         3.02821178       0.627438423\n695        1.02343903            3.2259394         2.96005844       0.649078124\n696        1.02139886            3.3349503         2.85540838       0.685609080\n697        1.08459632            3.3060328         2.91070607       0.612290250\n698        2.07759182            3.6722019         0.90594095       0.441043062\n699        2.17368680            3.7513985         0.85061178       0.353067337\n700        2.23506240            3.8031969         0.82080411       0.300653775\n701        0.81261873            8.5693058         2.84956621       0.710980865\n702        0.71440367            8.5799420         2.75901955       0.611099223\n703        0.22160628            1.4110441         0.23601135       0.236010787\n704        0.25950310            1.4293538         0.20468710       0.204686536\n705        0.24160058            1.4176284         0.21410255       0.214101984\n706        0.86768309            8.7462033         2.99011213       0.715046039\n707        0.87022701            8.8301933         3.02460867       0.702221950\n708        0.81972844            8.8453021         2.98351669       0.752854573\n709        0.75470185            8.7484263         2.88628634       0.680541310\n710        0.66564909            2.0001852         0.72768501       0.507792953\n711        1.06683372            2.1837651         0.90807018       0.176084688\n712        1.12704294            2.1138606         0.83845037       0.182478118\n713        1.07867503            2.1360677         0.85872623       0.122338400\n714        1.04762343            1.4077178         0.49148664       0.295705224\n715        1.08544053            1.4217347         0.46041454       0.260531038\n716        1.02324987            1.4791819         0.58553465       0.381168524\n717        0.98282040            1.4048493         0.56243010       0.369522361\n718        1.03818686            1.9217725         1.32196276       1.133271529\n719        0.99741751            1.8622486         1.36327964       1.136809820\n720        0.98656256            1.8218558         1.40556365       1.122278978\n721        1.06439439            1.8926995         1.38615462       1.122020752\n722        1.04150775            1.9664140         1.31804672       1.085439204\n723        0.89797731            2.1114492         1.23392817       0.949671064\n724        0.93917871            2.0831251         1.20873859       0.971894556\n725        1.78440810            4.0163337         2.68040047       0.313586351\n726        1.82661883            4.0895551         2.69298544       0.242633689\n727        1.77484080            4.0127695         2.68719186       0.321564434\n728        1.52694836            8.5309634         3.13004288       0.419392481\n729        1.53490652            8.5729273         3.17822729       0.357231844\n730        1.72481480            8.6548556         2.93068256       0.445711503\n731        1.66378802            8.5933547         2.96119659       0.469053708\n732        0.88485343            9.0150829         3.08973019       0.728330540\n733        0.82856346            9.0963790         3.05089432       0.814262302\n734        0.71523337            9.0508466         2.93777400       0.701986557\n735        0.74007118            9.0009798         2.95272391       0.714204475\n736        0.38914649            3.0144264         0.56087540       0.474392874\n737        0.37206058            2.9789629         0.58536793       0.437160753\n738        0.42661199            3.0120572         0.54164503       0.470728249\n739        0.41243155            3.0538794         0.50591911       0.511775733\n740        0.42136283            3.0745094         0.53749347       0.528608048\n741        1.03779825            4.9693973         1.39794254       0.542101882\n742        1.01452769            4.9351206         1.35019541       0.477725849\n743        1.02987659            4.9659296         1.44383945       0.564677702\n744        0.58929704            4.5066148         0.38412636       0.439992537\n745        0.58919042            4.5062189         0.38421641       0.440336335\n746        0.62655953            4.8252892         0.86199889       0.486310573\n747        0.62655953            4.8252892         0.86199889       0.486310573\n748        0.62655953            4.8252892         0.86199889       0.486310573\n749        0.62655953            4.8252892         0.86199889       0.486310573\n750        0.66836418            4.6317241         0.43068162       0.419204238\n751        0.62865036            4.5869051         0.39531382       0.399720181\n752        1.47522002            2.2588916         0.58770810       0.467050142\n753        1.47751644            2.2636046         0.59053966       0.472240272\n754        1.36579536            2.2892624         0.48266707       0.479773082\n755        1.35148709            2.2889210         0.46832089       0.478634943\n756        0.59605501            4.3903587         0.46282166       0.577115447\n757        0.63150271            4.4581125         0.47279071       0.566969536\n758        0.67025773            4.5232314         0.49108274       0.564548599\n759        0.12793736            5.6466040         0.85688558       0.150419267\n760        1.22736459            4.1361436         0.30030855       0.559785319\n761        1.92049201            5.3373528         3.53039753       0.154671122\n762        1.85335958            5.4038480         3.52028521       0.149116628\n763        1.92049201            5.3373528         3.53039753       0.154671122\n764        1.15359370            5.1452463         1.19018149       0.508401032\n765        1.15528932            5.0854237         1.32636063       0.607323340\n766        1.20237433            5.1301359         1.28627260       0.597061432\n767        1.20989714            5.1563645         1.23492565       0.563963865\n768        0.99063949            6.5984421         0.78430655       1.080637762\n769        0.99486886            6.5585029         0.74602698       1.006246337\n770        1.76434330            7.3054933         0.51582154       0.722909229\n771        1.65724117            7.3340814         0.40566170       0.612547177\n772        1.74029529            7.3720993         0.48575565       0.691219187\n773        1.08447420            3.1474791         1.25139704       0.366950127\n774        1.08805184            3.1421927         1.25840561       0.360066423\n775        1.14838336            3.2505210         1.23180065       0.388916997\n776        1.01585508            2.6302008         0.41805322       0.767225316\n777        1.00869119            2.6622982         0.39087154       0.751876426\n778        0.99508612            2.7006154         0.36312072       0.729061933\n779        0.98660422            2.7672112         0.31249840       0.704238802\n780        1.03305361            2.8553062         0.21678568       0.730222300\n781        1.35459564            1.9578681         0.73821301       0.266561156\n782        1.40181762            1.9691464         0.67639842       0.227867393\n783        1.37924821            1.9585856         0.70154932       0.237080379\n784        1.31024320            1.9063530         0.76213542       0.245592072\n785        1.34796445            1.9117312         0.71184848       0.202666621\n786        1.56905166            3.6989627         2.46390713       0.515422361\n787        1.52467737            3.6419190         2.35726408       0.535652582\n788        1.48908347            3.6164967         2.42554904       0.583507044\n789        1.60330792            3.7364190         2.50289168       0.497569014\n790        1.71724124            3.8316605         2.37886867       0.343625110\n791        1.70293308            3.8199530         2.39355619       0.360425640\n792        1.80833765            3.9381759         2.52965967       0.312108778\n793        1.40394614            1.9335426         0.54331822       0.122680196\n794        1.41315275            1.9121317         0.55760249       0.101288487\n795        1.34286884            1.9089486         0.50165119       0.122482289\n796        2.16336724            6.2914240         2.58849289       0.932523810\n797        2.16336724            6.2914240         2.58849289       0.932523810\n798        2.16336724            6.2914240         2.58849289       0.932523810\n799        0.13104278            3.1164652         0.33432478       0.169044740\n800        0.15408978            3.1918997         0.44407158       0.079055948\n801        0.74227069            4.9215063         0.66134894       0.308259176\n802        0.75824152            4.9247547         0.68004403       0.292094983\n803        1.41718747            5.7151203         2.90007091       0.447651347\n804        1.32793619            5.8168017         2.82694895       0.458875636\n805        1.25552122            5.9029554         2.76880195       0.482052241\n806        1.13942390            6.0226353         2.66572068       0.500694001\n807        1.20149105            5.9798139         2.73013648       0.458969728\n808        0.57958463            5.0639452         0.62677993       0.170324735\n809        0.68245589            5.1476692         0.73347344       0.199714484\n810        1.63998629            7.6792507         0.45955250       0.528019329\n811        1.58338007            7.6637962         0.40913582       0.480996635\n812        1.53886303            7.6370134         0.36208355       0.454659483\n813        1.52555095            7.7438602         0.42332907       0.381278881\n814        1.34588715            0.4237082         0.75415259       1.300372614\n815        1.02769904            5.5396192         3.37058923       0.725558651\n816        1.10771858            5.6214139         3.37017734       0.803069440\n817        1.03188721            5.6232350         3.42193891       0.727290194\n818        1.04255650            5.6820879         3.45653629       0.737988254\n819        1.31976286            3.9687352         0.86868291       0.143782673\n820        1.28656491            4.0042641         0.81079431       0.072886530\n821        1.20170574            3.8830370         0.93200589       0.090627268\n822        1.19223280            3.8913906         0.91989372       0.069844192\n823        0.79544264            2.7601434         0.46560751       0.529301214\n824        0.72746849            2.6828721         0.58311343       0.503599577\n825        0.75676237            2.6301853         0.60350258       0.549433001\n826        0.80737502            2.6243615         0.56473883       0.590530448\n827        0.86130026            2.6199129         0.52559530       0.635711293\n828        0.58828942            4.8915520         0.84015813       0.432966323\n829        0.57972000            4.8856924         0.83066780       0.425859934\n830        0.57972000            4.8856924         0.83066780       0.425859934\n831        0.57972000            4.8856924         0.83066780       0.425859934\n832        0.57972000            4.8856924         0.83066780       0.425859934\n833        0.44622647            4.7273411         0.52108332       0.424405900\n834        0.44525280            4.7999845         0.51670180       0.454882210\n835        0.40845572            4.7979303         0.47797305       0.431977268\n836        0.44622647            4.7273411         0.52108332       0.424405900\n837        1.26045688            3.0369734         1.28484101       1.307574317\n838        1.32891455            2.9748125         1.24944819       1.376860707\n839        1.29736546            2.9614634         1.19882544       1.413300158\n840        1.25821131            3.0143174         1.16517897       1.387860269\n841        1.26972243            3.0507391         1.21779074       1.330100443\n842        0.93804478            0.6753543         1.65778366       0.361747158\n843        0.96069871            0.6723831         1.67203821       0.353484445\n844        0.98227706            0.6696613         1.68538956       0.346278021\n845        1.00954651            0.6633401         1.70013972       0.335071603\n846        1.04456218            0.6212303         1.69784831       0.287533384\n847        1.06800426            0.6261334         1.71573301       0.290922815\n848        0.77106649            5.2294895         1.64033828       0.185563575\n849        0.71836196            5.2867101         1.69690989       0.131832710\n850        0.63010102            5.3407994         1.77827825       0.049860388\n851        0.65648348            5.2659260         1.74834206       0.145883982\n852        0.73856672            5.2130451         1.66480639       0.177369982\n853        1.63802402            4.2290277         2.90478352       0.325107762\n854        1.60033881            4.2830320         2.89387312       0.280219205\n855        1.71117109            4.1879586         2.79422289       0.234881416\n856        1.72894635            4.1459886         2.83176169       0.310001129\n857        1.73352209            3.7988005         2.11785286       0.410281370\n858        1.68406627            3.7670619         2.19199867       0.408446265\n859        1.72166132            3.7917228         2.13736215       0.406602111\n860        0.26473040            4.7453503         1.01111568       0.312569174\n861        0.26473040            4.7453503         1.01111568       0.312569174\n862        0.26473040            4.7453503         1.01111568       0.312569174\n863        0.38426765            1.6510469         0.25340622       0.279137523\n864        0.31434797            1.7228075         0.22537135       0.244509286\n865        0.32580825            1.7331124         0.29311671       0.169623577\n866        0.32346153            1.7364941         0.29403401       0.166993717\n867        0.97292849            5.0167829         1.12772721       0.321811606\n868        0.95584618            4.8931857         1.20377454       0.320514659\n869        1.07108794            4.9825429         1.27931816       0.480450461\n870        1.04686266            5.0519846         1.16229594       0.396258151\n871        1.03026625            4.9237493         1.23847653       0.387558811\n872        1.69841917            5.4582610         3.16852994       0.351427213\n873        1.81364323            5.3199553         3.25943164       0.234892922\n874        1.81543805            5.3386330         3.27344269       0.281301673\n875        1.78281498            5.3894404         3.25358642       0.334773122\n876        1.69806504            5.4589469         3.16839172       0.352315519\n877        0.67624991            2.8014234         2.00722994       0.223232515\n878        0.67405898            2.8295576         2.06280914       0.271765225\n879        0.72482549            2.7617260         1.98604018       0.241533120\n880        1.04427028            6.7478182         0.47437028       0.450560010\n881        1.09221045            6.7580251         0.41698444       0.479949120\n882        1.14311798            6.8069549         0.31917454       0.519290723\n883        1.11862449            6.6973757         0.46693354       0.419660355\n884        1.15768619            6.6444275         0.50140737       0.374955866\n885        0.67087072            5.6578719         4.60839832       0.252012003\n886        0.65363965            5.6323804         4.58725221       0.242186653\n887        0.65526186            5.6264637         4.58487306       0.229465365\n888        0.67211054            5.6399858         4.60004522       0.240119264\n889        0.71087497            5.6770417         4.63831683       0.249130425\n890        0.74100862            5.7044066         4.66723879       0.252834446\n891        0.52553026            4.6570073         0.60090222       0.463477832\n892        0.44140204            4.6119161         0.51649189       0.377228687\n893        0.40104386            4.6132761         0.47637114       0.344372399\n894        0.37814682            4.6473147         0.45374852       0.340895072\n895        1.08458482            3.4653100         0.83219928       0.584775938\n896        1.05792513            4.3721352         0.93221494       0.452282646\n897        1.07325809            4.4556846         0.96904360       0.371195654\n898        0.98573751            4.5456911         1.04254336       0.327227928\n899        1.04840306            4.4915994         1.03305106       0.395852814\n900        0.41259856            8.6959546         2.53695321       0.322265910\n901        0.41183189            8.6945255         2.53526880       0.321001823\n902        0.41588426            8.6936960         2.53866785       0.324979012\n903        0.41347124            8.6964079         2.53809770       0.323324663\n904        0.38570524            8.6391798         2.46757649       0.274882967\n905        0.47268210            8.5997645         2.52687406       0.359298661\n906        0.46940610            8.6012904         2.52465587       0.356110229\n907        0.46958667            8.6020845         2.52549774       0.356504828\n908        0.49535019            8.6896901         2.61296326       0.406390035\n909        2.47173568            7.5304016         1.21708610       0.084171483\n910        2.51497646            7.4870501         1.26053331       0.083306733\n911        2.58760569            7.4223657         1.33306005       0.109618516\n912        2.63815679            7.3775512         1.38354331       0.147473230\n913        2.44119102            7.5027039         1.18607136       0.082622284\n914        1.12159783            7.3027885         3.32630611       0.429206097\n915        1.05843570            7.2924143         3.38203550       0.433803611\n916        1.15036719            7.2801242         3.31591318       0.402453639\n917        1.16761270            7.3006199         3.29125709       0.421579383\n918        1.09826428            7.2422842         3.37797230       0.373569730\n919        0.34537442            2.6956145         0.48536851       0.333541689\n920        0.34537442            2.6956145         0.48536851       0.333541689\n921        0.34537442            2.6956145         0.48536851       0.333541689\n922        0.34537442            2.6956145         0.48536851       0.333541689\n923        0.62456438            4.1317161         1.71776140       0.215559528\n924        0.61945281            4.1598764         1.69679577       0.200341653\n925        0.62681372            4.1484460         1.70333130       0.211973939\n926        0.66591426            4.2018688         1.64702990       0.214016954\n927        1.34719769            4.7517139         2.90566302       0.417793380\n928        1.38588551            4.6779859         2.88302984       0.397110691\n929        1.47383176            4.6401400         2.78722504       0.362552967\n930        1.48648596            4.5164797         2.83308258       0.246620136\n931        1.37988907            4.6244227         2.91848193       0.349550606\n932        1.29206792            4.6921487         3.00378509       0.269286044\n933        1.02066518            0.7232134         1.74244304       0.395146623\n934        1.07384835            0.7192946         1.77478005       0.385444139\n935        1.00279398            0.7909379         1.76831859       0.468017432\n936        2.04756659            7.9891538         0.68599176       0.438657179\n937        2.18922146            7.8039333         0.87508587       0.540536802\n938        2.30961331            7.6651966         1.00788670       0.654576005\n939        2.06355418            3.7824153         1.14399806       0.621411734\n940        1.96938554            3.6542854         1.09468498       0.616369519\n941        2.00628249            3.6589168         1.02685494       0.552614116\n942        0.61913206            3.9364733         0.67064035       0.119135896\n943        0.56564232            3.9197601         0.62714915       0.162664722\n944        0.58156235            3.8966164         0.65143210       0.142117005\n945        0.54205038            5.7824996         0.61468677       0.520227335\n946        0.55601927            5.8548101         0.61927083       0.490248793\n947        0.51425613            5.8346203         0.57478139       0.533656161\n948        0.73152413            4.4064339         0.51500554       0.107721042\n949        0.78319617            4.4230492         0.46967617       0.149841450\n950        0.77450613            4.4424042         0.48699489       0.134195870\n951        0.77709012            4.4273983         0.47761941       0.142003282\n952        1.15950507            2.6539043         1.47332528       0.162753394\n953        0.96526801            2.7364262         1.57040657       0.228321480\n954        0.91935461            2.5879081         1.68877947       0.354833892\n955        0.27899149            2.1366162         0.21861879       0.732298448\n956        0.27611791            2.1731712         0.16591613       0.665835060\n957        0.32121767            2.1557093         0.27521973       0.784509982\n958        0.74993084            2.0899401         0.91753520       0.911675666\n959        0.69285357            2.0038839         1.00128383       0.857553741\n960        0.79332542            2.0714073         0.93803483       0.958349993\n961        0.73351519            2.0590851         0.94660951       0.897425773\n962        0.81526441            2.1451804         0.86022519       0.977722872\n963        0.78538916            2.1224990         0.88399315       0.946881268\n964        0.72866528            2.0805495         0.93030853       0.887804939\n965        0.71726503            2.0162539         0.98905717       0.882165024\n966        1.17563963            5.4300492         3.20304175       0.877772449\n967        1.15092782            5.4149937         3.21237030       0.854578166\n968        1.15504389            5.4167917         3.21039559       0.858476038\n969        1.08409385            5.4721250         3.29149858       0.785025972\n970        1.14648803            5.4093864         3.21255063       0.850658702\n971        0.89181385            4.7994668         1.39116680       0.333591375\n972        0.89181385            4.7994668         1.39116680       0.333591375\n973        0.89167791            4.8023148         1.39898160       0.341597430\n974        0.62149984            2.5515706         0.63130136       0.387021783\n975        0.46541345            2.4790790         0.49785089       0.268123652\n976        0.46142057            2.4810467         0.49631060       0.269138215\n977        1.22685327            2.2327466         1.26748088       0.464430487\n978        1.35113668            2.3381142         1.37403568       0.579587542\n979        1.33826753            2.3704733         1.30197219       0.517847139\n980        1.07128857            1.7330579         0.45805291       0.301157446\n981        0.05450862            6.1002429         1.28522953       0.265479240\n982        1.20004698            3.0486148         1.11090542       1.393214134\n983        1.07811788            2.9522752         0.97663911       1.341205098\n984        1.02000392            2.9717824         0.92005322       1.285904556\n985        1.06010396            3.0343865         0.96889352       1.338528067\n986        0.59568832            8.9642052         2.81143251       0.573800004\n987        0.62544869            9.0102294         2.84734497       0.611988101\n988        0.64868585            9.0446660         2.87393240       0.641023785\n989        0.68853343            9.0967197         2.91698070       0.688480273\n990        0.69224632            9.1554000         2.92238236       0.705515759\n991        0.61294600            9.1120903         2.84311375       0.627196638\n992        0.57650076            9.0218257         2.80259719       0.571855252\n993        1.70497039            3.8041995         2.28138138       0.359918329\n994        1.64065060            3.7355459         2.24522813       0.429390359\n995        1.58229206            3.6819612         2.26132904       0.482022085\n996        1.49387687            3.5911733         2.23697749       0.572794551\n997        1.40848145            3.5178247         2.29253315       0.650680865\n998        1.54608645            3.6538991         2.30171143       0.513095891\n999        0.86234307            4.8941309         0.30535465       0.314458057\n1000       0.82682557            4.8328055         0.23084134       0.353535789\n1001       0.89846622            4.8854270         0.31371783       0.278112377\n1002       0.86965105            4.8099656         0.22701133       0.315017623\n1003       0.76646807            4.9309090         0.31637718       0.412721901\n1004       0.76084187            4.8657130         0.24981377       0.416166788\n1005       0.80649442            4.9140994         0.30674398       0.371388108\n1006       0.79034630            4.8490319         0.23717710       0.388108128\n1007       1.28889189            2.9198629         1.18609060       1.455497296\n1008       1.26105680            2.8803985         1.15402680       1.506704765\n1009       1.19785999            2.7877277         1.09195620       1.442536749\n1010       1.20977706            2.8351037         1.09738076       1.452720003\n1011       1.63193164            3.7642837         2.50269265       0.469201036\n1012       1.72233974            3.8612785         2.60651538       0.445585791\n1013       1.78459686            3.9310915         2.60230271       0.369143734\n1014       1.74759644            3.8823075         2.56138584       0.390988076\n1015       1.72002291            3.8512592         2.51618855       0.389438570\n1016       1.76162380            3.9676107         2.65918395       0.354392009\n1017       1.66939509            3.7947335         2.44891045       0.409346976\n1018       0.33169566            0.3149719         0.59512362       0.643896448\n1019       0.27714043            0.3397386         0.55558298       0.591930629\n1020       0.23718782            0.4197594         0.52093535       0.527356030\n1021       0.22641179            0.4728721         0.50704345       0.489633353\n1022       0.55621428            8.5420223         2.56845971       0.437261171\n1023       1.13290531            5.0617737         1.03696298       0.581180964\n1024       1.10902607            5.1027751         1.04828892       0.518655535\n1025       1.10945747            5.1034568         1.04888655       0.517965160\n1026       1.10064739            5.1003688         1.04359559       0.521055050\n1027       1.23315813            5.2075232         1.16338232       0.422163229\n1028       1.22555248            5.1531898         1.13179607       0.503384350\n1029       1.14772673            5.1223723         1.07629716       0.503023245\n1030       0.95230406            5.0700836         1.45822553       0.367898462\n1031       0.93658162            5.0488468         1.46738428       0.361120660\n1032       0.96647083            4.9693057         1.44405250       0.421638237\n1033       1.01761744            4.9192482         1.39484128       0.472434659\n1034       1.01842815            4.9303294         1.38955816       0.464487072\n1035       1.01487652            4.9435774         1.39059847       0.454789977\n1036       0.99861653            4.9693686         1.40522426       0.432904590\n1037       0.99907243            4.9903161         1.40456686       0.424264015\n1038       0.99174144            5.0298489         1.41717829       0.408429942\n1039       0.52183768            5.2333595         1.84394221       0.437082421\n1040       0.54922699            5.1456453         1.71210006       0.391405285\n1041       0.58218507            5.1086220         1.68896761       0.402640918\n1042       0.65499246            5.0237461         1.62323584       0.426382085\n1043       0.70985211            4.9880788         1.66762072       0.502556344\n1044       0.67976764            5.0438398         1.74029490       0.517506165\n1045       0.62119053            5.1267903         1.80485299       0.510583587\n1046       1.43909031            2.1007972         0.54714270       0.300502598\n1047       1.32974074            2.1202232         0.43828977       0.310045642\n1048       1.27899435            2.1157550         0.38961367       0.295835353\n1049       1.29614514            2.0410137         0.41967709       0.240572050\n1050       1.36843742            2.0342162         0.48715020       0.223392381\n1051       1.46194727            2.0397257         0.57522241       0.245259420\n1052       2.17081358            5.9353194         5.22648614       0.343439760\n1053       2.16805858            5.9370564         5.22880914       0.343512943\n1054       2.17125222            5.9375770         5.22806662       0.340528714\n1055       0.27804788            6.6775871         0.21871629       0.165286543\n1056       0.40784328            6.7707314         0.36443010       0.287773638\n1057       0.38064011            6.8155569         0.37154453       0.258578960\n1058       0.51573859            6.8250257         0.47035382       0.372881039\n1059       0.46554229            6.7462671         0.39614633       0.302118919\n1060       0.41129752            6.6979826         0.32925954       0.234940635\n1061       0.26357249            6.6242964         0.16796975       0.111394247\n1062       1.20939852            1.9414407         0.94921017       0.445197508\n1063       1.28592683            1.9600395         0.84705860       0.363179516\n1064       1.24133054            1.9415749         0.89845889       0.398188661\n1065       1.26921227            1.9508249         0.86398487       0.372326985\n1066       0.70843336            2.8112031         2.31493877       0.262951439\n1067       0.54033623            2.6683053         2.39379798       0.187091297\n1068       0.60000699            7.0137806         0.37208344       0.563319982\n1069       0.60212614            6.9959908         0.36701738       0.560318023\n1070       0.61944669            6.9620344         0.37556002       0.570790015\n1071       0.64278899            6.9400317         0.39731785       0.592832094\n1072       0.69801601            6.9180459         0.45928387       0.653886526\n1073       0.71370984            6.9248180         0.48102003       0.674352250\n1074       0.70764446            6.9467059         0.48112019       0.672755208\n1075       0.70070499            6.9735798         0.48225833       0.671293356\n1076       0.50208163            5.5994339         0.21522068       0.188896662\n1077       0.53673407            5.6113172         0.20900035       0.160594846\n1078       0.52443526            5.5684037         0.26329626       0.090643755\n1079       0.58371442            5.2692466         3.98813647       0.509874970\n1080       0.47481111            5.3735643         4.03757227       0.410105477\n1081       0.47176240            5.3481301         3.95101013       0.461450574\n1082       0.48213484            5.3316626         3.89941066       0.500204860\n1083       0.52767386            5.2873431         3.82705220       0.519677404\n1084       0.63005969            5.1863762         3.82884581       0.563435972\n1085       0.62227452            5.2015313         3.87480004       0.590785800\n1086       0.60582051            5.2327502         3.93697433       0.549833515\n1087       0.61039683            8.0755459         1.67206532       0.427821511\n1088       0.64702015            8.0938765         1.67968615       0.458882683\n1089       0.73349631            8.0931071         1.64940402       0.501214440\n1090       0.66398179            8.0691324         1.64438122       0.500001780\n1091       0.73335005            8.0960647         1.64818369       0.486579454\n1092       0.70491549            8.1129203         1.65811496       0.467323681\n1093       0.61576921            8.2036556         1.74208682       0.492565716\n1094       0.62427736            8.2526721         1.80777815       0.571653623\n1095       0.20116652            3.5104064         0.33490639       0.200285831\n1096       0.28035289            3.4543706         0.42710926       0.248033723\n1097       0.24397234            3.4883537         0.41203315       0.212864256\n1098       0.20116652            3.5104064         0.33490639       0.200285831\n1099       0.25012769            3.4602907         0.32124979       0.253094734\n1100       0.77109337            2.5384398         0.67504616       1.086964514\n1101       0.82943242            2.6354635         0.73181934       1.108112401\n1102       2.16980192            5.7157696         2.34114327       0.738018063\n1103       2.12809689            5.7189622         2.29702709       0.680782786\n1104       2.17476165            5.7743982         2.34691789       0.706554471\n1105       2.17476165            5.7743982         2.34691789       0.706554471\n1106       2.15885226            5.8291662         2.34396180       0.669557974\n1107       2.13021551            5.8525831         2.32346329       0.627843277\n1108       2.12644629            5.8779665         2.32536690       0.602301539\n1109       1.91589352            6.0737776         2.18419845       0.189906696\n1110       1.90601173            6.1166482         2.18505187       0.151463453\n1111       1.93906636            6.1755244         2.22576112       0.174282957\n1112       1.98675219            6.2059267         2.27272060       0.221953491\n1113       1.99652964            6.0653036         2.25147446       0.296888816\n1114       1.93989049            6.0128173         2.19155942       0.269895801\n1115       0.14397159            1.3626347         0.29647810       0.296477562\n1116       0.13344453            1.3582693         0.31173146       0.311730918\n1117       0.13811533            1.3504043         0.28606166       0.286061123\n1118       0.07952967            1.3130574         0.38584858       0.385848068\n1119       0.06852588            1.3043494         0.36060811       0.360607605\n1120       0.09404069            1.2643648         0.45980406       0.459803577\n1121       0.65978383            7.0001400         0.59062739       0.194667349\n1122       0.63907499            6.9829967         0.47553548       0.265081267\n1123       0.92275303            4.7801815         0.78498869       0.671144985\n1124       0.91917537            4.7548705         0.77203103       0.666287041\n1125       0.90534669            4.7557043         0.76350080       0.653051445\n1126       0.88895744            4.7103967         0.73404877       0.635328169\n1127       0.84067442            4.6733450         0.68701104       0.587011451\n1128       0.79348804            5.6999758         0.93349078       0.155873551\n1129       0.72646019            5.5784538         0.87536077       0.185324852\n1130       0.70608961            5.6559392         0.84896407       0.214475821\n1131       0.97324409            4.2179429         0.98363649       0.691518467\n1132       1.17291189            4.3992536         1.15655280       0.664253686\n1133       1.11047157            4.3868448         1.04103956       0.546950245\n1134       0.96751727            4.2708666         0.88615062       0.545246068\n1135       0.26729828            2.8235667         2.60898749       0.137477082\n1136       0.28897294            2.8415207         2.59069328       0.156108001\n1137       0.29502060            2.8686949         2.56350572       0.184022669\n1138       0.29382179            2.8946680         2.53753153       0.209610322\n1139       0.31528119            2.9086770         2.52367329       0.226377668\n1140       0.33700141            2.9242174         2.50857834       0.245736080\n1141       0.24827239            2.8961822         2.53679650       0.210958009\n1142       0.22341247            2.8907933         2.54323744       0.209375181\n1143       0.37703161            2.7551528         0.75773575       0.259555281\n1144       0.34123356            2.7195791         0.80026992       0.214618278\n1145       0.34123356            2.7195791         0.80026992       0.214618278\n1146       0.39965793            2.9664084         0.56779713       0.334509478\n1147       0.37830020            2.9883626         0.57134346       0.381023695\n1148       0.34709126            3.0266408         0.52476554       0.436496091\n1149       0.31083740            3.0690096         0.48029766       0.426440197\n1150       0.26773164            3.0980213         0.47273555       0.340182271\n1151       1.30713139            5.9463548         2.85138011       0.340588039\n1152       1.25252172            6.0249844         2.80718063       0.309809562\n1153       1.25412855            6.0545332         2.81547086       0.271523265\n1154       1.30447148            6.0062652         2.86293914       0.258949226\n1155       1.35883558            5.9482311         2.91282232       0.266286395\n1156       1.35868765            5.9318326         2.90881862       0.290733356\n1157       0.50084747            2.6460693         2.31686658       0.092123103\n1158       0.49356643            2.6396424         2.29452461       0.079537626\n1159       0.55636966            2.6978213         2.30977186       0.157821684\n1160       0.19663178            7.5231823         1.47090622       0.411312146\n1161       0.20796702            7.5294258         1.49862689       0.443713719\n1162       0.23490382            7.5259729         1.52298087       0.483006814\n1163       0.25938594            7.4971072         1.50478073       0.492144628\n1164       0.27551556            7.4720203         1.48194741       0.491396861\n1165       0.27923866            7.4499054         1.44420807       0.468314809\n1166       0.18048381            7.5222171         1.42198620       0.340725261\n1167       0.25921392            7.4433649         1.35759222       0.362434855\n1168       0.28471985            7.4178860         1.34280185       0.379869574\n1169       0.26617329            7.4403348         1.38703873       0.405256287\n1170       0.51500449            8.3237223         1.85906800       0.528533555\n1171       0.46943673            8.4135297         1.95288066       0.527754211\n1172       0.46632760            8.4355933         1.97737876       0.536161099\n1173       0.49168622            8.4676620         2.01972073       0.582283941\n1174       0.50940473            8.4773009         2.03479522       0.606715717\n1175       0.53219641            8.4833224         2.04719378       0.615533857\n1176       0.55811745            8.4781560         2.04837750       0.591549136\n1177       0.58340301            8.4756842         2.05254446       0.569161605\n1178       0.58470174            8.4189947         1.99057521       0.558304725\n1179       0.57940841            8.3956334         1.96273671       0.563995984\n1180       0.59768475            8.3654023         1.93364903       0.548502161\n1181       0.58185197            8.3533040         1.91478547       0.569522175\n1182       0.57116452            8.3399492         1.89583029       0.587407975\n1183       0.53778197            8.3240321         1.86649172       0.563240760\n1184       0.52298967            8.3208075         1.85797579       0.538143365\n1185       0.50004466            8.3257772         1.85697648       0.506734593\n1186       0.42685376            0.9513774         0.69891941       0.434066020\n1187       0.38148586            0.9421150         0.64729654       0.388445493\n1188       0.39310884            0.6412249         0.87784256       0.146663957\n1189       0.49532039            0.5860956         0.99623685       0.184159262\n1190       0.73677665            2.6911672         2.08488537       0.226154510\n1191       0.70810706            2.6808748         2.09133767       0.252065737\n1192       0.69228504            2.6965722         2.12864518       0.305244009\n1193       0.79442751            2.7452849         2.12281975       0.239836807\n1194       0.57536981            4.8793547         0.82508102       0.423105907\n1195       0.57536981            4.8793547         0.82508102       0.423105907\n1196       0.57536981            4.8793547         0.82508102       0.423105907\n1197       0.57536981            4.8793547         0.82508102       0.423105907\n1198       0.79329454            3.3129732         0.25083975       0.305348811\n1199       0.80361359            3.2986266         0.23868727       0.343884809\n1200       0.76406647            3.3537447         0.29876804       0.236352537\n1201       0.81393330            3.2870550         0.23588139       0.380658178\n1202       0.80130308            3.3010698         0.26399102       0.404875645\n1203       0.78640492            3.3192276         0.29542889       0.406916219\n1204       0.75159893            3.3580797         0.34164112       0.363035295\n1205       0.55672015            3.8550076         0.65476970       0.823535937\n1206       0.55936845            3.8932705         0.56837634       0.727413048\n1207       0.55918632            3.9125306         0.47752417       0.627988664\n1208       0.75834726            4.0785660         0.70763066       0.667554603\n1209       0.69524812            4.0239732         0.64815688       0.706227187\n1210       1.83235259            7.1118130         0.62733868       0.756625281\n1211       1.74091431            7.1054090         0.54700707       0.744540400\n1212       1.71783105            7.2057070         0.49156045       0.695949317\n1213       1.80155147            7.2179142         0.56855700       0.740707543\n1214       0.85608929            6.8472629         0.97294452       0.502330204\n1215       0.78780411            6.9156837         1.06584670       0.530039126\n1216       0.92855276            6.7750338         1.01584985       0.604748407\n1217       0.55454507            5.6065447         0.70110946       0.356264615\n1218       0.68505325            5.4905620         0.83905946       0.256523307\n1219       0.60852826            5.4660244         0.76411669       0.339570981\n1220       0.55454507            5.6065447         0.70110946       0.356264615\n1221       1.05491450            0.9361110         1.87934307       0.612384792\n1222       1.05805561            0.9514260         1.88904735       0.628072798\n1223       1.06503108            0.9821290         1.90872226       0.659493677\n1224       1.07350745            1.0129396         1.92915461       0.690910519\n1225       1.10886608            1.0753768         1.98210006       0.752535259\n1226       1.10886608            1.0753768         1.98210006       0.752535259\n1227       1.10886608            1.0753768         1.98210006       0.752535259\n1228       1.10886608            1.0753768         1.98210006       0.752535259\n1229       1.10886608            1.0753768         1.98210006       0.752535259\n1230       0.07971633            5.0165586         3.96291122       0.109277620\n1231       0.13505424            5.0567919         4.00969505       0.131761671\n1232       0.21748900            5.0911324         4.05520574       0.175032857\n1233       0.25600395            5.0238766         3.99781963       0.150032845\n1234       0.52100517            2.2597406         0.56119398       0.477132227\n1235       0.62653315            5.1674850         1.88048149       0.536725687\n1236       0.57739955            5.1892125         1.84830614       0.491861450\n1237       0.57739955            5.1892125         1.84830614       0.491861450\n1238       0.57657098            5.1906270         1.84947170       0.490851549\n1239       0.62653315            5.1674850         1.88048149       0.536725687\n1240       0.69038723            5.1985830         4.01151806       0.583836715\n1241       0.69753066            5.1496377         3.91014915       0.628998613\n1242       0.77625272            5.0692365         3.86191971       0.612983597\n1243       0.83590361            5.0229339         3.86764052       0.635736706\n1244       1.27087181            4.7679463         1.13396010       0.691526909\n1245       1.21415960            4.7722483         1.19083878       0.646865596\n1246       1.27755172            4.6782483         1.14080969       0.725048190\n1247       1.41097475            4.5644745         1.00642627       0.727785183\n1248       1.32948010            4.6931464         1.07385280       0.754906209\n1249       0.92032882            5.8680142         4.71639085       0.308515323\n1250       0.91401077            5.8413053         4.67641797       0.353026632\n1251       0.94857405            5.8735647         4.70423198       0.373131049\n1252       0.97124748            5.9082610         4.74488429       0.359287000\n1253       0.98086783            5.9252791         4.76641942       0.348779218\n1254       1.02969288            5.9982005         4.85638819       0.329168995\n1255       1.04029522            6.0177644         4.88492035       0.318116624\n1256       0.92882307            5.9106612         4.79014023       0.219892881\n1257       0.95462451            5.9190851         4.77862638       0.285410853\n1258       0.36040746            2.9227696         0.62851794       0.382079040\n1259       0.41801087            2.9311832         0.61413654       0.401966829\n1260       0.41967149            2.9342176         0.61110895       0.404798013\n1261       0.36634295            2.8429233         0.70237373       0.317394312\n1262       0.99651381            3.5700818         2.35504514       0.496078686\n1263       1.01587040            3.6004325         2.33041601       0.498438967\n1264       1.02458455            3.6263781         2.29946263       0.489429660\n1265       1.03154234            3.6577159         2.25630860       0.473905969\n1266       1.05342082            3.7010717         2.20977776       0.473086270\n1267       1.01030817            3.6576883         2.22951322       0.441024244\n1268       0.97574489            3.6330713         2.22846074       0.407840269\n1269       0.94403927            3.6086000         2.23142228       0.379571870\n1270       0.93954379            3.5833578         2.26828411       0.396470911\n1271       0.93382671            3.5520932         2.31198331       0.417938782\n1272       0.93446097            3.5260648         2.35287160       0.444324250\n1273       0.80956063            5.2658217         0.83260573       0.257490951\n1274       0.81643665            5.2877059         0.78670867       0.223410632\n1275       0.78381951            5.3045765         0.74092973       0.193350153\n1276       0.73382742            5.3198670         0.69398323       0.169988871\n1277       0.69850669            5.1812654         0.73323834       0.140555041\n1278       0.69811380            5.1804276         0.73498612       0.142242434\n1279       0.69928568            5.1819134         0.73376209       0.141140613\n1280       0.30460647            5.7665252         0.30910926       0.080752132\n1281       0.35013063            5.7082475         0.37193819       0.097940302\n1282       0.42394162            5.6573225         0.41012580       0.146096151\n1283       1.51754537            5.7243895         3.04099976       0.237271130\n1284       1.51037142            5.7397774         3.03716650       0.229249604\n1285       1.39739350            5.8915259         3.01488458       0.214768949\n1286       1.40803956            5.8648692         2.94988640       0.276165206\n1287       1.45751556            5.8333073         3.03962011       0.183633777\n1288       1.41924918            5.8811292         2.96739096       0.255820707\n1289       0.27162866            3.5412519         0.38175043       0.100160813\n1290       0.31304259            3.4385484         0.26466033       0.262680052\n1291       0.24290684            3.3795361         0.20854714       0.241775028\n1292       0.23383879            3.4671114         0.30516685       0.166974597\n1293       0.85660362            2.6238178         0.86263904       1.176710835\n1294       0.81872774            2.5485914         0.91200153       1.191263993\n1295       0.76987627            2.5647065         0.84553144       1.141578049\n1296       0.87771965            2.7274688         0.75348582       1.080824380\n1297       1.26958420            8.4381614         0.79695045       0.465011406\n1298       1.32697423            8.5017676         0.86728200       0.517319162\n1299       1.42424161            8.6014043         0.91383784       0.562453622\n1300       1.49456778            8.6689968         0.84213966       0.563032430\n1301       0.52293812            5.2325441         4.40703981       0.459966994\n1302       0.54713693            5.1864517         4.36444331       0.492836238\n1303       0.53615510            5.1662954         4.34109921       0.487745475\n1304       0.44362105            5.7924051         0.37092369       0.323339893\n1305       0.42906590            5.8171334         0.39305783       0.384341843\n1306       0.33514025            5.7739912         0.23492514       0.335998107\n1307       0.34167367            5.7625291         0.29199614       0.342609088\n1308       0.33745269            5.7206732         0.35453594       0.331121829\n1309       0.85333341            4.7170591         0.37993023       0.118045626\n1310       0.81089007            4.6809167         0.32463698       0.152993135\n1311       0.81591611            4.6904125         0.28293575       0.199574934\n1312       0.82979292            4.7058700         0.26334602       0.220136798\n1313       0.96450904            4.8413129         0.32345158       0.199371899\n1314       0.86733780            4.7377887         0.34192968       0.143941132\n1315       0.87421738            4.7472502         0.32263670       0.158297951\n1316       0.90083842            4.7756283         0.31698790       0.165162998\n1317       0.93675847            4.8112174         0.34200936       0.150275202\n1318       0.95220220            4.8280563         0.33384745       0.172608499\n1319       0.54415735            2.5773561         0.64810888       0.296045454\n1320       0.64355765            2.5443500         0.69499510       0.276348263\n1321       0.59309281            2.5580493         0.67025277       0.280101828\n1322       2.80072366            0.2635867         5.31327176       0.127210496\n1323       2.79578245            0.2436637         5.31162544       0.115881964\n1324       2.79578245            0.2436637         5.31162544       0.115881964\n1325       2.79578245            0.2436637         5.31162544       0.115881964\n1326       2.79578245            0.2436637         5.31162544       0.115881964\n1327       2.87470546            0.3331129         5.37434808       0.229979118\n1328       2.79578245            0.2436637         5.31162544       0.115881964\n1329       2.79578245            0.2436637         5.31162544       0.115881964\n1330       2.79578245            0.2436637         5.31162544       0.115881964\n1331       2.85643488            0.2145395         5.37377814       0.174124049\n1332       2.79578245            0.2436637         5.31162544       0.115881964\n1333       1.07248149            5.1686408         0.67783513       0.275890864\n1334       1.09854290            5.1281671         0.62029162       0.322086911\n1335       1.06994995            5.2054856         0.71370890       0.259017551\n1336       1.14588580            5.2484843         0.69259721       0.328745694\n1337       1.14267607            5.2933986         0.74141177       0.317515370\n1338       1.11425553            5.3074273         0.77912516       0.287040307\n1339       1.07996673            5.3041322         0.80396545       0.252491659\n1340       0.37592068            3.8798696         0.41232883       0.377368436\n1341       0.44822320            3.9231893         0.44915412       0.346266138\n1342       0.35336639            3.8026294         0.32863218       0.463162411\n1343       0.34873295            3.8134922         0.34047495       0.448920796\n1344       0.33786801            3.8153940         0.34435675       0.444202017\n1345       1.75627059            2.8949367         0.97869131       0.546269436\n1346       1.70483373            2.9244059         0.99572046       0.540736707\n1347       1.66814922            2.9545393         1.01465926       0.506618445\n1348       1.76405590            3.0767667         0.91161443       0.439482641\n1349       1.91039640            3.1638699         0.76808793       0.301136291\n1350       1.86099920            3.2192768         0.82006424       0.349778466\n1351       1.92399019            3.2124067         0.75116092       0.278181120\n1352       1.81364478            3.0813095         0.86607793       0.398783963\n1353       1.77419243            2.9656979         0.93228392       0.484575641\n1354       0.53422194            1.5000195         0.35319442       0.393827302\n1355       0.58925933            1.4466865         0.34694890       0.347690254\n1356       0.61537363            1.4224983         0.40973388       0.345662547\n1357       0.56604998            1.2828840         0.32036314       0.201146235\n1358       0.58276010            1.4530618         0.35229672       0.354217516\n1359       0.40216793            1.6437246         0.19174681       0.306881245\n1360       0.46835805            1.5687727         0.27528230       0.382557830\n1361       0.56472497            4.4972271         0.94105732       0.204777288\n1362       0.65893123            4.4086935         0.88880317       0.284353596\n1363       0.65148275            4.3846630         0.85678583       0.273483207\n1364       0.69998274            4.3634455         0.86043693       0.322204778\n1365       0.78774787            4.3454569         0.89562095       0.412044038\n1366       0.75389707            4.3963615         0.93027788       0.383263414\n1367       0.75009605            4.4344810         0.96885731       0.386498424\n1368       0.77502786            4.4529255         1.00251288       0.416929892\n1369       0.76576476            4.4870820         1.03186703       0.415765990\n1370       0.69088630            4.4935287         0.99812679       0.339077768\n1371       0.69854036            4.5298066         1.03912067       0.358921671\n1372       0.72787623            4.5987188         1.12094059       0.413774742\n1373       0.66569206            4.6924169         1.07284945       0.397120709\n1374       0.63160712            4.6531594         1.05793021       0.346532418\n1375       0.58879595            4.5485348         1.00663588       0.252627902\n1376       0.95912892            5.2516423         0.85588736       0.131683452\n1377       0.96350291            5.1795563         0.78430452       0.154188702\n1378       0.96350291            5.1795563         0.78430452       0.154188702\n1379       0.98978490            5.1262206         0.71545199       0.211363976\n1380       0.98685266            5.0944824         0.69355671       0.229205223\n1381       0.96868057            5.0648289         0.68912738       0.233943073\n1382       0.96350291            5.1795563         0.78430452       0.154188702\n1383       0.72075223            5.7820472         0.50412658       0.720460436\n1384       0.72523050            5.8123153         0.49793957       0.724982172\n1385       0.73508642            5.8476348         0.49669094       0.734885898\n1386       0.70592614            5.8409005         0.46494797       0.705743550\n1387       0.69573497            5.8525156         0.44869301       0.695583884\n1388       0.71585655            5.8988299         0.45665650       0.715766289\n1389       0.71187898            5.9182228         0.44577042       0.711830666\n1390       0.66929133            5.8947042         0.40229482       0.669255701\n1391       0.62649322            5.8203630         0.37826521       0.626363901\n1392       0.66173662            5.7177204         0.46337880       0.661389650\n1393       0.55891874            5.7348305         0.33683201       0.558696621\n1394       0.52814370            5.6943514         0.32275931       0.527871340\n1395       0.53501799            5.6720214         0.34334254       0.534693480\n1396       0.56717430            5.6788757         0.37574351       0.566834766\n1397       0.57750804            5.6598543         0.39713648       0.577126424\n1398       0.62548414            5.6957553         0.43265450       0.625128262\n1399       0.63039494            5.7310828         0.42194019       0.630094780\n1400       0.59794975            5.7234848         0.38822212       0.597665073\n1401       0.59462408            5.7517727         0.37071498       0.594396266\n1402       0.64302777            5.7537172         0.42638342       0.642755635\n1403       0.66754807            5.8046050         0.43366315       0.667341620\n1404       0.99387721            4.9942118         0.62162247       0.309538611\n1405       0.96527127            4.9251386         0.61681856       0.344774711\n1406       1.04951121            4.7905128         0.50439625       0.342837925\n1407       1.09581460            4.7611082         0.45834192       0.302332399\n1408       1.14594573            4.8957256         0.42991311       0.430499753\n1409       1.13336313            5.0013441         0.49538689       0.426962292\n1410       1.15102934            5.0768847         0.53327734       0.401673670\n1411       0.61932504            5.0011743         0.86657639       0.548127104\n1412       0.62464634            5.0999687         0.79886470       0.619068067\n1413       0.59559978            5.1043203         0.75906610       0.611606313\n1414       0.59706350            5.0269533         0.82356067       0.555562069\n1415       0.59428760            5.0424170         0.80867889       0.565454692\n1416       0.51704616            4.9576685         0.78769217       0.471331727\n1417       0.51375702            4.9780289         0.76865689       0.486115378\n1418       0.49440661            3.9669271         0.96658193       0.163715863\n1419       0.61868655            4.0333800         1.02233145       0.165079993\n1420       0.61868655            4.0333800         1.02233145       0.165079993\n1421       0.52904731            3.9798121         0.98516807       0.148557979\n1422       0.52904731            3.9798121         0.98516807       0.148557979\n1423       0.52904731            3.9798121         0.98516807       0.148557979\n1424       0.49480445            3.9623487         0.97057447       0.159754450\n1425       0.50455242            3.9575750         0.98231734       0.147980300\n1426       0.49480445            3.9623487         0.97057447       0.159754450\n1427       0.63395972            8.1421570         1.66601697       0.389925999\n1428       0.67332681            8.0667071         1.58873710       0.338949965\n1429       0.61909544            7.9555058         1.48222182       0.326219275\n1430       0.67489506            7.9895240         1.52464803       0.374525175\n1431       0.70057936            7.9763424         1.52904327       0.419925718\n1432       0.66831972            7.9612841         1.52196904       0.400672186\n1433       0.56270769            7.9670045         1.56371913       0.384317914\n1434       0.97785425            7.0882314         0.28846338       0.418713674\n1435       0.96680694            7.1164883         0.29437393       0.441149025\n1436       0.79776789            6.8975456         0.49886057       0.595432955\n       PROX_MRT  PROX_PARK PROX_PRIMARY_SCH PROX_TOP_PRIMARY_SCH\n1    0.56071880 1.17104455       1.63402561           3.32731951\n2    0.65844609 0.19922689       0.97478342           0.97478342\n3    0.30534334 0.27798856       1.47150162           1.47150162\n4    0.69101825 0.98328426       1.45463245           2.30063939\n5    0.52891002 0.11642024       0.70946032           0.70946032\n6    0.31966371 0.41025750       0.84950392           0.84950392\n7    0.63706168 0.41736267       0.22594815           2.80891494\n8    0.53343365 0.12554063       0.63788892           0.63788892\n9    0.30380650 0.27258503       1.64314719           3.38980144\n10   0.54063319 0.47912229       0.78785607           0.78785607\n11   0.28340470 0.62482802       0.62469196           2.09170897\n12   0.17147752 0.26961143       0.25341071           0.25341071\n13   0.20019823 1.40547664       1.04017929           2.82038156\n14   0.59593184 0.19920953       0.50419114           0.50419114\n15   0.63693321 0.42153957       0.22928612           2.85806331\n16   0.59530652 1.18791297       1.57949044           2.52526997\n17   0.65257875 0.72260256       0.55057691           2.76540532\n18   0.10373486 0.30438305       0.98068902           2.04245259\n19   0.59456034 0.28831183       0.76257101           1.68722807\n20   0.76472250 1.29576833       1.22108352           2.49478246\n21   0.61114068 0.23345415       0.85743880           0.85743880\n22   0.52998355 0.41899145       0.63496492           3.03330315\n23   0.17447836 0.37041234       1.10375748           1.10375748\n24   0.75852584 0.14886522       0.35379291           2.83619960\n25   0.71973323 0.17170345       0.40236347           2.79435487\n26   0.15541986 0.66774916       1.73316343           2.08800097\n27   0.44052483 0.81516636       0.51002430           3.46783654\n28   1.10671207 0.63881141       0.61624278           0.81160881\n29   1.11631785 0.66644873       0.59308243           0.77727903\n30   1.13572290 0.68096039       0.60512965           0.77567944\n31   0.43669607 0.33212786       0.34212613           1.48606683\n32   0.45633782 0.35190246       0.32238920           1.48376235\n33   0.50012904 0.40557759       0.82505127           0.82505127\n34   0.21645846 0.19076822       0.39947800           0.39947800\n35   0.82846855 0.15962555       0.50435046           1.13655683\n36   0.30171792 0.54908738       0.67789834           0.67789834\n37   0.60250177 0.51487872       0.90268885           0.90268885\n38   0.28941423 0.27225328       0.61324942           0.61324942\n39   0.42095410 0.71091883       0.67711732           2.21244955\n40   0.45606919 0.25370366       0.27197619           0.27197619\n41   0.45541225 0.43089462       0.76475393           1.83360491\n42   0.52857179 0.49159000       0.21047465           2.96385544\n43   0.66552779 0.34412090       1.00242683           3.48083067\n44   1.72596825 1.25770071       0.77543982           0.77543982\n45   0.53334450 0.86018281       0.67343281           2.21506255\n46   0.69932363 1.02403801       0.89295709           2.04112696\n47   0.37116035 0.11979252       1.38507828           1.38507828\n48   0.43192414 0.48337879       0.32309405           2.77631777\n49   0.46491386 0.77066659       0.57211551           2.26678336\n50   0.50642020 0.54667760       0.19918405           0.19918405\n51   0.24262402 0.17909558       0.37594009           0.37594009\n52   0.77937737 0.36781805       0.26554693           1.84102227\n53   0.72250028 0.31109924       0.26784882           1.80835348\n54   1.07458363 0.59078850       0.63208593           0.85332280\n55   1.07092030 0.58451274       0.63512910           0.85933596\n56   0.44129150 0.23045159       0.56804681           2.66175466\n57   0.43272233 0.87762034       0.70703100           3.55546699\n58   0.43461614 0.85681679       0.67936960           3.57917243\n59   0.29933342 0.23850934       0.50973936           3.00819821\n60   0.10367525 0.27281355       1.25837002           1.25837002\n61   0.74525324 0.73345548       0.57253906           2.23466393\n62   0.37839099 0.72978463       0.61256276           2.20997089\n63   0.45268115 1.11406565       1.13614857           2.84382354\n64   0.39629096 0.50317116       0.53343314           2.99171656\n65   0.42632651 0.17117266       0.44898041           2.17334666\n66   1.11232560 1.24259679       1.67437196           3.11288287\n67   0.48662956 0.56309299       1.19877177           1.42847384\n68   0.84956024 0.34392060       0.75068546           3.44123484\n69   0.39210828 1.43086325       1.35996379           2.89603569\n70   0.58050712 0.15349952       0.36729400           2.05771968\n71   0.58974383 0.18010814       0.39347899           2.07985784\n72   0.62358456 0.20768310       0.41498869           2.08681741\n73   0.52868911 0.11920058       1.07826557           1.07826557\n74   0.57084598 0.13247904       1.09150035           1.09150035\n75   1.76858298 1.30414362       0.78306776           0.78306776\n76   0.13456394 1.34753547       1.24622245           2.76495756\n77   0.24198222 0.63058421       2.09281832           3.87238691\n78   1.74033920 0.83952229       2.14967794           3.29517673\n79   1.67921955 0.81434427       2.07899484           3.22836540\n80   1.77319902 0.80898087       2.17628258           3.30702149\n81   0.31452071 0.23300588       1.21101131           1.21101131\n82   0.31193046 0.30385723       1.68870495           3.43363961\n83   0.37743850 0.37068495       1.68844991           3.42954005\n84   0.46278118 0.26685061       1.85850920           3.58930393\n85   0.44326509 0.38776937       1.68742097           3.42332151\n86   0.13643729 0.69857546       0.55707902           3.36211085\n87   0.14492651 0.71521054       0.57753364           3.34218539\n88   0.83641408 0.31320720       0.95496661           1.57608889\n89   0.94022343 0.15962916       0.37483088           2.62915459\n90   0.92842414 0.16618454       0.38925040           2.61834642\n91   0.44122678 0.40987444       0.21276519           2.40838961\n92   0.60740363 0.42279704       0.97264403           0.97264403\n93   0.51178069 0.31322854       0.79467847           0.79467847\n94   0.84086807 0.55569927       0.62943806           2.23595978\n95   0.84364960 0.54289094       0.64474430           2.25119357\n96   0.05277942 0.12706460       0.45394238           5.75828289\n97   0.08985769 0.18086143       0.39913654           5.76768600\n98   0.63206097 0.31133291       0.74798578           1.72140261\n99   0.63206097 0.31133291       0.74798578           1.72140261\n100  0.72731814 0.21992336       0.72364778           1.70350163\n101  0.27038717 0.28451443       0.30646375           0.30646375\n102  0.76753846 0.70966200       0.50659526           2.16490604\n103  0.52041578 0.18081471       2.35768014           4.10283147\n104  0.85756177 0.66913929       0.78940637           1.78964964\n105  0.64136932 0.93722424       0.75577124           2.32793002\n106  0.77062038 0.36562098       1.01395531           1.01395531\n107  0.82200478 0.35708627       0.99076228           0.99076228\n108  0.84734928 1.04757505       0.94747028           2.47547528\n109  0.85412444 1.04220200       0.95075046           2.49021563\n110  0.53533881 1.04350670       0.75825426           0.75825426\n111  0.37818153 0.28453645       1.12772217           1.12772217\n112  0.49617868 1.09698987       0.82382521           2.57778776\n113  0.49776761 0.22335551       1.22160651           1.22160651\n114  0.38818893 0.40527777       0.95216088           0.95216088\n115  0.43501543 0.34965463       0.96765041           0.96765041\n116  0.42614747 0.37525518       0.97657125           0.97657125\n117  0.39599990 0.44793521       0.99007452           0.99007452\n118  0.42618569 0.43850147       2.22755705           4.01814090\n119  0.43569773 0.42830764       2.21062402           4.00223699\n120  0.44405484 0.42244803       2.18730203           3.97988992\n121  0.46878710 0.39516706       2.22771147           4.02077950\n122  0.45085323 0.41477482       2.24534111           4.03694801\n123  1.14944846 1.16118796       1.67535039           3.07538060\n124  1.18078515 1.13910392       1.69922702           3.08551647\n125  0.33841590 0.98733547       0.98042550           2.88666894\n126  0.21465891 0.14847112       1.53752237           1.53752237\n127  0.84398447 0.37192005       0.51164485           0.51164485\n128  0.09702160 0.29302920       0.23858103           2.00183007\n129  3.12825159 0.52905792       3.61156009           3.83658993\n130  3.12053413 0.49723780       3.64102083           3.84202744\n131  0.18981492 0.42837433       0.53103982           3.10003672\n132  0.73207526 0.84504672       0.45878710           2.17945923\n133  0.69556686 0.81111093       0.43208605           2.14045200\n134  0.74051448 0.31612058       0.38320203           1.75792474\n135  0.32222702 0.93051543       1.32521243           1.92181958\n136  0.37558548 0.90472235       1.27392658           1.90185534\n137  0.13687004 1.37657432       1.10163130           2.79692945\n138  0.14812265 1.40007492       1.10293779           2.82072970\n139  0.07040294 0.39887923       0.35788189           1.88398896\n140  0.41047172 0.26835307       0.79319983           2.91537403\n141  0.36503591 0.32826829       0.86493825           2.85328453\n142  0.17884235 0.36274786       0.58322338           0.58322338\n143  0.18140750 0.15647233       0.31735492           2.23759177\n144  0.38816259 0.52676145       0.36070299           2.38058252\n145  0.52133590 0.18998180       0.46677208           2.81552119\n146  0.48553525 0.54021691       1.30282000           1.30282000\n147  0.38683329 0.44864151       1.31327545           1.40424945\n148  0.36096790 0.42846784       1.27963832           1.44475692\n149  0.50113989 0.77306476       1.51072287           2.12199010\n150  0.67930846 0.70399350       0.58811277           1.69642329\n151  0.73318528 0.14877205       0.18478201           1.58015600\n152  0.73291077 0.14448915       0.18823821           1.57242180\n153  0.80988325 0.20668511       0.14472553           1.52209684\n154  0.15012241 0.16606628       0.71265495           1.74780044\n155  0.65162444 1.02279686       0.49823059           2.46979923\n156  0.46845291 0.53179225       0.43878270           2.25388831\n157  0.26776438 1.03998155       1.02325143           2.95770053\n158  1.24807024 0.17410813       0.64190099           0.64190099\n159  0.71145284 0.61314687       0.52000732           2.02164082\n160  0.66615807 0.26843165       0.73887271           2.23998500\n161  0.36452573 0.11957766       2.20372125           3.94992481\n162  0.60729989 0.17567138       1.03782523           1.03782523\n163  0.52948049 0.10172423       0.96186723           0.96186723\n164  0.29295499 0.19837670       0.17536523           1.55205706\n165  0.62695351 0.27679767       0.69490198           0.91506172\n166  1.22826807 0.16610660       0.65236872           0.65236872\n167  1.17421894 0.14278006       0.69439644           0.69439644\n168  1.17361889 0.09777520       0.71936655           0.71936655\n169  0.62287794 0.29391643       0.67377286           0.86099422\n170  0.65452331 0.28435499       0.63639345           0.81112027\n171  0.48304272 1.11135551       0.95842347           2.68898881\n172  0.40643212 0.95654384       0.96227918           2.82030736\n173  0.73239735 0.40111575       1.02975565           1.54477332\n174  0.20187419 0.15578880       0.49848717           0.49848717\n175  0.18312574 0.13560083       0.46561205           0.46561205\n176  0.29619591 0.23782898       0.65578413           0.65578413\n177  0.33345131 0.18543309       0.66483487           0.66483487\n178  0.27612393 0.23492183       0.60506524           0.60506524\n179  0.49230516 0.43276098       0.45319284           1.80123481\n180  0.08835501 0.55260516       0.61238178           3.14182190\n181  0.62660204 0.44681752       0.76654189           0.76654189\n182  0.47829527 0.22133879       1.08255919           1.08255919\n183  0.47863422 0.22143981       1.08277797           1.08277797\n184  1.00595427 0.15974760       0.89886451           3.63793437\n185  0.24352408 0.28188078       1.39458015           1.48339502\n186  0.17526507 0.23592094       1.32594710           1.56483892\n187  0.16082853 0.19572727       1.38568443           1.55875890\n188  0.65204184 1.34960994       1.29683403           2.58507044\n189  0.74626405 1.26619213       1.27213775           2.48930217\n190  0.66298526 0.81710864       0.43687253           3.74382795\n191  0.59809293 0.36006682       0.98462723           0.98462723\n192  0.67750074 0.26200711       0.97115262           0.97115262\n193  0.74049678 0.29092805       1.93125340           4.38852872\n194  0.65375738 0.37140349       2.03353009           4.49277940\n195  0.14585392 0.51749714       1.24128032           1.29897087\n196  0.69263303 0.49829514       0.88882435           0.88882435\n197  0.70985541 0.49286239       0.85792050           0.85792050\n198  0.64112771 0.43236847       0.79746569           0.79746569\n199  0.62747520 0.45658912       0.36297419           2.49344781\n200  0.64667737 0.23445485       0.91785436           5.11030389\n201  0.62392428 0.47900708       1.25362354           1.25362354\n202  0.91292438 0.14443522       0.68406319           4.69582445\n203  0.91292438 0.14443522       0.68406319           4.69582445\n204  0.60056707 0.43313893       1.18008059           1.18008059\n205  0.60410548 0.42077938       1.17774635           1.17774635\n206  0.38342337 0.35034996       0.60637557           2.39861074\n207  0.91303386 0.19700360       0.63186374           0.93108370\n208  0.96270199 0.18527384       0.58132303           0.88109747\n209  0.46577499 0.41158716       0.22307924           2.69168913\n210  0.47946006 0.59209212       0.86440237           0.86440237\n211  0.26104142 0.26282644       0.59552814           2.09085075\n212  0.62426387 0.75129462       0.78740557           2.40865821\n213  0.51595659 0.34104033       0.80564190           5.24598011\n214  1.92619784 0.21016387       0.95286225           0.95286225\n215  1.96434657 0.28606086       0.99331500           0.99331500\n216  2.01389960 0.29735788       1.04137449           1.04137449\n217  0.72689864 0.33728887       0.73992845           0.88107424\n218  0.72590049 0.33420745       0.73628015           0.88549912\n219  0.17041211 0.28749183       0.36536805           2.11475339\n220  0.10325476 0.38077453       0.36513567           2.17296605\n221  0.14324810 0.41358069       0.32229157           2.23797370\n222  0.63707530 0.36166631       0.31985692           2.60573388\n223  0.62991012 0.35491765       0.31301029           2.60301722\n224  0.62094973 0.46746879       0.31081248           2.63708845\n225  0.22051879 0.55795175       0.30660200           0.64506782\n226  0.21919789 0.56132070       0.29939979           0.65227454\n227  0.62348528 0.74873315       1.01712251           1.01712251\n228  0.61583233 0.76622631       1.01918668           1.01918668\n229  0.50801113 0.21334140       0.79694084           3.13173139\n230  0.54691806 0.24194747       0.78264989           3.11522300\n231  0.56783781 0.23540844       0.80045152           3.10305260\n232  0.51672624 0.16453183       0.84322888           2.01656794\n233  0.55243305 0.61777445       0.22870337           0.22870337\n234  0.62672941 1.21371886       1.00731515           2.86822073\n235  0.66594696 1.17624373       0.97448789           2.84598922\n236  0.24147846 0.22977169       0.11659203           2.42243286\n237  0.45781364 0.97688835       0.73438461           3.20818352\n238  0.20109994 0.66312927       2.14288884           3.91707536\n239  0.24577250 0.61822397       2.15147071           3.92995033\n240  0.39867450 0.35638137       0.34693455           0.34693455\n241  0.34324899 0.42189714       0.36835742           0.36835742\n242  0.40527024 0.31287130       0.39406766           0.39406766\n243  0.45679086 0.88397381       0.52670512           2.18519163\n244  0.49648342 0.90414319       0.48360544           2.15192651\n245  0.43671763 0.68754345       0.68060247           2.70422254\n246  0.43083396 0.67260049       0.64528132           2.74689148\n247  0.47504637 0.42158572       0.44845054           2.35030491\n248  0.44433172 0.46221542       0.46761307           2.30505946\n249  1.21853611 0.14322325       0.69517036           2.12307868\n250  1.19656327 0.11236572       0.67568776           2.08870054\n251  1.28559916 0.21017333       0.76155342           2.18881800\n252  0.13137020 0.35478985       0.54115166           0.54115166\n253  0.23304216 0.46533886       0.63645520           0.63645520\n254  0.28367092 0.52109920       0.68009356           0.68009356\n255  0.66168909 0.50797429       0.24483460           1.85554916\n256  0.65764811 0.51586106       0.26482173           1.85776463\n257  0.33234457 0.20939582       0.37561626           1.91025859\n258  0.30144080 0.22839837       0.37372369           1.88833342\n259  0.38531935 1.45109143       1.17371545           2.91376383\n260  1.01467274 0.25405027       0.62287389           1.01902293\n261  1.00629710 0.25159393       0.62405575           1.01467750\n262  0.41942261 0.15565754       0.33328026           6.10884195\n263  0.54181003 0.73535550       0.60123496           2.39392829\n264  0.59169069 0.70010264       0.62697698           2.46534730\n265  0.65585290 0.70473177       0.65378100           2.52717453\n266  0.33204964 0.37914371       0.49596521           1.73875250\n267  0.38959909 1.34399633       1.50161796           2.73078783\n268  0.45389378 1.36284814       1.55434456           2.73877292\n269  0.39700139 0.16678172       0.37184137           1.98202521\n270  0.58518042 0.33097027       0.54997299           1.97128191\n271  0.50233440 0.23548183       0.45412030           2.00201325\n272  3.47582094 0.30688475       3.92898914           4.19249910\n273  0.80903771 0.78383917       0.65989447           1.59254546\n274  0.33881676 0.61447791       0.44042315           2.90927505\n275  0.31772861 1.04331828       1.37759454           1.37759454\n276  0.20495327 0.79616260       0.46163168           1.77791071\n277  1.53908415 0.76812523       1.87390442           3.49741731\n278  0.70114546 0.28112538       0.33229866           1.83344774\n279  0.25198750 0.71381912       0.56415523           2.99497913\n280  0.72587377 0.36934869       1.04961917           3.56345133\n281  0.76020565 0.40337031       1.08601558           3.59864754\n282  0.40214274 0.32207680       0.76795798           0.76795798\n283  0.59216087 0.21111865       0.54651619           1.02104230\n284  0.57302063 0.20040863       0.52464903           1.01229445\n285  0.50650038 1.03809714       0.74293875           3.56938844\n286  0.55014408 0.36986607       1.90460204           1.90460204\n287  0.62563002 0.29330587       1.85835449           1.85835449\n288  0.24393144 0.33654447       1.12842310           1.12842310\n289  0.27870819 0.27293853       1.04135596           1.04135596\n290  0.31298092 0.25222327       1.02935391           1.02935391\n291  0.34803786 0.23795828       1.02011363           1.02011363\n292  0.31569255 0.27312031       1.05422709           1.05422709\n293  0.13552314 1.24234530       0.93175011           0.93175011\n294  0.46078112 0.12645093       1.48022587           1.50015094\n295  1.50951617 0.20829291       0.86476935           2.25598969\n296  1.89236148 0.56375265       2.19665938           3.18178440\n297  1.90866989 0.56486543       2.22256843           3.21492688\n298  1.86129775 0.53040175       2.14525195           3.11478869\n299  0.77311131 0.83761919       1.18072173           1.18072173\n300  0.47911835 0.30260438       0.31371723           2.22741866\n301  0.52363847 0.87346967       0.56486897           1.41103781\n302  0.36397977 0.27797011       1.26931102           1.26931102\n303  0.15090986 1.11453839       1.37605036           2.53405610\n304  0.18351989 1.09267123       1.41294839           2.51090031\n305  0.20355508 1.06942714       1.42890194           2.48777702\n306  1.00146445 0.36012976       1.55065939           1.55065939\n307  1.00146445 0.36012976       1.55065939           1.55065939\n308  0.33700832 0.77834392       0.74912997           3.50450637\n309  0.71479479 0.80356296       0.97433021           1.55573885\n310  0.21417526 0.13135696       0.58002689           0.58002689\n311  0.21460256 0.14799863       0.57923030           0.57923030\n312  0.71787139 0.53322225       0.44563369           2.67496390\n313  0.69815091 0.53267292       0.45848554           2.65501871\n314  0.64111534 0.54159819       0.50387311           2.59470517\n315  0.14507555 1.30600464       0.92755162           0.92755162\n316  0.21645576 0.76149582       0.62747838           3.05005992\n317  0.41890204 0.40751194       0.71094001           2.16773771\n318  0.38272628 0.32577862       0.65684034           2.12709389\n319  0.77488101 0.56469566       0.83655573           0.83655573\n320  0.73358893 0.56675816       0.85549133           0.85549133\n321  0.81855026 0.58619798       0.84398746           0.84398746\n322  0.87716270 0.37028648       0.45884679           0.45884679\n323  0.99393280 0.48484333       0.52091080           0.52091080\n324  0.55308036 0.30864755       0.69331951           3.13533914\n325  0.37324406 0.20414139       0.37488484           2.09855438\n326  0.69304788 0.48410395       1.32820496           1.43536465\n327  0.63649606 0.52102958       1.37832264           1.48977889\n328  0.63649606 0.52102958       1.37832264           1.48977889\n329  0.62895514 0.56840333       1.29525952           1.50740340\n330  1.96184932 0.09796830       1.12465914           1.12465914\n331  2.03945922 0.14362523       1.12356988           1.12356988\n332  1.95586117 0.11133434       1.04589215           1.04589215\n333  0.26457553 0.23729839       1.12984284           1.91271148\n334  0.39509172 0.57619236       0.43977259           2.85093611\n335  0.40939834 0.58168058       0.45442607           2.84707102\n336  0.40252127 0.40298133       0.67710571           3.01105307\n337  0.87356429 0.17253331       0.07710613           0.07710613\n338  0.93577130 0.21111600       0.07888308           0.07888308\n339  0.63675773 0.41738940       0.44351160           1.79649173\n340  1.78549844 0.13477628       1.52032628           1.52032628\n341  1.87764844 0.10433537       1.60868178           1.67252574\n342  0.11688482 0.81593330       0.88411329           1.67807514\n343  0.28127774 0.67341771       1.96662969           3.74869895\n344  0.70470360 0.67202230       0.50979886           1.62089327\n345  0.71746273 0.67950241       0.51444466           1.60858144\n346  0.59648794 0.26098080       0.24767509           0.24767509\n347  0.53126028 0.33434902       0.22005427           0.22005427\n348  0.60177805 0.23323794       0.27378274           0.27378274\n349  0.57967357 0.24090131       0.27589492           0.27589492\n350  0.24954688 0.53481205       0.33260977           5.55490422\n351  0.23181539 0.45758506       0.25532954           5.62894090\n352  0.53112198 0.54972871       0.40041394           2.67387516\n353  0.49796910 0.53276035       0.43415140           2.67370877\n354  0.48679723 0.52215762       0.44589300           2.67475631\n355  0.36278444 0.35675210       0.73881606           3.05362636\n356  0.35765369 0.34984401       0.75236735           3.06458596\n357  0.31741230 0.32645148       0.68294052           2.95588200\n358  0.41769665 0.18357078       1.14468904           1.78064952\n359  0.38067922 0.22717257       1.19694069           1.78218731\n360  0.13368205 0.52943782       0.46513076           1.47187108\n361  0.52976268 0.23199362       0.17579045           1.88053798\n362  0.45047556 0.30365987       0.25400241           1.88059189\n363  1.31558774 0.06327031       1.05464582           3.92357633\n364  1.23862325 0.07650165       1.02768824           3.85275807\n365  1.27067728 0.10984159       0.99794339           3.85227142\n366  0.67008792 0.82657753       0.49468535           0.49468535\n367  0.71250620 0.85009015       0.47694591           0.47694591\n368  0.66939298 0.89031828       0.53861767           0.53861767\n369  0.68599696 0.90555719       0.53821115           0.53821115\n370  0.84844047 0.20080229       0.62413170           4.63108932\n371  0.84844047 0.20080229       0.62413170           4.63108932\n372  0.74233495 0.18249259       0.56523605           4.54864822\n373  0.25230312 0.60069427       0.33075690           1.65845680\n374  0.05329907 0.16038686       0.82166773           1.60629381\n375  0.12855955 0.22854715       0.86690511           1.65004972\n376  0.82048971 1.11471491       0.36605095           5.95966021\n377  0.80889663 1.14742438       0.40997995           5.96584351\n378  0.86562767 1.11167668       0.41042385           6.02474330\n379  2.93007780 1.70574432       2.92285457           3.73035709\n380  2.92736252 1.70804596       2.92024270           3.72850028\n381  2.92967883 1.70729951       2.92438584           3.73307668\n382  3.04174826 1.62316615       3.04445806           3.82988670\n383  3.02729364 1.64103787       3.03848366           3.83235746\n384  0.17191270 0.13695740       0.49632002           1.61203938\n385  0.24358237 0.13646084       0.48086092           1.58929463\n386  0.29398008 0.24941790       0.57147915           1.74824150\n387  0.34969291 0.28163362       0.48429376           1.70210512\n388  0.67722602 0.53591485       0.55522661           1.94442130\n389  0.74763402 0.52211119       0.45237629           1.93689039\n390  0.64452113 0.45213193       0.52486633           1.85911353\n391  0.76069876 0.46335238       0.40118558           1.89269055\n392  0.40910959 1.40447144       1.39838526           2.93425863\n393  0.39201892 1.46488873       1.45757619           2.89301403\n394  0.68593137 0.34488552       0.64748106           1.17168532\n395  0.62402563 0.28122360       0.60569062           1.17350696\n396  0.27179971 0.43280443       0.60987073           2.98838068\n397  0.29221932 0.34788311       1.68082936           1.68082936\n398  0.28253093 0.47429275       0.59813428           2.94625029\n399  0.32427908 0.48187400       0.55053356           2.90460230\n400  0.96126162 0.32774799       1.20892749           1.20892749\n401  0.92560725 0.29722047       1.31189475           1.31189475\n402  0.46946487 0.15817967       2.02786371           3.76053297\n403  0.59573522 0.26556583       2.10877330           3.83179723\n404  0.63174522 0.23816331       2.18072369           3.96529776\n405  0.22473835 0.82337150       0.51466585           3.19165423\n406  0.31655985 0.71688642       0.39497402           3.11388623\n407  0.28232262 1.03921588       0.70627573           2.08566381\n408  0.25147505 0.96286172       0.70568963           2.03986226\n409  0.41384133 0.64243240       0.59671190           2.76795406\n410  0.33998584 0.58600058       0.57308119           2.66073463\n411  0.76312562 0.35085738       0.46273456           3.13882740\n412  0.93635986 0.18982853       0.31102571           3.16060824\n413  0.69748097 0.70125915       0.55374067           2.71928497\n414  0.72319898 0.66952506       0.53976786           2.69309474\n415  0.73990614 0.67661488       0.57741691           2.63257955\n416  0.74320251 0.63887276       0.53508117           2.65566469\n417  0.94743024 0.23628214       0.18483032           0.54622626\n418  0.86894157 0.23626816       0.23114634           0.49001001\n419  0.74892981 0.49162995       0.59206618           1.47164775\n420  0.16654597 0.42888464       0.35236355           1.39841127\n421  1.00181100 0.12823477       0.83391386           4.85628274\n422  0.49266361 0.27357187       0.65835766           0.65835766\n423  0.44207272 0.30178775       0.59567401           0.59567401\n424  0.46042643 0.36196614       0.69086605           0.69086605\n425  0.46042643 0.36196614       0.69086605           0.69086605\n426  0.62843834 0.18021149       0.86704955           1.40259725\n427  0.62180353 0.18173109       0.87388403           1.39906124\n428  0.61483604 0.18387464       0.88092391           1.39569349\n429  0.70576320 0.40967243       0.77907126           0.77907126\n430  0.72318344 0.39351030       0.79979226           0.81627900\n431  0.66672098 0.35350830       0.72791273           0.72791273\n432  1.06971910 0.10955851       0.45067250           3.36625373\n433  0.14143895 0.68458234       1.47059326           3.18749797\n434  0.73629182 0.26228175       1.01538491           1.05433671\n435  0.83038861 0.26291176       0.91959272           0.99603880\n436  0.65134279 0.31081766       1.11421522           1.15089231\n437  0.88189161 0.44169022       1.16861496           3.67421407\n438  0.35920321 0.51956338       0.76205870           0.76205870\n439  0.30494617 0.46800374       0.70730929           0.70730929\n440  0.26307165 0.42254949       0.66263711           0.66263711\n441  0.20395459 0.44836010       0.51459369           2.41618038\n442  0.20395459 0.44836010       0.51459369           2.41618038\n443  0.50156682 0.85015565       0.86014464           2.16059115\n444  0.44198972 0.07405898       0.74198314           1.74299786\n445  0.41210592 0.12383797       0.77353304           1.75184454\n446  0.17839962 0.21151162       0.44596249           1.46272338\n447  0.19630992 0.15274607       0.40092054           1.48638231\n448  0.11992544 0.23347819       0.40620128           1.40829341\n449  0.10337493 0.23320720       0.35157373           2.29685185\n450  0.12556390 0.32535987       0.42676657           2.32149728\n451  0.12762904 0.32402048       0.42725745           2.31725083\n452  0.07514248 0.66440921       0.35207133           1.54606002\n453  0.13337727 0.65313930       0.41554035           1.60051767\n454  0.19422151 0.32787830       0.35824809           2.15110080\n455  0.22938217 0.19235358       0.29089210           1.20690860\n456  0.23468506 0.18792750       0.25296927           1.14546202\n457  1.93983689 0.20391904       1.93918578           2.91032748\n458  1.94785118 0.22370686       1.93740243           2.92925100\n459  0.53315770 0.12381575       0.30828364           2.70097324\n460  0.54424173 0.12139241       0.33293255           2.72539086\n461  0.57014781 0.28557558       1.17060877           1.17060877\n462  0.54751028 0.22606714       1.11797034           1.11797034\n463  0.45099999 0.23320476       0.63977280           0.63977280\n464  0.37538745 0.22556688       0.69269243           0.69269243\n465  0.35658105 0.26578560       0.74618912           0.74618912\n466  0.58890251 0.72799510       0.35105773           3.74743907\n467  0.40687904 0.89652105       0.66614620           1.53361159\n468  0.43850842 0.80008495       0.64628523           1.60231973\n469  0.34170560 0.38268842       0.43416055           1.89708877\n470  0.33936670 0.38165601       0.43120634           1.89658660\n471  0.35971017 0.36915892       0.48699997           1.94077460\n472  0.36145767 0.36823870       0.49145157           1.94462331\n473  0.37547927 0.40999804       0.45988078           1.88463144\n474  0.29538662 0.06697146       0.41768005           1.58245010\n475  0.29769953 0.06816695       0.42077762           1.58503468\n476  0.29627770 0.06871740       0.42010028           1.58362806\n477  0.35980900 0.33743956       0.48029895           0.48029895\n478  0.42216687 0.27581471       0.45439864           0.45439864\n479  0.37514538 0.30414205       0.55242527           0.55242527\n480  0.41518875 0.27395610       0.53149226           0.53149226\n481  0.58836471 0.57738650       0.64490459           2.19742012\n482  0.52350972 0.60061060       1.18822814           1.41800674\n483  0.41853588 0.49687680       1.19275735           1.47453234\n484  0.44063342 0.52584883       1.11724832           1.53128491\n485  0.57320401 0.94057995       0.55771149           3.71287790\n486  0.56274134 0.89976864       0.52471285           3.73377625\n487  0.59641920 0.87348377       0.48861755           3.77043990\n488  0.99657537 0.91761839       0.48491332           6.42201846\n489  0.96058588 0.88232337       0.45081857           6.44421617\n490  0.96058588 0.88232337       0.45081857           6.44421617\n491  0.96058588 0.88232337       0.45081857           6.44421617\n492  0.33431511 0.16392422       0.35103130           2.13254179\n493  3.32591192 1.29477824       3.23757929           3.88205225\n494  3.43417829 1.12484103       3.37415336           3.95454559\n495  3.43674987 1.14364593       3.36368880           3.95213619\n496  0.52785711 0.98049994       0.69023074           3.59823403\n497  0.48712243 0.90129018       0.64581979           3.61904197\n498  0.77427855 0.36538099       0.35161589           1.81079062\n499  0.79830007 0.33968546       0.32528545           1.79179163\n500  0.81410125 0.31149502       0.31314709           1.76677790\n501  0.82223870 0.28787339       0.31269211           1.74394652\n502  0.34730283 0.11214587       0.55257942           0.55257942\n503  0.29794871 0.02906416       0.48237269           0.48237269\n504  0.28363755 0.07543506       0.54757784           0.54757784\n505  0.33727704 0.15429696       0.61556725           0.61556725\n506  0.40045035 0.23691032       0.68930561           0.68930561\n507  0.45758140 0.30343274       0.74889319           0.74889319\n508  0.46331131 0.27947112       0.70870636           0.70870636\n509  1.58075411 0.17215055       1.57034936           1.57034936\n510  1.58075411 0.17215055       1.57034936           1.57034936\n511  1.58075411 0.17215055       1.57034936           1.57034936\n512  0.74945072 0.66898186       0.82401217           1.02225123\n513  0.67916100 0.59981313       0.87174477           0.97105466\n514  0.66692456 0.55476972       0.90743195           0.90743195\n515  0.44039545 0.35025972       1.05156791           2.24006223\n516  0.41892369 0.27344712       0.95927836           2.10294841\n517  0.53592548 0.22453498       0.74495062           0.74495062\n518  3.48037319 0.96111722       3.52007129           4.04263089\n519  3.47160261 0.83056702       3.59748380           4.06652466\n520  3.47545315 0.83089000       3.60041480           4.07024936\n521  3.44571185 0.96905955       3.48652393           4.00628353\n522  0.25517439 0.46712866       0.56655872           2.32713124\n523  1.08068968 0.72561984       0.16306324           0.16306324\n524  1.16033488 0.66197576       0.08568643           0.08568643\n525  0.21534761 0.21950199       1.03010900           2.59505851\n526  0.57510883 0.18335898       1.32303065           1.37478192\n527  1.13132433 0.22194284       0.69974103           4.69254472\n528  1.20798385 0.24134472       0.77517104           4.75916978\n529  0.85616313 0.23291702       1.42762012           1.42762012\n530  0.91828296 0.30150311       1.49437825           1.49437825\n531  0.97955703 0.32675168       1.56246063           1.56246063\n532  1.06378116 0.32532719       1.64767995           1.64767995\n533  0.62009426 0.75093667       0.25026280           1.72041475\n534  0.58619615 0.68417083       0.31363591           1.75339796\n535  0.57268506 0.71469623       0.16194143           1.59738742\n536  0.84980085 1.26290873       0.91963575           2.48574322\n537  0.78531982 1.20269004       0.97132628           2.43982440\n538  0.78822266 1.27088152       1.08952500           2.56213413\n539  0.80112590 0.60587705       0.24439557           1.97257234\n540  0.74134537 0.52713052       0.16610566           1.89677699\n541  0.77879378 0.55723750       0.17778231           1.92861793\n542  0.77780551 0.55267233       0.17028470           1.92447332\n543  0.45917855 0.47810060       0.24908584           2.51473097\n544  0.51207587 0.43739702       0.26602144           2.57329143\n545  0.50470802 0.44822470       0.43920036           2.50280806\n546  0.50660747 0.55821859       0.49390039           2.46340548\n547  1.30218097 0.32799134       0.55793026           3.40944584\n548  1.35248035 0.37813591       0.59842490           3.45916640\n549  1.38855720 0.41692530       0.63944202           3.49279142\n550  1.36329110 0.40423857       0.65396010           3.46072765\n551  1.32171223 0.37413439       0.64303004           3.41508447\n552  0.06693727 1.18885434       0.63514360           3.37279474\n553  0.47155123 0.27662416       0.67241564           1.70353703\n554  0.47110449 0.22644947       0.71940505           1.76643517\n555  0.59182190 0.28485240       0.55836018           0.55836018\n556  0.54035986 0.18644160       0.55237571           0.55237571\n557  0.68780482 0.35863315       0.45817396           0.45817396\n558  0.70281104 0.34709569       0.27763227           1.66600170\n559  0.69683735 0.35426765       0.28410963           1.66172775\n560  0.72463464 0.22719090       0.27768820           0.90549455\n561  0.74877336 0.18621424       0.24351838           0.96092495\n562  0.42474350 0.49721645       0.54015529           0.54015529\n563  0.17628406 0.19169938       0.14501184           2.47006631\n564  0.63463412 0.33734207       0.62751255           0.62751255\n565  0.55285277 0.33949861       0.67657701           0.67657701\n566  0.68095437 0.43301179       0.71720921           0.71720921\n567  0.14476505 0.28516966       1.11177827           1.14109697\n568  1.06064726 0.18392594       1.52528484           1.52528484\n569  1.22750497 0.24047397       1.46003647           1.46003647\n570  1.23478531 0.22504912       1.39446116           1.39446116\n571  1.18678094 0.28198879       1.40452436           1.40452436\n572  0.72059109 0.91205771       0.60940956           2.34488718\n573  0.79851653 0.81174958       0.59688420           2.29385202\n574  1.88921601 0.29246688       1.81018207           2.99923246\n575  1.90909849 0.25799533       1.81137828           3.03604844\n576  0.23759131 0.17295736       0.32949191           3.72399356\n577  0.22775667 0.16202451       0.32233559           3.71186188\n578  0.32722053 0.17514367       0.29607046           3.81225047\n579  0.32352274 0.17622293       0.29910240           3.80892811\n580  0.32189725 0.21768586       0.34305621           3.76625075\n581  0.69858603 0.08164105       0.64658516           1.88324443\n582  0.24574533 0.36038379       1.17893452           2.25351843\n583  0.49300500 0.14221120       0.43477283           1.66656809\n584  0.47178797 0.04721715       0.31369046           1.75991833\n585  1.30257624 0.30361888       0.76661449           1.48177194\n586  1.25958278 0.37685168       0.69221946           1.54536475\n587  1.21626526 0.33696468       0.72252781           1.46342613\n588  0.78151930 0.22010654       1.03564763           5.04619097\n589  0.76205798 0.20083687       1.02355336           5.01445266\n590  0.17787663 0.18817653       0.26029523           1.41728346\n591  0.56989283 0.42404792       0.26119257           2.62039286\n592  0.50004638 0.37370220       0.19776625           2.60906699\n593  0.63918405 0.08761730       0.25893000           0.70525281\n594  0.37115155 0.19991064       0.41358109           0.48351041\n595  1.19888212 0.19398739       0.67275417           2.14818068\n596  1.20230079 0.26370660       0.67917698           2.18124537\n597  1.20144663 0.30035252       0.70642428           2.21433843\n598  1.21211876 0.34124856       0.75925097           2.26728676\n599  1.25684012 0.30120370       0.75236925           2.24705918\n600  1.21632318 0.19347943       0.69012729           2.15803649\n601  0.41439356 0.42257763       1.28643670           1.28643670\n602  0.41162628 0.46845139       1.33247851           1.33247851\n603  0.63579953 0.38896378       1.17389565           1.26584716\n604  0.63579953 0.38896378       1.17389565           1.26584716\n605  0.38427190 0.32540834       0.57399097           2.93780005\n606  0.46009556 0.25811635       0.53603061           2.88358715\n607  0.32010707 0.34025553       0.29380673           3.83243110\n608  0.28293145 0.30263242       0.31512287           3.78400447\n609  0.20692350 0.31105893       1.20112709           2.49267213\n610  1.17276388 0.33011342       0.70148369           3.22636229\n611  1.17276388 0.33011342       0.70148369           3.22636229\n612  1.17276388 0.33011342       0.70148369           3.22636229\n613  1.17276388 0.33011342       0.70148369           3.22636229\n614  1.17276388 0.33011342       0.70148369           3.22636229\n615  1.17276388 0.33011342       0.70148369           3.22636229\n616  0.91893375 0.21979880       1.25299509           3.75272582\n617  0.90789036 0.24415431       1.24098261           3.74352553\n618  0.89020240 0.26749046       1.22235965           3.72709852\n619  0.89161441 0.29386512       1.22213081           3.72978131\n620  0.85798459 0.29861448       1.18895922           3.69594617\n621  0.79176824 0.27562725       1.12656474           3.62465684\n622  1.16001198 0.31987222       0.47854768           1.24249068\n623  1.05466478 0.42266125       0.49376621           1.29320159\n624  1.00048101 0.47553199       0.56633654           1.37385891\n625  1.05948564 0.41717270       0.56233517           1.35508845\n626  1.10442514 0.37274036       0.56218526           1.34117568\n627  1.93755904 0.54307710       0.80686341           0.80686341\n628  1.84609511 0.57804648       0.78457934           0.88585979\n629  0.50591304 0.37717521       0.43803991           2.39837180\n630  0.48567835 0.29511428       0.41873093           2.50031219\n631  0.52146066 0.30723255       0.44084913           2.47165936\n632  0.52365107 0.31637475       0.46152679           2.45162665\n633  0.49038475 0.33968932       0.47918037           2.42075797\n634  0.46722846 0.36628981       0.48613011           2.39184505\n635  0.44411104 0.39551332       0.49413941           2.36086108\n636  1.81637555 0.24115840       1.79461764           2.88117548\n637  1.83946483 0.14194945       1.86508013           2.82231080\n638  1.74502292 0.18410032       1.77152356           2.77887529\n639  1.81637555 0.24115840       1.79461764           2.88117548\n640  0.23286207 0.83234978       0.22255857           2.27531969\n641  0.23286207 0.83234978       0.22255857           2.27531969\n642  0.23286207 0.83234978       0.22255857           2.27531969\n643  0.53697449 1.15765697       0.24406517           2.75079375\n644  0.23286207 0.83234978       0.22255857           2.27531969\n645  0.23286207 0.83234978       0.22255857           2.27531969\n646  0.23286207 0.83234978       0.22255857           2.27531969\n647  0.23286207 0.83234978       0.22255857           2.27531969\n648  0.23286207 0.83234978       0.22255857           2.27531969\n649  0.23286207 0.83234978       0.22255857           2.27531969\n650  0.25703168 0.40133176       0.99154790           1.04553108\n651  0.36216654 0.50679993       1.00549895           1.07564448\n652  0.40875650 0.54014975       0.98294093           1.06077613\n653  0.93658750 0.30368762       1.29130068           4.54895743\n654  0.93772611 0.32986337       1.29479650           4.57995128\n655  0.62170318 0.98929805       0.94787854           2.63474767\n656  0.61757603 0.97050751       0.86202341           2.56524547\n657  0.34106101 0.26232887       0.70684637           0.70684637\n658  0.34593170 0.25590271       0.71045492           0.71045492\n659  0.26654933 0.19584839       0.63119716           0.63119716\n660  1.06568442 0.53892824       0.99325009           1.71207093\n661  1.08403392 0.56239324       1.06300770           1.77180043\n662  0.90406288 0.37673497       0.87240305           1.54595822\n663  1.08749830 0.45124450       1.44153998           4.40028043\n664  1.10450109 0.47736977       1.46058801           4.40549129\n665  1.06642336 0.45262212       1.42349111           4.46259118\n666  0.99055702 0.35881142       1.34565020           4.50086317\n667  0.09211406 0.17326264       0.36690101           0.96745482\n668  1.45268274 0.18374032       0.84560551           1.54970059\n669  1.48723176 0.15404152       0.85978497           1.57981162\n670  1.51268427 0.15209229       0.85642577           1.62995098\n671  1.40334629 0.23600676       0.79049094           1.57009990\n672  0.42024007 0.76260903       0.68790533           1.66675251\n673  0.42516367 0.77512897       0.67360557           1.64491385\n674  0.57858777 1.35716858       1.19307703           2.72131661\n675  0.57858777 1.35716858       1.19307703           2.72131661\n676  0.36011720 0.46951438       0.31877665           1.77258514\n677  0.36417957 0.42264234       0.41678903           1.84997107\n678  0.37646508 0.45639026       0.38455930           1.80309835\n679  0.30810057 0.41848117       0.30287523           1.82107639\n680  0.74654913 0.32514920       0.32026029           1.75195219\n681  0.86000640 0.96073562       0.37189406           6.16432423\n682  0.80551795 0.88642667       0.32876757           6.18744109\n683  1.09898548 0.29768804       0.63874614           3.16226776\n684  1.12803824 0.29310306       0.62089251           3.19980752\n685  1.10325575 0.27075246       0.59969559           3.17796250\n686  1.07209931 0.22896728       0.55853620           3.15418798\n687  1.02482244 0.14829433       0.47818992           3.12075770\n688  1.02336165 0.14905279       0.47893593           3.11907736\n689  1.20361508 0.57386837       1.53509035           4.30966286\n690  1.23047241 0.52442344       1.41787217           4.33573201\n691  1.14053957 0.51599025       1.49699039           4.37842714\n692  1.71744273 0.31362257       0.53776601           1.75180966\n693  1.64760389 0.33648715       0.60901214           1.77121175\n694  1.57795258 0.35761931       0.67964163           1.77734320\n695  1.59890626 0.28854520       0.65655725           1.71308548\n696  1.64817269 0.18290125       0.62237699           1.61779334\n697  1.68785837 0.24411422       0.57116057           1.68265280\n698  0.74366988 0.32947036       1.04964307           3.56480845\n699  0.68067672 0.30303058       0.99819675           3.51392480\n700  0.64626288 0.30311786       0.97049585           3.48394922\n701  1.33351054 0.16657234       0.64492553           1.32459555\n702  1.25746805 0.26627068       0.68031944           1.39895237\n703  0.20539276 0.38096251       0.49989873           0.49989873\n704  0.22891350 0.39597506       0.50823623           0.50823623\n705  0.21479869 0.39342801       0.49999726           0.49999726\n706  1.50461969 0.18952986       0.81069750           1.41408678\n707  1.55897044 0.10562941       0.89447158           1.48326851\n708  1.52980723 0.10918861       0.91329102           1.52385405\n709  1.41783637 0.22551364       0.82613777           1.48162069\n710  0.68100662 0.80509922       0.36681873           1.40119677\n711  0.06250364 0.47107908       0.64622105           1.60087091\n712  0.12266392 0.51988654       0.70345453           1.67001998\n713  0.13422627 0.46455914       0.71624914           1.65532250\n714  0.82987590 0.25808405       0.26981990           1.24621885\n715  0.84047263 0.21985826       0.23973516           1.28020152\n716  0.72887202 0.31083840       0.27436166           1.25239729\n717  0.79358289 0.32742551       0.32002589           1.19533362\n718  1.31858415 0.16097726       0.69338428           3.14359529\n719  1.37672971 0.21890501       0.75244347           3.20032788\n720  1.41990723 0.26214916       0.79456192           3.23241575\n721  1.36052177 0.21095444       0.73161040           3.15204244\n722  1.28279549 0.13496773       0.65434065           3.08946375\n723  1.14489705 0.09250881       0.51447556           2.94939658\n724  1.15924767 0.03269857       0.53235898           2.99446976\n725  0.33312605 0.48234044       0.63651501           5.33484461\n726  0.25798966 0.54287711       0.57244149           5.35124315\n727  0.33808249 0.47367864       0.63766595           5.34121746\n728  2.14918470 0.64981460       0.91467097           0.91467097\n729  2.11333554 0.58280883       0.96006583           0.96006583\n730  2.33948590 0.68474835       1.04661716           1.04661716\n731  2.31964673 0.70954480       0.98353250           0.98353250\n732  1.67337442 0.08355113       1.00564595           1.64991154\n733  1.67398554 0.19547958       0.95445411           1.76306230\n734  1.57163756 0.24277170       0.84100395           1.77811705\n735  1.56224202 0.18284654       0.86254372           1.71314894\n736  0.51310466 0.24982986       0.42320297           0.52577438\n737  0.46761499 0.26037673       0.44040186           0.49229704\n738  0.45492122 0.31876937       0.44181894           0.44719184\n739  0.50110599 0.31915226       0.39524015           0.47749771\n740  0.60575421 0.23639264       0.36268318           0.60734408\n741  0.06286033 0.22302533       0.20026720           1.76615078\n742  0.08241941 0.22424549       0.25720861           1.83006933\n743  0.10748917 0.23945105       0.15694803           1.71684119\n744  0.14010046 0.86723313       0.60904327           1.91700802\n745  0.14053333 0.86687352       0.60953473           1.91708073\n746  0.47010651 0.31569577       0.68893305           1.03725544\n747  0.47010651 0.31569577       0.68893305           1.03725544\n748  0.47010651 0.31569577       0.68893305           1.03725544\n749  0.47010651 0.31569577       0.68893305           1.03725544\n750  0.15495438 0.99000904       0.53370790           1.94428989\n751  0.11658254 0.94505685       0.53271096           1.91693514\n752  0.51552925 0.49490084       0.64194052           1.97240969\n753  0.51481333 0.49529967       0.64709335           1.97567025\n754  0.62714127 0.60269637       0.65427432           2.04453088\n755  0.64039025 0.61481878       0.65257852           2.05011429\n756  0.31557693 0.77855634       0.56179961           1.95542084\n757  0.28403390 0.83966070       0.63267566           1.98636233\n758  0.26731345 0.89948146       0.70097213           2.01726429\n759  0.44078586 0.46500917       0.36378513           1.44905609\n760  0.33082530 0.60900554       0.32403718           3.57358851\n761  0.98753757 0.56882097       0.23410239           2.36383627\n762  0.91735806 0.57705382       0.31333604           2.32470206\n763  0.98753757 0.56882097       0.23410239           2.36383627\n764  0.16343203 0.08388450       0.41968990           1.95816934\n765  0.07874895 0.10537096       0.29156399           1.82241813\n766  0.11866346 0.06073499       0.34079172           1.86023311\n767  0.15009883 0.06449687       0.38934408           1.91128967\n768  0.34818280 0.51713793       0.56515908           1.89002148\n769  0.38163456 0.57590564       0.50691989           1.83637654\n770  0.35723108 0.18426401       1.08555422           1.91920328\n771  0.34436419 0.26175326       0.97985797           1.80773250\n772  0.29123594 0.17199738       1.06470806           1.87649889\n773  0.98218780 0.35864691       0.30201480           0.73122557\n774  0.97858157 0.36388708       0.30885139           0.73822650\n775  1.11151950 0.31519924       0.29056351           0.71633400\n776  0.78184016 0.14775299       0.34691552           2.89648456\n777  0.75854285 0.12148539       0.33566049           2.87506124\n778  0.72678950 0.10005385       0.33208150           2.84474144\n779  0.68291160 0.08337126       0.32492314           2.80201241\n780  0.67530957 0.10155683       0.28671998           2.78845817\n781  0.40240416 0.31962770       0.40617808           1.65333633\n782  0.45706363 0.37894169       0.38385608           1.69262931\n783  0.43830069 0.35747771       0.38592151           1.67240144\n784  0.41794687 0.32641543       0.36942066           1.60482970\n785  0.46242347 0.37458460       0.34225931           1.63517579\n786  0.65130413 0.38512916       0.97309848           5.09725340\n787  0.72573485 0.41232490       1.06022016           4.98785978\n788  0.73526159 0.33668552       1.05675412           5.05010504\n789  0.61116095 0.39903576       0.92858221           5.13898330\n790  0.55806501 0.31573222       0.90631794           5.02851004\n791  0.56124999 0.33821800       0.90679701           5.04176643\n792  0.41770598 0.41133695       0.75515822           5.18307485\n793  0.62994499 0.41581354       0.29661914           1.74288146\n794  0.63234619 0.39606506       0.27565725           1.72327122\n795  0.70262298 0.37359016       0.27077062           1.75843804\n796  1.60053597 0.88709331       0.83138025           2.47079214\n797  1.60053597 0.88709331       0.83138025           2.47079214\n798  1.60053597 0.88709331       0.83138025           2.47079214\n799  0.16403134 0.25456909       0.23920041           1.20615666\n800  0.15661103 0.31250812       0.12465943           1.10879814\n801  0.17194200 0.39763358       0.18538348           2.25528489\n802  0.15150508 0.38723847       0.19130814           2.26803076\n803  0.89909355 0.07294047       0.59481850           1.79055901\n804  0.83671582 0.16775983       0.57704772           1.69702968\n805  0.78729308 0.25190842       0.57239387           1.61992595\n806  0.76237472 0.37406839       0.62031069           1.49985555\n807  0.73375983 0.32704289       0.56300740           1.55908985\n808  0.26498790 0.87198334       0.39950302           1.45437642\n809  0.34024210 0.89392010       0.51196994           1.54155581\n810  0.16881134 0.24842079       0.77329536           1.67954874\n811  0.22229866 0.21653848       0.73433617           1.62720471\n812  0.26293253 0.18832584       0.71668136           1.59156170\n813  0.31380742 0.13194356       0.62443179           1.53914723\n814  0.33376275 0.86575349       1.78001040           3.52181252\n815  1.21324680 0.30510297       0.82821595           5.94457716\n816  1.31021393 0.24719870       0.94205431           5.92450292\n817  1.29832367 0.32180915       0.87261810           5.98469040\n818  1.35874316 0.32467749       0.91052367           6.01073571\n819  0.28036653 0.46514490       1.06513862           1.23214388\n820  0.24426841 0.48879718       1.16111128           1.33243859\n821  0.36277398 0.36832291       1.08192740           1.28671800\n822  0.35756307 0.37564089       1.10609522           1.31143192\n823  0.55266316 0.27586555       0.31490952           2.66048817\n824  0.57790996 0.36917566       0.31719565           2.65512424\n825  0.63127899 0.34687090       0.31846316           2.70260198\n826  0.65765188 0.32212265       0.36942497           2.74165438\n827  0.68845849 0.27383626       0.42409674           2.78327809\n828  0.51701861 0.38741077       0.62444545           0.96772108\n829  0.52411445 0.38329347       0.61930524           0.97308637\n830  0.52411445 0.38329347       0.61930524           0.97308637\n831  0.52411445 0.38329347       0.61930524           0.97308637\n832  0.52411445 0.38329347       0.61930524           0.97308637\n833  0.18985480 0.46015424       0.45847832           1.69251772\n834  0.11653467 0.55137133       0.40986449           1.63226759\n835  0.06705047 0.58612172       0.36056852           1.58253015\n836  0.18985480 0.46015424       0.45847832           1.69251772\n837  0.08035810 1.26218196       1.10312590           1.10312590\n838  0.13412833 1.25012216       1.17214975           1.17214975\n839  0.15466325 1.20715645       1.21072261           1.21072261\n840  0.12637092 1.15558635       1.18912744           1.18912744\n841  0.06716363 1.19215801       1.12998305           1.12998305\n842  0.67535435 0.91490619       0.18086351           6.03146726\n843  0.67238311 0.93345967       0.17805772           6.00803649\n844  0.66966126 0.95106945       0.17767598           5.98546029\n845  0.65835187 0.97217384       0.17776759           5.95518087\n846  0.60552355 0.98747627       0.15856533           5.90120641\n847  0.60424921 1.00900185       0.17555704           5.87883590\n848  0.66570511 0.64536481       0.74703383           1.88100939\n849  0.72228430 0.69557312       0.80418948           1.88830874\n850  0.78801063 0.78612380       0.86116060           1.83554981\n851  0.78098693 0.79039904       0.79655071           1.73407767\n852  0.69376759 0.69655874       0.73396233           1.79277572\n853  0.23091842 0.59467117       0.40444805           5.51553199\n854  0.16954479 0.55272443       0.35375399           5.55582508\n855  0.18363802 0.59849137       0.45942521           5.45470078\n856  0.25482851 0.53227084       0.48950904           5.46624608\n857  0.73801320 0.17502020       1.09529444           4.77166967\n858  0.70455055 0.22963601       1.06061338           4.84141082\n859  0.72737604 0.18512345       1.08466696           4.79018990\n860  0.87120302 0.65592346       0.37072183           2.40166826\n861  0.87120302 0.65592346       0.37072183           2.40166826\n862  0.87120302 0.65592346       0.37072183           2.40166826\n863  0.31225675 1.74010517       0.40408486           1.61928703\n864  0.36750059 1.73048188       0.33701498           1.58222992\n865  0.42964436 1.80060870       0.29363076           1.63630585\n866  0.43316224 1.80160156       0.28986031           1.63584457\n867  0.24842459 0.12522526       0.46704960           2.06030911\n868  0.27872175 0.23580858       0.46624969           2.02997160\n869  0.08982213 0.15433428       0.32365135           1.89520829\n870  0.18466064 0.06143006       0.43844006           2.00689289\n871  0.19934299 0.18899542       0.39790049           1.96800940\n872  1.01100039 0.20943635       0.39685603           2.07180325\n873  1.13929594 0.33725144       0.31603245           2.19234943\n874  1.10078908 0.32955556       0.29301842           2.19094095\n875  1.04284759 0.29304978       0.31144462           2.15495790\n876  1.01011394 0.20901514       0.39706395           2.07138767\n877  0.32824970 0.75545270       0.19730920           3.60113815\n878  0.25927567 0.67636295       0.23783489           3.67733694\n879  0.33580953 0.73259426       0.25161077           3.60753991\n880  0.62362672 0.79304142       1.03181717           1.03181717\n881  0.55796338 0.73300755       0.96673951           0.96673951\n882  0.45777339 0.63250437       0.86583908           0.86583908\n883  0.59091357 0.77838259       1.00079901           1.00079901\n884  0.60783513 0.79517295       1.01697382           1.01697382\n885  0.40009716 0.59515324       0.68313598           5.25028944\n886  0.43764626 0.61899751       0.65289945           5.24436357\n887  0.46341826 0.62486418       0.62771245           5.25259674\n888  0.47083322 0.61176953       0.61438804           5.27087386\n889  0.47104544 0.57542024       0.60328673           5.30845617\n890  0.47805161 0.54926506       0.59170163           5.33873093\n891  0.32932251 0.32447933       0.58171125           1.81828168\n892  0.29177917 0.35215338       0.51462064           1.74596295\n893  0.26015547 0.38894427       0.47265740           1.70674857\n894  0.20993518 0.43852166       0.42953394           1.66548969\n895  0.51825096 0.73161166       0.66131677           2.88574690\n896  0.71206451 0.38159607       0.63941081           0.63941081\n897  0.64980191 0.29310370       0.56930807           0.56930807\n898  0.63274750 0.20717663       0.48269561           0.48269561\n899  0.69237216 0.27477069       0.51824508           0.51824508\n900  1.12207103 0.54083822       0.50141240           1.67758596\n901  1.12017729 0.54256657       0.50029608           1.67747607\n902  1.12231023 0.53930057       0.50433970           1.67404702\n903  1.12312180 0.53969359       0.50242174           1.67715244\n904  1.04478805 0.60168825       0.45827187           1.63108942\n905  1.07268121 0.51998041       0.54298056           1.59297123\n906  1.07157279 0.52300434       0.53979020           1.59614099\n907  1.07255944 0.52246924       0.54018168           1.59622594\n908  1.17673745 0.46896916       0.58583683           1.61370388\n909  0.72042444 0.17647770       1.64382796           2.56430259\n910  0.75890745 0.22047059       1.67946047           2.60447498\n911  0.82977427 0.25865612       1.74766631           2.67623983\n912  0.87934356 0.28891676       1.79544919           2.72627275\n913  0.70226518 0.13800103       1.62963589           2.54156504\n914  1.38693465 1.05335305       0.44882546           0.44882546\n915  1.33869848 1.03286715       0.41371105           0.41371105\n916  1.39079119 1.03752158       0.48726893           0.48726893\n917  1.41613584 1.06085078       0.48532643           0.48532643\n918  1.32971100 0.99056050       0.48050251           0.48050251\n919  0.76082039 0.10617985       0.44876827           1.53067577\n920  0.76082039 0.10617985       0.44876827           1.53067577\n921  0.76082039 0.10617985       0.44876827           1.53067577\n922  0.76082039 0.10617985       0.44876827           1.53067577\n923  0.28700378 0.46250679       0.33059814           2.20658887\n924  0.31121018 0.43702825       0.29914285           2.18778387\n925  0.29537730 0.45297549       0.31659640           2.20137081\n926  0.29720445 0.45795217       0.30304647           2.21815625\n927  0.42457924 0.35056072       0.37117073           5.55522711\n928  0.34664083 0.34934533       0.32691689           5.53725366\n929  0.34844012 0.40628182       0.41258717           5.44039328\n930  0.17787744 0.40911797       0.29379711           5.49419498\n931  0.27911863 0.31046283       0.24182581           5.57700670\n932  0.34755323 0.22352588       0.19575845           5.66127720\n933  0.71788714 1.00249493       0.23476669           5.97332126\n934  0.70106150 1.04542373       0.24637280           5.91589831\n935  0.79093789 1.01141027       0.29708864           6.02989274\n936  1.15495344 0.39947623       0.87946626           1.76021761\n937  1.11861613 0.26595515       1.00678742           1.92946550\n938  1.13576373 0.25292764       1.12429266           2.06304544\n939  0.97254886 0.42794455       1.29168114           3.80740678\n940  0.93286682 0.51282181       1.23746199           3.75151647\n941  0.86495720 0.44627553       1.16989889           3.68434598\n942  0.37528686 0.20023262       0.80379650           2.69567974\n943  0.38952227 0.14953001       0.82390619           2.74800397\n944  0.41257561 0.17092988       0.84545742           2.73120612\n945  0.36775999 0.34235896       0.65511974           0.75859243\n946  0.26942714 0.26237414       0.74077806           0.79623104\n947  0.25609169 0.28569562       0.76125809           0.76125809\n948  0.62508112 0.20650904       0.46624352           2.85702266\n949  0.57348229 0.20458236       0.49342198           2.87859006\n950  0.58332505 0.20459695       0.47122831           2.85544100\n951  0.57975604 0.21059302       0.48507135           2.87048130\n952  1.59767369 0.36486199       0.74191436           2.53630681\n953  1.52853070 0.24032952       0.93391115           2.37533055\n954  1.47216271 0.09880727       1.00002959           2.48330460\n955  0.50463674 0.55716900       0.70878472           2.48866776\n956  0.57081049 0.62307856       0.67038694           2.42326082\n957  0.45198727 0.50429987       0.69750809           2.54174607\n958  1.32892201 0.41797269       0.71050496           3.40635541\n959  1.37117101 0.49762080       0.80083515           3.42909664\n960  1.26875163 0.41360767       0.75386209           3.32145636\n961  1.33661385 0.44419438       0.74384504           3.40571960\n962  1.26312934 0.35760499       0.65986211           3.34318041\n963  1.29489271 0.38333838       0.67938577           3.37491341\n964  1.35634466 0.43464023       0.71840198           3.43664586\n965  1.34550397 0.48446235       0.79325051           3.40040570\n966  1.13286106 0.24276088       0.92561510           5.77618426\n967  1.11092907 0.27542842       0.89424495           5.79034707\n968  1.11383058 0.27049142       0.89919692           5.78767513\n969  1.15458592 0.28510242       0.85188290           5.86856982\n970  1.10401401 0.28357906       0.88733569           5.79180060\n971  0.22684806 0.32419084       0.30211279           1.84476528\n972  0.22684806 0.32419084       0.30211279           1.84476528\n973  0.21994135 0.32508833       0.28932412           1.83319144\n974  0.18843778 0.21117556       0.32560525           0.32560525\n975  0.26090801 0.33593504       0.14599409           0.14599409\n976  0.27131831 0.34664692       0.13797671           0.13797671\n977  0.32992991 0.07003498       1.05749140           1.31257191\n978  0.32487342 0.19399653       1.09149371           1.40078825\n979  0.42989501 0.20458959       1.18533350           1.30336088\n980  0.64651235 1.23808025       0.80640792           1.12371790\n981  0.06996397 0.29649943       0.49182454           1.59373199\n982  0.15401146 1.09083607       1.19925477           1.19925477\n983  0.31613301 1.00841890       1.36161587           1.36161587\n984  0.35947406 0.95216527       1.38939817           1.38939817\n985  0.29384406 0.96595529       1.31025769           1.31025769\n986  1.44249966 0.31077526       0.71860246           1.76209487\n987  1.48869591 0.30274750       0.75077363           1.78957041\n988  1.52298699 0.30239877       0.77544821           1.81104303\n989  1.57671871 0.30772708       0.81691557           1.84283751\n990  1.60734441 0.36349308       0.82248261           1.90663285\n991  1.53320980 0.39601465       0.74310461           1.90725627\n992  1.46254402 0.36029470       0.70355330           1.83186792\n993  0.62685066 0.25132718       0.98080806           4.93151867\n994  0.69458065 0.29006565       1.04701153           4.89019010\n995  0.72696570 0.35152294       1.07506757           4.90013901\n996  0.81095116 0.42686680       1.15538310           4.86550643\n997  0.85562337 0.34025534       1.11012741           4.90849044\n998  0.73316950 0.40347127       1.07547103           4.93585121\n999  0.17163998 0.26451927       0.73946962           1.67244569\n1000 0.09798577 0.31837659       0.66373825           1.74885256\n1001 0.18156511 0.22969178       0.76013003           1.66349711\n1002 0.09569438 0.28690297       0.67936298           1.75016960\n1003 0.19382974 0.35801704       0.70121578           1.68853470\n1004 0.13238266 0.37362494       0.64224800           1.75210295\n1005 0.17706520 0.31856074       0.71483109           1.68221855\n1006 0.11135269 0.34891892       0.64950739           1.75209680\n1007 0.19813035 1.21072058       1.25222764           1.25222764\n1008 0.24696907 1.17786433       1.30382592           1.30382592\n1009 0.36284723 1.10517388       1.42214767           1.42214767\n1010 0.31544968 1.11603525       1.37652423           1.37652423\n1011 0.58416897 0.42601713       0.90471521           5.14181419\n1012 0.48575343 0.39479892       0.79070631           5.25132285\n1013 0.41508958 0.46042175       0.73210585           5.25308559\n1014 0.46484982 0.45384793       0.78622698           5.20958019\n1015 0.49970859 0.44107759       0.82793157           5.16321722\n1016 0.38114791 0.44870687       0.68412538           5.31092880\n1017 0.56508739 0.40935479       0.89984106           5.09303118\n1018 0.31497189 0.32289576       0.67634060           0.67634060\n1019 0.33973859 0.37685462       0.69464454           0.69464454\n1020 0.41975941 0.36122260       0.65693037           0.65693037\n1021 0.47287213 0.34921339       0.63328250           0.63328250\n1022 1.08396089 0.45451813       0.62047330           1.50690496\n1023 1.92696861 0.44748604       2.17473377           3.08211956\n1024 1.79230810 0.40916211       2.02762237           2.96193780\n1025 1.79146949 0.40959750       2.02692529           2.96167272\n1026 1.78186398 0.40100875       2.01291510           2.94583188\n1027 1.78113751 0.53356344       2.06833998           3.06480936\n1028 1.89246181 0.53537698       2.17631603           3.13697196\n1029 1.81927516 0.44882246       2.07206101           3.01777178\n1030 0.48358428 0.47112219       0.59468467           1.92413311\n1031 0.49521613 0.50704390       0.56733629           1.85956385\n1032 0.49159032 0.54892172       0.48962185           1.75473529\n1033 0.44836592 0.51905789       0.43857267           1.75994290\n1034 0.43530676 0.49671480       0.44802303           1.78885717\n1035 0.43071726 0.48312610       0.46108391           1.81044359\n1036 0.44001205 0.47999610       0.48723171           1.82946842\n1037 0.43329883 0.45562982       0.51088324           1.87122702\n1038 0.44254058 0.43717003       0.55675358           1.92631977\n1039 1.19238956 1.15899154       1.24540100           1.77225896\n1040 1.15943970 1.02686704       1.28853132           1.77979134\n1041 1.17923051 0.99628870       1.31035641           1.80759504\n1042 1.21564151 0.91614316       1.35154836           1.86371360\n1043 1.29022311 0.94231049       1.42486633           1.93101740\n1044 1.29441938 1.01881779       1.42470452           1.91597896\n1045 1.26723826 1.09554568       1.34923071           1.86729223\n1046 0.53708133 0.48330510       0.47581621           1.85291229\n1047 0.64603938 0.59193356       0.48101542           1.91822779\n1048 0.67232352 0.57925772       0.47659520           1.93796384\n1049 0.67354924 0.50445601       0.40223869           1.87364306\n1050 0.62423112 0.51154329       0.39626834           1.83367930\n1051 0.52622717 0.46172003       0.41927658           1.79343724\n1052 0.24825640 1.07237492       0.31969484           6.74819206\n1053 0.24684460 1.06961277       0.31758562           6.74596279\n1054 0.24577377 1.07275878       0.32161598           6.74647266\n1055 0.81023056 1.08761786       0.57708215           0.57708215\n1056 0.66392682 0.94001608       0.60484129           0.70182723\n1057 0.66358382 0.95303939       0.55075243           0.66699283\n1058 0.56146407 0.83081095       0.56672625           0.80683985\n1059 0.64277725 0.90337930       0.61883746           0.76252020\n1060 0.70955424 0.97066196       0.67974471           0.71008917\n1061 0.86055353 1.13255631       0.56074912           0.56074912\n1062 0.23975279 0.13443302       0.53812051           1.53706563\n1063 0.30061086 0.20968297       0.47886400           1.60120455\n1064 0.27383234 0.17417967       0.49994826           1.56178012\n1065 0.29333449 0.19898764       0.48269767           1.58580559\n1066 1.13557133 0.43245839       0.61994733           4.53797884\n1067 0.96873685 0.56129321       0.48074585           4.35580705\n1068 0.67885343 0.46337658       0.41179331           1.05013635\n1069 0.66135057 0.48359905       0.43734154           1.02585232\n1070 0.64763775 0.51996363       0.47401493           0.98789106\n1071 0.65976152 0.54007739       0.48506752           0.97277469\n1072 0.69208990 0.55600297       0.46747739           0.98565170\n1073 0.65963558 0.54928780       0.44586776           1.00901935\n1074 0.64619968 0.52819716       0.41945583           1.03572465\n1075 0.63202424 0.50295197       0.38762847           1.06783641\n1076 0.35896875 0.77711866       0.14071606           0.92017143\n1077 0.31929256 0.81531980       0.13544099           0.91757407\n1078 0.29231491 0.84028199       0.08803907           0.85871539\n1079 0.54481071 0.40064645       0.35200977           6.11482102\n1080 0.64317385 0.38667877       0.31692473           6.22202083\n1081 0.61334272 0.28680104       0.21828742           6.24577666\n1082 0.60047323 0.22846918       0.16196608           6.25797952\n1083 0.56555833 0.16638247       0.11597018           6.24645913\n1084 0.45227311 0.26404638       0.25261627           6.11095956\n1085 0.46694981 0.31391636       0.28590886           6.10049394\n1086 0.50299632 0.37388708       0.32570726           6.10044410\n1087 0.62994891 0.13144189       0.76043718           1.65254458\n1088 0.66382658 0.15954885       0.72426770           1.62998089\n1089 0.77149971 0.26756943       0.65068761           1.53055426\n1090 0.70162710 0.20320453       0.71351741           1.58334277\n1091 0.78841383 0.28408727       0.63791422           1.51656339\n1092 0.81785907 0.31152665       0.60766899           1.49855981\n1093 0.85524330 0.34661546       0.52357127           1.52053978\n1094 0.78973671 0.28195802       0.54839665           1.61548731\n1095 0.14052883 0.40160749       0.82446279           2.43810840\n1096 0.24435746 0.46946746       0.91111881           2.45991623\n1097 0.22074193 0.43334698       0.87475946           2.47519762\n1098 0.14052883 0.40160749       0.82446279           2.43810840\n1099 0.14919666 0.45164896       0.86649848           2.39036876\n1100 0.45354133 0.47693881       0.50244528           2.80903113\n1101 0.54902514 0.56938251       0.43641223           2.80761671\n1102 0.80631210 0.19682604       0.77664636           3.25970337\n1103 0.75056825 0.18949372       0.73068374           3.20459929\n1104 0.78344376 0.13352983       0.77990339           3.23791796\n1105 0.78344376 0.13352983       0.77990339           3.23791796\n1106 0.75489988 0.08962362       0.77873740           3.20621139\n1107 0.72054504 0.10508708       0.76195768           3.16810828\n1108 0.71335655 0.11275026       0.76740823           3.15668410\n1109 0.54788512 0.52249703       0.48822330           2.84610470\n1110 0.56334269 0.58149613       0.43123906           2.81573685\n1111 0.61463341 0.61254428       0.41308607           2.82970897\n1112 0.65725695 0.59626856       0.44646663           2.87466833\n1113 0.60368896 0.42013895       0.59308470           2.94531239\n1114 0.54300361 0.43228793       0.57946331           2.89894921\n1115 0.16409235 0.38204554       0.47672342           0.47672342\n1116 0.16506859 0.37944808       0.47882976           0.47882976\n1117 0.14971343 0.39730988       0.46174466           0.46174466\n1118 0.17177622 0.40311587       0.47343691           0.47343691\n1119 0.14718707 0.41598759       0.45302240           0.45302240\n1120 0.20953764 0.45076472       0.47465842           0.47465842\n1121 0.99235146 0.32431627       0.89011195           1.14701906\n1122 1.04547316 0.20295350       0.76865890           1.12923559\n1123 2.04463396 0.28063005       1.99128049           3.04537973\n1124 2.03643085 0.25002952       1.96805992           3.06336062\n1125 2.02516285 0.27209547       1.96706595           3.04180736\n1126 2.00151471 0.23955187       1.92414648           3.05731783\n1127 1.95349783 0.27156134       1.88461313           3.01883808\n1128 0.58265404 0.68961478       0.36494246           1.47083227\n1129 0.71523951 0.75618886       0.49745129           1.35927506\n1130 0.65746110 0.67599649       0.44339734           1.37917649\n1131 0.94432250 0.59305804       0.77778282           0.77778282\n1132 0.96128722 0.50407615       0.61165694           0.61165694\n1133 0.83057941 0.42102101       0.60728282           0.60728282\n1134 0.78244377 0.48621919       0.73286613           0.73286613\n1135 0.21346660 0.68227045       0.27306397           2.34457919\n1136 0.19920539 0.69821498       0.30019041           2.31410274\n1137 0.20773231 0.69624562       0.31579368           2.28988544\n1138 0.22582648 0.68647823       0.29511443           2.27379841\n1139 0.22156388 0.70207477       0.29971994           2.24936568\n1140 0.22135728 0.71747447       0.30508886           2.22428436\n1141 0.26207966 0.64250990       0.26515958           2.30732926\n1142 0.27911772 0.62122246       0.25667396           2.32967933\n1143 0.19769894 0.33225826       0.36945977           0.36945977\n1144 0.21640932 0.30362526       0.41250244           0.41250244\n1145 0.21640932 0.30362526       0.41250244           0.41250244\n1146 0.28491254 0.49837772       0.19918955           0.19918955\n1147 0.32007395 0.47557017       0.24092087           0.24092087\n1148 0.37356521 0.46365194       0.29074495           0.29074495\n1149 0.41911133 0.47483982       0.31884721           0.31884721\n1150 0.41692654 0.56097876       0.25415564           0.25415564\n1151 0.63306675 0.31695738       0.42544174           1.65189537\n1152 0.58524807 0.39385241       0.43851788           1.58956701\n1153 0.54091253 0.43343732       0.41858784           1.58405451\n1154 0.54579104 0.39831895       0.37890980           1.63643960\n1155 0.56589999 0.35650046       0.34558259           1.69414529\n1156 0.59076000 0.33260179       0.36077471           1.69752003\n1157 0.88884543 0.58798841       0.35903729           4.25679404\n1158 0.86678057 0.56907038       0.32427415           4.22774847\n1159 0.80247656 0.47577878       0.24828464           4.21544724\n1160 0.46664640 0.18031374       0.55782424           1.75640785\n1161 0.49902482 0.19297095       0.57383634           1.78812107\n1162 0.52497903 0.16158440       0.58417213           1.81861204\n1163 0.52117658 0.17759392       0.55894995           1.80566640\n1164 0.50414402 0.18425014       0.53311269           1.78604405\n1165 0.46669411 0.14599867       0.50060721           1.74779517\n1166 0.40625751 0.16171236       0.54146604           1.69627394\n1167 0.35672751 0.08278106       0.46231382           1.64487718\n1168 0.35066744 0.05737634       0.43818649           1.63570823\n1169 0.39689528 0.09099395       0.46895357           1.68198560\n1170 0.89390896 0.38766291       0.43718243           1.57847481\n1171 0.90291435 0.33141893       0.41325649           1.65279517\n1172 0.90004314 0.31268674       0.41736965           1.67744225\n1173 0.86951791 0.25547353       0.45713150           1.73959387\n1174 0.85247700 0.22872581       0.47982491           1.76645297\n1175 0.83158564 0.19954176       0.50660114           1.79354053\n1176 0.80687831 0.17358053       0.53343543           1.81218163\n1177 0.78347549 0.14719363       0.56014103           1.83283854\n1178 0.77650522 0.18958070       0.54726458           1.77772415\n1179 0.78339541 0.21859570       0.53523059           1.74721015\n1180 0.76854478 0.23272575       0.54787654           1.73184828\n1181 0.78984664 0.26416162       0.52651837           1.70037873\n1182 0.80773602 0.29304714       0.51032131           1.67151414\n1183 0.86047356 0.35540375       0.46551156           1.60904805\n1184 0.88430495 0.37811732       0.44615190           1.58465751\n1185 0.91527084 0.40813900       0.41896042           1.56100893\n1186 0.58253660 1.85441802       0.17903589           2.02902814\n1187 0.56875159 1.88737005       0.19320715           2.04548832\n1188 0.64122490 2.11613607       0.14788728           2.33815017\n1189 0.58609562 2.16104919       0.25280346           2.41255820\n1190 0.41627155 0.47378961       0.22772279           3.85999510\n1191 0.44471365 0.46445300       0.19270419           3.87985784\n1192 0.46659706 0.42775348       0.14277636           3.92909245\n1193 0.35827522 0.44527438       0.26119295           3.87660645\n1194 0.52706197 0.37795497       0.61832389           0.97921295\n1195 0.52706197 0.37795497       0.61832389           0.97921295\n1196 0.52706197 0.37795497       0.61832389           0.97921295\n1197 0.52706197 0.37795497       0.61832389           0.97921295\n1198 0.73476299 0.15087524       0.54767085           2.67051933\n1199 0.69099281 0.16923066       0.54874354           2.63799552\n1200 0.80376665 0.12912400       0.57086883           2.71199547\n1201 0.64959842 0.19309292       0.55449533           2.60660478\n1202 0.61089337 0.20308775       0.54385467           2.56231999\n1203 0.58175354 0.21334608       0.52728776           2.52360525\n1204 0.56826307 0.21192252       0.53333985           2.48351748\n1205 1.02038496 0.43352419       0.80025009           1.15286251\n1206 0.93454628 0.53495049       0.75593352           1.13805039\n1207 0.87009337 0.62961978       0.70429385           1.15411835\n1208 0.83372112 0.60634926       0.93924767           0.93924767\n1209 0.84899096 0.59079503       0.87841114           1.00217014\n1210 0.55540925 0.27988763       1.15333796           2.03762757\n1211 0.55779256 0.34249374       1.06245017           1.95353172\n1212 0.45883116 0.28989910       1.03737304           1.90350370\n1213 0.44702668 0.21722539       1.12110850           1.97959692\n1214 0.51351940 0.51463413       0.14606400           1.37486831\n1215 0.50430899 0.44641499       0.13301771           1.45973256\n1216 0.61556659 0.58706157       0.24226359           1.43429700\n1217 0.65812994 0.65752048       0.57468949           1.23043857\n1218 0.81341999 0.78634784       0.59574687           1.27664992\n1219 0.77917791 0.70776050       0.65653152           1.19445915\n1220 0.65812994 0.65752048       0.57468949           1.23043857\n1221 0.90689020 1.10448146       0.44193827           6.07594402\n1222 0.91095205 1.11226711       0.45711228           6.08456735\n1223 0.91983969 1.12836326       0.48761161           6.10190513\n1224 0.92906135 1.14560678       0.51831007           6.11874135\n1225 0.93249975 1.19448443       0.58079498           6.13590242\n1226 0.93249975 1.19448443       0.58079498           6.13590242\n1227 0.93249975 1.19448443       0.58079498           6.13590242\n1228 0.93249975 1.19448443       0.58079498           6.13590242\n1229 0.93249975 1.19448443       0.58079498           6.13590242\n1230 0.84040287 0.91406017       0.50220558           4.67353736\n1231 0.82087571 0.90714227       0.55362667           4.73292092\n1232 0.82594320 0.87971941       0.63407669           4.80407860\n1233 0.91322400 0.79161303       0.67832273           4.78177112\n1234 0.61369047 1.02646789       0.55801833           0.80523468\n1235 1.29928485 1.16954787       1.30469514           1.87802139\n1236 1.24410109 1.14907007       1.28593636           1.82772590\n1237 1.24410109 1.14907007       1.28593636           1.82772590\n1238 1.24377888 1.15043095       1.28448666           1.82697511\n1239 1.29928485 1.16954787       1.30469514           1.87802139\n1240 0.50489978 0.31152906       0.46446479           6.00449347\n1241 0.42911626 0.28655205       0.39517799           6.00802366\n1242 0.35411794 0.21129425       0.44365940           5.93449859\n1243 0.33102587 0.14779324       0.51014650           5.87002992\n1244 0.16103907 0.24134319       0.35066359           1.99605087\n1245 0.24041067 0.34555554       0.30741030           1.89258111\n1246 0.25052646 0.40431976       0.20300029           1.83863228\n1247 0.18849361 0.38021052       0.14859047           1.91135767\n1248 0.11860372 0.26270138       0.28595152           1.98157215\n1249 0.15681164 0.70270923       0.89385032           5.16524941\n1250 0.20143506 0.76235104       0.86114785           5.11508680\n1251 0.22098666 0.75812930       0.89225189           5.13655883\n1252 0.20922409 0.71837913       0.92919903           5.18027420\n1253 0.20158029 0.69350999       0.91828030           5.20477288\n1254 0.20847907 0.59557797       0.84273081           5.30529653\n1255 0.21369425 0.55397405       0.82458022           5.34058003\n1256 0.10192834 0.57650346       0.91212526           5.26377570\n1257 0.14547649 0.63495266       0.92179777           5.23402748\n1258 0.38938377 0.28016148       0.43622934           0.43622934\n1259 0.34105877 0.34251885       0.36327095           0.36327095\n1260 0.34359506 0.34386825       0.36359439           0.36359439\n1261 0.28306113 0.30187084       0.37775724           0.37775724\n1262 1.08859164 0.57143753       0.43545795           3.02812593\n1263 1.07621631 0.59069922       0.42961088           3.02170344\n1264 1.05311025 0.59988451       0.41303597           3.00309538\n1265 1.01806519 0.60856138       0.38771206           2.97302393\n1266 0.98796394 0.63339478       0.37490363           2.94937480\n1267 0.98225885 0.58931800       0.35188861           2.93661462\n1268 0.96281512 0.55539240       0.32337597           2.91210699\n1269 0.94904021 0.52404199       0.30121101           2.89273909\n1270 0.98166412 0.51667103       0.32808708           2.92076218\n1271 1.01964567 0.50901541       0.36083537           2.95272798\n1272 1.05749008 0.50933833       0.39578376           2.98565800\n1273 0.46138108 0.97206157       0.62286821           1.53562756\n1274 0.48027986 1.01330269       0.59898380           1.53750076\n1275 0.49833876 1.03148952       0.57477353           1.53141633\n1276 0.51875843 0.98261364       0.55143384           1.48923680\n1277 0.37663096 0.95281167       0.48958526           1.49252532\n1278 0.37560493 0.95118433       0.49052825           1.49400506\n1279 0.37720313 0.95300640       0.49044471           1.49323799\n1280 0.19813556 1.45889454       0.41441583           2.84540031\n1281 0.19189706 1.46904666       0.37621377           2.80340895\n1282 0.28025338 1.38708893       0.44361977           2.72607124\n1283 0.74299989 0.18568008       0.39103336           1.87175939\n1284 0.72536770 0.20036868       0.37705349           1.86281162\n1285 0.54477387 0.36935363       0.25291846           1.78953185\n1286 0.63712102 0.27627166       0.35875128           1.75251914\n1287 0.59962267 0.32124980       0.27094844           1.82844312\n1288 0.59939700 0.31256625       0.32198990           1.75854968\n1289 0.64646135 0.52058126       0.54074710           2.05668268\n1290 0.48441522 0.43700229       0.70203818           2.13998345\n1291 0.48929569 0.36666509       0.69162448           2.06953228\n1292 0.58235376 0.44728693       0.59840085           2.04937290\n1293 0.68829146 0.84399017       1.42322687           1.75009189\n1294 0.73180342 0.88483954       1.44073703           1.79571411\n1295 0.70572185 0.81468458       1.36757316           1.83714503\n1296 0.68434763 0.74468052       1.35105198           1.73353044\n1297 0.10365012 0.23250143       0.95963703           0.98543426\n1298 0.13131450 0.27936009       1.01892668           1.05225237\n1299 0.22583138 0.37522515       1.06905832           1.11561514\n1300 0.29703130 0.41946592       1.06845072           1.12614902\n1301 0.42307946 0.20806073       0.49305103           5.58124497\n1302 0.45125058 0.16571226       0.53682337           5.54903345\n1303 0.47816902 0.14192023       0.54184745           5.52235976\n1304 0.51181265 1.16330308       0.72508423           2.74422240\n1305 0.58089266 1.10640272       0.79693684           2.74251209\n1306 0.73087523 0.94805507       0.93510904           2.64894672\n1307 0.66758347 1.00506665       0.87098128           2.65991747\n1308 0.59871293 1.06214683       0.79435451           2.64613434\n1309 0.31457635 0.19128809       0.84965752           1.74165812\n1310 0.27130286 0.23474208       0.79168280           1.78997097\n1311 0.22463681 0.24215702       0.75378249           1.79563598\n1312 0.19640494 0.24199083       0.73696192           1.79019693\n1313 0.20568413 0.16774984       0.79081256           1.67185323\n1314 0.26649875 0.18052660       0.81550735           1.73597921\n1315 0.24158233 0.18231097       0.79736927           1.73523289\n1316 0.22341129 0.17118486       0.79206449           1.71612542\n1317 0.23867293 0.14112006       0.81583836           1.68067361\n1318 0.22291353 0.15002334       0.80509818           1.67375800\n1319 0.37308639 0.87560106       0.23095389           0.48730625\n1320 0.26348896 0.74513460       0.29827168           0.45308858\n1321 0.31713135 0.81112705       0.25931916           0.46757534\n1322 0.26358673 0.86127718       0.47070518           4.52998618\n1323 0.24366373 0.85493834       0.47616724           4.53689445\n1324 0.24366373 0.85493834       0.47616724           4.53689445\n1325 0.24366373 0.85493834       0.47616724           4.53689445\n1326 0.24366373 0.85493834       0.47616724           4.53689445\n1327 0.33311289 0.84385827       0.51358365           4.55432538\n1328 0.24366373 0.85493834       0.47616724           4.53689445\n1329 0.24366373 0.85493834       0.47616724           4.53689445\n1330 0.24366373 0.85493834       0.47616724           4.53689445\n1331 0.21453951 0.79418077       0.52230097           4.59717759\n1332 0.24366373 0.85493834       0.47616724           4.53689445\n1333 0.28641991 0.66949322       0.96824749           0.96824749\n1334 0.34430585 0.68211635       1.02633255           1.02633255\n1335 0.24710392 0.67805620       0.93141793           0.93141793\n1336 0.26841971 0.75500639       0.95707204           0.95707204\n1337 0.22527359 0.76570055       0.91173273           0.91173273\n1338 0.18417785 0.74723675       0.87155101           0.87155101\n1339 0.15422494 0.71903517       0.84321728           0.84321728\n1340 0.38266138 0.07276438       0.77861885           2.95238785\n1341 0.30418366 0.10371658       0.72843362           2.89736666\n1342 0.36072390 0.17368141       0.70292320           3.01637841\n1343 0.36990032 0.15414784       0.71282473           3.00874637\n1344 0.38527041 0.14309642       0.71418067           3.01027187\n1345 0.97204073 0.14305192       0.34136314           3.21713032\n1346 0.96999802 0.16881500       0.44219570           3.30085959\n1347 0.97339562 0.22833617       0.52734678           3.37003891\n1348 0.85957508 0.33500038       0.58156364           3.33066972\n1349 0.72885720 0.40249146       0.55276356           3.19236582\n1350 0.74715434 0.40562253       0.68821449           3.31890910\n1351 0.69858175 0.41833459       0.61259655           3.21598322\n1352 0.82541062 0.32360096       0.53143031           3.26339665\n1353 0.91338483 0.20460195       0.41266937           3.23480232\n1354 0.22262650 1.76315038       0.55350338           1.69978613\n1355 0.26887869 1.82812990       0.58506137           1.77107510\n1356 0.17973552 1.75357407       0.64540244           1.72608678\n1357 0.28690573 1.85820450       0.63493694           1.86058207\n1358 0.26686036 1.82407261       0.57952331           1.76538647\n1359 0.22144494 1.63656768       0.47947774           1.54355578\n1360 0.20653777 1.70116754       0.51303089           1.62421300\n1361 0.62183415 0.91776901       1.20616572           1.30896242\n1362 0.51498121 0.92430734       1.26269103           1.26269103\n1363 0.50572141 0.89305172       1.23029460           1.23029460\n1364 0.46506831 0.92311230       1.23608955           1.23608955\n1365 0.41017440 0.99832482       1.27300589           1.27300589\n1366 0.46231595 1.00796167       1.30718792           1.30718792\n1367 0.49458595 1.03604288       1.34555424           1.34555424\n1368 0.50356547 1.07417464       1.37952518           1.37952518\n1369 0.53658991 1.09177296       1.40393177           1.40857113\n1370 0.56356895 1.02907453       1.33024929           1.37285198\n1371 0.59235682 1.06446732       1.33500207           1.41377614\n1372 0.64870158 1.13968710       1.35576079           1.49574150\n1373 0.68842174 1.15347852       1.27975707           1.55103197\n1374 0.67577480 1.10008864       1.25412909           1.49906474\n1375 0.64747034 0.98460667       1.22673317           1.37584445\n1376 0.14345409 0.60687930       0.79451667           0.79451667\n1377 0.22114624 0.58167294       0.87233167           0.87233167\n1378 0.22114624 0.58167294       0.87233167           0.87233167\n1379 0.28665637 0.58572290       0.94407049           0.94407049\n1380 0.31887781 0.57390400       0.97199645           0.97199645\n1381 0.34365768 0.54962257       0.98697812           0.98697812\n1382 0.22114624 0.58167294       0.87233167           0.87233167\n1383 1.07884818 0.30723827       0.88462469           2.46151069\n1384 1.09600551 0.33894363       0.91664007           2.49389330\n1385 1.11354028 0.37407300       0.95189941           2.53099558\n1386 1.14342675 0.38955922       0.96679061           2.53062166\n1387 1.16690745 0.41305748       0.98988055           2.54646577\n1388 1.18813960 0.45600258       1.03361063           2.59445159\n1389 1.21531971 0.48614934       1.06361678           2.61830976\n1390 1.24618666 0.49435883       1.06960087           2.60311963\n1391 1.22430453 0.43849535       1.00875073           2.52854219\n1392 1.10583634 0.28970766       0.85888672           2.40483325\n1393 1.23574202 0.41019183       0.96453729           2.44998439\n1394 1.24431231 0.40379712       0.94652198           2.41325342\n1395 1.22335837 0.37715852       0.91671760           2.38673404\n1396 1.19087968 0.34882160       0.89597285           2.38576966\n1397 1.17000210 0.32288060       0.86793022           2.36253845\n1398 1.13453739 0.30395722       0.86478587           2.38958893\n1399 1.14943099 0.33305987       0.89882100           2.42695948\n1400 1.18201623 0.35787214       0.91759231           2.42680323\n1401 1.20557076 0.39061727       0.95268289           2.45921416\n1402 1.14975745 0.34452001       0.91386053           2.44879660\n1403 1.15917343 0.37936166       0.95358787           2.49943008\n1404 0.42422755 0.55640915       1.06819505           1.06819505\n1405 0.48471528 0.51703391       1.11023737           1.11023737\n1406 0.61371887 0.58936500       1.27372410           1.27372410\n1407 0.56791438 0.63534169       1.32574635           1.32574635\n1408 0.59002364 0.69088347       1.25622423           1.25622423\n1409 0.48690845 0.69045019       1.16231379           1.16231379\n1410 0.42960186 0.71960484       1.11324918           1.11324918\n1411 0.49671249 0.85719773       1.12882202           1.78541297\n1412 0.44985697 0.75241419       1.07812775           1.85960719\n1413 0.41166980 0.74539387       1.03892470           1.85087281\n1414 0.45756659 0.82649187       1.08987816           1.79570457\n1415 0.44564902 0.80986924       1.07768666           1.80598919\n1416 0.40912844 0.89190856       1.03838906           1.71193141\n1417 0.39242087 0.87127197       1.02322613           1.72640793\n1418 0.88134298 0.17420343       0.40514290           2.44344815\n1419 0.77168368 0.16595719       0.53352606           2.38528515\n1420 0.77168368 0.16595719       0.53352606           2.38528515\n1421 0.84865602 0.16760048       0.43949811           2.43211299\n1422 0.84865602 0.16760048       0.43949811           2.43211299\n1423 0.84865602 0.16760048       0.43949811           2.43211299\n1424 0.87992811 0.17889785       0.40402883           2.44807988\n1425 0.86896244 0.18498195       0.41112699           2.45330609\n1426 0.87992811 0.17889785       0.40402883           2.44807988\n1427 0.91766377 0.41634931       0.52662710           1.41894066\n1428 0.88991080 0.43307177       0.58652343           1.37036917\n1429 0.78655679 0.44191951       0.63615227           1.34138863\n1430 0.79580013 0.38895428       0.68177211           1.39506741\n1431 0.75372377 0.32459191       0.70116085           1.45922749\n1432 0.72931268 0.30571451       0.70119891           1.48094646\n1433 0.64770415 0.20427351       0.77166092           1.59775902\n1434 0.52090409 0.54572554       0.84756810           0.84756810\n1435 0.52615977 0.56938975       0.86727335           0.86727335\n1436 0.70730000 0.71404591       1.02281653           1.02281653\n     PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP NO_Of_UNITS\n1            2.21027173       0.91039584   0.103361663          18\n2            2.93742785       0.59006168   0.286734076          20\n3            1.22568501       0.41355828   0.285047765          27\n4            0.35256707       0.41622194   0.298723405          30\n5            1.30777665       0.58105507   0.344927581          30\n6            1.20782666       1.16301276   0.072363625          31\n7            0.75254463       0.25270341   0.315974244          32\n8            1.00133444       0.73266231   0.288200742          32\n9            0.93810378       0.93810378   0.174416523          32\n10           1.90824939       1.05444074   0.358155005          32\n11           1.25752085       0.35880751   0.141778546          34\n12           1.01151728       0.98005988   0.037833848          34\n13           0.47303723       0.63606752   0.011830673          35\n14           0.89038170       0.62133383   0.119080842          36\n15           1.11226710       0.24894961   0.128496600          37\n16           0.12610413       0.19637901   0.119004969          39\n17           0.85633434       0.50629481   0.234275139          40\n18           0.84603854       0.84535458   0.165931864          40\n19           1.39331099       0.92942414   0.286239715          41\n20           0.34193183       0.29848387   0.370506552          43\n21           2.80264876       0.46680262   0.237783676          43\n22           0.45200460       0.33432658   0.217668853          43\n23           1.76387531       0.17682341   0.031652947          43\n24           0.98309206       0.84274202   0.107584011          43\n25           0.93286043       0.80947880   0.159512977          43\n26           0.44306781       0.75218257   0.111630950          46\n27           0.37885498       0.55528047   0.270758474          46\n28           1.08895819       0.35152986   0.098069573          48\n29           1.09609076       0.38427400   0.113702403          48\n30           1.11557565       0.39417647   0.131821992          48\n31           0.48306749       0.48306749   0.063248953          50\n32           0.46965335       0.46965335   0.065979512          50\n33           1.40537194       0.61715471   0.142971301          51\n34           2.85082903       0.34621774   0.190070820          52\n35           0.45280231       0.32519431   0.259962240          52\n36           2.02991978       1.00890102   0.281998211          53\n37           1.32177158       0.54502391   0.122430165          54\n38           1.36514059       1.08875086   0.153730196          55\n39           1.38357675       0.46817049   0.081924063          55\n40           0.58492911       0.37407245   0.042340733          55\n41           1.48963283       0.71708475   0.161288142          56\n42           1.01456201       0.16210824   0.132154548          57\n43           0.96435887       0.53052718   0.305716808          58\n44           1.69823847       0.93977115   0.014527033          58\n45           0.89917606       0.49673081   0.157784762          59\n46           0.82289985       0.70508325   0.260092338          60\n47           0.60730591       0.60730591   0.113073833          60\n48           0.42605760       0.22468618   0.112329775          61\n49           0.98508203       0.40707840   0.229520261          62\n50           1.19604200       1.00164338   0.039033199          62\n51           2.82771792       0.35335517   0.218193037          62\n52           0.81601261       0.69293576   0.137713786          62\n53           0.86701580       0.63662665   0.074275750          62\n54           1.05972295       0.30296826   0.072384885          63\n55           1.05649510       0.29636316   0.071535042          63\n56           0.38023916       0.38023916   0.159657200          64\n57           0.15379941       0.38709499   0.225876453          64\n58           0.17830680       0.42274954   0.249371016          64\n59           0.66926060       0.31599066   0.154351114          64\n60           1.61239305       0.07814624   0.096846388          64\n61           0.58914354       0.23828822   0.180319127          65\n62           1.37621982       0.40922498   0.132878451          65\n63           0.53771725       0.58446554   0.153543684          66\n64           0.38934971       0.14013035   0.136731962          66\n65           0.39651659       0.39651659   0.054569324          66\n66           1.75382755       1.08074520   0.062456728          67\n67           1.40386992       0.57200777   0.095396542          67\n68           1.22283424       0.82864319   0.050654452          69\n69           0.37016861       0.27847117   0.094337735          70\n70           0.53421037       0.53421037   0.084692261          70\n71           0.54678444       0.54678444   0.111301343          70\n72           0.58214134       0.58214134   0.138646468          70\n73           3.30499582       0.25357252   0.475893299          70\n74           3.26976337       0.32750419   0.508620155          70\n75           1.73996399       0.98627798   0.032194296          71\n76           0.29271624       0.41573213   0.176436382          71\n77           2.13042100       1.40045068   0.071384150          72\n78           1.38828834       1.15351306   0.033510095          72\n79           1.35858681       1.10802453   0.032408568          72\n80           1.37486540       1.14889407   0.039804387          72\n81           1.52796793       0.13491084   0.086492897          72\n82           1.00178703       1.00178703   0.231777458          72\n83           1.02943971       1.02943971   0.310562884          72\n84           1.23356508       1.23356508   0.415637528          72\n85           1.05575989       1.05575989   0.382820462          72\n86           0.62277527       0.64032060   0.059434319          73\n87           0.62203720       0.62672689   0.067342700          73\n88           0.50271454       0.50271454   0.091390014          73\n89           1.07589562       1.04672045   0.279682641          74\n90           1.06074524       1.03596980   0.285456972          74\n91           0.64594519       0.82020326   0.106362513          76\n92           1.55135767       1.46284027   0.096088304          76\n93           2.70129406       0.40382953   0.141095434          77\n94           0.85626495       1.08674188   0.130669846          78\n95           0.86560107       1.10020191   0.144299461          78\n96           0.69031282       1.08059740   0.125925476          78\n97           0.65129935       1.03019166   0.168386840          78\n98           1.35249093       0.99941521   0.346816687          79\n99           1.35249093       0.99941521   0.346816687          79\n100          1.37245245       1.04265158   0.393218852          79\n101          0.99771436       0.86481812   0.104629333          79\n102          0.59700966       0.17336602   0.136922605          80\n103          1.64233798       1.64233798   0.072058186          80\n104          0.48943921       0.65391167   0.036463444          81\n105          0.80101471       0.59037722   0.088242104          81\n106          2.31150107       0.83281454   0.605512561          82\n107          2.26982849       0.88050684   0.648770697          82\n108          0.61284222       0.56778278   0.170482612          82\n109          0.61218476       0.56716711   0.155247892          82\n110          0.40953295       0.53156338   0.048260704          84\n111          0.94171782       0.38819066   0.120754557          85\n112          0.74483529       0.61658830   0.119829547          86\n113          1.31501516       1.31501516   0.109686581          87\n114          1.26867328       1.24050123   0.092259293          88\n115          1.23062658       1.21269643   0.039220928          88\n116          1.25687173       1.23692227   0.066243869          88\n117          1.32340390       1.29566193   0.138596187          88\n118          1.94089511       1.55470110   0.093882515          88\n119          1.93058081       1.54058761   0.102439004          88\n120          1.92323634       1.52026700   0.114693934          88\n121          1.89753748       1.56183632   0.119456438          88\n122          1.91692755       1.57504258   0.117413143          88\n123          1.67351314       1.10747122   0.106907100          88\n124          1.65473264       1.13730540   0.078820198          88\n125          0.41482899       0.52601366   0.199268975          88\n126          1.40642735       0.31467122   0.362321034          88\n127          1.62926781       0.67298375   0.150955941          89\n128          0.69550560       0.19378251   0.156137680          90\n129          2.75458586       0.52910940   2.013291696          91\n130          2.75287411       0.57779873   1.996579869          91\n131          0.58418213       0.58219477   0.093066310          91\n132          1.13066583       0.67047664   0.385270560          92\n133          1.10381881       0.66985744   0.343290920          92\n134          2.29417000       0.43726055   0.030830707          93\n135          1.93657971       0.16475843   0.071259360          93\n136          1.90426358       0.20655213   0.144548908          93\n137          0.41117647       0.59211686   0.073006845          95\n138          0.41239154       0.57112782   0.077950273          95\n139          1.46875936       0.25362761   0.106962985          95\n140          0.80111330       0.91497087   0.177802329          96\n141          0.85459721       0.90650716   0.156588817          96\n142          2.26402322       0.96059742   0.080979701          96\n143          0.18950302       0.19459498   0.100457566          97\n144          1.23103414       0.27811314   0.095143342          98\n145          0.27497556       0.27497556   0.197668634          99\n146          1.45371767       0.59269493   0.133060032          99\n147          1.34933175       0.49042585   0.177568973         100\n148          1.31541388       0.46016869   0.193247525         100\n149          0.43485454       0.57961371   0.334853805         100\n150          0.60590529       0.30727709   0.252754598         100\n151          0.85118221       0.44579470   0.111969496         100\n152          0.84304418       0.43854828   0.117479606         100\n153          0.82161001       0.45594549   0.121345501         100\n154          0.70546985       0.70546985   0.223845230         100\n155          1.88741987       0.39120096   0.094506270         100\n156          0.27502898       0.27502898   0.058580323         101\n157          0.34547731       0.48381999   0.139586991         102\n158          1.28121584       0.47385991   0.133413717         103\n159          1.99621025       0.32593106   0.245296035         103\n160          0.06456158       0.73724166   0.076367225         104\n161          1.48282299       1.48282299   0.170558724         104\n162          3.11254530       0.50805826   0.394665821         104\n163          3.07792935       0.49170572   0.447245216         104\n164          1.27816275       1.18930753   0.054965048         106\n165          1.37093267       0.24128953   0.109791945         107\n166          1.26235531       0.49784839   0.150697732         108\n167          1.20958354       0.55615938   0.205049065         108\n168          1.20553887       0.54087705   0.211575286         108\n169          1.29743354       0.31661087   0.157956636         109\n170          1.24867856       0.36383752   0.208879353         109\n171          0.69151586       0.68721860   0.007546116         110\n172          0.48387947       0.58605415   0.206197865         110\n173          0.67279757       0.58607729   0.414129676         111\n174          1.37376610       0.73774222   0.120807639         111\n175          1.35396863       0.77073894   0.144933651         111\n176          1.50900643       0.59691970   0.021647968         111\n177          1.48020952       0.57129216   0.075855418         111\n178          1.44676392       0.63311763   0.080378366         111\n179          0.34574414       0.34574414   0.042771506         114\n180          0.66164495       0.47511097   0.034676927         114\n181          1.46210200       0.69464528   0.035186928         115\n182          1.17135767       0.83072146   0.052034236         116\n183          1.17123941       0.83128751   0.052597420         116\n184          1.37264934       0.96583804   0.080919064         116\n185          1.22351509       0.36067112   0.240495293         116\n186          1.15110145       0.28645498   0.179955966         116\n187          1.13923400       0.27940996   0.155045674         116\n188          0.22679879       0.18256049   0.256174773         118\n189          0.30352487       0.26253923   0.330313245         118\n190          0.43872516       0.62926405   0.510824734         118\n191          2.78388147       0.57549979   0.222197799         118\n192          2.86951811       0.58085571   0.254293232         118\n193          3.37334274       2.14453665   0.116738639         118\n194          3.47743377       2.24406035   0.095802396         118\n195          1.48755449       0.68166160   0.220505989         119\n196          2.39049195       0.91238531   0.543656155         120\n197          2.34230426       0.96590959   0.602504682         120\n198          2.39364707       0.95962263   0.574667795         120\n199          0.31310729       0.41183437   0.238965340         120\n200          0.45969543       0.51207799   0.104632684         120\n201          1.34595939       1.14781885   0.121861919         121\n202          0.89617874       0.92933334   0.203745692         122\n203          0.89617874       0.92933334   0.203745692         122\n204          1.32893044       1.21520414   0.130907702         122\n205          1.31582039       1.21343091   0.118046203         122\n206          0.34873651       0.27972962   0.178622786         124\n207          0.95513940       0.83732313   0.342046730         125\n208          1.00713865       0.81181137   0.298593942         125\n209          0.57813121       0.27650441   0.170177121         126\n210          1.97838161       1.11715978   0.111816062         126\n211          0.16662555       0.33233583   0.027145186         127\n212          0.52142716       0.41705802   0.190215321         127\n213          0.37655784       0.38260929   0.048021712         127\n214          0.94393667       0.81874259   0.324367243         127\n215          0.92219939       0.87127398   0.303933047         127\n216          0.86511018       0.91154893   0.336570108         127\n217          0.32132006       0.32132006   0.206867667         128\n218          0.32019693       0.32019693   0.209585898         128\n219          1.07432985       1.05653086   0.144482202         129\n220          1.07260319       1.00982326   0.084564917         129\n221          1.02285597       0.94598384   0.122276326         129\n222          0.45035331       0.27994160   0.062394185         129\n223          0.44297930       0.28530299   0.059664143         129\n224          0.35262705       0.43571741   0.238748102         130\n225          0.91707212       0.42967409   0.172903663         131\n226          0.91272730       0.43278291   0.177548609         131\n227          1.89226108       1.04195784   0.051357575         132\n228          1.95383220       1.10963118   0.119567676         132\n229          1.65646471       1.19967065   0.312861968         134\n230          1.70091565       1.15504828   0.325713782         134\n231          1.71511208       1.14197290   0.306257412         134\n232          1.17580811       0.90899708   0.064327209         134\n233          0.62001491       0.62001491   0.306588214         135\n234          0.41509978       0.45358949   0.256916039         136\n235          0.45414404       0.47480073   0.219618475         136\n236          0.14094782       0.14094782   0.088900982         136\n237          0.32238569       0.50300950   0.172150298         136\n238          2.16556812       1.44394415   0.075857200         138\n239          2.12062424       1.45755436   0.030820340         138\n240          1.03576899       0.88521197   0.115835849         138\n241          1.10156971       0.95231996   0.050827085         138\n242          0.99169803       0.85369803   0.165998193         138\n243          1.50374031       0.42258170   0.053403902         138\n244          1.55803737       0.43467930   0.121908787         138\n245          0.51710238       0.47812721   0.169561370         138\n246          0.50349221       0.50123592   0.237938793         138\n247          0.21357350       0.21357350   0.089052915         140\n248          0.25273159       0.25273159   0.043682159         140\n249          1.35778596       1.22477627   0.208491837         140\n250          1.33599755       1.20261710   0.232324697         140\n251          1.42477023       1.29189479   0.236091632         140\n252          2.23061802       0.90978940   0.121163406         140\n253          2.13911754       0.99214497   0.211772167         140\n254          2.08537517       1.02689819   0.260293516         140\n255          0.62535140       0.19140910   0.060751345         141\n256          0.62020940       0.17633866   0.043008275         141\n257          1.79715603       0.44298621   0.111465824         142\n258          1.76655117       0.42418513   0.097342463         142\n259          0.17973062       0.26842127   0.221116057         146\n260          0.60893435       0.60893435   0.074463102         148\n261          0.60055363       0.60055363   0.075415436         148\n262          0.86528040       1.01566933   0.192226829         148\n263          0.96713961       0.46235294   0.290018466         149\n264          0.96610001       0.50381379   0.332080715         149\n265          0.93805758       0.56533794   0.316875114         149\n266          1.76366663       0.49862554   0.067324959         150\n267          0.21542034       0.12668577   0.088087794         150\n268          0.16300713       0.07055177   0.117243277         150\n269          1.85332874       0.47636498   0.128777227         150\n270          2.04584250       0.66870338   0.233657240         150\n271          1.95710005       0.57537010   0.177993595         150\n272          3.10829765       0.77732405   2.344717153         151\n273          0.73509854       0.17950397   0.134679337         151\n274          0.33369759       0.08887861   0.238452414         152\n275          0.88277675       0.90490756   0.109368576         152\n276          0.81837835       0.18094990   0.146374462         154\n277          1.66634485       1.15191579   1.481562592         155\n278          0.76107917       0.63942796   0.120712938         157\n279          0.18840828       0.18840828   0.191053793         157\n280          1.08213490       0.61065077   0.152761952         157\n281          1.11211702       0.64243204   0.193421545         157\n282          1.55147142       1.33927366   0.100225858         157\n283          0.61146767       0.33249511   0.383166503         158\n284          0.59330956       0.31879951   0.385517843         158\n285          0.14720951       0.32657574   0.279006383         159\n286          0.39086016       0.39086016   0.131185315         159\n287          0.47625634       0.47625634   0.128324097         159\n288          1.65028299       0.10347001   0.050236443         160\n289          1.71645676       0.18661680   0.120144160         160\n290          1.68331454       0.20160273   0.108374524         160\n291          1.65126353       0.22199813   0.109819710         160\n292          1.68643564       0.18520700   0.076848608         160\n293          0.58691630       0.58691630   0.134064129         160\n294          0.73334084       0.73334084   0.040596412         160\n295          1.52122794       0.70529470   0.152861095         160\n296          1.11922119       0.93369279   0.046921914         162\n297          1.14628505       0.96578544   0.059160268         162\n298          1.06515077       0.86884421   0.079478838         162\n299          1.71146780       0.86964171   0.098405034         162\n300          0.90573883       0.60561076   0.038870289         163\n301          1.62181744       0.37123369   0.130718253         163\n302          0.59286327       0.59286327   0.126585669         164\n303          0.16467404       0.47668256   0.050610172         164\n304          0.13052120       0.45522347   0.017568304         164\n305          0.13215824       0.46640772   0.034040639         164\n306          3.21794946       0.51720710   0.753399188         164\n307          3.21794946       0.51720710   0.753399188         164\n308          0.13051971       0.33535641   0.189050190         165\n309          1.51242168       0.76852336   0.069998812         165\n310          1.36701896       1.25012569   0.137834244         167\n311          1.36196300       1.21284167   0.115180272         167\n312          1.06606146       0.46077389   0.194043003         167\n313          1.07689932       0.47791616   0.198731696         167\n314          1.09046222       0.53307740   0.228376238         167\n315          0.65111317       0.65111317   0.079867001         168\n316          0.13212384       0.13212384   0.137194966         169\n317          0.23189548       0.24365341   0.106257256         170\n318          0.17587818       0.19946419   0.103589992         170\n319          1.42906891       0.69976100   0.132606449         170\n320          1.39279628       0.65178300   0.102225601         170\n321          1.44142038       0.72545882   0.092045183         170\n322          1.60584513       0.60962544   0.089779745         170\n323          1.70033148       0.64052570   0.118353611         170\n324          0.90902175       0.56563501   0.009881518         172\n325          0.39503174       0.41526050   0.038053853         175\n326          2.07349374       0.56604549   0.105131925         175\n327          2.11552873       0.51813246   0.120003535         175\n328          2.11552873       0.51813246   0.120003535         175\n329          2.02757868       0.49250295   0.187547976         175\n330          0.80224692       0.94563821   0.636726720         175\n331          0.77157585       0.95885753   0.560040043         175\n332          0.85593686       0.87625677   0.534081215         175\n333          0.86885358       0.53878692   0.175920821         176\n334          0.33092502       0.27226469   0.217136336         176\n335          0.33624773       0.30701154   0.233493117         176\n336          0.37939177       0.37091825   0.153954154         176\n337          1.14197608       0.18792491   0.203799077         176\n338          1.20340124       0.13097189   0.151640062         176\n339          0.89734899       0.68604606   0.087298854         177\n340          1.06612712       1.30386631   0.185167156         179\n341          1.08073829       1.45587303   0.048575253         179\n342          1.24990381       0.80209152   0.135754016         179\n343          2.15583250       1.27832067   0.194814232         180\n344          0.62411555       0.29172225   0.207447177         180\n345          0.63674708       0.28043995   0.194926957         180\n346          0.90402695       0.72198273   0.162201405         182\n347          0.99043028       0.81036606   0.139413783         182\n348          0.87961878       0.70165845   0.184992725         182\n349          0.89529226       0.72080264   0.192491245         182\n350          0.15080087       0.50021905   0.044028312         184\n351          0.22858409       0.52426549   0.100604879         184\n352          0.26539889       0.34574443   0.177421562         186\n353          0.22545035       0.30752274   0.137264006         186\n354          0.21230527       0.29482785   0.124103363         186\n355          0.38340817       0.36608254   0.149840096         187\n356          0.37211434       0.36916558   0.139875787         187\n357          0.28745688       0.27127066   0.055754143         187\n358          0.82204002       0.60379712   0.121404165         188\n359          0.88712467       0.53503149   0.070608671         188\n360          1.90490789       0.51866329   0.102766333         189\n361          0.61870413       0.61870413   0.098816014         189\n362          0.66551771       0.66551771   0.053494739         189\n363          1.22086159       0.97024012   0.135963105         192\n364          1.25213341       1.03825801   0.073899917         192\n365          1.29591893       0.98940286   0.125138255         192\n366          0.67422996       0.75367435   0.091513590         192\n367          0.69107413       0.78536202   0.048915645         192\n368          0.62947187       0.72902682   0.106152260         192\n369          0.63197415       0.73925032   0.101866756         192\n370          0.93622633       0.99105874   0.267909872         192\n371          0.93622633       0.99105874   0.267909872         192\n372          0.96711751       0.98775470   0.357874034         192\n373          1.88580851       0.32816650   0.106265323         194\n374          0.85335274       0.85335274   0.073220684         196\n375          0.87094080       0.87094080   0.143957862         196\n376          0.70992199       0.52771910   0.120488104         200\n377          0.75420599       0.54170501   0.154506636         200\n378          0.76113759       0.52111957   0.196179307         200\n379          2.89921497       0.79267252   2.373005026         200\n380          2.89793263       0.79412891   2.370659957         200\n381          2.90232089       0.79529103   2.371539322         200\n382          2.97835932       0.76031578   2.462069288         200\n383          2.98503113       0.77784352   2.444812769         200\n384          0.18422618       0.18422618   0.158252586         200\n385          0.24980224       0.24980224   0.115025654         200\n386          0.53950121       0.53950121   0.234296651         200\n387          0.46916981       0.46916981   0.164315590         200\n388          2.07759276       0.29516971   0.174577297         200\n389          2.14831418       0.37686243   0.217733450         200\n390          2.16440072       0.28074554   0.113422653         200\n391          2.21686011       0.40552370   0.178538187         200\n392          0.34057427       0.27322536   0.118903024         202\n393          0.25074636       0.20242759   0.116979435         202\n394          1.02332817       0.25419306   0.121046709         204\n395          1.01471804       0.20056912   0.183209829         204\n396          0.48010408       0.48010408   0.052126244         205\n397          0.20372381       0.20372381   0.141759200         206\n398          0.48361997       0.47076246   0.152925241         208\n399          0.47684117       0.43118634   0.212070902         208\n400          1.58067356       1.00149743   0.504325976         208\n401          1.61269571       1.00380916   0.609960603         208\n402          1.38447341       1.38447341   0.369338103         209\n403          1.49223479       1.49223479   0.316025316         209\n404          1.60411713       1.58597802   0.222917077         209\n405          0.80694032       0.37525679   0.183324232         210\n406          0.90301703       0.26344400   0.167233883         210\n407          1.24207617       0.54933050   0.150444969         210\n408          1.31503522       0.55960578   0.121720857         210\n409          0.48826070       0.48913550   0.227931721         210\n410          0.45034493       0.40955900   0.147124693         210\n411          1.08337809       0.79797700   0.124292821         210\n412          1.23539116       0.97993438   0.066218433         210\n413          0.89389116       0.52265067   0.261824043         211\n414          0.93405945       0.51973321   0.299848888         211\n415          0.94968053       0.56872273   0.313087426         211\n416          0.98059652       0.52896018   0.299394616         211\n417          1.17587768       0.54831633   0.118171515         211\n418          1.08760473       0.57331326   0.091378319         211\n419          1.67879487       0.58785059   0.337256986         212\n420          0.11623950       0.11623950   0.144849216         213\n421          0.77671229       0.78885558   0.092209496         214\n422          2.72766300       0.26999756   0.179524159         215\n423          2.72325503       0.21313978   0.116397508         215\n424          2.63298940       0.30287472   0.138833462         215\n425          2.63298940       0.30287472   0.138833462         215\n426          1.86111278       0.26934602   0.106997977         215\n427          1.85592412       0.26618301   0.111399669         215\n428          1.85076470       0.26334126   0.115996436         215\n429          0.31231557       0.31231557   0.130886007         216\n430          0.32341994       0.32341994   0.162926801         216\n431          0.28683859       0.28683859   0.074587809         216\n432          1.39728755       1.09144930   0.201874539         216\n433          0.21824408       0.69331588   0.113466246         223\n434          0.99033812       1.03893354   0.096261744         224\n435          0.89058260       0.94471916   0.063968537         224\n436          1.11027545       1.04564972   0.125610421         224\n437          1.20934039       0.79544675   0.040581936         224\n438          2.12554403       1.14106758   0.118519306         226\n439          2.16320559       1.08652086   0.079715094         226\n440          2.18664994       1.04326895   0.056353066         226\n441          0.21262924       0.17415290   0.062437700         228\n442          0.21262924       0.17415290   0.062437700         228\n443          1.36884692       0.42505556   0.072513094         228\n444          0.64110914       0.64110914   0.228117075         230\n445          0.69387102       0.69387102   0.173632918         230\n446          0.22935397       0.25881791   0.041551977         230\n447          0.23214249       0.25346964   0.086500164         230\n448          0.16947253       0.19976400   0.100392907         230\n449          0.13205152       0.11660014   0.043851809         231\n450          0.10399576       0.06494468   0.080329809         231\n451          0.09995770       0.06122465   0.083154463         231\n452          1.39648974       0.77680519   0.087365375         232\n453          1.46009821       0.82513315   0.113491020         232\n454          0.50030103       0.16043920   0.045950857         232\n455          0.23406078       0.07274166   0.085274684         234\n456          0.25206796       0.10118243   0.122864995         234\n457          0.64769270       0.56894943   0.144028637         234\n458          0.65715301       0.58732210   0.152006516         234\n459          0.26237013       0.26237013   0.128419521         235\n460          0.26600963       0.26600963   0.150562916         235\n461          1.38722811       1.38722811   0.118983300         239\n462          1.35369915       1.35369915   0.050074949         239\n463          1.45033129       0.80680427   0.049589422         239\n464          1.42505620       0.77252460   0.088537023         239\n465          1.44635803       0.72625716   0.117567056         239\n466          0.52975574       0.71008296   0.498391341         240\n467          1.61096961       0.43862379   0.183032812         240\n468          1.66831414       0.39765664   0.136447169         240\n469          1.02628661       0.43968049   0.086074689         242\n470          1.02383950       0.43765571   0.087854004         242\n471          1.04451104       0.44812583   0.034257487         242\n472          1.04601487       0.44900400   0.030861382         242\n473          1.06022672       0.47248499   0.090398498         242\n474          0.32215661       0.33629612   0.124495855         242\n475          0.32486835       0.33919094   0.123232134         242\n476          0.32348030       0.33784747   0.122686534         242\n477          1.00357632       0.88697874   0.146185611         242\n478          0.94638185       0.82489395   0.208046060         242\n479          0.97861091       0.88235147   0.145780146         242\n480          0.93895661       0.83888631   0.186901255         242\n481          0.42230499       0.23007480   0.032592161         248\n482          1.43414687       0.60719531   0.085203472         248\n483          1.33643320       0.50257243   0.155483181         248\n484          1.31959278       0.51031455   0.197799538         248\n485          0.31226411       0.51223849   0.384379301         248\n486          0.33327379       0.55849438   0.404339619         248\n487          0.36974289       0.59047305   0.440911577         248\n488          0.89899545       0.12076920   0.170050595         248\n489          0.88955202       0.10059202   0.134497665         248\n490          0.88955202       0.10059202   0.134497665         248\n491          0.88955202       0.10059202   0.134497665         248\n492          0.31328048       0.33224318   0.117875192         248\n493          2.95712725       0.50942838   2.476639213         249\n494          2.99597821       0.45626763   2.459878807         249\n495          2.99722578       0.46464212   2.466831557         249\n496          0.20240311       0.37626719   0.288687700         250\n497          0.21765153       0.43592235   0.289751250         250\n498          2.32649827       0.45261857   0.076104947         250\n499          2.31752524       0.48814537   0.061305491         250\n500          2.28623394       0.51666049   0.064650523         250\n501          2.25930377       0.53556557   0.077994919         250\n502          2.63270023       0.64400825   0.337718356         251\n503          2.68241181       0.55704560   0.301365894         251\n504          2.69585571       0.60064548   0.282142988         251\n505          2.65721818       0.68151532   0.299229126         251\n506          2.62188566       0.76425872   0.334587579         251\n507          2.59221941       0.81622176   0.376521495         251\n508          2.56039096       0.81150599   0.398125960         251\n509          1.36232989       1.35263210   0.180220512         252\n510          1.36232989       1.35263210   0.180220512         252\n511          1.36232989       1.35263210   0.180220512         252\n512          1.21282573       0.47131795   0.221779129         254\n513          1.25601857       0.49369600   0.170991930         254\n514          1.32140995       0.55994435   0.105910985         254\n515          1.15431377       1.05569486   0.256392053         256\n516          1.16305824       1.02373501   0.179012652         256\n517          2.77058225       0.35634065   0.240947134         256\n518          3.05456663       0.47782064   2.466377806         264\n519          3.05617189       0.48666628   2.430455517         264\n520          3.06000684       0.49038906   2.434232465         264\n521          3.01915158       0.44307537   2.434987366         264\n522          0.16284284       0.13742239   0.084302232         264\n523          1.12966972       1.04414454   0.128167275         264\n524          1.20969437       1.05284230   0.097146638         264\n525          0.13759887       0.13759887   0.126515344         265\n526          1.39503419       0.55756207   0.142927666         268\n527          0.98505908       0.72127503   0.065750334         270\n528          0.93761737       0.73881565   0.121174634         270\n529          3.38773622       0.34836339   0.777831249         272\n530          3.35248549       0.39374859   0.829020757         272\n531          3.33064000       0.43895164   0.858872192         272\n532          3.27432236       0.51817833   0.923899048         272\n533          1.23078077       0.74375340   0.149907105         273\n534          1.16413288       0.76910798   0.101813840         273\n535          1.24246576       0.62162319   0.264582717         273\n536          1.12031990       0.71695353   0.212227543         274\n537          1.06698478       0.77731828   0.206888818         274\n538          0.96855563       0.86060638   0.038207945         274\n539          0.76705486       0.22451379   0.171796839         275\n540          0.71027043       0.27058353   0.167279482         275\n541          0.74806661       0.28302374   0.193369381         275\n542          0.74753154       0.29110794   0.188164526         275\n543          0.39451809       0.39451809   0.042035833         276\n544          0.44174655       0.44174655   0.075384535         276\n545          1.22924567       0.39155049   0.174900494         278\n546          1.12332061       0.40265346   0.224806554         278\n547          1.20390668       0.79678350   0.166241059         280\n548          1.25427414       0.84026323   0.123797409         280\n549          1.29105157       0.88164205   0.112842030         280\n550          1.26788142       0.89004038   0.173340819         280\n551          1.22759544       0.87288753   0.221276135         280\n552          0.04191877       0.04191877   0.160413177         280\n553          0.43689772       0.31466713   0.149082313         280\n554          0.45752201       0.34454895   0.135556865         280\n555          0.63289899       0.36758865   0.059526979         280\n556          0.75840428       0.48900115   0.151903144         280\n557          0.68645741       0.43283884   0.126549345         280\n558          0.80274971       0.48673735   0.153000970         282\n559          0.81003132       0.48742302   0.159841049         282\n560          0.83019134       0.44119839   0.225773229         288\n561          0.88568075       0.45180108   0.179691123         288\n562          0.44517315       0.34439915   0.146997767         288\n563          0.37009664       0.34794568   0.163634988         288\n564          1.58267726       0.82381571   0.177013875         289\n565          1.54788540       0.76809871   0.089392667         289\n566          1.52353578       0.76661252   0.110884148         289\n567          0.96306228       0.76215883   0.234815987         290\n568          1.89722735       1.33111114   0.419582348         292\n569          1.67369807       1.25292557   0.384635738         292\n570          1.62065436       1.18553722   0.437838485         292\n571          1.67784274       1.19855164   0.442101303         292\n572          0.75252073       0.38593406   0.318496659         292\n573          0.65423365       0.30776237   0.245773741         292\n574          0.62648745       0.48501270   0.084128275         295\n575          0.65440976       0.49808638   0.059473584         295\n576          0.26527943       0.26524635   0.163837579         295\n577          0.26873609       0.26870751   0.180938154         295\n578          0.33519173       0.33514606   0.144288032         295\n579          0.33086034       0.33081473   0.141877641         295\n580          0.30333590       0.30328370   0.097877942         295\n581          1.23026166       0.71697409   0.094469191         295\n582          0.98788480       0.90351989   0.127051749         297\n583          1.61719884       0.63667898   0.134028523         298\n584          1.63151183       0.54598048   0.175569577         298\n585          2.28178568       0.82151902   0.303736055         299\n586          2.22927223       0.75094135   0.355002925         299\n587          2.21336226       0.76478347   0.267087763         299\n588          0.60715618       0.57772017   0.038568815         299\n589          0.57503613       0.60126454   0.029604745         299\n590          0.16713048       0.16496107   0.061393654         301\n591          0.40365126       0.41632779   0.238700574         302\n592          0.47818133       0.38771185   0.246909639         302\n593          1.20394562       0.78089348   0.040765010         304\n594          1.42862298       0.79060946   0.263863770         304\n595          1.33687720       1.20568244   0.102856845         304\n596          1.33865517       1.20949128   0.057264880         304\n597          1.36339676       1.21088425   0.084491344         304\n598          1.41520554       1.22165386   0.123182624         304\n599          1.41279327       1.26633148   0.131945262         304\n600          1.35457331       1.22304145   0.126497591         304\n601          1.34343775       0.91760778   0.084152048         307\n602          1.38402763       0.94131642   0.094373903         307\n603          1.21266931       1.09448709   0.071331312         307\n604          1.21266931       1.09448709   0.071331312         307\n605          0.40190755       0.40190755   0.059003519         311\n606          0.34319513       0.34319513   0.134815441         311\n607          0.19701346       0.19701346   0.257475956         313\n608          0.14899322       0.14899322   0.220452971         313\n609          0.12538507       0.12538507   0.062165977         313\n610          1.08951552       0.88597449   0.195433715         315\n611          1.08951552       0.88597449   0.195433715         315\n612          1.08951552       0.88597449   0.195433715         315\n613          1.08951552       0.88597449   0.195433715         315\n614          1.08951552       0.88597449   0.195433715         315\n615          1.08951552       0.88597449   0.195433715         315\n616          1.16587441       0.79062415   0.372120544         315\n617          1.16759994       0.78090387   0.349237772         315\n618          1.17775258       0.76445071   0.330078694         315\n619          1.16803080       0.76778476   0.302060817         315\n620          1.19558861       0.73379072   0.311420377         315\n621          1.11606796       0.66275860   0.295033749         315\n622          1.97310036       0.67502775   0.088889202         316\n623          1.94139960       0.75192924   0.179599771         316\n624          1.98140523       0.70975079   0.263075174         316\n625          2.00792454       0.74643401   0.211876758         316\n626          2.02789441       0.77581661   0.175404886         316\n627          0.56052670       0.42360914   0.308746473         316\n628          0.50215384       0.48389409   0.321768687         316\n629          0.17962739       0.17962739   0.137047246         318\n630          0.12445406       0.12445406   0.119463737         318\n631          0.15262891       0.15262891   0.152068732         318\n632          0.17806375       0.17806375   0.177261905         318\n633          0.20455576       0.20455576   0.164240197         318\n634          0.22172779       0.22172779   0.137204716         318\n635          0.24168361       0.24168361   0.108893747         318\n636          0.53449388       0.44544655   0.153513720         318\n637          0.54582924       0.47875032   0.066505617         318\n638          0.45338193       0.41912611   0.094673316         318\n639          0.53449388       0.44544655   0.153513720         318\n640          0.34009715       0.34009715   0.161989530         320\n641          0.34009715       0.34009715   0.161989530         320\n642          0.34009715       0.34009715   0.161989530         320\n643          0.62295331       0.00000000   0.064851863         320\n644          0.34009715       0.34009715   0.161989530         320\n645          0.34009715       0.34009715   0.161989530         320\n646          0.34009715       0.34009715   0.161989530         320\n647          0.34009715       0.34009715   0.161989530         320\n648          0.34009715       0.34009715   0.161989530         320\n649          0.34009715       0.34009715   0.161989530         320\n650          1.15384134       0.64523138   0.276206597         320\n651          1.24049241       0.66834639   0.227265787         320\n652          1.29451592       0.65225756   0.186906420         320\n653          0.34219733       0.60802856   0.120087390         324\n654          0.35628606       0.60591908   0.173180777         324\n655          0.73179557       0.63532920   0.087056869         325\n656          0.73466796       0.56868504   0.132805911         325\n657          1.49060329       1.30036690   0.061188779         327\n658          1.49881113       1.35330446   0.125659231         327\n659          1.41334233       1.23985244   0.067634901         327\n660          0.71320993       0.71320993   0.296250872         328\n661          0.69908343       0.69908343   0.334400520         328\n662          0.61564657       0.61564657   0.176809332         328\n663          0.49245102       0.75952150   0.206033928         328\n664          0.51329059       0.77370301   0.247649123         328\n665          0.48275845       0.73460930   0.283377321         328\n666          0.39677132       0.66127392   0.171252457         328\n667          0.17148946       0.17148946   0.063498064         329\n668          2.38413107       0.92056422   0.300341371         329\n669          2.39621686       0.93993837   0.257250407         329\n670          2.38832991       0.94320534   0.210689990         329\n671          2.32930667       0.86488993   0.328038330         329\n672          1.66044372       0.43069213   0.089003650         330\n673          1.66256649       0.41890929   0.102834618         330\n674          0.27447306       0.23522861   0.303528793         330\n675          0.27447306       0.23522861   0.303528793         330\n676          1.01281995       0.47311821   0.240327668         336\n677          1.04465944       0.46756383   0.131144393         336\n678          1.04771587       0.48498016   0.183279770         336\n679          0.96699340       0.42071928   0.217282710         336\n680          0.80058917       0.57920780   0.160768468         336\n681          0.71920876       0.37991944   0.163578746         337\n682          0.66599756       0.37214339   0.088512841         337\n683          1.01417653       0.81397233   0.226869889         338\n684          1.04080721       0.80747430   0.259348812         338\n685          1.01548069       0.78298573   0.236577271         338\n686          0.98258590       0.73985471   0.214151080         338\n687          0.93149780       0.65851277   0.194736158         338\n688          0.93011808       0.65864423   0.193116143         338\n689          0.61136370       0.87303230   0.206563078         340\n690          0.65200534       0.89875511   0.312851352         340\n691          0.55087997       0.80929224   0.248450755         340\n692          0.40492297       0.40492297   0.346317882         340\n693          0.45310744       0.45310744   0.387170671         340\n694          0.51324040       0.51324040   0.432435861         340\n695          0.52041283       0.52041283   0.456777002         340\n696          0.53851886       0.53851886   0.385108121         340\n697          0.46754433       0.46754433   0.398580865         340\n698          1.11804512       0.64479552   0.104406329         340\n699          1.04620023       0.57243921   0.090816024         340\n700          1.00378319       0.53161739   0.088998851         340\n701          2.16932994       0.71081822   0.161467665         347\n702          2.18467142       0.79475588   0.209387264         347\n703          1.22679395       0.32392655   0.208857071         348\n704          1.25496828       0.28517130   0.226196595         348\n705          1.23986262       0.29914690   0.220556930         348\n706          2.34487803       0.78506761   0.262675799         350\n707          2.42886499       0.85347442   0.298120735         350\n708          2.44442497       0.89446072   0.272931906         350\n709          2.34929434       0.85725309   0.341968193         350\n710          0.85851083       0.64556028   0.179474472         351\n711          1.95037350       0.32866031   0.118798801         354\n712          1.90738603       0.31274765   0.183332607         354\n713          1.96670837       0.26225016   0.187387020         354\n714          0.58952105       0.58952105   0.317802841         360\n715          0.55912729       0.55912729   0.312957968         360\n716          0.58190064       0.58190064   0.220976510         360\n717          0.63627734       0.63627734   0.254801041         360\n718          1.27375675       1.20385107   0.279405329         360\n719          1.33078166       1.25518660   0.274971723         360\n720          1.37462733       1.28037802   0.231759138         360\n721          1.31957589       1.19783419   0.260280843         360\n722          1.24159662       1.14660018   0.222807146         360\n723          1.10807319       1.02107216   0.164907721         360\n724          1.11708736       1.07605393   0.219773476         360\n725          0.27209304       0.26639197   0.085027135         360\n726          0.26284114       0.23687613   0.065003198         360\n727          0.26621691       0.27603080   0.075338628         360\n728          2.25320979       0.54675260   0.119721091         362\n729          2.27776734       0.54532780   0.139108600         362\n730          2.42436404       0.75707840   0.097602328         362\n731          2.36058798       0.70131312   0.050203539         362\n732          2.52867680       1.02127053   0.121368924         365\n733          2.45967433       1.05780992   0.026601831         365\n734          2.34888263       0.94490874   0.138010413         365\n735          2.38208184       0.95962970   0.139571272         365\n736          1.24738401       0.64023792   0.075333614         369\n737          1.29302996       0.65945860   0.119687181         369\n738          1.29342122       0.61052172   0.128161334         369\n739          1.24628972       0.57992198   0.088699542         369\n740          1.15992257       0.62772026   0.047531506         369\n741          1.06151350       0.94196786   0.056499191         372\n742          0.98384670       0.85770505   0.047166996         372\n743          1.09435009       0.98663596   0.082886532         372\n744          1.23979702       0.47792257   0.056353775         373\n745          1.23942153       0.47849150   0.055708462         373\n746          0.62896200       0.62896200   0.232976891         380\n747          0.62896200       0.62896200   0.232976891         380\n748          0.62896200       0.62896200   0.232976891         380\n749          0.62896200       0.62896200   0.232976891         380\n750          1.17673332       0.37733181   0.164849045         382\n751          1.22018199       0.38470477   0.140499038         382\n752          0.43965541       0.43965541   0.224664545         383\n753          0.44220455       0.44220455   0.229749182         383\n754          0.33254218       0.33254218   0.258200751         383\n755          0.31816372       0.31816372   0.261367412         383\n756          1.13945399       0.66460951   0.119068172         384\n757          1.20365809       0.62987625   0.067557571         384\n758          1.26584185       0.60155028   0.068546303         384\n759          1.07208563       0.46302065   0.056561472         384\n760          0.58504864       0.76031433   0.260868564         387\n761          1.06777469       0.11824224   0.098210744         388\n762          0.99842183       0.06708680   0.141159583         388\n763          1.06777469       0.11824224   0.098210744         388\n764          1.11121516       0.91030494   0.187868072         390\n765          1.13558910       0.97860675   0.114291226         390\n766          1.15650954       0.98295926   0.153561677         390\n767          1.15159202       0.96145541   0.181591840         390\n768          1.58686370       1.27151056   0.089075489         390\n769          1.49903564       1.23001430   0.061021466         390\n770          1.77219395       1.26846669   0.071885894         390\n771          1.67385187       1.15710739   0.139200817         390\n772          1.76231777       1.22461302   0.052263883         390\n773          1.40309591       0.63803096   0.082701815         393\n774          1.40998336       0.63568601   0.082481656         393\n775          1.36910738       0.50914550   0.024654967         393\n776          0.68195859       0.43642493   0.140954087         396\n777          0.65743698       0.40947269   0.169261902         396\n778          0.62447247       0.38203996   0.202633531         396\n779          0.57815848       0.33173653   0.266654370         396\n780          0.56737427       0.23605623   0.233100206         396\n781          0.41993408       0.41993408   0.109260861         400\n782          0.36154694       0.36154694   0.071355934         400\n783          0.38212852       0.38212852   0.096584057         400\n784          0.42122214       0.42122214   0.064600726         400\n785          0.36934611       0.36934611   0.086733808         400\n786          0.44914156       0.41711944   0.089847724         400\n787          0.41731572       0.45441103   0.124458186         400\n788          0.48843496       0.49147906   0.126171299         400\n789          0.45461922       0.39350140   0.091701273         400\n790          0.26734287       0.26381637   0.087170144         406\n791          0.28996749       0.27583357   0.066262905         406\n792          0.35634368       0.19778517   0.169773556         406\n793          0.18906256       0.18906256   0.086045578         408\n794          0.19074812       0.19074812   0.070538289         408\n795          0.11402764       0.11402764   0.053396369         408\n796          1.79395381       0.74704861   0.195668909         410\n797          1.79395381       0.74704861   0.195668909         410\n798          1.79395381       0.74704861   0.195668909         410\n799          0.17289171       0.13857944   0.044498508         412\n800          0.19622448       0.19622448   0.146439128         412\n801          0.16775686       0.16775686   0.140520599         417\n802          0.14685952       0.14685952   0.149100737         417\n803          0.94837264       0.70721221   0.259952716         419\n804          0.87991089       0.69187002   0.320619033         419\n805          0.82445012       0.60764298   0.365258801         419\n806          0.78790675       0.50494892   0.436207970         419\n807          0.76538701       0.52791790   0.392038814         419\n808          1.40481749       0.62176343   0.119597230         420\n809          1.51564172       0.67455355   0.095937580         420\n810          1.73059878       1.03672316   0.136984381         421\n811          1.67462005       0.98278513   0.141175654         421\n812          1.62731136       0.94486609   0.172836753         421\n813          1.63876028       0.90209340   0.101506325         421\n814          0.14230990       0.59339694   0.070327682         428\n815          1.48099006       1.01848738   0.192500969         429\n816          1.58804095       1.07514489   0.252046913         429\n817          1.56541253       1.00240873   0.264679997         429\n818          1.62591261       0.99872946   0.300473111         429\n819          1.57244393       0.35378848   0.209967194         432\n820          1.66280846       0.40860938   0.117733127         432\n821          1.66390821       0.29101629   0.161998895         432\n822          1.68596399       0.30839329   0.138724649         432\n823          0.45889621       0.45889621   0.177784498         432\n824          0.49821708       0.49821708   0.144672955         432\n825          0.55221695       0.55221695   0.195800452         432\n826          0.57308063       0.57308063   0.185674782         432\n827          0.59895973       0.54485063   0.144141952         432\n828          0.70670166       0.70670166   0.158624035         436\n829          0.70587654       0.70587654   0.157531608         436\n830          0.70587654       0.70587654   0.157531608         436\n831          0.70587654       0.70587654   0.157531608         436\n832          0.70587654       0.70587654   0.157531608         436\n833          1.46706279       0.79094863   0.069021704         437\n834          1.44158465       0.84666708   0.047784129         437\n835          1.39499338       0.82588293   0.097451673         437\n836          1.46706279       0.79094863   0.069021704         437\n837          0.77135148       0.77135148   0.116231174         437\n838          0.82550463       0.82550463   0.112914105         437\n839          0.83150182       0.83150182   0.095114468         437\n840          0.77597854       0.77597854   0.036724090         437\n841          0.74453857       0.74453857   0.046686389         437\n842          0.53392984       0.49094376   0.114357435         437\n843          0.53110329       0.48261320   0.096802899         437\n844          0.52872898       0.47497862   0.082381569         437\n845          0.52317788       0.46265459   0.066693099         437\n846          0.48319745       0.41209079   0.041099663         437\n847          0.48949703       0.41286206   0.063157248         437\n848          1.34951704       0.71163500   0.078592070         443\n849          1.40525071       0.68258728   0.051917699         443\n850          1.48888298       0.62537906   0.134032073         443\n851          1.46535657       0.68473106   0.209104492         443\n852          1.37907826       0.74928454   0.152524723         443\n853          0.11297978       0.42885286   0.113509674         448\n854          0.18045331       0.41348996   0.132502617         448\n855          0.19353380       0.31766237   0.032139183         448\n856          0.12779601       0.36881375   0.088830120         448\n857          0.17744292       0.40619637   0.046402580         449\n858          0.20978164       0.37800310   0.085532089         449\n859          0.18066432       0.39602223   0.048211346         449\n860          1.01840060       0.93388505   0.170511398         452\n861          1.01840060       0.93388505   0.170511398         452\n862          1.01840060       0.93388505   0.170511398         452\n863          1.49079731       0.25080772   0.131389693         452\n864          1.56336280       0.20612126   0.126892046         452\n865          1.58114661       0.26417887   0.066463513         452\n866          1.58468761       0.26434607   0.067112411         452\n867          0.91784886       0.70738417   0.222463757         452\n868          0.81131771       0.63996392   0.163482712         452\n869          0.98457096       0.82983753   0.075404994         452\n870          0.98475967       0.78434706   0.185713284         452\n871          0.87987283       0.71928505   0.133782181         452\n872          1.07598562       0.50552849   0.024555776         453\n873          1.20673669       0.52047539   0.042072378         453\n874          1.16946106       0.47518275   0.089970244         453\n875          1.11154246       0.44704466   0.087408586         453\n876          1.07510446       0.50509987   0.023849031         453\n877          0.85905646       0.11881704   0.089079684         456\n878          0.86981447       0.12324388   0.101387514         456\n879          0.81141713       0.16473568   0.035627677         456\n880          2.00403172       1.16599870   0.163529300         456\n881          2.05104448       1.20654407   0.188792466         456\n882          2.09771597       1.23898946   0.200053530         456\n883          2.07844104       1.24064401   0.208772081         456\n884          2.05290509       1.28431291   0.222021088         456\n885          0.29918181       0.29918181   0.157315502         457\n886          0.33712726       0.33712726   0.118470115         457\n887          0.36275413       0.36275413   0.093341803         457\n888          0.36973056       0.36973056   0.090883633         457\n889          0.36959942       0.36959942   0.112737382         457\n890          0.37692717       0.37692717   0.132189381         457\n891          1.55832698       0.69935101   0.039492012         460\n892          1.47450546       0.69435191   0.114705919         460\n893          1.43399372       0.68378157   0.156020386         460\n894          1.40821483       0.70429391   0.150596361         460\n895          0.37597349       0.37384186   0.280788896         462\n896          1.61209293       0.82691059   0.200979450         464\n897          1.55245307       0.76416073   0.151836584         464\n898          1.47415589       0.68109201   0.069816468         464\n899          1.54423966       0.70806128   0.135382600         464\n900          2.03809287       0.56165090   0.479313418         472\n901          2.03684195       0.56020346   0.479962805         472\n902          2.04082454       0.56402013   0.478388047         472\n903          2.03914645       0.56275937   0.479428314         472\n904          1.98636163       0.50359794   0.423989666         472\n905          2.06521379       0.58044945   0.405042782         472\n906          2.06225766       0.57752987   0.408312285         472\n907          2.06283708       0.57813086   0.408206309         472\n908          2.12223379       0.64409374   0.415855770         472\n909          2.49631928       1.91614172   0.116284036         472\n910          2.54047929       1.95691369   0.138388923         472\n911          2.61189730       2.02903959   0.096657410         472\n912          2.66160681       2.07930895   0.093316012         472\n913          2.46139879       1.89225766   0.118134208         472\n914          1.34765216       0.78236483   0.149284163         473\n915          1.29725840       0.77349098   0.142294524         473\n916          1.35359246       0.76001926   0.183917814         473\n917          1.37876412       0.78105964   0.175556817         473\n918          1.29199079       0.72221925   0.201335971         473\n919          2.01302797       0.70721264   0.050658898         473\n920          2.01302797       0.70721264   0.050658898         473\n921          2.01302797       0.70721264   0.050658898         473\n922          2.01302797       0.70721264   0.050658898         473\n923          0.26087248       0.26087248   0.160594506         475\n924          0.26496230       0.26496230   0.180373187         475\n925          0.25735498       0.25735498   0.174018671         475\n926          0.22218755       0.22218755   0.151781037         475\n927          0.72795053       0.66470004   0.237226763         477\n928          0.65251688       0.59652023   0.173589016         477\n929          0.67921943       0.54642547   0.239963948         477\n930          0.49522278       0.45477907   0.112302506         477\n931          0.56311002       0.56664732   0.076710124         477\n932          0.59542047       0.65005186   0.088958716         477\n933          0.58285922       0.52251420   0.125360710         478\n934          0.58104543       0.47945097   0.074497369         478\n935          0.64978529       0.51612902   0.167309307         478\n936          2.29881141       1.37669639   0.094311068         479\n937          2.42412335       1.50884445   0.073718269         479\n938          2.53547747       1.62599427   0.186933941         479\n939          1.06780754       0.85934105   0.167793829         480\n940          1.12114621       0.83208724   0.041382098         480\n941          1.18779787       0.76483230   0.076083275         480\n942          0.24442900       0.24442900   0.187757726         481\n943          0.22364728       0.22364728   0.188638861         481\n944          0.25213961       0.25213961   0.169875831         481\n945          0.66571072       0.51805449   0.330150614         482\n946          0.70155871       0.51329220   0.231754438         482\n947          0.66629184       0.53823325   0.222072335         482\n948          0.35730375       0.35730375   0.282858644         486\n949          0.35930530       0.35930530   0.259286882         486\n950          0.33616621       0.33616621   0.264842351         486\n951          0.35234015       0.35234015   0.264253492         486\n952          1.67452325       0.82052390   0.176625416         489\n953          1.57712510       0.61700667   0.094441077         489\n954          1.51058417       0.61994370   0.238304950         489\n955          0.26346318       0.29665032   0.129028511         492\n956          0.30719794       0.29327882   0.057415667         492\n957          0.20720121       0.25716640   0.175894786         492\n958          1.23884953       0.93103837   0.298338188         493\n959          1.28526162       1.01544339   0.230829313         493\n960          1.18479246       0.95331413   0.175089867         493\n961          1.24845300       0.96052048   0.261843076         493\n962          1.17280252       0.87423346   0.295810653         493\n963          1.20438402       0.89767369   0.301522086         493\n964          1.26542674       0.94335918   0.274268875         493\n965          1.26043557       1.00357282   0.206109721         493\n966          1.42396435       1.18063465   0.071164953         496\n967          1.39870116       1.16096805   0.046337650         496\n968          1.40218477       1.16437953   0.049118404         496\n969          1.43174432       1.08654176   0.112740944         496\n970          1.39118391       1.15809455   0.040070169         496\n971          0.85256855       0.76543873   0.028996600         500\n972          0.85256855       0.76543873   0.028996600         500\n973          0.86365299       0.77822006   0.040568494         500\n974          1.09792805       1.09792805   0.262991509         502\n975          0.92250973       0.92250973   0.101378162         502\n976          0.91229891       0.91229891   0.090908960         502\n977          1.14143709       1.14143709   0.120394345         504\n978          1.14026232       1.14026232   0.148675167         504\n979          1.24772869       1.24772869   0.165620222         504\n980          1.05733531       0.06961458   0.164685634         509\n981          0.00000000       0.00000000   0.092681170         509\n982          0.74125296       0.74125296   0.033135077         510\n983          0.83620174       0.85521927   0.121643866         510\n984          0.77842287       0.85163427   0.123323745         510\n985          0.77707368       0.77707368   0.175374256         510\n986          2.23843858       0.81808618   0.266508493         517\n987          2.26223559       0.85455428   0.228440032         517\n988          2.27997788       0.88211370   0.203623329         517\n989          2.31038224       0.92728814   0.164695867         517\n990          2.29684667       0.93885466   0.100793371         517\n991          2.22249179       0.85959118   0.127412663         517\n992          2.20846137       0.81155079   0.217361389         517\n993          0.21297178       0.30870549   0.136024926         517\n994          0.26139651       0.37930947   0.152086215         517\n995          0.32310611       0.42246580   0.156020092         517\n996          0.40445056       0.51217569   0.219516047         517\n997          0.50049949       0.57772569   0.205357663         517\n998          0.37187113       0.44290843   0.138090664         517\n999          0.22548829       0.22548829   0.122104476         521\n1000         0.16144927       0.16144927   0.044961535         521\n1001         0.22529056       0.22529056   0.140035533         521\n1002         0.14128146       0.14128146   0.066328754         521\n1003         0.26468483       0.26468483   0.135636078         521\n1004         0.20591231       0.20591231   0.077024639         521\n1005         0.24298812       0.24298812   0.119390981         521\n1006         0.18244842       0.18244842   0.053096793         521\n1007         0.87175294       0.87175294   0.132437666         522\n1008         0.90930625       0.90930625   0.171146416         522\n1009         0.96525445       1.00358526   0.167590746         522\n1010         0.95547590       0.95547590   0.170946327         522\n1011         0.43380351       0.36440249   0.076807179         522\n1012         0.38503050       0.33043867   0.053335577         522\n1013         0.36022043       0.26079632   0.092963813         522\n1014         0.41022035       0.27632923   0.104611796         522\n1015         0.38848680       0.28022159   0.102529454         522\n1016         0.30113676       0.28152575   0.081463799         522\n1017         0.36059414       0.31199630   0.027277782         522\n1018         0.33163558       0.33163558   0.019919655         522\n1019         0.34005140       0.34005140   0.057677004         522\n1020         0.41484767       0.31285153   0.111888095         522\n1021         0.46619845       0.28346648   0.159054494         522\n1022         2.13175375       0.64741965   0.320954872         528\n1023         0.97228258       0.80169575   0.115550561         530\n1024         0.95313029       0.72556224   0.115568252         530\n1025         0.95359345       0.72570503   0.114714120         530\n1026         0.94539021       0.71275470   0.109356244         530\n1027         1.07618557       0.85092901   0.137832250         530\n1028         1.06535077       0.88055249   0.049912567         530\n1029         0.99019664       0.77595718   0.140289241         530\n1030         1.16713818       0.56746305   0.094361701         536\n1031         1.18060994       0.58771081   0.157091984         536\n1032         1.16721751       0.59677318   0.226306171         536\n1033         1.11975907       0.55597612   0.214994637         536\n1034         1.11163788       0.54069521   0.186143718         536\n1035         1.11045176       0.53384526   0.165252829         536\n1036         1.12272368       0.54000038   0.150868585         536\n1037         1.11848353       0.52794663   0.117271457         536\n1038         1.12667765       0.52809671   0.092266597         536\n1039         1.78883785       0.95872478   0.019283098         537\n1040         1.82054761       1.05395903   0.101211472         537\n1041         1.85236059       1.09126032   0.126288200         537\n1042         1.91970827       1.13731607   0.208138465         537\n1043         1.97956777       1.13773349   0.211544207         537\n1044         1.95212668       1.14835395   0.149887823         537\n1045         1.89173242       1.06513360   0.073927061         537\n1046         0.32629724       0.32629724   0.063531211         546\n1047         0.25919929       0.25919929   0.142748241         546\n1048         0.22369524       0.22369524   0.186106551         546\n1049         0.16173999       0.16173999   0.171330056         546\n1050         0.21600576       0.21600576   0.097513260         546\n1051         0.30510963       0.30510963   0.001594653         546\n1052         0.33163759       0.33163759   0.132647543         553\n1053         0.33021488       0.33021488   0.134544076         553\n1054         0.32915887       0.32915887   0.134788873         553\n1055         0.76422169       0.13047220   0.058128965         560\n1056         0.61679752       0.27678673   0.123717948         560\n1057         0.62144495       0.28357033   0.108617582         560\n1058         0.51148306       0.38375089   0.232455446         560\n1059         0.59090344       0.31188976   0.184086868         560\n1060         0.65822637       0.24612472   0.140977295         560\n1061         0.81301983       0.08139948   0.112147916         560\n1062         0.62705292       0.62705292   0.169438387         562\n1063         0.53172975       0.53172975   0.109242362         562\n1064         0.57629781       0.57629781   0.126577324         562\n1065         0.54509904       0.54509904   0.109837958         562\n1066         1.15997676       0.50538100   0.029595989         572\n1067         0.97773777       0.41272722   0.134328795         572\n1068         0.43209116       0.45500764   0.146611541         579\n1069         0.41881394       0.44583487   0.123034296         579\n1070         0.41381410       0.44753412   0.099757745         579\n1071         0.43080671       0.46709812   0.110089137         579\n1072         0.49778773       0.53253663   0.158751281         579\n1073         0.52594675       0.55780732   0.125399253         579\n1074         0.53334325       0.56154087   0.104555359         579\n1075         0.54294939       0.56673668   0.076328443         579\n1076         0.73018432       0.49522646   0.125446921         590\n1077         0.72176900       0.53430009   0.154946728         590\n1078         0.65798538       0.56622233   0.126420085         590\n1079         0.69764346       0.69764346   0.305890555         596\n1080         0.66498675       0.66498675   0.275867763         596\n1081         0.76193910       0.70599118   0.263530093         596\n1082         0.81949833       0.70825703   0.233336163         596\n1083         0.89090233       0.74342838   0.175477565         596\n1084         0.85968840       0.85886535   0.142549724         596\n1085         0.81175018       0.81175018   0.192360886         596\n1086         0.74854300       0.74854300   0.256449182         596\n1087         0.87101037       0.76232346   0.183045456         598\n1088         0.89453639       0.72520538   0.182495021         598\n1089         0.91910668       0.63696447   0.167420649         598\n1090         0.87854191       0.70573944   0.145528384         598\n1091         0.92677816       0.62207256   0.174024479         598\n1092         0.95129048       0.58999134   0.198835915         598\n1093         1.04421461       0.51850561   0.291422388         598\n1094         1.06961164       0.56610540   0.324636270         598\n1095         0.68280198       0.10382022   0.106104487         600\n1096         0.76112519       0.16776544   0.046545747         600\n1097         0.74087712       0.13130843   0.070177079         600\n1098         0.68280198       0.10382022   0.106104487         600\n1099         0.66379170       0.15661455   0.082956501         600\n1100         0.26807928       0.31409808   0.173848264         606\n1101         0.36029704       0.34383854   0.120394549         606\n1102         2.20343038       0.79009591   0.208548835         608\n1103         2.14851205       0.73279124   0.207087750         608\n1104         2.18259901       0.74588170   0.254273563         608\n1105         2.18259901       0.74588170   0.254273563         608\n1106         2.15249849       0.69528474   0.259490122         608\n1107         2.11555126       0.64899121   0.255335987         608\n1108         2.10526000       0.63048707   0.271218782         608\n1109         1.81659138       0.31773116   0.111824889         615\n1110         1.79252224       0.31295122   0.171651882         615\n1111         1.81341441       0.35574407   0.150325974         615\n1112         1.86003255       0.40183402   0.131545806         615\n1113         1.91128419       0.40371018   0.110511520         615\n1114         1.86152254       0.35234716   0.049087093         615\n1115         1.16113361       0.39587795   0.159200501         616\n1116         1.15259635       0.41186144   0.158105419         616\n1117         1.15208375       0.38757301   0.145765257         616\n1118         1.08807293       0.49166981   0.155256855         616\n1119         1.08690230       0.46757235   0.131807991         616\n1120         1.02094640       0.56945166   0.187891861         616\n1121         1.05570709       0.22640616   0.127887996         616\n1122         1.02439505       0.34926989   0.243683268         616\n1123         0.76090936       0.65879351   0.160352617         616\n1124         0.75792877       0.64211684   0.158070855         616\n1125         0.74376502       0.63603934   0.173495529         616\n1126         0.72855694       0.60172418   0.169814990         616\n1127         0.68037526       0.55635031   0.142915885         616\n1128         0.50108863       0.26499567   0.190429544         618\n1129         0.54007529       0.18356803   0.224492134         618\n1130         0.46525405       0.26095064   0.263002892         618\n1131         1.59993053       0.91005202   0.099521831         623\n1132         1.75688402       0.75055867   0.094988797         623\n1133         1.69048006       0.77511520   0.209088804         623\n1134         1.54475271       0.81162270   0.107992251         623\n1135         0.96781295       0.08254689   0.257286651         625\n1136         0.95815472       0.08692374   0.255572911         625\n1137         0.93509453       0.11151180   0.273831569         625\n1138         0.91006454       0.13744385   0.281729181         625\n1139         0.90429706       0.14985093   0.267191805         625\n1140         0.89773571       0.16636803   0.252792528         625\n1141         0.89422677       0.15222495   0.287244489         625\n1142         0.89285834       0.15949059   0.299302206         625\n1143         1.57882879       0.83862604   0.157199555         629\n1144         1.59150400       0.85912665   0.189081809         629\n1145         1.59150400       0.85912665   0.189081809         629\n1146         1.49051883       0.63197330   0.132051618         638\n1147         1.44567196       0.60582782   0.167426590         638\n1148         1.38713165       0.56653559   0.128131136         638\n1149         1.34511216       0.52491765   0.088557919         638\n1150         1.38794144       0.49878698   0.084761804         638\n1151         0.67530429       0.53971510   0.267403086         644\n1152         0.62039618       0.46098530   0.244468257         644\n1153         0.57510057       0.43281199   0.208175303         644\n1154         0.58694409       0.48312327   0.192122237         644\n1155         0.61387498       0.54294727   0.199632138         644\n1156         0.63868828       0.55689730   0.214498939         644\n1157         0.88811591       0.46689942   0.081395614         645\n1158         0.86296368       0.48646248   0.093986433         645\n1159         0.87226269       0.58189382   0.098626526         645\n1160         0.49765019       0.51225708   0.087605443         646\n1161         0.52825637       0.54156527   0.113392446         646\n1162         0.55766774       0.56905406   0.151000333         646\n1163         0.54448986       0.55408030   0.166324980         646\n1164         0.52519798       0.53355276   0.174083632         646\n1165         0.48703139       0.49526005   0.166759835         646\n1166         0.44297477       0.46148383   0.056857755         646\n1167         0.38484806       0.39882394   0.136128039         646\n1168         0.37460604       0.38623995   0.161118033         646\n1169         0.42082857       0.43187729   0.142377154         646\n1170         1.16012917       0.45961371   0.269995950         648\n1171         1.23927569       0.46435168   0.266818000         648\n1172         1.25733116       0.47583968   0.278546328         648\n1173         1.27770256       0.52685587   0.283714171         648\n1174         1.28256017       0.55272550   0.260631234         648\n1175         1.28391728       0.58160600   0.234677252         648\n1176         1.27509407       0.60794403   0.208070087         648\n1177         1.26932583       0.63472080   0.182058121         648\n1178         1.21672093       0.60926126   0.198623075         648\n1179         1.19677820       0.59106234   0.220115176         648\n1180         1.16678256       0.59713023   0.223170890         648\n1181         1.15995854       0.57081358   0.254582619         648\n1182         1.15184512       0.54920609   0.282650865         648\n1183         1.15090117       0.49319930   0.301463867         648\n1184         1.15480976       0.46921282   0.279387704         648\n1185         1.16837537       0.43837210   0.250113861         648\n1186         0.74478919       0.67515019   0.147458596         654\n1187         0.74222872       0.67432871   0.192537329         654\n1188         0.42436418       0.35299631   0.164247610         654\n1189         0.35929088       0.28743317   0.048343896         654\n1190         0.71387223       0.48760467   0.072874340         655\n1191         0.70811135       0.52336483   0.092097033         655\n1192         0.73235042       0.56617910   0.089447458         655\n1193         0.76549578       0.44603266   0.094920164         655\n1194         0.70253774       0.70253774   0.160004846         656\n1195         0.70253774       0.70253774   0.160004846         656\n1196         0.70253774       0.70253774   0.160004846         656\n1197         0.70253774       0.70253774   0.160004846         656\n1198         0.64681457       0.30061870   0.129250428         659\n1199         0.60277363       0.29802736   0.164878851         659\n1200         0.71770665       0.33448895   0.074336163         659\n1201         0.56125066       0.30303176   0.202175494         659\n1202         0.52525321       0.33589746   0.189816226         659\n1203         0.49950706       0.36964094   0.152253661         659\n1204         0.49229905       0.38977683   0.107502820         659\n1205         1.19390191       0.58953703   0.071354471         660\n1206         1.15138236       0.49997144   0.162595426         660\n1207         1.09776393       0.40672504   0.240403259         660\n1208         1.33988726       0.63408536   0.178909244         660\n1209         1.27305936       0.57529954   0.242867688         660\n1210         1.80071617       1.39447456   0.147627971         664\n1211         1.70823128       1.31332311   0.077660538         664\n1212         1.70612102       1.25742785   0.170828977         664\n1213         1.79114414       1.33148793   0.155284809         664\n1214         0.45379364       0.41510719   0.125360802         684\n1215         0.45203676       0.41711194   0.147203202         684\n1216         0.55690790       0.51858230   0.137781349         684\n1217         0.41965983       0.31565195   0.217151049         686\n1218         0.58322004       0.17549181   0.221512876         686\n1219         0.56683952       0.25028783   0.189879760         686\n1220         0.41965983       0.31565195   0.217151049         686\n1221         0.79491133       0.47359620   0.250554194         689\n1222         0.81018964       0.46774903   0.264882285         689\n1223         0.84083186       0.45748249   0.294023693         689\n1224         0.87159967       0.44989726   0.323315262         689\n1225         0.93405859       0.45931470   0.374796593         689\n1226         0.93405859       0.45931470   0.374796593         689\n1227         0.93405859       0.45931470   0.374796593         689\n1228         0.93405859       0.45931470   0.374796593         689\n1229         0.93405859       0.45931470   0.374796593         689\n1230         0.78378846       0.78378846   0.133336104         694\n1231         0.75843708       0.74355188   0.109045818         694\n1232         0.75550629       0.66148133   0.028976723         694\n1233         0.84137581       0.63558670   0.098445876         694\n1234         2.05794835       0.42182534   0.143478207         696\n1235         1.88924814       1.02715035   0.088505961         696\n1236         1.84397576       1.00287580   0.036693867         696\n1237         1.84397576       1.00287580   0.036693867         696\n1238         1.84300595       1.00147163   0.035781782         696\n1239         1.88924814       1.02715035   0.088505961         696\n1240         0.67713324       0.67713324   0.254601935         696\n1241         0.77537292       0.77537292   0.242852914         696\n1242         0.83069690       0.83069690   0.218504677         696\n1243         0.83888192       0.83888192   0.195658636         696\n1244         0.84629863       0.26107272   0.111652491         697\n1245         0.91191273       0.35104186   0.192428092         697\n1246         0.87414832       0.36439277   0.261859298         697\n1247         0.74304600       0.28673198   0.228033360         697\n1248         0.79129601       0.23181533   0.119801525         697\n1249         0.25825613       0.25825613   0.117741103         699\n1250         0.30141102       0.30141102   0.082314145         699\n1251         0.32224736       0.32224736   0.115085589         699\n1252         0.31014949       0.31014949   0.150113233         699\n1253         0.30101896       0.30101896   0.169968663         699\n1254         0.29062133       0.29062133   0.207301051         699\n1255         0.28459396       0.28459396   0.223235635         699\n1256         0.17951226       0.17951226   0.119706474         699\n1257         0.24004853       0.24004853   0.132020326         699\n1258         1.37021615       0.69343564   0.196438039         712\n1259         1.40629507       0.66901252   0.215435677         712\n1260         1.40359353       0.66610153   0.215847503         712\n1261         1.47774272       0.75599026   0.190142619         712\n1262         0.91734462       0.51692527   0.166974963         716\n1263         0.90924126       0.54739788   0.152222031         716\n1264         0.88974451       0.57819170   0.130406619         716\n1265         0.85927245       0.61835937   0.102962275         716\n1266         0.83640251       0.66742698   0.101264705         716\n1267         0.82286339       0.63285450   0.067877314         716\n1268         0.79866246       0.62175863   0.039285836         716\n1269         0.78020458       0.60999594   0.033345084         716\n1270         0.80956642       0.57477826   0.069828591         716\n1271         0.84378762       0.53266230   0.113497340         716\n1272         0.87896949       0.49482207   0.154277396         716\n1273         1.58744523       0.71212303   0.187750957         720\n1274         1.54594835       0.66616634   0.220310238         720\n1275         1.50366038       0.62042906   0.254347757         720\n1276         1.45989713       0.57361804   0.291080022         720\n1277         1.47204838       0.61418469   0.155574401         720\n1278         1.47359564       0.61594965   0.153861852         720\n1279         1.47272669       0.61468819   0.155677975         720\n1280         0.49649361       0.37510350   0.069064912         722\n1281         0.51110879       0.42911459   0.093215419         722\n1282         0.43506383       0.41095272   0.082723495         722\n1283         0.80326549       0.54092137   0.092839659         724\n1284         0.78548051       0.54441525   0.096037133         724\n1285         0.60389189       0.55627938   0.131890019         724\n1286         0.68984797       0.62326414   0.168749183         724\n1287         0.66085920       0.55890508   0.083063741         724\n1288         0.65370324       0.60530903   0.153648591         724\n1289         0.45117668       0.11621339   0.151445779         728\n1290         0.29553089       0.27878806   0.127644241         728\n1291         0.28317863       0.28317859   0.191086989         728\n1292         0.38118198       0.18303553   0.184392689         728\n1293         0.77183525       0.83598653   0.159290983         737\n1294         0.80256255       0.80256255   0.231441247         737\n1295         0.74998024       0.74998024   0.201029727         737\n1296         0.65480693       0.84962364   0.038872841         737\n1297         1.04406458       0.61083469   0.132476208         756\n1298         1.03709512       0.66914182   0.208573400         756\n1299         1.07786180       0.72065597   0.307054649         756\n1300         1.14317878       0.72393877   0.296326420         756\n1301         0.35302569       0.35302569   0.067074775         762\n1302         0.39029453       0.39029453   0.105133572         762\n1303         0.41567016       0.41567016   0.110235197         762\n1304         0.21375546       0.18437624   0.116391227         775\n1305         0.18244105       0.17753564   0.157718019         775\n1306         0.11107107       0.11107107   0.140443794         775\n1307         0.09384228       0.09384228   0.115494510         775\n1308         0.10340432       0.10340432   0.103047216         775\n1309         0.28175925       0.23280949   0.233800778         778\n1310         0.23007571       0.18963440   0.230993859         778\n1311         0.18543409       0.18543409   0.237116669         778\n1312         0.16247464       0.16247464   0.208417826         778\n1313         0.22162127       0.22162127   0.185916538         778\n1314         0.24023731       0.24023731   0.275884462         778\n1315         0.21943695       0.21943695   0.249234820         778\n1316         0.21210418       0.21210418   0.223993448         778\n1317         0.23708043       0.23708043   0.230496554         778\n1318         0.22990317       0.22990317   0.209037109         778\n1319         2.09440442       0.28800221   0.110565631         841\n1320         2.00724510       0.42542233   0.135331928         841\n1321         2.05201187       0.35616680   0.147192055         841\n1322         0.72339601       0.22784949   0.203748863         882\n1323         0.70348148       0.20880656   0.185581816         882\n1324         0.70348148       0.20880656   0.185581816         882\n1325         0.70348148       0.20880656   0.185581816         882\n1326         0.70348148       0.20880656   0.185581816         882\n1327         0.78373887       0.28378076   0.253013888         882\n1328         0.70348148       0.20880656   0.185581816         882\n1329         0.70348148       0.20880656   0.185581816         882\n1330         0.70348148       0.20880656   0.185581816         882\n1331         0.67087960       0.17641563   0.150207776         882\n1332         0.70348148       0.20880656   0.185581816         882\n1333         1.48566307       1.42356740   0.350645631         906\n1334         1.52313940       1.46837158   0.369951142         906\n1335         1.47315380       1.40428746   0.350901646         906\n1336         1.54315931       1.46745202   0.426464214         906\n1337         1.52722255       1.44339559   0.398294303         906\n1338         1.49189114       1.40486175   0.359130729         906\n1339         1.45504055       1.36785227   0.322233179         906\n1340         0.14080396       0.14080396   0.110877007         910\n1341         0.06341072       0.06341072   0.188241224         910\n1342         0.14448783       0.14448783   0.070518234         910\n1343         0.14458703       0.14458703   0.077063094         910\n1344         0.15503738       0.15503738   0.079735536         910\n1345         1.27995765       1.00929020   0.123010959         928\n1346         1.29792661       0.99347180   0.212151447         928\n1347         1.31585275       0.98501699   0.289126998         928\n1348         1.21080905       0.86561829   0.185903640         928\n1349         1.06894544       0.74927221   0.143051761         928\n1350         1.11295823       0.73966457   0.090465797         928\n1351         1.04958230       0.70980592   0.083406075         928\n1352         1.16703341       0.84137684   0.205889882         928\n1353         1.23445977       0.94320476   0.157186730         928\n1354         1.33697362       0.37272109   0.069526404         950\n1355         1.28952017       0.43881028   0.036941557         950\n1356         1.25426775       0.43935908   0.105887572         950\n1357         1.12065973       0.58304396   0.033629605         950\n1358         1.29565018       0.43228355   0.032537830         950\n1359         1.47216418       0.21723364   0.137679712         950\n1360         1.40133010       0.29695198   0.120359624         950\n1361         0.66357717       0.66357717   0.149865476         969\n1362         0.55982287       0.55982287   0.073502632         969\n1363         0.56328570       0.56328570   0.051197571         969\n1364         0.51532187       0.51532187   0.040185627         969\n1365         0.43294056       0.43294056   0.119549169         969\n1366         0.47645329       0.47645329   0.123179733         969\n1367         0.49538174       0.49538174   0.155257603         969\n1368         0.48797425       0.48797425   0.192765865         969\n1369         0.51456429       0.51456429   0.216525055         969\n1370         0.56702129       0.56702129   0.176852785         969\n1371         0.58323784       0.58323784   0.217845970         969\n1372         0.61576785       0.61576785   0.299433474         969\n1373         0.72377841       0.72377841   0.368531503         969\n1374         0.70972501       0.70972501   0.322512767         969\n1375         0.66744627       0.66744627   0.213057141         969\n1376         1.33855983       1.25956273   0.222251529        1038\n1377         1.36633961       1.30182296   0.247958741        1038\n1378         1.36633961       1.30182296   0.247958741        1038\n1379         1.40932979       1.35509516   0.267723357        1038\n1380         1.41447117       1.36625551   0.260918355        1038\n1381         1.40293609       1.36050832   0.237357617        1038\n1382         1.36633961       1.30182296   0.247958741        1038\n1383         0.61617103       0.76731050   0.079555103        1040\n1384         0.60111531       0.76078733   0.110990545        1040\n1385         0.58889145       0.75823965   0.146643539        1040\n1386         0.55736534       0.72631758   0.161850367        1040\n1387         0.53586112       0.70894822   0.185735211        1040\n1388         0.52697317       0.71269813   0.224152761        1040\n1389         0.50650641       0.69849293   0.250000541        1040\n1390         0.46683551       0.65557169   0.268430435        1040\n1391         0.47258097       0.63917539   0.220308748        1040\n1392         0.59262270       0.70543091   0.090614076        1040\n1393         0.46268194       0.59985538   0.219432828        1040\n1394         0.46281796       0.58393332   0.232035596        1040\n1395         0.48916868       0.58546510   0.202783839        1040\n1396         0.51797354       0.61442251   0.182948150        1040\n1397         0.54344770       0.61810900   0.162152794        1040\n1398         0.56828051       0.66869449   0.123736356        1040\n1399         0.54796453       0.68172904   0.133097592        1040\n1400         0.51697105       0.65069710   0.166144934        1040\n1401         0.49042764       0.63388564   0.189512348        1040\n1402         0.54564136       0.68948054   0.134452196        1040\n1403         0.53674336       0.69625863   0.156614360        1040\n1404         1.44490000       1.39586681   0.256527116        1093\n1405         1.42978483       1.33017403   0.237898092        1093\n1406         1.47044648       1.18396614   0.193520276        1093\n1407         1.50211652       1.14990469   0.194591780        1093\n1408         1.59597566       1.28103649   0.329084734        1093\n1409         1.58585105       1.38830573   0.396998000        1093\n1410         1.58913919       1.46369362   0.414189908        1093\n1411         1.04924999       0.83076676   0.447087408        1129\n1412         1.16125416       0.78107088   0.469176138        1129\n1413         1.18244828       0.74208695   0.432772065        1129\n1414         1.08940945       0.79175637   0.438462264        1129\n1415         1.10872242       0.77963265   0.442288484        1129\n1416         1.05406325       0.74108675   0.350713719        1129\n1417         1.07857841       0.72550786   0.356924767        1129\n1418         0.32550198       0.67714509   0.113134047        1150\n1419         0.21344410       0.71461711   0.018681836        1150\n1420         0.21344410       0.71461711   0.018681836        1150\n1421         0.29649800       0.69030285   0.078333297        1150\n1422         0.29649800       0.69030285   0.078333297        1150\n1423         0.29649800       0.69030285   0.078333297        1150\n1424         0.32829798       0.68156556   0.113808515        1150\n1425         0.32589661       0.69258636   0.106609353        1150\n1426         0.32829798       0.68156556   0.113808515        1150\n1427         1.01494466       0.49404791   0.277134307        1232\n1428         0.95292745       0.53988262   0.237000006        1232\n1429         0.84672807       0.63959602   0.178481031        1232\n1430         0.85782731       0.63745698   0.145796946        1232\n1431         0.81754882       0.69510038   0.075931797        1232\n1432         0.79368832       0.72560685   0.044739743        1232\n1433         0.76713713       0.80759223   0.098988406        1232\n1434         1.89123189       1.02694132   0.247796010        1703\n1435         1.88891650       1.02422086   0.205145037        1703\n1436         1.68627576       0.82486787   0.343677595        1703\n     FAMILY_FRIENDLY FREEHOLD LEASEHOLD_99YR LOG_SELLING_PRICE       MLR_RES\n1                  0        1              0          14.91412 -1489099.5475\n2                  0        1              0          15.17135   415494.5718\n3                  0        1              0          15.01698   194129.6937\n4                  0        1              0          15.26243  1088992.7085\n5                  0        1              0          14.15198  -114969.1517\n6                  1        1              0          14.09314  -502381.2090\n7                  1        1              0          15.04222    45778.8964\n8                  0        1              0          14.16617   -98394.8143\n9                  1        1              0          14.52108  -740024.3696\n10                 1        0              0          14.75160   671128.9194\n11                 0        1              0          13.73971  -913368.7786\n12                 0        1              0          14.08171    83572.8995\n13                 0        1              0          15.91964  2925824.0147\n14                 0        1              0          13.78505   261604.9848\n15                 0        1              0          14.69098   -86504.3891\n16                 0        1              0          15.39449   706100.8496\n17                 0        1              0          14.94691  -118886.7347\n18                 0        0              0          14.07787  -119191.8099\n19                 0        1              0          14.09125  -443839.9579\n20                 1        1              0          16.57830  9076571.4084\n21                 0        1              0          14.32714    42918.0062\n22                 0        1              0          14.41983  -454780.0544\n23                 0        1              0          13.81551  -569818.7781\n24                 0        0              1          14.10818   520907.7017\n25                 0        0              1          13.71015   240217.6893\n26                 0        1              0          15.96441  3994397.2183\n27                 0        1              0          15.15785   130243.9063\n28                 0        0              0          13.89247   466624.8731\n29                 0        0              0          13.90169   428980.7275\n30                 0        0              0          13.89247   407256.4024\n31                 0        1              0          14.49861  -604739.2237\n32                 0        1              0          14.18015  -925775.9941\n33                 1        1              0          15.44475  1179787.4817\n34                 1        0              0          14.37513   575827.7472\n35                 0        1              0          14.22762  -258093.9267\n36                 0        1              0          15.47107  1072926.8050\n37                 1        1              0          14.88022   667344.7984\n38                 0        1              0          14.98644   -22761.8710\n39                 0        1              0          14.15198  -521422.9381\n40                 1        1              0          13.52783  -141134.1035\n41                 0        1              0          13.95440  -697789.0356\n42                 0        1              0          14.34614  -272948.9032\n43                 0        0              1          13.89247  -366167.0450\n44                 0        0              0          13.91762 -1096032.5215\n45                 0        1              0          14.60397  -581374.4402\n46                 0        1              0          15.00943  -529108.5606\n47                 0        1              0          14.45736  -337555.2812\n48                 0        1              0          15.22443   539423.1268\n49                 0        1              0          14.97239  -246480.4832\n50                 0        1              0          14.08935  -183958.7952\n51                 0        0              0          14.80133   930332.6999\n52                 0        1              0          13.68768  -180656.9113\n53                 0        1              0          13.44445  -336558.2292\n54                 0        0              1          14.17319  -770207.5321\n55                 0        0              1          13.84507   135494.2762\n56                 0        1              0          14.91011   287234.0789\n57                 0        1              0          15.37786   793548.5009\n58                 0        1              0          15.57112  1348466.6564\n59                 0        0              1          13.94478  -323274.4087\n60                 1        0              1          13.68768  -129326.6728\n61                 0        1              0          14.97082   -46859.6897\n62                 0        1              0          13.83335  -622705.5819\n63                 1        1              0          16.11810  4802334.0457\n64                 0        1              0          15.18923  -142634.1221\n65                 0        1              0          13.93773  -302503.7728\n66                 1        1              0          14.14481  -898778.7530\n67                 1        1              0          14.48334  -386975.6312\n68                 0        1              0          13.93240   -38601.9577\n69                 0        1              0          15.90614  1520627.1274\n70                 0        1              0          14.62644 -1497430.5753\n71                 0        1              0          14.24078  -128924.5448\n72                 0        1              0          14.40884   -85689.0326\n73                 0        1              0          14.82711    64100.6818\n74                 0        1              0          14.09314   479942.7927\n75                 0        0              0          13.84507    85324.8001\n76                 1        0              1          15.32712  -131315.8495\n77                 0        1              0          14.23422  -791843.9355\n78                 0        1              0          14.10818  -270460.3635\n79                 0        1              0          14.30409  -335322.1681\n80                 0        1              0          13.68768  -123031.3100\n81                 1        0              1          13.65886    -3706.6672\n82                 1        1              0          14.69468  -816801.1974\n83                 1        1              0          14.69928  -639005.4969\n84                 0        1              0          15.10667 -1032295.4848\n85                 0        1              0          15.20180  -619625.8885\n86                 0        1              0          15.55913   411388.7650\n87                 0        1              0          14.59484 -1100115.9890\n88                 0        1              0          13.76422  -119213.9420\n89                 0        1              0          13.85473   -40574.4135\n90                 0        1              0          13.68768    28196.7423\n91                 0        1              0          13.79531  -648643.3526\n92                 1        1              0          14.62644   -65930.5577\n93                 0        1              0          14.43070  -164769.0363\n94                 0        1              0          14.32767  -420132.1994\n95                 0        1              0          14.54788  -767030.6303\n96                 0        0              0          14.09843   166681.4383\n97                 0        0              0          14.23422  -346743.4037\n98                 0        1              0          13.89939  -257865.6404\n99                 0        1              0          14.15910  -293136.2726\n100                0        1              0          13.94654  -392506.3714\n101                0        1              0          14.16968  -404844.8845\n102                1        1              0          14.65665  -356321.1033\n103                0        1              0          13.91807  -529955.9565\n104                0        1              0          13.67854  -889900.2390\n105                0        1              0          15.22650  -332059.7233\n106                0        1              0          14.83976   -86786.3811\n107                0        1              0          14.55745   136050.5784\n108                1        1              0          14.60397  -992093.6095\n109                1        1              0          15.60727  -671304.5461\n110                0        1              0          14.94691  -243928.4963\n111                0        1              0          13.71015  -199350.6794\n112                1        1              0          15.75569  1799565.8215\n113                1        1              0          15.52479  1303920.1133\n114                0        1              0          14.53335  -710644.6324\n115                0        1              0          14.50866  -374150.7983\n116                0        1              0          14.62644  -638617.0653\n117                0        1              0          14.77102  -790700.7301\n118                0        1              0          13.98946  -961948.6877\n119                0        1              0          14.33430 -1326743.8471\n120                0        1              0          14.22098  -919153.7655\n121                0        1              0          13.99783  -875288.7175\n122                0        1              0          13.66236  -720953.1558\n123                0        1              0          13.44154  -589517.6138\n124                0        1              0          14.24989 -1460327.2564\n125                0        1              0          15.00943  -680544.2144\n126                1        0              1          13.84020  -535240.6668\n127                1        0              1          14.41983   179045.6116\n128                1        1              0          14.88022   279896.3897\n129                0        0              1          15.00943   128158.6595\n130                0        0              1          15.23486   682213.5501\n131                0        1              0          14.93393   691837.2916\n132                0        1              0          14.33430  -422249.0317\n133                0        1              0          15.06827   150237.4982\n134                1        1              0          14.04662   -40690.5391\n135                1        1              0          14.49157   633081.8607\n136                1        1              0          14.77102   -83397.2101\n137                0        1              0          15.46417  1045441.7036\n138                0        1              0          15.23862   589067.3346\n139                1        1              0          14.49100  -371656.4920\n140                0        0              1          13.78505  -275338.9359\n141                0        0              1          13.86430  -233486.2978\n142                1        1              0          14.64515  -254415.5541\n143                0        1              0          15.35238  2277539.6000\n144                0        1              0          14.45999  -390963.9922\n145                1        1              0          15.02877   184745.6326\n146                1        1              0          14.39212  -142778.7264\n147                1        1              0          14.75160   -64253.5099\n148                1        1              0          13.96393  -457927.4475\n149                1        1              0          16.70588 12234209.8511\n150                1        1              0          14.29794  -899455.6821\n151                0        0              1          13.84507      556.5345\n152                0        0              1          13.86430  -196972.7531\n153                0        0              1          13.80040  -264432.6422\n154                0        1              0          14.56928  -134074.3482\n155                0        1              0          13.90169  -426929.8899\n156                0        1              0          14.22098  -130362.7146\n157                1        1              0          16.44740  4358653.6249\n158                0        1              0          14.24567  -450676.1868\n159                1        1              0          14.00116  -590333.7045\n160                0        0              1          13.83531  -363667.0019\n161                0        1              0          14.11562 -1139584.6448\n162                0        1              0          13.99883   282599.4006\n163                0        1              0          14.93065   216777.7219\n164                0        0              0          14.35200   736399.4083\n165                0        1              0          14.20755   -40129.4076\n166                1        1              0          13.94478    49292.0129\n167                1        1              0          13.96393  -327283.5025\n168                1        1              0          14.14481  -580118.2126\n169                1        1              0          14.60215  -214385.0193\n170                1        1              0          14.60215  -241447.9128\n171                0        1              0          15.52026  1757163.4016\n172                0        1              0          14.74373  -368646.3269\n173                1        0              0          14.32233  -728394.8509\n174                1        0              1          14.54788 -1089127.6184\n175                1        0              1          14.43070 -1099027.7261\n176                1        0              1          14.53335 -1127527.4507\n177                1        0              1          14.43549 -1210281.5677\n178                1        0              1          14.80876 -1529751.2785\n179                0        1              0          14.65276  -519189.4134\n180                1        1              0          14.82711    26060.3944\n181                0        1              0          14.57163    -5225.7245\n182                1        1              0          13.29632  -223600.7595\n183                1        1              0          13.35348  -201504.9374\n184                1        1              0          13.79531   114842.3437\n185                1        0              1          14.49861   286857.2998\n186                1        0              1          14.69098   347086.4314\n187                1        0              1          14.47820   326166.0907\n188                0        1              0          15.39758   618692.0512\n189                0        1              0          15.50653  1238218.3572\n190                0        1              0          15.02447  -214129.8985\n191                0        1              0          14.34555   -47814.9541\n192                0        1              0          14.27294   -59895.0311\n193                0        0              1          13.76422   193187.6018\n194                0        0              1          13.80546   107121.7177\n195                0        1              0          13.53288  -523499.7543\n196                0        0              0          14.82711   575822.6418\n197                0        0              0          14.93393   536835.2575\n198                0        0              0          14.75160   553747.2928\n199                0        1              0          14.34024  -339142.6185\n200                1        1              0          13.94654  -424132.7226\n201                0        0              1          13.87849    82666.5206\n202                1        0              0          14.45736  -136266.7577\n203                1        0              0          13.99783   211490.0937\n204                0        1              0          14.17319   -30421.9184\n205                0        1              0          14.11562    17655.1088\n206                0        0              1          14.15198  -436879.4121\n207                0        0              0          14.32082   252823.5544\n208                0        0              0          13.90626     8969.1350\n209                0        1              0          14.71807   126733.2298\n210                0        1              0          14.07015   -26291.4800\n211                0        1              0          14.38026    55072.0097\n212                0        1              0          15.44475   689743.4744\n213                0        1              0          14.14045  -375974.6189\n214                0        1              0          14.28926   -12616.6819\n215                0        1              0          14.20755  -172005.2250\n216                0        1              0          14.25102  -164351.0372\n217                0        1              0          14.21093  -425515.3166\n218                0        1              0          14.23053  -397285.0776\n219                0        1              0          14.06237  -110937.6613\n220                0        1              0          14.34614   -11349.8022\n221                0        1              0          14.58098  -816955.6387\n222                0        1              0          14.24729  -249242.6454\n223                0        1              0          14.33282  -709324.5926\n224                0        1              0          14.43609  -165713.3391\n225                1        0              1          13.97465  -469724.5160\n226                1        0              1          13.96307  -458105.3137\n227                0        1              0          14.82711    62073.1332\n228                0        1              0          15.03929   222820.3924\n229                0        1              0          14.11487  -403101.2348\n230                0        1              0          14.35783  -330573.3353\n231                0        1              0          14.07787  -439478.0506\n232                0        1              0          13.72394  -175315.1693\n233                0        0              1          14.36450  -193326.1565\n234                0        0              1          14.89051  -182534.6472\n235                0        0              1          15.42495   520663.6784\n236                1        1              0          14.53822  -162501.4258\n237                1        1              0          14.62684  -357528.6721\n238                0        1              0          13.36922  -898143.1369\n239                0        1              0          13.91082  -992097.5036\n240                0        1              0          14.20247  -165274.3063\n241                0        1              0          14.33430  -137871.0087\n242                0        1              0          14.18015  -148887.5051\n243                1        1              0          13.84020  -543725.7589\n244                1        1              0          13.84507  -752443.2844\n245                1        0              1          15.01698  -213544.0317\n246                1        0              1          15.13727  -684945.5538\n247                0        1              0          14.81798  -102286.2062\n248                0        1              0          14.24599  -343507.9977\n249                0        1              0          13.89985   164191.1318\n250                0        1              0          14.15198  -313884.3698\n251                0        1              0          13.98314    32406.4914\n252                1        1              0          15.34157  1059912.4780\n253                1        1              0          15.43490  1148658.4469\n254                1        1              0          14.82711   105282.7714\n255                0        0              1          14.48334   677370.1723\n256                0        0              1          14.22098   178341.2686\n257                0        0              1          14.47044   180748.5556\n258                0        0              1          14.69098   343540.9661\n259                1        1              0          15.95558  3054700.8882\n260                1        0              1          13.98102  -180311.1180\n261                1        0              1          14.05058  -164272.6042\n262                1        0              0          14.06860   487248.3333\n263                0        1              0          14.72377  -181027.7976\n264                0        1              0          14.64842  -368765.2123\n265                0        1              0          14.84852  -348243.2761\n266                0        1              0          15.11024   923934.6303\n267                0        1              0          14.93882  -208660.2065\n268                0        1              0          14.82256  -592763.4486\n269                1        1              0          15.01638   576218.6736\n270                1        1              0          14.39773   142184.8114\n271                1        1              0          14.80876   283361.7011\n272                0        0              1          15.57337   399521.8162\n273                0        1              0          14.57398 -1181593.7727\n274                0        1              0          14.90575   142827.7114\n275                1        1              0          14.53335  -788795.1895\n276                0        0              1          14.18015   301394.3586\n277                0        0              0          14.50866  -377611.8458\n278                0        1              0          14.33948  -369790.0449\n279                0        1              0          14.97866   -91853.1850\n280                0        0              1          13.67395    88191.5879\n281                0        0              1          13.98946   -99077.4301\n282                0        1              0          14.39633   402186.7247\n283                0        1              0          14.23422  -449749.4682\n284                0        1              0          14.55745  -295890.3697\n285                1        1              0          14.87330    57276.2291\n286                1        1              0          14.48334 -1046513.2335\n287                1        1              0          14.42256  -831831.6990\n288                1        1              0          14.18903  -364026.0039\n289                1        1              0          14.16617  -340429.0974\n290                1        1              0          14.17144  -587823.5247\n291                1        1              0          13.97251  -255058.5119\n292                1        1              0          14.16617  -282259.1177\n293                1        0              1          14.31629  -651976.4767\n294                1        1              0          14.40330  -597684.0410\n295                1        0              0          14.31629   855073.8348\n296                0        1              0          14.27294    -4160.3698\n297                0        1              0          14.04265   133915.4071\n298                0        1              0          14.32233   -15082.1898\n299                1        1              0          15.09644  -650108.0300\n300                1        0              1          13.42985    -5709.4992\n301                1        1              0          14.18015  -797423.5595\n302                0        0              1          14.08554   -49879.7177\n303                0        1              0          15.49261   948847.3727\n304                0        1              0          15.52026  1117905.3741\n305                0        1              0          15.72505  2374090.5803\n306                0        0              1          15.23379   153567.8277\n307                0        0              1          15.23862   582448.5502\n308                0        1              0          15.23862   917795.0882\n309                0        1              0          14.18707  -244864.6247\n310                0        1              0          14.45209   -65484.6163\n311                0        1              0          14.50565   100101.4143\n312                1        1              0          14.19258  -399145.8820\n313                1        1              0          14.60397 -2120756.6160\n314                1        1              0          14.18707  -594474.1406\n315                0        0              1          14.12427  -586659.2151\n316                0        1              0          14.18015  -479718.2122\n317                1        0              0          14.97678 -1748997.6336\n318                1        0              0          14.53822   114512.6311\n319                1        0              1          14.00199   360928.7786\n320                1        0              1          14.18362    23407.8295\n321                1        0              1          14.22098    37044.2000\n322                1        0              0          14.23422  1025726.9869\n323                1        0              0          14.74373   881323.2606\n324                0        0              0          14.14121  -437200.4828\n325                0        1              0          14.41435 -3470778.0681\n326                0        1              0          14.54788   -43974.0297\n327                0        1              0          14.50866   143719.9884\n328                0        1              0          14.31325   248710.8012\n329                0        1              0          14.22098  -408181.5414\n330                1        1              0          14.29174  -307290.9769\n331                1        1              0          14.39212  -414108.3013\n332                1        1              0          14.38649  -348575.0241\n333                0        1              0          14.44038  -606128.5198\n334                0        1              0          15.32292 -1060487.2683\n335                0        1              0          15.05388   177743.2803\n336                0        1              0          15.15051    44258.9563\n337                0        0              0          14.72779   583015.1020\n338                0        0              0          14.69514 -1470817.5913\n339                0        1              0          14.14840  -852923.6622\n340                1        1              0          13.95527  -321995.7073\n341                1        1              0          14.01436  -168307.4676\n342                1        1              0          14.28551  -407001.9447\n343                1        1              0          14.73180 -1013520.4765\n344                0        1              0          14.28953 -1017559.1484\n345                0        1              0          14.56457  -496422.7884\n346                1        1              0          14.69845  -162248.1991\n347                1        1              0          14.22098  -182273.6028\n348                1        1              0          14.09238   -70066.2109\n349                1        1              0          13.86430  -138843.3901\n350                1        1              0          13.68198   -90113.3439\n351                1        1              0          14.08554  -304878.7720\n352                0        0              0          14.48350     5945.6422\n353                0        0              0          14.86458   313350.3626\n354                0        0              0          14.53923    73459.9676\n355                0        1              0          14.59024  -371144.5653\n356                0        1              0          15.23258   721921.2104\n357                0        1              0          14.91911  -286214.3904\n358                1        0              1          13.88317  -321799.4334\n359                1        0              1          13.90077  -278228.9819\n360                1        0              1          14.15198   228724.9584\n361                1        1              0          14.24729  -153317.2482\n362                1        1              0          14.27924  -164393.1088\n363                0        1              0          14.21429    83026.3999\n364                0        1              0          14.30409   172525.1735\n365                0        1              0          14.45736  -606080.0828\n366                0        0              1          14.68597  -759435.2550\n367                0        0              1          14.29174  -383414.5098\n368                0        0              1          14.47820  -663889.3137\n369                0        0              1          14.02739  -597102.3633\n370                1        0              1          13.79836     9385.8081\n371                1        0              1          13.87849  -202497.2112\n372                1        0              1          13.84507  -505282.9324\n373                0        1              0          14.12300  -330019.6333\n374                0        1              0          14.81981   275213.7396\n375                0        1              0          15.06427   466325.1064\n376                0        0              1          13.70396   617428.8913\n377                0        0              1          13.69898    99402.7693\n378                0        0              1          13.61462   132633.4138\n379                0        0              1          14.50866 -1277051.1167\n380                0        0              1          14.73180 -1084562.2072\n381                0        0              1          14.73977 -1203656.1713\n382                0        0              1          14.72175  -226960.0239\n383                0        0              1          14.77868  -939814.3498\n384                1        0              1          14.07015  -192530.9712\n385                1        0              1          14.07787   -85404.9084\n386                1        1              0          14.60397  -121804.1027\n387                1        1              0          14.57632  -152000.4241\n388                1        1              0          15.17649 -1606814.1217\n389                1        1              0          14.50264  -498490.5561\n390                1        1              0          14.46261  -533617.4852\n391                1        1              0          14.39212  -605988.5797\n392                1        1              0          16.16689  4552775.5833\n393                1        1              0          16.11810  5794509.5553\n394                0        1              0          14.05649  -640980.4745\n395                0        1              0          14.27924  -356932.4718\n396                0        1              0          14.71160    95399.3095\n397                1        0              1          13.99783 -1381391.5033\n398                0        1              0          14.44145  -408226.4014\n399                0        1              0          15.17649   224174.4805\n400                0        1              0          15.03929  1076735.5950\n401                0        1              0          14.60397   612392.1907\n402                0        0              1          13.65299  -303085.0709\n403                0        0              1          13.66920  -271363.6417\n404                0        0              1          13.43717  -100565.3845\n405                0        1              0          15.46032  1421129.8019\n406                0        1              0          15.52026  1928827.0483\n407                1        0              1          14.07711  -436786.8904\n408                1        0              1          14.18145   -52674.3274\n409                0        0              1          14.82711  -458615.1219\n410                0        0              1          14.77102  -407762.8463\n411                0        1              0          14.34024   115806.8769\n412                0        1              0          14.39212   202540.3130\n413                1        1              0          14.60850  -802228.6757\n414                1        1              0          14.64842  -429974.0226\n415                1        1              0          14.42989  -372126.0063\n416                1        1              0          14.63088   -46040.1701\n417                1        1              0          14.58075   130341.6289\n418                1        1              0          14.33430   131652.9694\n419                0        0              0          13.89247   150405.7941\n420                0        0              1          14.25377  -492168.3809\n421                0        0              0          14.62644  1068244.3708\n422                1        1              0          14.66993    62290.9461\n423                1        1              0          15.09644   313678.9047\n424                1        1              0          14.47562   199174.3025\n425                1        1              0          14.02252  -199165.1556\n426                0        1              0          14.64842  -297356.4603\n427                0        1              0          14.38224 -1174027.1705\n428                0        1              0          14.19395   394295.3826\n429                1        1              0          14.27294  -527141.3262\n430                1        1              0          14.25859  -550491.6111\n431                1        1              0          14.17493  -806507.2359\n432                0        1              0          14.13614   160110.6356\n433                0        0              1          15.68731  2171337.4459\n434                1        0              1          13.89247  -142869.8949\n435                1        0              1          13.77260   182339.5571\n436                1        0              1          13.99366  -179548.0723\n437                1        1              0          14.29794  -146627.3535\n438                1        1              0          14.48334   -61300.2764\n439                1        1              0          14.53335     7753.0680\n440                1        1              0          14.79308   193909.0905\n441                0        1              0          14.90239   381662.7792\n442                0        1              0          14.97239   264447.1921\n443                1        1              0          14.25341   -89290.9334\n444                1        0              1          14.02577  -320848.0419\n445                1        0              1          14.05453  -401506.0249\n446                1        0              1          14.12300   -18138.7661\n447                1        0              1          13.70178   103109.7930\n448                1        0              1          14.00943   302389.3562\n449                0        1              0          14.99108  -456609.5766\n450                0        1              0          15.15051   709307.2435\n451                0        1              0          15.16980  1254098.9196\n452                0        0              1          13.91762  -272857.8751\n453                0        0              1          14.17144 -1714154.3433\n454                1        1              0          14.48334  -143908.4049\n455                0        1              0          14.70134  -300322.5982\n456                0        1              0          14.89732  -187741.5790\n457                1        0              1          13.80040   102013.9866\n458                1        0              1          13.86430   160444.0357\n459                0        1              0          14.82711   508806.9885\n460                0        1              0          15.21423  1061686.6648\n461                1        1              0          14.29794  -170511.3140\n462                1        1              0          14.73220  -614213.2972\n463                0        1              0          14.71518   734041.2139\n464                0        1              0          14.61751   484181.7016\n465                0        1              0          14.75160   722077.3156\n466                0        1              0          15.39243  2007908.5454\n467                0        1              0          14.26020  -473806.9077\n468                0        1              0          14.19737  -448529.1699\n469                0        1              0          14.08935   -47244.9178\n470                0        1              0          14.49861   105937.9765\n471                0        1              0          14.43070    41404.4312\n472                0        1              0          14.55506   109002.4006\n473                0        1              0          14.56928    90948.4551\n474                1        0              1          14.05264   116274.0362\n475                1        0              1          14.11562   -16014.4431\n476                1        0              1          14.22023   -98277.3148\n477                1        1              0          14.24404  -349823.6123\n478                1        1              0          14.08545   -72102.8704\n479                1        1              0          14.18015   102492.2573\n480                1        1              0          14.12849    31595.4342\n481                1        0              0          14.40469    15789.2763\n482                0        1              0          14.45736    46298.0393\n483                0        1              0          15.17649   813826.6336\n484                0        1              0          14.94691  1172800.1418\n485                0        1              0          15.05533   226692.0575\n486                0        1              0          14.98472  -285136.5014\n487                0        1              0          14.39996  -766063.8634\n488                1        0              1          13.97678   175546.9162\n489                1        0              1          14.03865  -240101.0566\n490                1        0              1          14.17876  -154321.2372\n491                1        0              1          13.85713   -25942.8115\n492                1        1              0          14.64406   326024.0702\n493                0        0              1          15.16358  -372993.9235\n494                0        0              1          15.08246   195884.9451\n495                0        0              1          14.98722  -537697.5870\n496                1        1              0          14.47562  -895414.5838\n497                1        1              0          15.15051    78681.3113\n498                0        1              0          13.96393    47828.1251\n499                0        1              0          13.95092    84689.6928\n500                0        1              0          14.00240   174508.2304\n501                0        1              0          14.21429    75291.4194\n502                0        0              1          14.37969  1082266.7638\n503                0        0              1          14.59713   602246.5380\n504                0        0              1          14.52355   621978.9294\n505                0        0              1          14.11190   485430.6853\n506                0        0              1          14.60397   320464.8512\n507                0        0              1          14.36363   396073.7417\n508                0        0              1          14.48334    53611.3749\n509                1        0              1          14.00613  -773909.8516\n510                1        0              1          13.75364  -149483.2711\n511                1        0              1          13.84991  -258923.6323\n512                1        0              1          14.07209  -126745.2484\n513                1        0              1          13.88317   251216.7401\n514                1        0              1          14.03865   432005.3253\n515                1        1              0          13.80546  -472201.2800\n516                1        1              0          13.77469  -106818.9401\n517                1        1              0          14.11376    11815.3379\n518                0        0              1          15.33939   427318.4664\n519                0        0              1          15.06827   281010.5353\n520                0        0              1          14.80802  -304589.5884\n521                0        0              1          14.43070  -448255.4231\n522                0        1              0          14.66993   679628.7132\n523                1        1              0          14.58098  -213683.4602\n524                1        1              0          14.52355  -265902.5511\n525                0        0              0          14.34024   334758.9329\n526                1        0              1          14.03062  -173820.8638\n527                1        1              0          14.01436   -25382.6031\n528                1        1              0          14.00613    40368.5745\n529                1        0              1          14.50866   219885.9102\n530                1        0              1          14.22927  -114579.7990\n531                1        0              1          14.30409    99272.1666\n532                1        0              1          14.33430   128971.5690\n533                0        1              0          15.33666   650130.0814\n534                0        1              0          15.08246   324025.7111\n535                0        1              0          14.88709   132283.9355\n536                0        1              0          14.50365    24620.4756\n537                0        1              0          14.69098    83617.7030\n538                0        1              0          14.41709   -75311.0966\n539                0        1              0          14.29404  -184817.5952\n540                0        1              0          14.56928  -256466.8349\n541                0        1              0          14.34908  -175335.8544\n542                0        1              0          14.52841  -127596.1215\n543                1        0              1          13.67602   299861.3452\n544                1        0              1          13.65299   299797.3940\n545                0        1              0          14.94788   178636.1273\n546                0        1              0          14.52355  -231742.0375\n547                0        0              0          14.13759   590160.4222\n548                0        0              0          14.29485   432790.3297\n549                0        0              0          14.30409   381026.1242\n550                0        0              0          14.03062   756745.3995\n551                0        0              0          14.24892   752596.4530\n552                0        0              1          14.05846  -574970.8960\n553                1        0              1          13.95092  -164074.9263\n554                1        0              1          14.14481  -160066.9420\n555                1        0              1          14.06354  -808919.2882\n556                1        0              1          14.26659  -394077.9940\n557                1        0              1          14.25377  -619505.4908\n558                0        1              0          14.11562  -241256.1835\n559                0        1              0          14.40330  -156305.8716\n560                1        0              1          13.94654  -364180.7021\n561                1        0              1          13.79938    40680.9642\n562                1        0              1          13.64116    23111.5176\n563                1        1              0          15.68731  2097338.5605\n564                1        1              0          14.92242    45827.1936\n565                1        1              0          14.87156    26975.4638\n566                1        1              0          14.44545   291302.5581\n567                1        1              0          14.41435  -287145.5012\n568                1        0              0          14.10069   242744.8040\n569                1        0              0          13.96393    83203.7907\n570                1        0              0          14.10069  -239386.6661\n571                1        0              0          14.13759  -223879.6565\n572                1        1              0          15.49727   866494.3807\n573                1        1              0          15.17649   644287.0066\n574                0        0              1          13.99783    41704.5872\n575                0        0              1          14.22762   353156.5827\n576                0        1              0          13.85953  -334019.5456\n577                0        1              0          14.32233  -262749.6095\n578                0        1              0          14.45736   529148.4868\n579                0        1              0          14.24404  -207949.3498\n580                0        1              0          14.30899  -105375.0672\n581                0        1              0          14.13396  -583124.6554\n582                1        1              0          13.66817  -147886.4312\n583                1        1              0          14.65923   452533.2983\n584                1        1              0          14.56928   315293.2376\n585                1        1              0          13.88783    68990.8751\n586                1        1              0          13.76422  -142015.2328\n587                1        1              0          13.61094   -39346.6181\n588                1        1              0          13.93551   -15636.7026\n589                1        1              0          13.99783  -172208.6478\n590                1        0              1          14.05058   158826.6620\n591                0        1              0          14.08645  -274249.4574\n592                0        1              0          15.09783   725065.4124\n593                1        0              1          13.98946  -516378.4873\n594                1        0              1          13.98102   655766.7220\n595                0        0              1          13.84507    94655.7105\n596                0        0              1          13.62071   638125.2419\n597                0        0              1          13.59237   595872.3231\n598                0        0              1          14.09348   999956.6414\n599                0        0              1          13.58295   535988.5479\n600                0        0              1          13.60232   677432.0079\n601                1        1              0          13.71015   211838.7354\n602                1        1              0          13.96393   230739.4871\n603                1        1              0          13.87755   109634.8844\n604                1        1              0          13.95527   118969.7489\n605                1        0              1          14.29485  -302997.5980\n606                1        0              1          14.41983   233717.0605\n607                0        0              0          14.63639   543620.6184\n608                0        0              0          14.54788   -48419.9511\n609                0        0              0          14.14840  -248703.8813\n610                0        1              0          13.95527  -114808.5221\n611                0        1              0          13.80546   121294.6779\n612                0        1              0          14.12038    14970.3424\n613                0        1              0          14.15198   -18138.7930\n614                0        1              0          14.01025   -88141.0898\n615                0        1              0          13.99156  -148973.6576\n616                0        0              1          14.06237  -178281.9622\n617                0        0              1          14.07402  -138649.6418\n618                0        0              1          14.07402  -169036.0847\n619                0        0              1          13.95092   121207.5808\n620                0        0              1          14.00116  -224198.6175\n621                0        0              1          14.04265  -204487.0809\n622                1        0              0          13.82546   503038.5301\n623                1        0              0          13.91082   230604.6996\n624                1        0              0          14.05689   331766.4730\n625                1        0              0          13.84020   394699.5691\n626                1        0              0          13.95527   348058.2746\n627                1        0              0          14.39521   291206.3582\n628                1        0              0          14.24729   463942.8394\n629                0        0              1          14.14337   380920.5587\n630                0        0              1          13.82050    -7097.8626\n631                0        0              1          14.16968    81878.5092\n632                0        0              1          14.24078    20142.1377\n633                0        0              1          14.22098  -258166.4669\n634                0        0              1          14.15661    13943.3239\n635                0        0              1          13.91082    22172.4047\n636                0        0              1          13.55415   527578.8597\n637                0        0              1          13.56705   611410.5616\n638                0        0              1          13.57025   597713.9815\n639                0        0              1          13.64116   572023.8146\n640                0        0              1          13.40000   170709.4233\n641                0        0              1          13.81551  -128166.7056\n642                0        0              1          13.40000   170709.4233\n643                0        0              1          14.00613  -444026.9464\n644                0        0              1          13.43352   193209.4233\n645                0        0              1          13.69673   117603.9266\n646                0        0              1          13.41129   178209.4233\n647                0        0              1          13.61462     9271.3589\n648                0        0              1          13.76422   -88724.0476\n649                0        0              1          13.42247   185709.4233\n650                0        0              1          13.96393  -346591.8122\n651                0        0              1          14.11562  -381216.7971\n652                0        0              1          14.14337  -313215.0329\n653                1        1              0          13.90077    59204.4254\n654                1        1              0          14.07475  -108864.4604\n655                1        0              1          14.34614   -13042.9788\n656                1        0              1          14.60510  -442197.8564\n657                0        1              0          14.89732  -180164.3845\n658                0        1              0          14.76717   248678.8044\n659                0        1              0          14.54306  -807701.5282\n660                1        1              0          13.81551  -589874.8126\n661                1        1              0          13.55415  -238998.2172\n662                1        1              0          13.78299  -285823.8271\n663                0        1              0          13.65299   -57958.3210\n664                0        1              0          13.96393  -208150.9105\n665                0        1              0          14.12300  -271097.3791\n666                0        1              0          14.07131   -62168.8057\n667                0        0              1          14.02901    69549.8657\n668                0        1              0          13.89247   273169.0542\n669                0        1              0          14.28551   283727.4128\n670                0        1              0          13.54107   614287.0995\n671                0        1              0          13.74186   189207.8587\n672                0        0              1          13.39239    -1502.4498\n673                0        0              1          14.10069  -177572.3740\n674                1        1              0          15.93177  3100164.0339\n675                1        1              0          15.94968  3250164.0339\n676                0        1              0          14.29794    18333.3418\n677                0        1              0          14.25053  -379048.9747\n678                0        1              0          14.91412   407334.5290\n679                0        1              0          14.82438   338278.6869\n680                0        1              0          14.41709  -385892.0797\n681                0        0              1          13.44445   479139.3774\n682                0        0              1          13.67625   465281.9592\n683                0        0              0          13.85366   476245.3485\n684                0        0              0          13.95527   528559.0245\n685                0        0              0          14.34908  -244966.2080\n686                0        0              0          14.69098   490592.4276\n687                0        0              0          14.32833   599416.0860\n688                0        0              0          13.93329   591237.5138\n689                1        1              0          14.13759  -339087.0703\n690                1        1              0          14.11562  -615285.4700\n691                1        1              0          14.14337  -338218.5764\n692                1        0              1          14.02252  -712235.3273\n693                1        0              1          14.09125  -652767.4937\n694                1        0              1          13.75894  -145122.3722\n695                1        0              1          13.91082  -272266.6318\n696                1        0              1          13.71292   -42091.8613\n697                1        0              1          14.07787  -618767.2933\n698                1        0              0          14.41325  -134725.8735\n699                1        0              0          14.45736 -1407857.5220\n700                1        0              0          14.13759  -101532.1699\n701                0        1              0          14.11562   241352.7274\n702                0        1              0          14.03865   237603.8459\n703                0        0              1          14.74373   301754.2438\n704                0        0              1          14.74294   195025.6292\n705                0        0              1          14.30409    -6237.9509\n706                1        1              0          13.77988   614939.7425\n707                1        1              0          13.92884  -253041.3698\n708                1        1              0          14.08554   -34034.8691\n709                1        1              0          13.71015   218525.1409\n710                1        1              0          14.11562  -516884.3413\n711                1        0              1          13.86430   -49384.8523\n712                1        0              1          13.79531     4803.6349\n713                1        0              1          13.71015   162146.7722\n714                0        1              0          14.01436  -330095.6809\n715                0        1              0          13.99783  -316725.8633\n716                0        1              0          14.34614  -252069.6557\n717                0        1              0          14.43070  -284420.8216\n718                1        0              1          13.83477   271677.5723\n719                1        0              1          14.18638   121178.9177\n720                1        0              1          13.84020   338777.8280\n721                1        0              1          14.30102  -114016.0899\n722                1        0              1          14.01845   255234.6484\n723                1        0              1          14.07787   203420.3136\n724                1        0              1          14.31507   -82267.1673\n725                1        1              0          14.21764    16414.5277\n726                1        1              0          14.07787  -329038.1422\n727                1        1              0          14.06549    34855.9977\n728                1        0              1          13.98946   419991.4309\n729                1        0              1          13.74294   613504.6236\n730                1        0              1          13.98102   558175.1903\n731                1        0              1          14.21429   869169.7700\n732                1        1              0          13.80798   274156.2378\n733                1        1              0          13.66469   342873.4993\n734                1        1              0          13.75364   316813.6393\n735                1        1              0          13.76422   149131.3004\n736                0        0              1          14.36363  1329811.9743\n737                0        0              1          14.00116   846686.5812\n738                0        0              1          14.12520   542235.1246\n739                0        0              1          13.95527   774456.4208\n740                0        0              1          14.11931  1060445.9939\n741                1        0              1          13.99575  -201311.9698\n742                1        0              1          14.06432  -100952.0908\n743                1        0              1          14.23750  -160469.2864\n744                0        0              1          14.29794  -165354.1566\n745                0        0              1          14.79478  -119084.0126\n746                1        0              1          13.58610    80947.7004\n747                1        0              1          13.55155   271165.5843\n748                1        0              1          13.72120   -97935.3189\n749                1        0              1          13.69773   174835.7004\n750                0        0              1          13.93329  -463704.6873\n751                0        0              1          14.55745 -2341192.6088\n752                0        0              1          14.27294   -68688.2579\n753                0        0              1          14.70340   174467.3948\n754                0        0              1          15.08246    62869.3474\n755                0        0              1          14.64842   -33281.7498\n756                1        0              1          14.15119  -415864.4279\n757                1        0              1          14.10818  -475347.2764\n758                1        0              1          14.09994  -161286.3670\n759                1        1              0          14.02561  -795940.0298\n760                0        0              1          14.89051  -322517.4262\n761                1        0              1          13.68768   -81956.5433\n762                1        0              1          13.69221  -162730.6800\n763                1        0              1          13.91082  -347502.4013\n764                0        1              0          14.51115   -56916.0707\n765                0        1              0          14.20755  -293360.1209\n766                0        1              0          14.46784  -123990.5820\n767                0        1              0          14.36363   -29290.1307\n768                1        1              0          14.41654  -240593.4743\n769                1        1              0          14.48334  -380055.9700\n770                1        0              1          13.93773   283920.9268\n771                1        0              1          13.93596    38188.5238\n772                1        0              1          14.10818     6295.0437\n773                1        1              0          14.94465  -182018.7095\n774                1        1              0          14.02901    30101.1887\n775                1        1              0          14.69928  -323952.4030\n776                0        0              0          14.31629 -2381594.2010\n777                0        0              0          14.35783   529254.5271\n778                0        0              0          14.66352 -1751372.5420\n779                0        0              0          13.93329   300945.8579\n780                0        0              0          13.50626   445509.6543\n781                0        1              0          14.55745  -123379.8558\n782                0        1              0          14.53822  -243349.4375\n783                0        1              0          14.57632   -81039.6669\n784                0        1              0          14.44625  -312489.3511\n785                0        1              0          14.57684  -449135.6532\n786                1        0              0          14.10743  -146813.4338\n787                1        0              0          14.02334    27341.7973\n788                1        0              0          13.76947   158260.1448\n789                1        0              0          14.05453    45088.5639\n790                1        1              0          14.39212  -244224.1712\n791                1        1              0          13.85366  -201151.9468\n792                1        1              0          14.08363  -431411.1118\n793                0        0              0          14.13614   -39450.9277\n794                0        0              0          14.54547   -52557.3552\n795                0        0              0          14.08630   324364.8874\n796                1        0              1          14.20755   271588.7600\n797                1        0              1          13.72120  -132303.4465\n798                1        0              1          13.29548    37742.4115\n799                1        0              1          14.32833   483361.3183\n800                1        0              1          14.51932  -678224.7409\n801                0        0              1          14.32714    -1963.6962\n802                0        0              1          14.70751  1204147.3596\n803                1        0              1          13.75364   -95710.5676\n804                1        0              1          13.84991   -52393.9937\n805                1        0              1          13.70837  -241624.9476\n806                1        0              1          13.71015  -367355.4213\n807                1        0              1          13.66469  -370051.3566\n808                1        0              1          13.95527  -260312.6119\n809                1        0              1          13.93329  -138940.8669\n810                0        1              0          14.12300  -148418.8864\n811                0        1              0          14.17319    28415.1926\n812                0        1              0          14.17876  -156847.5625\n813                0        1              0          14.34614   -53022.6222\n814                0        0              1          15.19428   999156.5675\n815                0        0              1          14.08171  -372831.6109\n816                0        0              1          14.04265   527928.0192\n817                0        0              1          13.96393   380084.4051\n818                0        0              1          14.10444 -1539404.5681\n819                1        0              1          14.05256 -1398145.1472\n820                1        0              1          13.95092  -185925.7027\n821                1        0              1          14.24729  -612567.1368\n822                1        0              1          13.86430   -30525.1330\n823                1        0              1          14.09314  -253653.2313\n824                1        0              1          14.10069  -216380.3683\n825                1        0              1          13.78505   224893.6714\n826                1        0              1          13.83531   282856.6918\n827                1        0              1          13.79786   295387.4261\n828                0        0              1          13.78299   242534.3935\n829                0        0              1          13.54107   461512.2716\n830                0        0              1          13.84507   258743.9361\n831                0        0              1          13.68768   325961.8200\n832                0        0              1          13.67625   328739.3426\n833                0        0              1          14.20417   190410.6799\n834                0        0              1          14.28551   387918.4569\n835                0        0              1          14.11931   417640.2624\n836                0        0              1          14.01845   106518.4734\n837                1        0              1          14.24078  -885117.8114\n838                1        0              1          14.42467  -816306.6968\n839                1        0              1          14.26659  -662191.9391\n840                1        0              1          13.96823  -637374.4436\n841                1        0              1          14.32233  -706885.6714\n842                1        0              1          13.66759   355723.9795\n843                1        0              1          13.73538   215432.9402\n844                1        0              1          13.75097   219614.8158\n845                1        0              1          14.06042   261024.7776\n846                1        0              1          13.86430   -65131.0631\n847                1        0              1          13.71015   106590.1224\n848                1        1              0          14.47303   112816.1684\n849                1        1              0          14.55983   736629.0496\n850                1        1              0          14.39773  -106024.1087\n851                1        1              0          14.50365   497590.4769\n852                1        1              0          14.43070  -349436.6966\n853                1        1              0          13.99857  -445683.8349\n854                1        1              0          14.27924  -603003.0621\n855                1        1              0          14.02252  -430005.5247\n856                1        1              0          14.02252  -390667.7279\n857                1        1              0          14.07248    -4000.4204\n858                1        1              0          13.91082  -187237.2887\n859                1        1              0          13.80546   -49553.8954\n860                1        0              1          13.77469   -35483.2019\n861                1        0              1          13.95527   346179.6368\n862                1        0              1          13.75364   -55483.2019\n863                1        0              1          13.91536  -130892.0275\n864                1        0              1          13.80040  -216363.1393\n865                1        0              1          13.80040  -188149.0577\n866                1        0              1          13.71015    72888.1106\n867                1        0              1          13.94772   189193.6248\n868                1        0              1          13.89709   124308.4375\n869                1        0              1          13.52783   454542.4648\n870                1        0              1          14.02252   -36620.6231\n871                1        0              1          14.29050   -92782.4813\n872                0        1              0          13.98102    43410.1836\n873                0        1              0          14.07822   204413.5402\n874                0        1              0          13.85473   158496.9303\n875                0        1              0          14.08363    75956.5212\n876                0        1              0          14.01845    75942.6079\n877                1        0              1          13.81050   -90082.6058\n878                1        0              1          14.05058    46451.8459\n879                1        0              1          13.83531   310929.3398\n880                1        1              0          14.47303   318261.6650\n881                1        1              0          14.47717   314581.1351\n882                1        1              0          14.86283   467345.6475\n883                1        1              0          14.93065   172162.3262\n884                1        1              0          14.89324    45320.9692\n885                0        0              1          13.76422  -152696.8216\n886                0        0              1          13.99783  -165549.1752\n887                0        0              1          13.91082   -82509.0310\n888                0        0              1          13.93240   -67285.7496\n889                0        0              1          13.76422   -62894.0056\n890                0        0              1          14.11562  -674437.4606\n891                0        0              1          14.31629   234452.1911\n892                0        0              1          14.13396    12774.1871\n893                0        0              1          14.12300   151501.1405\n894                0        0              1          14.13396   146519.1338\n895                1        0              1          14.99969   919333.2068\n896                1        0              0          14.69306   468202.7636\n897                1        0              0          14.58098   878846.3210\n898                1        0              0          14.58098  1025543.1880\n899                1        0              0          14.56693   886265.2348\n900                0        1              0          14.21093  -236414.0166\n901                0        1              0          13.71900     1850.6142\n902                0        1              0          13.89709   -21051.9907\n903                0        1              0          13.93773    23128.9313\n904                0        1              0          13.96393  -117280.3432\n905                0        1              0          13.91987   -16596.9870\n906                0        1              0          13.93773    25924.6521\n907                0        1              0          13.98946  -105128.1211\n908                0        1              0          13.95527   -65976.7509\n909                1        1              0          13.84798    -9121.1981\n910                1        1              0          14.02252   171709.4133\n911                1        1              0          14.22430  -263926.7851\n912                1        1              0          13.87849   571936.5694\n913                1        1              0          13.62918   324453.2929\n914                1        0              1          13.67625   -17735.9504\n915                1        0              1          13.37373    97068.2305\n916                1        0              1          14.02252    62678.6077\n917                1        0              1          13.95527    -9091.8596\n918                1        0              1          13.40000    83811.5988\n919                0        1              0          13.50611   126240.4643\n920                0        1              0          13.93994   269302.0128\n921                0        1              0          13.86430   404019.8966\n922                0        1              0          13.81551   392352.4643\n923                1        0              1          14.01436  -350792.3156\n924                1        0              1          14.19292    23086.9540\n925                1        0              1          13.87378  -170913.2846\n926                1        0              1          13.98018  -426094.0151\n927                1        1              0          14.62644   -23582.1314\n928                1        1              0          14.17319  -101051.9950\n929                1        1              0          14.19120     1747.9789\n930                0        1              0          14.33430    94303.7895\n931                0        1              0          14.60397   238299.4876\n932                0        1              0          14.31143   424031.2802\n933                1        0              1          13.83384   -24807.6116\n934                1        0              1          13.61584   296484.1289\n935                1        0              1          13.77469   264110.1096\n936                0        1              0          14.35702  -139036.3476\n937                0        1              0          14.39912  -342974.6675\n938                0        1              0          14.07787   523362.6713\n939                1        0              0          14.01354   151840.5102\n940                1        0              0          13.98853   172376.4023\n941                1        0              0          13.86905    75847.9094\n942                1        0              1          14.07015  -647378.5993\n943                1        0              1          14.11562  -587082.0021\n944                1        0              1          14.04464  -315477.7067\n945                1        0              1          13.92526  -198182.5937\n946                1        0              1          14.00613  -184167.0522\n947                1        0              1          13.88317  -152780.5570\n948                0        1              0          14.68261    22808.1535\n949                0        1              0          15.06827   476922.0189\n950                0        1              0          14.78249   637785.4823\n951                0        1              0          14.57632   -95160.2880\n952                1        1              0          14.49100     -226.7576\n953                1        1              0          14.50615   690488.5479\n954                1        1              0          13.94214   737229.8686\n955                1        0              1          13.86668  -331706.8182\n956                1        0              1          14.02252  -154044.4469\n957                1        0              1          14.34024  -232712.4159\n958                0        0              0          14.19737   558842.1576\n959                0        0              0          14.37513   523338.8208\n960                0        0              0          14.35615   444293.7556\n961                0        0              0          14.66993  -215756.6009\n962                0        0              0          14.47272   983844.5140\n963                0        0              0          14.23422   603077.5905\n964                0        0              0          14.16617   588129.8697\n965                0        0              0          14.24078   235433.2155\n966                1        0              1          13.50080   471318.6329\n967                1        0              1          14.12218   477620.6066\n968                1        0              1          14.09314   440603.6252\n969                1        0              1          14.18380   431460.3440\n970                1        0              1          13.36138   606943.9428\n971                1        0              1          13.92436  -154437.6456\n972                1        0              1          14.19395  -103320.6649\n973                1        0              1          14.05453   415648.0844\n974                1        1              0          14.94852     8850.4246\n975                1        1              0          14.86458   196773.9275\n976                1        1              0          14.97003   518995.4788\n977                1        1              0          14.33953   263181.3694\n978                1        1              0          14.56693  -177760.1973\n979                1        1              0          14.48334  -394173.3780\n980                1        0              1          14.59184  -135970.1772\n981                1        0              1          14.79843   119419.8047\n982                1        0              1          14.86458  -924841.0336\n983                1        0              1          15.12923   103987.6964\n984                1        0              1          15.23136    10838.5718\n985                1        0              1          15.11706   518219.4420\n986                0        1              0          13.89247   282633.3228\n987                0        1              0          13.68198   459971.1455\n988                0        1              0          13.59237   677373.7902\n989                0        1              0          13.86239   423462.7399\n990                0        1              0          14.30715 -1233027.9707\n991                0        1              0          13.68768   552228.5957\n992                0        1              0          14.50866  -978907.3045\n993                1        1              0          14.19941  -297583.4509\n994                1        1              0          14.47820 -1247095.2499\n995                1        1              0          14.08935  -356773.3911\n996                1        1              0          14.14481  -104167.9753\n997                1        1              0          13.77729  -172545.9701\n998                1        1              0          14.04662  -358204.7518\n999                0        0              1          14.54547  -136495.5564\n1000               0        0              1          14.36016    85827.8408\n1001               0        0              1          14.48334  -378143.9935\n1002               0        0              1          14.53919  -223877.7358\n1003               0        0              1          14.16617  -195937.0543\n1004               0        0              1          13.91082   -77362.7469\n1005               0        0              1          14.18189  -168617.5881\n1006               0        0              1          13.92884   -67153.5881\n1007               1        0              1          14.06929  -834275.5238\n1008               1        0              1          14.19737  -668706.6882\n1009               1        0              1          13.87142  -603032.5785\n1010               1        0              1          14.33430  -459545.8972\n1011               1        0              0          14.22098   116272.1022\n1012               1        0              0          14.21429   -91782.9912\n1013               1        0              0          13.85473    23441.6838\n1014               1        0              0          14.03865  -190751.8290\n1015               1        0              0          14.12849   -63014.0478\n1016               1        0              0          14.04065   246471.8501\n1017               1        0              0          14.36850   -12352.9569\n1018               1        0              1          13.73213  -112729.2647\n1019               1        0              1          14.15198  -319762.0176\n1020               1        0              1          13.85473  -669604.2598\n1021               1        0              1          13.74294  -126099.1781\n1022               1        1              0          13.66469   184642.9216\n1023               0        0              1          14.04265   425202.8398\n1024               0        0              1          14.38082   416192.7492\n1025               0        0              1          14.33430   361936.7047\n1026               0        0              1          14.37227   596264.3387\n1027               0        0              1          14.42528   643584.5750\n1028               0        0              1          14.44678  -374218.5320\n1029               0        0              1          14.59065   397434.0794\n1030               0        1              0          14.28551  -766808.4944\n1031               0        1              0          14.43070  -751069.3001\n1032               0        1              0          14.17319  -394468.6746\n1033               0        1              0          14.12300   -32681.1249\n1034               0        1              0          14.28551  -798846.4220\n1035               0        1              0          14.35783  -936219.4695\n1036               0        1              0          13.85953    42448.0311\n1037               0        1              0          14.17319  -655580.5364\n1038               0        1              0          14.35200  -575277.1583\n1039               1        0              1          13.78505  -162472.9153\n1040               1        0              1          13.80344  -172497.8329\n1041               1        0              1          13.91807  -376194.5507\n1042               1        0              1          13.62677   -61893.7844\n1043               1        0              1          13.61094   -57044.5946\n1044               1        0              1          13.78505  -175125.5121\n1045               1        0              1          13.85281   -86155.3103\n1046               0        1              0          14.77868   129882.0472\n1047               0        1              0          14.54064    12447.0652\n1048               0        1              0          14.77489    26229.6934\n1049               0        1              0          14.63969    22378.4214\n1050               0        1              0          14.33371   451243.4857\n1051               0        1              0          14.78629   338043.3949\n1052               1        0              1          13.62918  -566300.0215\n1053               1        0              1          13.65181  -546771.1445\n1054               1        0              1          13.74079  -587449.8706\n1055               0        0              0          13.64116 -1210613.6327\n1056               0        0              0          13.76422 -1150830.3119\n1057               0        0              0          13.71735 -1166253.5325\n1058               0        0              0          13.69898 -1228825.5379\n1059               0        0              0          13.68198 -1211935.2488\n1060               0        0              0          13.73267 -1174544.2274\n1061               0        0              0          13.67912 -1235908.3622\n1062               0        1              0          14.45736  -328690.0368\n1063               0        1              0          14.40191  -279210.7804\n1064               0        1              0          14.63088   235310.8824\n1065               0        1              0          14.57163    75263.9373\n1066               1        0              1          13.76947   383797.6208\n1067               1        0              1          13.73213   422723.1793\n1068               0        0              1          14.00406     1215.6194\n1069               0        0              1          14.18707   -14613.4479\n1070               0        0              1          14.02252   -34485.3370\n1071               0        0              1          13.97080  -116746.6013\n1072               0        0              1          14.15555  -124245.8232\n1073               0        0              1          14.01845   -78518.8258\n1074               0        0              1          14.00823   -15400.5167\n1075               0        0              1          14.07015   109498.4467\n1076               0        0              1          14.14369  -305324.5806\n1077               0        0              1          14.30715  -921730.8891\n1078               0        0              1          14.27924  -358130.0216\n1079               1        0              0          14.13759    68707.8999\n1080               1        0              0          14.14840   155364.1534\n1081               1        0              0          13.99991   536449.9945\n1082               1        0              0          14.15198   286224.3111\n1083               1        0              0          14.07787   832758.2949\n1084               1        0              0          14.01354   647740.4587\n1085               1        0              0          14.23422   368899.3897\n1086               1        0              0          14.15768   183652.3467\n1087               0        0              1          13.69898   195690.8925\n1088               0        0              1          13.87849   228252.7691\n1089               0        0              1          14.34908   579718.8760\n1090               0        0              1          13.66469    34422.3858\n1091               0        0              1          13.79531   104617.6973\n1092               0        0              1          13.87142   203525.8642\n1093               0        0              1          13.86430   180684.4586\n1094               0        0              1          13.91082   -20490.9645\n1095               0        0              1          14.93065 -1121679.1271\n1096               0        0              1          14.14840    -5810.2993\n1097               0        0              1          13.95961    38574.5892\n1098               0        0              1          13.93329   -31183.7984\n1099               0        0              1          14.45736   -20871.3156\n1100               1        0              0          14.55049   584788.8175\n1101               1        0              0          14.48483   -12126.2256\n1102               0        0              1          13.45884   695581.6620\n1103               0        0              1          13.77988   311292.7495\n1104               0        0              1          13.71900   481172.0463\n1105               0        0              1          13.92795   244958.7560\n1106               0        0              1          14.09314   167940.8829\n1107               0        0              1          13.75364   383298.4479\n1108               0        0              1          14.09314   378335.6993\n1109               1        0              1          13.83433  -363204.9588\n1110               1        0              1          13.64116   304027.2462\n1111               1        0              1          13.55089   252033.4857\n1112               1        0              1          13.60108   306817.9862\n1113               1        0              1          13.57662   162059.0120\n1114               1        0              1          13.56062   519002.5803\n1115               0        0              1          14.11562   759939.9822\n1116               0        0              1          14.32233   311221.7949\n1117               0        0              1          14.38082   385227.5142\n1118               0        0              1          14.48590    97857.5998\n1119               0        0              1          14.47820   592449.1537\n1120               0        0              1          14.09918   686121.0047\n1121               0        0              1          14.43340   553408.7124\n1122               0        0              1          14.34287   -27048.5630\n1123               1        0              1          14.00282   338834.6384\n1124               1        0              1          14.02252   372370.7587\n1125               1        0              1          14.04662   370957.8987\n1126               1        0              1          13.85953   186761.8339\n1127               1        0              1          13.83040   401966.6853\n1128               1        0              1          14.13940   -90658.0887\n1129               1        0              1          14.13904   157787.8122\n1130               1        0              1          14.13032   159410.6895\n1131               1        1              0          14.79007  -589747.2245\n1132               1        1              0          14.31931    93198.9687\n1133               1        1              0          14.32534   223634.7630\n1134               1        1              0          14.55745   160407.0680\n1135               0        0              1          13.86905    69873.5563\n1136               0        0              1          13.82615   -20038.3610\n1137               0        0              1          13.94873   -79293.6723\n1138               0        0              1          13.87661  -328890.4084\n1139               0        0              1          13.93596  -471741.1587\n1140               0        0              1          13.75364   -86596.3321\n1141               0        0              1          13.94478    58192.7066\n1142               0        0              1          13.95092   157267.9769\n1143               0        0              1          14.05453  1528526.4726\n1144               0        0              1          14.45315  -108317.9015\n1145               0        0              1          13.98525   794639.9435\n1146               1        0              1          13.79825   700710.6650\n1147               1        0              1          13.90626   284359.7355\n1148               1        0              1          13.84264   610220.8676\n1149               1        0              1          13.85521   634984.6175\n1150               1        0              1          13.84564   615955.8815\n1151               0        0              1          14.50866  -671127.0225\n1152               0        0              1          14.12666   211134.0774\n1153               0        0              1          13.91082     8550.6953\n1154               0        0              1          13.59237   171316.8918\n1155               0        0              1          14.05453    94012.5560\n1156               0        0              1          13.64116   195474.6000\n1157               1        0              1          13.65475   229219.3412\n1158               1        0              1          13.71015   436551.3748\n1159               1        0              1          13.67561   455866.1508\n1160               0        0              1          13.86430   410991.1998\n1161               0        0              1          14.11562   175506.2261\n1162               0        0              1          14.13759   256180.3928\n1163               0        0              1          14.09314   171640.6115\n1164               0        0              1          14.27294   124533.1631\n1165               0        0              1          14.26020  -191520.5932\n1166               0        0              1          13.87378   437244.8449\n1167               0        0              1          13.88550   347088.1261\n1168               0        0              1          13.63452   196781.2771\n1169               0        0              1          13.87378   412171.2506\n1170               1        0              1          13.89247   116603.9282\n1171               1        0              1          13.88083   470393.2815\n1172               1        0              1          14.10257  -505103.1621\n1173               1        0              1          13.98946    88128.4878\n1174               1        0              1          14.01272   134279.3141\n1175               1        0              1          14.04662   189098.9823\n1176               1        0              1          13.90626   298661.7431\n1177               1        0              1          14.31629  -377841.1717\n1178               1        0              1          14.02658   128851.5080\n1179               1        0              1          14.34496  -444050.8318\n1180               1        0              1          13.80546    96911.4953\n1181               1        0              1          13.92884   233506.5319\n1182               1        0              1          14.15198  -502548.2360\n1183               1        0              1          13.91807   143628.4418\n1184               1        0              1          13.79531    24322.8730\n1185               1        0              1          13.82298    66430.9680\n1186               0        0              0          13.91082 -1097903.0822\n1187               0        0              0          14.04662 -1298347.0746\n1188               0        0              0          13.95092 -1227829.7221\n1189               0        0              0          13.95527 -1161719.1904\n1190               1        0              1          13.81551   133471.3932\n1191               1        0              1          13.83040   619863.8681\n1192               1        0              1          14.09918   -23018.1721\n1193               1        0              1          13.89617   214732.3791\n1194               0        0              1          13.56705   535248.7610\n1195               0        0              1          13.76422   462475.8320\n1196               0        0              1          13.78448   596917.5352\n1197               0        0              1          13.65534   479473.5352\n1198               1        1              0          14.28888   -21316.5229\n1199               1        1              0          14.36882    46784.6369\n1200               1        1              0          14.20857    41992.4373\n1201               1        1              0          14.30715  -261592.4919\n1202               1        1              0          14.29299  -138648.8155\n1203               1        1              0          14.50866     -608.2864\n1204               1        1              0          14.47562   -24677.2406\n1205               1        0              1          14.01436   -72484.0242\n1206               1        0              1          14.03046  -730761.0110\n1207               1        0              1          14.22198  -579112.4876\n1208               1        0              1          14.22098  -649270.1268\n1209               1        0              1          14.07787  -845620.1809\n1210               1        0              1          13.72995   216816.4322\n1211               1        0              1          13.78505    49048.1871\n1212               1        0              1          13.72668   -61481.8047\n1213               1        0              1          13.84020  -191303.0394\n1214               1        0              1          13.71845   125970.3367\n1215               1        0              1          13.66469  -109316.1283\n1216               1        0              1          13.73213  -130195.3912\n1217               1        0              1          13.80546   -90594.2765\n1218               1        0              1          13.81050  -506917.9910\n1219               1        0              1          13.89247    36243.5400\n1220               1        0              1          14.11562   -62809.8635\n1221               1        0              1          13.20854   411908.4651\n1222               1        0              1          13.35030   277196.4434\n1223               1        0              1          13.30468   421448.9671\n1224               1        0              1          13.21220   334721.1364\n1225               1        0              1          13.48701   231388.6147\n1226               1        0              1          13.30376   225830.3179\n1227               1        0              1          13.19932   255828.9760\n1228               1        0              1          13.32938   330828.9760\n1229               1        0              1          13.22672   270828.9760\n1230               1        0              1          13.73213    85688.1087\n1231               1        0              1          13.69673  -807037.3021\n1232               1        0              1          13.56705   298962.7874\n1233               1        0              1          13.66469   113993.2638\n1234               1        0              1          14.05943   551450.1479\n1235               0        0              1          14.75160 -2516580.1112\n1236               0        0              1          13.97080   415924.1360\n1237               0        0              1          13.76158 -3126731.7346\n1238               0        0              1          13.74830    17130.6181\n1239               0        0              1          14.09918 -2997483.8017\n1240               1        0              0          14.17319   187759.4867\n1241               1        0              0          14.10069   311617.2470\n1242               1        0              0          14.03865   260154.0226\n1243               1        0              0          13.88223   270599.3741\n1244               1        1              0          14.35783    46335.8784\n1245               1        1              0          14.44091   163645.8327\n1246               1        1              0          15.12114   303685.0598\n1247               1        1              0          14.44678 -1790359.5449\n1248               1        1              0          14.05365   -66702.5156\n1249               0        0              1          13.84991  -435120.0283\n1250               0        0              1          13.86430   -58528.2476\n1251               0        0              1          14.03865  -294071.5611\n1252               0        0              1          13.84991  -104797.0958\n1253               0        0              1          14.05453  -160311.0426\n1254               0        0              1          13.76422  -123835.6373\n1255               0        0              1          13.74830  -192136.9781\n1256               0        0              1          13.86430   -52141.4058\n1257               0        0              1          13.84991   -71850.9650\n1258               0        0              1          14.07787   591797.4489\n1259               0        0              1          13.74294   758945.7615\n1260               0        0              1          14.12116   559039.2647\n1261               0        0              1          14.03062   729086.0712\n1262               1        0              1          14.17319   434389.0400\n1263               1        0              1          13.76422   -63963.1096\n1264               1        0              1          14.03017  -438679.7906\n1265               1        0              1          13.93773   -67219.9580\n1266               1        0              1          13.76422  -126842.0813\n1267               1        0              1          13.91082    69986.5477\n1268               1        0              1          13.72995   -75319.2231\n1269               1        0              1          13.66178   117890.9503\n1270               1        0              1          13.77469    -2384.9280\n1271               1        0              1          13.76422    -5110.5694\n1272               1        0              1          13.77988    24848.2948\n1273               0        0              1          13.84507    20347.5818\n1274               0        0              1          13.84507   -62977.0909\n1275               0        0              1          13.63877  -140625.4741\n1276               0        0              1          13.99783  -301786.0341\n1277               0        0              1          13.95527   120271.0000\n1278               0        0              1          13.96393    17768.6343\n1279               0        0              1          14.05453   125394.6457\n1280               1        0              1          14.23093  -698303.0901\n1281               1        0              1          14.19052  -756057.3772\n1282               1        0              1          14.18707  -700644.3268\n1283               0        0              1          13.71569   350721.9521\n1284               0        0              1          14.01436   158705.9144\n1285               0        0              1          13.85857   279513.8405\n1286               0        0              1          14.12300  -104051.4832\n1287               0        0              1          14.03465   148173.6528\n1288               0        0              1          14.15839     7711.4754\n1289               1        0              0          14.33430    90109.3643\n1290               1        0              0          14.75239   330718.7769\n1291               1        0              0          14.30409    -4178.5978\n1292               1        0              0          14.08171  -470062.3321\n1293               0        0              1          14.16793  -364466.2374\n1294               0        0              1          14.60397  -295979.6545\n1295               0        0              1          14.35783    17574.1978\n1296               0        0              1          14.86691   161378.3605\n1297               0        0              1          14.01025  -184573.1213\n1298               0        0              1          14.00943  -490257.3732\n1299               0        0              1          13.99366  -407571.4890\n1300               0        0              1          13.99783  -374818.9573\n1301               0        0              1          14.13759   249537.0940\n1302               0        0              1          14.01845   174949.9162\n1303               0        0              1          14.09314   295046.7459\n1304               1        1              0          14.41709  -795329.8945\n1305               1        1              0          14.55983  -828512.4046\n1306               1        1              0          14.16185  -817600.1584\n1307               1        1              0          14.61302  -724411.9149\n1308               1        1              0          14.71160  -796816.2001\n1309               0        0              1          13.90306    76770.2330\n1310               0        0              1          14.16722  -240864.2129\n1311               0        0              1          13.92884    40684.7741\n1312               0        0              1          13.92884    40999.5676\n1313               0        0              1          14.07402  -194875.5208\n1314               0        0              1          14.08554  -122916.9140\n1315               0        0              1          14.15198  -580915.7227\n1316               0        0              1          14.12152   -61950.4504\n1317               0        0              1          14.22098  -116536.9249\n1318               0        0              1          14.02982  -159036.2084\n1319               0        0              1          13.92212   658274.1969\n1320               0        0              1          14.01845   828177.3422\n1321               0        0              1          13.82546   803912.0072\n1322               1        0              1          13.82298  -160730.2748\n1323               1        0              1          13.86430  -429727.6434\n1324               1        0              1          13.92884  -551390.4821\n1325               1        0              1          14.02252    69710.4211\n1326               1        0              1          13.98102  -299727.6434\n1327               1        0              1          13.66469  -496524.8042\n1328               1        0              1          14.03865  -331947.8240\n1329               1        0              1          13.98946  -481390.4821\n1330               1        0              1          13.79531  -346397.3725\n1331               1        0              1          13.98102  -261992.7584\n1332               1        0              1          13.92795  -360727.6434\n1333               1        0              1          14.28551   -11936.4235\n1334               1        0              1          14.64188   385095.8739\n1335               1        0              1          14.26659   -76592.1520\n1336               1        0              1          14.34024  -748597.3048\n1337               1        0              1          14.50866    19020.9127\n1338               1        0              1          14.31629    70590.0255\n1339               1        0              1          14.23419   -34913.5865\n1340               0        1              0          14.07787    83459.2137\n1341               0        1              0          14.07209  -816349.0073\n1342               0        1              0          14.11562  -213610.8255\n1343               0        1              0          14.11562  -650390.8276\n1344               0        1              0          14.32233  -284571.1732\n1345               1        1              0          13.92436   320424.5881\n1346               1        1              0          14.04265    14898.4229\n1347               1        1              0          14.10069   -10419.0824\n1348               1        1              0          14.12666   -95423.3346\n1349               1        1              0          14.41435   659016.3385\n1350               1        1              0          14.14948  -175934.3278\n1351               1        1              0          14.11562  -246252.3099\n1352               1        1              0          14.12483  -119232.5108\n1353               1        1              0          14.12666    32262.6865\n1354               1        0              1          13.82521   105562.4350\n1355               1        0              1          14.04662   -32148.2649\n1356               1        0              1          13.88382   -68014.1789\n1357               1        0              1          13.90169   -59548.9153\n1358               1        0              1          13.81050   -95735.2006\n1359               1        0              1          13.86430    23104.0824\n1360               1        0              1          13.79019   -97553.2126\n1361               1        0              1          14.53822   -19881.0881\n1362               1        0              1          14.45209  -123248.9701\n1363               1        0              1          14.41709  -136431.5946\n1364               1        0              1          14.94549 -2935684.8696\n1365               1        0              1          14.44145  -342841.7011\n1366               1        0              1          14.45736  -281114.6054\n1367               1        0              1          14.13759  -364443.8389\n1368               1        0              1          14.49354  -344009.8294\n1369               1        0              1          14.48334  -380245.5862\n1370               1        0              1          14.47820  -265488.3161\n1371               1        0              1          14.54064   -19369.0778\n1372               1        0              1          14.42799  -335495.1349\n1373               1        0              1          15.13966   550440.3919\n1374               1        0              1          14.75747   -62360.1282\n1375               1        0              1          14.44145  -266195.6248\n1376               1        0              1          13.84507  -175417.9829\n1377               1        0              1          13.63219   -85703.3079\n1378               1        0              1          13.82744   144906.7825\n1379               1        0              1          13.77260  -468880.4139\n1380               1        0              1          13.69334    40020.7843\n1381               1        0              1          13.75364  -144514.1288\n1382               1        0              1          13.71569    -1293.0911\n1383               1        0              1          15.03706 -1204932.8577\n1384               1        0              1          14.82476  -131125.6865\n1385               1        0              1          14.80876  1196273.9059\n1386               1        0              1          14.67519  -115157.8730\n1387               1        0              1          14.68349  -257168.1971\n1388               1        0              1          14.78211  -170381.5927\n1389               1        0              1          14.41983   215999.2305\n1390               1        0              1          14.13759  -210646.5368\n1391               1        0              1          14.32714 -1077518.1474\n1392               1        0              1          14.61686  -302688.9560\n1393               1        0              1          14.07787  -220722.1187\n1394               1        0              1          14.56914  -548938.2008\n1395               1        0              1          14.43232  -775382.8868\n1396               1        0              1          14.75994   -28907.2988\n1397               1        0              1          14.06237   -31469.1159\n1398               1        0              1          14.95459 -1520498.7404\n1399               1        0              1          14.64445   -80703.3018\n1400               1        0              1          14.67383   -42027.4010\n1401               1        0              1          14.70230   -20375.0813\n1402               1        0              1          14.70915    53495.6931\n1403               1        0              1          14.12666  -101152.0295\n1404               1        0              1          13.93994  -888907.2598\n1405               1        0              1          13.89247   578640.6509\n1406               1        0              1          13.62314   309570.2696\n1407               1        0              1          13.78299   412237.6847\n1408               1        0              1          13.90626   474336.0877\n1409               1        0              1          13.80546   324802.0000\n1410               1        0              1          13.67625   184956.9077\n1411               0        0              1          16.07727  4280037.2954\n1412               0        0              1          15.31959   891512.0793\n1413               0        0              1          14.88022   890928.8370\n1414               0        0              1          14.22098   -23380.6836\n1415               0        0              1          15.35881  1672896.0180\n1416               0        0              1          14.46731     4954.3342\n1417               0        0              1          14.75160   840390.0060\n1418               0        0              1          14.18362   294469.9199\n1419               0        0              1          14.82711  -307417.3674\n1420               0        0              1          13.98525   120876.1549\n1421               0        0              1          13.56705   128596.9331\n1422               0        0              1          13.53844   400479.9524\n1423               0        0              1          14.16617   270273.5525\n1424               0        0              1          14.10818   187995.6714\n1425               0        0              1          13.92884   232856.1479\n1426               0        0              1          14.15198   247995.6714\n1427               1        0              1          13.63519   402533.0347\n1428               1        0              1          13.61706   347397.0815\n1429               1        0              1          13.52783   354981.3944\n1430               1        0              1          13.79019   101968.5822\n1431               1        0              1          13.56705   420272.8861\n1432               1        0              1          13.52816   454513.3861\n1433               1        0              1          13.54763   433384.7415\n1434               1        0              1          15.00402   719553.2495\n1435               1        0              1          14.76944   761278.7483\n1436               1        0              1          14.19812   335701.9663\n\n\nNext, we will use tmap package to display the distribution of the residuals on an interactive map.\nThe code churn below will turn on the interactive mode of tmap andp lot na interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(10,14))\n\n\n\n\n\n\nSwitch back to ‘plot’ mode before continuing\n\ntmap_mode(\"plot\")\n\nThe figure above reveal that there is sign of spatial autocorrelation, meaning the pattern do not resemble complete spatial randomness , instead suggests clustering or dispersion (outliers).\nTo proof that our observation is indeed true, the Global Moran’s I test will be performed.\nRecall in Hands-on_Ex2_1, we use st_centroid() of sf package to find longitude and latittude of our polygon centroids: longitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]]). hunan is an sf object.\nFirst, we will compute the distance-based weight matrix by using dnearneigh() function of spdep and the coordinates() function of the sp package. condo_resale.sp is a SpatialPointDataFrame object.\n\ncoordinates(condo_resale.sp)[1:3,1:2]\n\n  coords.x1 coords.x2\n1  22085.12  29951.54\n2  25656.84  34546.20\n3  23963.99  32890.80\n\n\ndnearneigh() computes the list the neighbours based on a minimum and maximum distance threshold.\nclass of nb: nb\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nInterpreting Link number distribution\n\nThere are 3 regions that have 1 link each.\nThere are 3 regions that have 3 links each.\nThere are 9 regions that have 5 links each\n\nNext, nb2listw() of spdep packge will be used to convert the output neighbours lists (i.e. nb) into a spatial weights matrix object with class ‘listw’, ‘nb’.\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nPeak at the row-standardised weights of the first point.\n\nnb_lw$weights[1]\n\n[[1]]\n [1] 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05\n[16] 0.05 0.05 0.05 0.05 0.05\n\n\nPeak at point 1’s neighbours\n\nnb_lw$neighbours[1]\n\n[[1]]\n [1]  66  77  78  79  80 103 118 119 120 121 122 123 124 161 238 239 343 402 403\n[20] 404\n\n\nNext, lm.morantest() of spdep package will be used to perform Moran’s I test for residual spatial autocorrelation\n\nlm.morantest(condo.mlr14, nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution.\n\n#| eval: false\n#| echo: false\n#| fig-width: 14\n#| fig-asp: 0.68\n#| code-fold: True"
  },
  {
    "objectID": "Hands-on_Ex4/Hands-on_Ex4_1.html#summaries",
    "href": "Hands-on_Ex4/Hands-on_Ex4_1.html#summaries",
    "title": "Hands-on Exercise 4.1: Geopraphically Weighted Regression",
    "section": "Summaries",
    "text": "Summaries"
  },
  {
    "objectID": "Hands-on_Ex5/Hands-on_Ex5_1.html",
    "href": "Hands-on_Ex5/Hands-on_Ex5_1.html",
    "title": "Hands-on Exercise 5.1: Geographically Weighted Machine Learning",
    "section": "",
    "text": "To be updated."
  },
  {
    "objectID": "Hands-on_Ex5/Hands-on_Ex5_1.html#getting-started",
    "href": "Hands-on_Ex5/Hands-on_Ex5_1.html#getting-started",
    "title": "Hands-on Exercise 5.1: Geographically Weighted Machine Learning",
    "section": "15.2 Getting Started",
    "text": "15.2 Getting Started\nTo be updated"
  },
  {
    "objectID": "Hands-on_Ex5/Hands-on_Ex5_1.html#section",
    "href": "Hands-on_Ex5/Hands-on_Ex5_1.html#section",
    "title": "Hands-on Exercise 5.1: Geographically Weighted Machine Learning",
    "section": "",
    "text": "#| eval: false\n#| echo: false\n#| fig-width: 14\n#| fig-asp: 0.68\n#| code-fold: True"
  },
  {
    "objectID": "Hands-on_Ex5/Hands-on_Ex5_1.html#summaries",
    "href": "Hands-on_Ex5/Hands-on_Ex5_1.html#summaries",
    "title": "Hands-on Exercise 5.1: Geographically Weighted Machine Learning",
    "section": "Summaries",
    "text": "Summaries"
  },
  {
    "objectID": "In-class_Ex1/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "In-class_Ex1/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex1/In-class_Ex1.html",
    "href": "In-class_Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "The Task\nIn this in-class exercise, we are required to prepare a choropleth map showing the distribution of passenger trips at planning sub-zone by integrating Passenger Volume by Origin Destination Bus Stops and bus stop data sets downloaded from LTA DataMall and Planning Sub-zone boundary of URA Master Plan 2019 downloaded from data.gov.sg.\nThe specific task of this in-class exercise are as follows:\n\nto import Passenger Volume by Origin Destination Bus Stops csv aspatial data set downloaded from LTA DataMall in to RStudio environment,\nto import geospatial data in ESRI shapefile format into sf data frame format,\nto perform data wrangling by using appropriate functions from tidyverse and sf pakcges, and\nto visualise the distribution of passenger trip by using tmap methods and functions."
  },
  {
    "objectID": "In-class_Ex1/In-class_Ex1.html#getting-started",
    "href": "In-class_Ex1/In-class_Ex1.html#getting-started",
    "title": "In-class Exercise 1",
    "section": "Getting started",
    "text": "Getting started\nThree R packages will be used in this in-class exercise, they are:\n\ntidyverse for non-spatial data handling,\nsf for geospatial data handling,\ntmap for thematic mapping, and\nknitr for creating html table.\n\nThe code chunk below loads the following packages:\n\ntmap: for thematic mapping\nsf: for geospatial data handling\ntidyverse: for non spatial data handling\n\n\npacman::p_load(sf, tmap, tidyverse, knitr, h3jsr, DT, skimr)"
  },
  {
    "objectID": "In-class_Ex1/In-class_Ex1.html#importing-the-od-data",
    "href": "In-class_Ex1/In-class_Ex1.html#importing-the-od-data",
    "title": "In-class Exercise 1",
    "section": "Importing the OD data",
    "text": "Importing the OD data\nFirstly we will import the Passenger volume by Origin Destination Bus Stops dataset downloaded from the LTA Datamall by using the read_csv() of the readr package (to read text data).\n\nodbus_aug <- read_csv(\"data\\\\aspatial\\\\origin_destination_bus_202308.csv\")\n\nCheck the datafields\n\nglimpse(odbus_aug)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\nProcessing the aspatial OD data\nThe ‘ORIGIN_PT_CODE’ and ‘DESTINATION_PT_CODE’ field is in character field. We will convert it to factor data type.\n\nodbus_aug$ORIGIN_PT_CODE <- as.factor(odbus_aug$ORIGIN_PT_CODE)\nodbus_aug$DESTINATION_PT_CODE <- as.factor(odbus_aug$DESTINATION_PT_CODE)\n\nThe code chunk below does the following:\n\nextract commuting flows on weekday and between 7 and 10 o’clock time intervals.\nGroup data by ‘ORIGIN_PT_CODE’ and create a new field call ‘TRIPS’ by summarising the ‘TOTAL_TRIPS’ column.\n\n\n\n\n\norigin7_9 <- odbus_aug %>% \n  filter(DAY_TYPE == 'WEEKDAY') %>% \n  filter(TIME_PER_HOUR >= 7 &\n           TIME_PER_HOUR <= 9) %>% \n  group_by(ORIGIN_PT_CODE) %>% \n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\norigin7_9 %>% \n  arrange(desc(TRIPS)) %>%\n  head(10) %>% \n  kable()\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n22009\n295128\n\n\n46009\n232902\n\n\n75009\n134781\n\n\n52009\n121422\n\n\n55509\n113434\n\n\n24009\n108437\n\n\n65199\n100791\n\n\n59009\n92333\n\n\n84009\n88092\n\n\n54261\n86565\n\n\n\n\n\nSave the output in rds format for future use.\n\nwrite_rds(origin7_9, \"data/rds/origin7_9.rds\")\n\nThe code chunk below will be used to import the save origin7_9.rds into R environment.\n\norigin7_9 <- read_rds(\"data/rds/origin7_9.rds\")"
  },
  {
    "objectID": "In-class_Ex1/In-class_Ex1.html#importing-the-geospatial-data",
    "href": "In-class_Ex1/In-class_Ex1.html#importing-the-geospatial-data",
    "title": "In-class Exercise 1",
    "section": "Importing the geospatial data",
    "text": "Importing the geospatial data\nTwo geospatial datasets will be used in this exercise.\n\nBusStop: This data provides the location of bus stop as at last quarter of 2022.\nMPSZ-2019: This data provides the sub-zone boundary of URA Master Plan 2019.\n\n\nLoad the geospatial bustop shapefiles and immediately transform to Singapore projection system (EPSG 3414)\n\nbusstop <- st_read(dsn=\"data\\\\geospatial\\\\BusStopLocation\\\\BusStopLocation_Jul2023\", layer = \"BusStop\") %>% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\In-class_Ex1\\data\\geospatial\\BusStopLocation\\BusStopLocation_Jul2023' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\nbusstop\n\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n1       22069        B06   OPP CEVA LOGISTICS POINT (13576.31 32883.65)\n2       32071        B23         AFT TRACK 13 POINT (13228.59 44206.38)\n3       44331        B01              BLK 239  POINT (21045.1 40242.08)\n4       96081        B05 GRACE INDEPENDENT CH POINT (41603.76 35413.11)\n5       11561        B05              BLK 166 POINT (24568.74 30391.85)\n6       66191        B03         AFT CORFE PL POINT (30951.58 38079.61)\n7       23389       B02A              PEC LTD   POINT (12476.9 32211.6)\n8       54411        B02              BLK 527 POINT (30329.45 39373.92)\n9       28531        B09              BLK 536 POINT (14993.31 36905.61)\n10      96139        B01              BLK 148  POINT (41642.81 36513.9)\n\n\nThere are 5161 spatial units/points in busstop and three attributes, namely “BUS_STOP_N” “BUS_ROOF_N” “LOC_DESC”.\n\nplot(busstop['BUS_STOP_N'])\n\n\n\n\n\n\nLoad the geospatial MPSZ_19 shapefiles (basemap) from gov.sg (usually in WSG84 format) and transform to EPSG 3414\n\nmpsz <- st_read(dsn=\"data\\\\geospatial\\\\MPSZ-2019\", layer='MPSZ-2019')  %>% \n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\In-class_Ex1\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n#colnames(mpsz)\n\nThere are 332 spatial units/polygons in mpsz and 6 attributes, namely “SUBZONE_N” “SUBZONE_C” “PLN_AREA_N” “PLN_AREA_C” “REGION_N” “REGION_C”.\n\nplot(mpsz['SUBZONE_C'])"
  },
  {
    "objectID": "In-class_Ex1/In-class_Ex1.html#geospatial-data-wrangling",
    "href": "In-class_Ex1/In-class_Ex1.html#geospatial-data-wrangling",
    "title": "In-class Exercise 1",
    "section": "Geospatial data wrangling",
    "text": "Geospatial data wrangling\n\nCombining Busstop and mpsz\nCode chunk below populates the planning subzone code (i.e. SUBZONE_C) of mpsz sf data frame into busstop sf data frame.\n\nbusstop_mpsz <- st_intersection(busstop, mpsz) %>% \n  select(BUS_STOP_N, SUBZONE_C)\n\nbusstop_mpsz\n\nSimple feature collection with 5156 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 49903.39\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     BUS_STOP_N SUBZONE_C                  geometry\n1346      13099    RVSZ05  POINT (28696.2 30905.64)\n5067      13089    RVSZ05 POINT (28303.29 30901.45)\n839       06151    SRSZ01 POINT (28444.68 30126.05)\n965       13211    SRSZ01  POINT (28865.67 30537.6)\n974       13139    SRSZ01 POINT (27859.98 30819.39)\n1197      13109    SRSZ01 POINT (29044.85 30655.31)\n1338      13119    SRSZ01 POINT (27947.47 30664.54)\n2309      06169    SRSZ01 POINT (28751.53 30196.23)\n2566      06159    SRSZ01 POINT (28404.91 30166.55)\n3028      04321    SRSZ01 POINT (29084.63 30510.34)\n\n\n\nst_intersects(): count points in polygon\nst_intersection(): find polygon areas overlap\n\n\n\n\n\n\n\nNote\n\n\n\n\nst_intersection() is used to perform point and polygon overlap and the output will be in point sf object.\nselect() of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.\nfive bus stops are excluded in the resultant data frame because they are outside of Singapore boundary. Points reduced from 5161 to 5156 after combine.\n\n\n\nDrop the geometry because busstop_mpsz is a POINT sf object, there is no polygon geometry. Furthermore, we have to process the attribute data. To get back the planning sub-zone POLYGON geometry data, we can always left_join() mpsz df with our processed busstop_mpsz df again later.\n\nbusstop_mpsz <- busstop_mpsz %>% \n  st_drop_geometry()\n\ndatatable(busstop_mpsz, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\nSave the output into rds format.\n\nwrite_rds(busstop_mpsz, 'data/rds/busstop_mpsz.csv')\n\n\n\nCombining origin7_9 and busstop_mpsz dataframes\nThe ‘BUS_STOP_N’ and ‘ORIGIN_PT_CODE’ columns are the join columns.\n\nCombinebusstop_mpszorigin7_9\n\n\norigin7_9 has 5,019 rows\nbusstop_mpsz has 5,156 rows\nAfter left_join(), origin_data has 5,031 rows. There are 55 missing values in its ’ORIGIN_SZ’ field and this could be due to missing bus stop code in the busstop_mpsz df.\n\norigin_data <- left_join(origin7_9, busstop_mpsz,\n                         by = c('ORIGIN_PT_CODE' = 'BUS_STOP_N')) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C)\n\ndatatable(origin_data)\n\n\n\n\n\n\n\n\nThere are 5,156 rows.\n\n#kable(head(busstop_mpsz,3))\ndatatable(busstop_mpsz, class = 'cell-border stripe', options = list(pageLength = 3))\n\n\n\n\n\n\n\n\nThere are 5,015 rows.\n\n#kable(head(origin7_9,3))\ndatatable(origin7_9, class = 'cell-border stripe', options = list(pageLength = 3))\n\n\n\n\n\n\n\n\n\nBefore proceeding further, check for duplicates in the dataframe.\n\ngroup by all columns and check for duplicate rows using filter(n()>1)\n\nduplicate contains all duplicate rows , including original row. Thus there are 13 duplicated rows. The reason for having 13 duplicated rows in origin_data df is because there are 13 duplicated rows in busstop_mpsz df. We should have done the check prior to left join.\n\nduplicate <- origin_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n\n# A tibble: 26 × 3\n   ORIGIN_BS TRIPS ORIGIN_SZ\n   <chr>     <dbl> <chr>    \n 1 11009     13826 QTSZ01   \n 2 11009     13826 QTSZ01   \n 3 22501      9743 JWSZ09   \n 4 22501      9743 JWSZ09   \n 5 43709      1118 BKSZ07   \n 6 43709      1118 BKSZ07   \n 7 47201     23998 WDSZ07   \n 8 47201     23998 WDSZ07   \n 9 51071      6218 CCSZ01   \n10 51071      6218 CCSZ01   \n# ℹ 16 more rows\n\n#duplicated_rows <- origin_data[duplicated(origin_data), ]  #<< alternative code\n\nTo retain only the unique records, use the code chunk below\n\norigin_data <- unique(origin_data)\n\nDouble check there are indeed no more duplicates in origin_data df.\n\norigin_data[duplicated(origin_data), ]\n\n# A tibble: 0 × 3\n# ℹ 3 variables: ORIGIN_BS <chr>, TRIPS <dbl>, ORIGIN_SZ <chr>\n\n\nUse the skim() from the skimr library\n\nskim(origin_data)\n\n\nData summary\n\n\nName\norigin_data\n\n\nNumber of rows\n5018\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nORIGIN_BS\n0\n1.00\n5\n5\n0\n5015\n0\n\n\nORIGIN_SZ\n55\n0.99\n6\n6\n0\n311\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nTRIPS\n0\n1\n4209.89\n9285.78\n1\n385\n1765\n4987.25\n295128\n▇▁▁▁▁\n\n\n\n\n\nSum the TRIPS by planning sub-zone level\nCurrently, there are many rows per planning sub-zone. Calculate the aggregate sum of the ‘TRIPS’ field by the ‘ORIGIN_SZ’ in the origin_data df since we are plotting passenger trips originating at sub-zone level.\n\norigin_data_sz <- origin_data %>% \n  group_by(ORIGIN_SZ) %>% \n  summarise(TTRIPS = sum(TRIPS)) %>% \n  ungroup()\n\norigin_data_sz\n\n# A tibble: 312 × 2\n   ORIGIN_SZ TTRIPS\n   <chr>      <dbl>\n 1 AMSZ01     95303\n 2 AMSZ02    184734\n 3 AMSZ03    159714\n 4 AMSZ04     90272\n 5 AMSZ05     55590\n 6 AMSZ06     80269\n 7 AMSZ07     18920\n 8 AMSZ08     23382\n 9 AMSZ09     71036\n10 AMSZ10    136516\n# ℹ 302 more rows"
  },
  {
    "objectID": "In-class_Ex1/In-class_Ex1.html#choropleth-visualisation",
    "href": "In-class_Ex1/In-class_Ex1.html#choropleth-visualisation",
    "title": "In-class Exercise 1",
    "section": "Choropleth Visualisation",
    "text": "Choropleth Visualisation\nTask: Prepare a choropleth map showing the distribution of passenger trips at planning sub-zone level.\nThe origin_data_sz df is an aspatial df without any geometry, we could perform a left join with mpsz and origin_datato retain the sf property.\n\nmpsz_origtrip_sz <- left_join(mpsz, origin_data_sz,\n                           by = c('SUBZONE_C' ='ORIGIN_SZ'))\n\nmpsz_origtrip_sz\n\nSimple feature collection with 332 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C TTRIPS                       geometry\n1        CR     NA MULTIPOLYGON (((33222.98 29...\n2        CR   6976 MULTIPOLYGON (((28481.45 30...\n3        CR  23629 MULTIPOLYGON (((28087.34 30...\n4        WR     NA MULTIPOLYGON (((14557.7 304...\n5        CR   4663 MULTIPOLYGON (((29542.53 31...\n6        CR     NA MULTIPOLYGON (((35279.55 30...\n7        WR     NA MULTIPOLYGON (((15772.59 21...\n8        WR     NA MULTIPOLYGON (((19843.41 21...\n9        CR     NA MULTIPOLYGON (((30870.53 22...\n10       CR     21 MULTIPOLYGON (((26879.04 26...\n\n\nExamine any missing values.\n\nskim(mpsz_origtrip_sz)\n\n\nData summary\n\n\nName\nmpsz_origtrip_sz\n\n\nNumber of rows\n332\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n7\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSUBZONE_N\n0\n1\n4\n29\n0\n332\n0\n\n\nSUBZONE_C\n0\n1\n6\n6\n0\n332\n0\n\n\nPLN_AREA_N\n0\n1\n4\n23\n0\n55\n0\n\n\nPLN_AREA_C\n0\n1\n2\n2\n0\n55\n0\n\n\nREGION_N\n0\n1\n11\n17\n0\n5\n0\n\n\nREGION_C\n0\n1\n2\n3\n0\n5\n0\n\n\ngeometry\n0\n1\n658\n77486\n0\n332\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nTTRIPS\n21\n0.94\n66888.17\n84492.72\n15\n11471\n36064\n91292.5\n681719\n▇▁▁▁▁\n\n\n\n\n\nPlot using aggregated sum of TRIPS by sub-zones\n\ntmap_mode('plot')\n\ntm_shape(mpsz_origtrip_sz)+\n  tm_fill(\"TTRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          #legend.hist = TRUE, \n          #legend.is.portrait = TRUE,\n          #legend.hist.z = 0.3,\n          title = \"Passengers Trip\") +\n  tm_layout(main.title = \"Passenger trips generated by planning sub-zone level\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.height = 0.6, \n            legend.width = 0.5,\n            #legend.outside = TRUE,\n            #legend.text.size= 0.6,\n            #inner.margins = c(0.01, 0.01, 0, .15),\n            #legend.position = c(\"right\", \"top\"),\n            #bg.color = \"black\",\n            #main.title.color = 'white',\n            #legend.title.color = 'white',\n            #legend.text.color= 'white',\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2.5) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nPlot in ‘view’ mode for interactivity. We will be able to zoom and hover and click on each subzone.\n\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz_origtrip_sz)+\n  tm_fill(\"TTRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          #legend.hist = TRUE, \n          #legend.is.portrait = TRUE,\n          #legend.hist.z = 0.3,\n          title = \"Passengers Trip\") +\n  tm_layout(main.title = \"Passenger trips generated by planning sub-zone level\",\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.height = 0.6, \n            legend.width = 0.5,\n            #legend.outside = TRUE,\n            #legend.text.size= 0.6,\n            #inner.margins = c(0.01, 0.01, 0, .15),\n            #legend.position = c(\"right\", \"top\"),\n            #bg.color = \"black\",\n            #main.title.color = 'white',\n            #legend.title.color = 'white',\n            #legend.text.color= 'white',\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2.5) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "In-class_Ex2/In-class_Ex2.html",
    "href": "In-class_Ex2/In-class_Ex2.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "Installing and loading the required R packages.\ndplyr: reshape data, joins, pivot for instance..\ntidyr: transform data\nknitr: generate html table\nToday, sfdep library will replace the spdep library because it is more recent (<2 years ago). Allows to mutate using spatial functions. spdep does not allow for mutate for instance.\n\npacman::p_load(sf, tmap, sfdep, tidyverse, knitr, plotly,Kendall, DT)\n\n\n\n\nHunan, geospatial dataset in shapefile format\nHunan_2012, an attribute dataset in csv format\n\n\n\n\n\nIn the code chunk below , import geospatial data using st_read() from sf library. The output has projection of WSG84 and 88 observations. Class of ‘sf’ and ‘tibble df’, and in tibble df contains a geometry list. In ‘sf’, each row/observation represents a geographical region/area/unit.\n\n hunan<- st_read(dsn=\"data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\In-class_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n class(hunan)\n\n[1] \"sf\"         \"data.frame\"\n\n\nIn the code chunk below , import aspatial data\n\nhunan_2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nCombine both files together using left_join hunan (geo) with hunan_2012 (aspatial) to retain the sf class. If the unique identifier is not specified, R will use identical columns, in this case ‘County’ columns in both objects.\n\nhunan_GDPPC <- left_join(hunan, hunan_2012,\n                   by = c('County' = 'County')) %>% \n  select(1:4, 7,15)\n\nhunan\n\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n     NAME_2  ID_3    NAME_3   ENGTYPE_3 Shape_Leng Shape_Area    County\n1   Changde 21098   Anxiang      County   1.869074 0.10056190   Anxiang\n2   Changde 21100   Hanshou      County   2.360691 0.19978745   Hanshou\n3   Changde 21101    Jinshi County City   1.425620 0.05302413    Jinshi\n4   Changde 21102        Li      County   3.474325 0.18908121        Li\n5   Changde 21103     Linli      County   2.289506 0.11450357     Linli\n6   Changde 21104    Shimen      County   4.171918 0.37194707    Shimen\n7  Changsha 21109   Liuyang County City   4.060579 0.46016789   Liuyang\n8  Changsha 21110 Ningxiang      County   3.323754 0.26614198 Ningxiang\n9  Changsha 21111 Wangcheng      County   2.292093 0.13049161 Wangcheng\n10 Chenzhou 21112     Anren      County   2.240739 0.13343936     Anren\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\nPlot a choropleth map\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Distribution of GDP per capita by district, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n\n\n\n\n\n\n\nWe can see the neighbours list in the first column.\n\nnb_queen <- hunan_GDPPC %>% \n  mutate(nb = st_contiguity(geometry),\n         .before = 1)\n\nkable(head(nb_queen,3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnb\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\n2, 3, 4, 57, 85\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\n1, 57, 58, 78, 85\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\n1, 4, 5, 85\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…\n\n\n\n\n\nIdentifying higher order neighbors\nTo identify higher order contiguity nb, we can use st_nb_lag_cumul() should be used as shown in the code chunk below.\n\nnb2_queen <-  hunan_GDPPC %>% \n  mutate(nb = st_contiguity(geometry),\n         nb2 = st_nb_lag_cumul(nb, 2),\n         .before = 1)\n\nkable(head(nb2_queen,3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnb\nnb2\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\n2, 3, 4, 57, 85\n2, 3, 4, 5, 6, 32, 56, 57, 58, 64, 69, 75, 76, 78, 85\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\n1, 57, 58, 78, 85\n1, 3, 4, 5, 6, 8, 9, 32, 56, 57, 58, 64, 68, 69, 75, 76, 78, 85\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\n1, 4, 5, 85\n1, 2, 4, 5, 6, 32, 56, 57, 69, 75, 78, 85\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…\n\n\n\n\n\n\n\n\nDeriving Contiguity spatial weights using sfdep (wrapper of spdep: allows for mutate using spatial functions) instead of spdep library.\nIn the code chunk below st_contiguity() is used to derive a contiguity neighbour list by using Queen’s method.\nUse two functions from spdep library, use less objects.\nNote: ‘nb’ and ‘wt’ fields contain lists.\n\nwm_q <- hunan_GDPPC %>% \n  mutate(nb = st_contiguity(geometry), # calculate by queen default\n         wt = st_weights(nb,           # calculate row-stand spatial weight matrix\n                         style='W'),\n         .before =1)   # put these two columns at front of wm_q sf df\n\nclass(wm_q)\n\n[1] \"sf\"         \"data.frame\"\n\n\n\n\n\nThere are three popularly used distance-based spatial weights, they are:\n\nfixed distance weights,\nadaptive distance weights, and\ninverse distance weights (IDW).\n\n\n\nTo determine the upper limit for distance band:\n\ngeo <- sf::st_geometry(hunan_GDPPC)\nnb <- st_knn(geo, k=1, longlat = TRUE)\n\ndists <- unlist(st_nb_dists(geo, nb))\n\n\n\nst_nb_dists() of sfdep is used to calculate the nearest neighbour distance. The output is a list of distances for each observation’s neighbors list.\nunlist() of Base R is then used to return the output as a vector so that the summary statistics of the nearest neighbour distances can be derived.\n\n\nDerieve summary statistics of nearest nb distances\n\nsummary(dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  21.56   29.11   36.89   37.34   43.21   65.80 \n\n\nThe maximum nearest neighbour distance is 65.8 km, thus we will use threshold value of 66km to ensure each spatial unit as least one neighbour.\nCompute the fixed distance weights by using the code chunk below.\n\nwm_fd <- hunan_GDPPC %>%\n  mutate(nb = st_dist_band(geometry,\n                           upper = 66),\n               wt = st_weights(nb,\n                               style = 'W'),\n               .before = 1)\n\n\nst_dists_band() of sfdep is used to identify neighbors based on a distance band (i.e. 66km). The output is a list of neighbours (i.e. nb).\nst_weights() is then used to calculate polygon spatial weights of the nb list. Note that:\n\nthe default style argument is set to “W” for row standardized weights, and\nthe default allow_zero is set to TRUE, assigns zero as lagged value to zone without neighbors.\n\n\n\n\n\n\n\n\n\nwm_ad <- hunan_GDPPC %>% \n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),  # refers to `nb` generated above light\n               .before = 1)\n\n\nst_knn() of sfdep is used to identify neighbors based on k (i.e. k = 8 indicates the nearest eight neighbours). The output is a list of neighbours (i.e. nb).\nst_weights() is then used to calculate polygon spatial weights of the nb list. Note that:\n\nthe default style argument is set to “W” for row standardized weights, and\nthe default allow_zero is set to TRUE, assigns zero as lagged value to zone without neighbors.\n\n\n\n\n\n\nwm_idw <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\nst_contiguity() of sfdep is used to identify the neighbours by using contiguity criteria. The output is a list of neighbours (i.e. nb).\nst_inverse_distance() is then used to calculate inverse distance weights of neighbours on the nb list.\n\n\n\n\n\n\nAfter deriving the spatial weights matrix wm_q (class: ‘sf’ and ‘df’ ) (‘nb’ and ‘wt’) using the Queen’s method, we can calculate\n\n\nUsing the sfdep package, it can be calculated using the code chunk below\n\nglobal_moran_test(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nThe default for alternative argument is “two.sided”. Other supported arguments are “greater” or “less”. randomization, and\nBy default the randomization argument is TRUE. If FALSE, under the assumption of normality.\n\n\n\n\nMonte carlo simulation should be used to perform the statistical test. For sfdep, it is supported by globel_moran_perm(). Do not assume normality.\nIt is always a good practice to use set.seed() before performing simulation. This is to ensure that the computation is reproducible.\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n\n\nSince p-value is smaller than 0.05 , we can reject the null hypothesis that the spatial patterns spatial independent. Because the Moran’s I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering.\n\n\n\n\nlisa <- wm_q %>% \n  mutate(local_moran = local_moran(\n    GDPPC, nb,wt, nsim=99),   # straightaway use simulation instead of typical p-value\n    .before=1) %>%\n  unnest(local_moran)  # due to local_moran() function it produces output in a group object. to see it, need to unnest()\n\nThe output of local_moran() is a sf df containing the columns\n\ncolnames(lisa)\n\n [1] \"ii\"           \"eii\"          \"var_ii\"       \"z_ii\"         \"p_ii\"        \n [6] \"p_ii_sim\"     \"p_folded_sim\" \"skewness\"     \"kurtosis\"     \"mean\"        \n[11] \"median\"       \"pysal\"        \"nb\"           \"wt\"           \"NAME_2\"      \n[16] \"ID_3\"         \"NAME_3\"       \"ENGTYPE_3\"    \"County\"       \"GDPPC\"       \n[21] \"geometry\"    \n\n\n\nii: local moran statistic\neii: expectation of local moran statistic; for localmoran_permthe permutation sample means\nvar_ii: variance of local moran statistic; for localmoran_permthe permutation sample standard deviations\nz_ii: p-value\nskewness: For localmoran_perm, the output of e1071::skewness() for the permutation samples underlying the standard deviates\nkurtosis: For localmoran_perm, the output of e1071::kurtosis() for the permutation samples underlying the standard deviates.\n\nPrint the lisa sf df.\nThe quadrants (HH, LH, HL, LL) is automatically calculated for us.\nUsually we use mean for the Moran-Scatterplot. However, if the data GDPPC is highly skewed, use median instead of mean.\n\nkable(head(lisa,3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nii\neii\nvar_ii\nz_ii\np_ii\np_ii_sim\np_folded_sim\nskewness\nkurtosis\nmean\nmedian\npysal\nnb\nwt\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\n-0.0014685\n0.0017692\n0.0004180\n-0.1583623\n0.8741713\n0.82\n0.41\n-0.8122108\n0.6518754\nLow-High\nHigh-High\nLow-High\n2, 3, 4, 57, 85\n0.2, 0.2, 0.2, 0.2, 0.2\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\n0.0258782\n0.0064149\n0.0105104\n0.1898479\n0.8494283\n0.96\n0.48\n-1.0905447\n1.8891775\nLow-Low\nHigh-High\nLow-Low\n1, 57, 58, 78, 85\n0.2, 0.2, 0.2, 0.2, 0.2\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\n-0.0119876\n-0.0374069\n0.1020555\n0.0795690\n0.9365800\n0.76\n0.38\n0.8239085\n0.0460951\nHigh-Low\nHigh-High\nHigh-Low\n1, 4, 5, 85\n0.25, 0.25, 0.25, 0.25\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…\n\n\n\n\n\n\n\n\nUse tmap core functions to build a choropleth, using the local moran’s I (ii) field\n\ntmap_mode(\"plot\")\n\nmap1 <- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap1\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\nmap2<-tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\",\n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\",\n          title = \"local Moran's I p-values\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\nmap2\n\n\n\n\nPutting both maps side by side\n\ntmap_arrange(map1, map2, asp=1, ncol = 2)\n\n\n\n\n\n\n\nLISA map is a categorical map showing outliers and clusters. There are two types of outliers namely: High-Low and Low-High outliers. Likewise, there are two type of clusters namely: High-High and Low-Low cluaters. In fact, LISA map is an interpreted map by combining local Moran’s I of geographical areas and their respective p-values.\nIn lisa sf data.frame, we can find three fields contain the LISA categories. They are mean, median and pysal. In general, classification in mean will be used as shown in the code chunk below.\n\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nlisa_sig <- lisa  %>%\n  filter(p_ii < 0.05)  # lpot only sig region at 95% Conf.lvl\ntmap_mode(\"plot\")\n\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\nlisa_sig <- lisa  %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nHCSA uses spatial weights to identify locations of statistically significant hot spots and cold spots in an spatially weighted attribute that are in proximity to one another based on a calculated distance. The analysis groups features when similar high (hot) or low (cold) values are found in a cluster. The polygon features usually represent administration boundaries or a custom grid structure.\n\n\n\n\n\nUsing the inverse distance spatial weights matrix wm_idw derived in section 1.3.3, we can use the local_gstar_perm() of sfdep library to compute Gi* values of each region stored in HCSA, class: ‘sf’, tbl_df’, ‘tbl’, ‘df’.\nIt contains not just the Gi* values based on simulated data but also the p-values.\n\nHCSA <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim=99),   # these 3 var are found in wm_idw\n    .before=1) %>% \n  unnest(local_Gi)\n\nHCSA\n\nSimple feature collection with 88 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 17\n   gi_star   e_gi    var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     <dbl>  <dbl>     <dbl>   <dbl>   <dbl>        <dbl>    <dbl>    <dbl> <nb> \n 1  0.0416 0.0114   6.41e-6  0.0493 9.61e-1         0.7      0.35    0.875 <int>\n 2 -0.333  0.0106   3.84e-6 -0.0941 9.25e-1         1        0.5     0.661 <int>\n 3  0.281  0.0126   7.51e-6 -0.151  8.80e-1         0.9      0.45    0.640 <int>\n 4  0.411  0.0118   9.22e-6  0.264  7.92e-1         0.6      0.3     0.853 <int>\n 5  0.387  0.0115   9.56e-6  0.339  7.34e-1         0.62     0.31    1.07  <int>\n 6 -0.368  0.0118   5.91e-6 -0.583  5.60e-1         0.72     0.36    0.594 <int>\n 7  3.56   0.0151   7.31e-6  2.61   9.01e-3         0.06     0.03    1.09  <int>\n 8  2.52   0.0136   6.14e-6  1.49   1.35e-1         0.2      0.1     1.12  <int>\n 9  4.56   0.0144   5.84e-6  3.53   4.17e-4         0.04     0.02    1.23  <int>\n10  1.16   0.0104   3.70e-6  1.82   6.86e-2         0.12     0.06    0.416 <int>\n# ℹ 78 more rows\n# ℹ 8 more variables: wts <list>, NAME_2 <chr>, ID_3 <int>, NAME_3 <chr>,\n#   ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>, geometry <POLYGON [°]>\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\nmap1 <- tm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))+\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap1\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\nmap2<- tm_shape(HCSA) +\n  tm_fill(\"p_sim\",\n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\",\n          title = \"local Gi* sim p-values\") + \n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\nmap2\n\n\n\n\nPutting both maps side by side\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\n\n\nTo plot only the significant (i.e. p-values less than 0.05) hot spot and cold spot areas by using appropriate tmap functions as shown below\n\nHCSA_sig <- HCSA  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\nIn this section, we will load in additional set of data. Requires time series data to perform emerging hot spots analysis. The Hunan_GDPPC.csv file contains 10 years worth of GDPPC for each region.\nThe GDPPC has to be in NUMERICAL field. The time field year can be in numerical /pct or date format.\n\nGDPPC <- read_csv('data/aspatial/Hunan_GDPPC.csv')\n\n\n\nUsing spacetime() of sfdep. Creating OLAP cube on the fly.\n\nGDPPC_st <- spacetime(GDPPC, hunan,\n                      .loc_col = 'County',  #location column\n                      .time_col = 'Year')    # time column\n\nclass(GDPPC_st)\n\n[1] \"spacetime\"   \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\nstr(GDPPC_st)\n\nspacetim [1,496 × 3] (S3: spacetime/spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year  : num [1:1496] 2005 2005 2005 2005 2005 ...\n $ County: chr [1:1496] \"Longshan\" \"Changsha\" \"Wangcheng\" \"Ningxiang\" ...\n $ GDPPC : num [1:1496] 3469 24612 14659 11687 13406 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   County = col_character(),\n  ..   GDPPC = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n - attr(*, \"active\")= chr \"data\"\n - attr(*, \"data\")= spc_tbl_ [1,496 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n  ..$ Year  : num [1:1496] 2005 2005 2005 2005 2005 ...\n  ..$ County: chr [1:1496] \"Longshan\" \"Changsha\" \"Wangcheng\" \"Ningxiang\" ...\n  ..$ GDPPC : num [1:1496] 3469 24612 14659 11687 13406 ...\n  ..- attr(*, \"spec\")=\n  .. .. cols(\n  .. ..   Year = col_double(),\n  .. ..   County = col_character(),\n  .. ..   GDPPC = col_double()\n  .. .. )\n  ..- attr(*, \"problems\")=<externalptr> \n - attr(*, \"geometry\")=Classes 'sf' and 'data.frame':   88 obs. of  8 variables:\n  ..$ NAME_2    : chr [1:88] \"Changde\" \"Changde\" \"Changde\" \"Changde\" ...\n  ..$ ID_3      : int [1:88] 21098 21100 21101 21102 21103 21104 21109 21110 21111 21112 ...\n  ..$ NAME_3    : chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n  ..$ ENGTYPE_3 : chr [1:88] \"County\" \"County\" \"County City\" \"County\" ...\n  ..$ Shape_Leng: num [1:88] 1.87 2.36 1.43 3.47 2.29 ...\n  ..$ Shape_Area: num [1:88] 0.101 0.2 0.053 0.189 0.115 ...\n  ..$ County    : chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n  ..$ geometry  :sfc_POLYGON of length 88; first list element: List of 1\n  .. ..$ : num [1:427, 1:2] 112 112 112 112 112 ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"POLYGON\" \"sfg\"\n  ..- attr(*, \"sf_column\")= chr \"geometry\"\n  ..- attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA\n  .. ..- attr(*, \"names\")= chr [1:7] \"NAME_2\" \"ID_3\" \"NAME_3\" \"ENGTYPE_3\" ...\n - attr(*, \"loc_col\")= chr \"County\"\n - attr(*, \"locs\")= chr [1:88] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n - attr(*, \"n_locs\")= int 88\n - attr(*, \"time_col\")= chr \"Year\"\n - attr(*, \"times\")= num [1:17] 2005 2006 2007 2008 2009 ...\n - attr(*, \"n_times\")= int 17\n\n\nNote: GDPPC_st looks identical to GDPPC but they are not the same class type. To verify, use the code below\n\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE\n\n\n\n\n\n\n\nThe code chunk below will identify nb and derive a space-time inverse weights distance weights. The earlier derived were spatial weights matrix, this time round involves time dimension too.\nNote that this dataset now has neighbors and weights for each time-slice.\n\nGDPPC_nb <- GDPPC_st %>% \n  activate('geometry') %>% # space-time cube has 'geometry' and 'attributes' component, we have to activate the geometry component before able to derive neighbours\n  mutate(nb= include_self(st_contiguity(geometry)),  # need to inlude self to get Gi*. otherwise its Gi.\n         wt = st_inverse_distance(nb, geometry,\n                                  scale =1,\n                                  alpha =1),\n         .before =1) %>% \n  set_nbs('nb') %>% \n  set_wts('wt')\n\nclass(GDPPC_nb)\n\n[1] \"spacetime\"  \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nactivate() of dplyr package is used to activate the geometry context\nmutate() of dplyr package is used to create two new columns nb and wt.\nThen we will activate the data context again and copy over the nb and wt columns to each time-slice using set_nbs() and set_wts()\n\nrow order is very important so do not rearrange the observations after using set_nbs() or set_wts().\n\n\n\n\nExplaining why need to activate geometry, show table later\n\nhead(GDPPC_nb)\n\n# A tibble: 6 × 5\n   Year County  GDPPC nb        wt       \n  <dbl> <chr>   <dbl> <list>    <list>   \n1  2005 Anxiang  8184 <int [6]> <dbl [6]>\n2  2005 Hanshou  6560 <int [6]> <dbl [6]>\n3  2005 Jinshi   9956 <int [5]> <dbl [5]>\n4  2005 Li       8394 <int [5]> <dbl [5]>\n5  2005 Linli    8850 <int [5]> <dbl [5]>\n6  2005 Shimen   9244 <int [6]> <dbl [6]>\n\n\n\n\n\n\n\n\nNote\n\n\n\nGDPPC_st : space-time cube\nGDPPC_nb: space-time weights matrixs\n\n\n\n\n\nWe can use the time-space weights matrix GDPPC_nb to manually calculate the local Gi* for each location.\n\ngroup by Year and using local_gstar_perm() of sfdep package.\nuse unnest() to unnest gi_star column of the newly created gi_stars data.frame. THe output of this function is grouped and thus we cannot see it unless unnest().\ngi_stars df has 1496 rows instead of 88 because we have ten years worth of data\n\n\ngi_stars <- GDPPC_nb %>% \n  group_by(Year) %>%   # look at a time slice, for all locations\n  mutate(gi_star = local_gstar_perm(\n  GDPPC, nb, wt)) %>% \n  tidyr::unnest(gi_star)\n\ngi_stars\n\n# A tibble: 1,496 × 13\n# Groups:   Year [17]\n    Year County    GDPPC nb        wt    gi_star   e_gi  var_gi  p_value   p_sim\n   <dbl> <chr>     <dbl> <list>    <lis>   <dbl>  <dbl>   <dbl>    <dbl>   <dbl>\n 1  2005 Anxiang    8184 <int [6]> <dbl>   0.398 0.0115 2.69e-6  0.382   7.02e-1\n 2  2005 Hanshou    6560 <int [6]> <dbl>  -0.237 0.0109 2.64e-6  0.00199 9.98e-1\n 3  2005 Jinshi     9956 <int [5]> <dbl>   1.05  0.0126 3.33e-6  0.507   6.12e-1\n 4  2005 Li         8394 <int [5]> <dbl>   0.966 0.0117 3.24e-6  0.920   3.57e-1\n 5  2005 Linli      8850 <int [5]> <dbl>   1.05  0.0120 3.23e-6  0.885   3.76e-1\n 6  2005 Shimen     9244 <int [6]> <dbl>   0.210 0.0121 2.99e-6 -0.215   8.30e-1\n 7  2005 Liuyang   13406 <int [5]> <dbl>   3.91  0.0142 2.52e-6  3.36    7.69e-4\n 8  2005 Ningxiang 11687 <int [8]> <dbl>   1.61  0.0127 2.30e-6  0.895   3.71e-1\n 9  2005 Wangcheng 14659 <int [7]> <dbl>   3.88  0.0140 2.49e-6  2.73    6.28e-3\n10  2005 Anren      7423 <int [9]> <dbl>   1.67  0.0113 2.14e-6  1.87    6.21e-2\n# ℹ 1,486 more rows\n# ℹ 3 more variables: p_folded_sim <dbl>, skewness <dbl>, kurtosis <dbl>\n\nstr(gi_stars)\n\ngropd_df [1,496 × 13] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ Year        : num [1:1496] 2005 2005 2005 2005 2005 ...\n $ County      : chr [1:1496] \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n $ GDPPC       : num [1:1496] 8184 6560 9956 8394 8850 ...\n $ nb          :List of 1496\n  ..$ : int [1:6] 1 2 3 4 57 85\n  ..$ : int [1:6] 1 2 57 58 78 85\n  ..$ : int [1:5] 1 3 4 5 85\n  ..$ : int [1:5] 1 3 4 5 6\n  ..$ : int [1:5] 3 4 5 6 85\n  ..$ : int [1:6] 4 5 6 69 75 85\n  ..$ : int [1:5] 7 67 71 74 84\n  ..$ : int [1:8] 8 9 46 47 56 78 80 86\n  ..$ : int [1:7] 8 9 66 68 78 84 86\n  ..$ : int [1:9] 10 16 17 19 20 22 70 72 73\n  ..$ : int [1:4] 11 14 17 72\n  ..$ : int [1:6] 12 13 60 61 63 83\n  ..$ : int [1:5] 12 13 15 60 83\n  ..$ : int [1:4] 11 14 15 17\n  ..$ : int [1:5] 13 14 15 17 83\n  ..$ : int [1:6] 10 16 17 22 72 83\n  ..$ : int [1:8] 10 11 14 15 16 17 72 83\n  ..$ : int [1:6] 18 20 22 23 77 83\n  ..$ : int [1:7] 10 19 20 21 73 74 86\n  ..$ : int [1:8] 10 18 19 20 21 22 23 82\n  ..$ : int [1:6] 19 20 21 35 82 86\n  ..$ : int [1:6] 10 16 18 20 22 83\n  ..$ : int [1:8] 18 20 23 38 41 77 79 82\n  ..$ : int [1:6] 24 25 28 31 32 54\n  ..$ : int [1:6] 24 25 28 31 33 81\n  ..$ : int [1:5] 26 27 33 42 81\n  ..$ : int [1:4] 26 27 29 42\n  ..$ : int [1:6] 24 25 28 33 49 54\n  ..$ : int [1:4] 27 29 37 42\n  ..$ : int [1:2] 30 33\n  ..$ : int [1:9] 24 25 31 32 36 39 40 56 81\n  ..$ : int [1:9] 24 31 32 50 54 55 56 75 85\n  ..$ : int [1:6] 25 26 28 30 33 81\n  ..$ : int [1:4] 34 36 45 80\n  ..$ : int [1:7] 21 35 41 47 80 82 86\n  ..$ : int [1:7] 31 34 36 40 45 56 80\n  ..$ : int [1:5] 29 37 42 43 44\n  ..$ : int [1:5] 23 38 44 77 79\n  ..$ : int [1:6] 31 39 40 42 43 81\n  ..$ : int [1:7] 31 36 39 40 43 45 79\n  ..$ : int [1:7] 23 35 41 45 79 80 82\n  ..$ : int [1:8] 26 27 29 37 39 42 43 81\n  ..$ : int [1:7] 37 39 40 42 43 44 79\n  ..$ : int [1:5] 37 38 43 44 79\n  ..$ : int [1:7] 34 36 40 41 45 79 80\n  ..$ : int [1:4] 8 46 47 86\n  ..$ : int [1:6] 8 35 46 47 80 86\n  ..$ : int [1:6] 48 50 51 52 53 55\n  ..$ : int [1:5] 28 49 51 52 54\n  ..$ : int [1:6] 32 48 50 52 54 55\n  ..$ : int [1:4] 48 49 51 52\n  ..$ : int [1:6] 48 49 50 51 52 54\n  ..$ : int [1:4] 48 53 55 75\n  ..$ : int [1:7] 24 28 32 49 50 52 54\n  ..$ : int [1:6] 32 48 50 53 55 75\n  ..$ : int [1:8] 8 31 32 36 56 78 80 85\n  ..$ : int [1:7] 1 2 57 58 64 76 85\n  ..$ : int [1:6] 2 57 58 68 76 78\n  ..$ : int [1:5] 59 60 61 87 88\n  ..$ : int [1:5] 12 13 59 60 61\n  ..$ : int [1:8] 12 59 60 61 62 63 77 87\n  ..$ : int [1:4] 61 62 77 87\n  ..$ : int [1:5] 12 61 63 77 83\n  ..$ : int [1:3] 57 64 76\n  ..$ : int [1:2] 65 76\n  ..$ : int [1:6] 9 66 67 68 76 84\n  ..$ : int [1:5] 7 66 67 76 84\n  ..$ : int [1:6] 9 58 66 68 76 78\n  ..$ : int [1:4] 6 69 75 85\n  ..$ : int [1:4] 10 70 72 73\n  ..$ : int [1:4] 7 71 73 74\n  ..$ : int [1:6] 10 11 16 17 70 72\n  ..$ : int [1:6] 10 19 70 71 73 74\n  ..$ : int [1:7] 7 19 71 73 74 84 86\n  ..$ : int [1:7] 6 32 53 55 69 75 85\n  ..$ : int [1:8] 57 58 64 65 66 67 68 76\n  ..$ : int [1:8] 18 23 38 61 62 63 77 83\n  ..$ : int [1:8] 2 8 9 56 58 68 78 85\n  ..$ : int [1:8] 23 38 40 41 43 44 45 79\n  ..$ : int [1:9] 8 34 35 36 41 45 47 56 80\n  ..$ : int [1:7] 25 26 31 33 39 42 81\n  ..$ : int [1:6] 20 21 23 35 41 82\n  ..$ : int [1:10] 12 13 15 16 17 18 22 63 77 83\n  ..$ : int [1:7] 7 9 66 67 74 84 86\n  ..$ : int [1:12] 1 2 3 5 6 32 56 57 69 75 ...\n  ..$ : int [1:10] 8 9 19 21 35 46 47 74 84 86\n  ..$ : int [1:5] 59 61 62 87 88\n  ..$ : int [1:3] 59 87 88\n  ..$ : int [1:6] 1 2 3 4 57 85\n  ..$ : int [1:6] 1 2 57 58 78 85\n  ..$ : int [1:5] 1 3 4 5 85\n  ..$ : int [1:5] 1 3 4 5 6\n  ..$ : int [1:5] 3 4 5 6 85\n  ..$ : int [1:6] 4 5 6 69 75 85\n  ..$ : int [1:5] 7 67 71 74 84\n  ..$ : int [1:8] 8 9 46 47 56 78 80 86\n  ..$ : int [1:7] 8 9 66 68 78 84 86\n  ..$ : int [1:9] 10 16 17 19 20 22 70 72 73\n  ..$ : int [1:4] 11 14 17 72\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr [1:2] \"list\" \"nb\"\n $ wt          :List of 1496\n  ..$ : num [1:6] 0 0.0153 0.0352 0.0218 0.0284 ...\n  ..$ : num [1:6] 0.0153 0 0.016 0.0191 0.0233 ...\n  ..$ : num [1:5] 0.0352 0 0.0458 0.0412 0.0121\n  ..$ : num [1:5] 0.0218 0.0458 0 0.0464 0.0159\n  ..$ : num [1:5] 0.0412 0.0464 0 0.019 0.0135\n  ..$ : num [1:6] 0.0159 0.019 0 0.0271 0.0114 ...\n  ..$ : num [1:5] 0 0.0162 0.0154 0.0113 0.0184\n  ..$ : num [1:8] 0 0.0193 0.0268 0.0215 0.0108 ...\n  ..$ : num [1:7] 0.0193 0 0.0165 0.018 0.0147 ...\n  ..$ : num [1:9] 0 0.0274 0.0139 0.0146 0.0216 ...\n  ..$ : num [1:4] 0 0.0234 0.0236 0.0239\n  ..$ : num [1:6] 0 0.0288 0.0271 0.0251 0.0293 ...\n  ..$ : num [1:5] 0.0288 0 0.0449 0.0283 0.0175\n  ..$ : num [1:4] 0.02339 0 0.00972 0.0204\n  ..$ : num [1:5] 0.04488 0.00972 0 0.01052 0.01695\n  ..$ : num [1:6] 0.0274 0 0.0273 0.0233 0.019 ...\n  ..$ : num [1:8] 0.0139 0.0236 0.0204 0.0105 0.0273 ...\n  ..$ : num [1:6] 0 0.0148 0.0188 0.018 0.018 ...\n  ..$ : num [1:7] 0.0146 0 0.0253 0.0454 0.0225 ...\n  ..$ : num [1:8] 0.0216 0.0148 0.0253 0 0.0194 ...\n  ..$ : num [1:6] 0.0454 0.0194 0 0.0147 0.0227 ...\n  ..$ : num [1:6] 0.0242 0.0233 0.0188 0.0255 0 ...\n  ..$ : num [1:8] 0.018 0.0121 0 0.0142 0.0188 ...\n  ..$ : num [1:6] 0 0.0244 0.0185 0.0228 0.012 ...\n  ..$ : num [1:6] 0.0244 0 0.0172 0.019 0.0159 ...\n  ..$ : num [1:5] 0 0.022 0.0187 0.0199 0.0213\n  ..$ : num [1:4] 0.022 0 0.0253 0.0158\n  ..$ : num [1:6] 0.0185 0.0172 0 0.0205 0.0343 ...\n  ..$ : num [1:4] 0.0253 0 0.0166 0.0127\n  ..$ : num [1:2] 0 0.0237\n  ..$ : num [1:9] 0.0228 0.019 0 0.0119 0.0157 ...\n  ..$ : num [1:9] 0.012 0.0119 0 0.0164 0.014 ...\n  ..$ : num [1:6] 0.0159 0.0187 0.0205 0.0237 0 ...\n  ..$ : num [1:4] 0 0.0311 0.039 0.03\n  ..$ : num [1:7] 0.0147 0 0.022 0.0255 0.0218 ...\n  ..$ : num [1:7] 0.0157 0.0311 0 0.015 0.0189 ...\n  ..$ : num [1:5] 0.0166 0 0.0247 0.0149 0.014\n  ..$ : num [1:5] 0.0142 0 0.0205 0.0228 0.0177\n  ..$ : num [1:6] 0.0133 0 0.0237 0.0164 0.0266 ...\n  ..$ : num [1:7] 0.0162 0.015 0.0237 0 0.0153 ...\n  ..$ : num [1:7] 0.0188 0.022 0 0.0236 0.0188 ...\n  ..$ : num [1:8] 0.0199 0.0158 0.0127 0.0247 0.0164 ...\n  ..$ : num [1:7] 0.0149 0.0266 0.0153 0.0201 0 ...\n  ..$ : num [1:5] 0.014 0.0205 0.0316 0 0.0166\n  ..$ : num [1:7] 0.039 0.0189 0.0191 0.0236 0 ...\n  ..$ : num [1:4] 0.0268 0 0.039 0.0267\n  ..$ : num [1:6] 0.0215 0.0255 0.039 0 0.0192 ...\n  ..$ : num [1:6] 0 0.0207 0.0344 0.0214 0.0165 ...\n  ..$ : num [1:5] 0.0343 0 0.0231 0.0266 0.0208\n  ..$ : num [1:6] 0.0164 0.0207 0 0.0269 0.0227 ...\n  ..$ : num [1:4] 0.0344 0.0231 0 0.0306\n  ..$ : num [1:6] 0.0214 0.0266 0.0269 0.0306 0 ...\n  ..$ : num [1:4] 0.0165 0 0.0207 0.0122\n  ..$ : num [1:7] 0.0273 0.0177 0.014 0.0208 0.0227 ...\n  ..$ : num [1:6] 0.0114 0.016 0.0181 0.0207 0 ...\n  ..$ : num [1:8] 0.0108 0.011 0.0131 0.0204 0 ...\n  ..$ : num [1:7] 0.0284 0.016 0 0.0258 0.041 ...\n  ..$ : num [1:6] 0.0191 0.0258 0 0.0309 0.0153 ...\n  ..$ : num [1:5] 0 0.0169 0.0127 0.0162 0.0184\n  ..$ : num [1:5] 0.0271 0.0283 0.0169 0 0.0219\n  ..$ : num [1:8] 0.0251 0.0127 0.0219 0 0.024 ...\n  ..$ : num [1:4] 0.024 0 0.0184 0.0225\n  ..$ : num [1:5] 0.0293 0.0292 0 0.0152 0.0172\n  ..$ : num [1:3] 0.041 0 0.0184\n  ..$ : num [1:2] 0 0.0209\n  ..$ : num [1:6] 0.0165 0 0.0183 0.0344 0.016 ...\n  ..$ : num [1:5] 0.0162 0.0183 0 0.0121 0.0135\n  ..$ : num [1:6] 0.018 0.0309 0.0344 0 0.0154 ...\n  ..$ : num [1:4] 0.0271 0 0.0146 0.0156\n  ..$ : num [1:4] 0.0235 0 0.018 0.0274\n  ..$ : num [1:4] 0.0154 0 0.0158 0.0297\n  ..$ : num [1:6] 0.0178 0.0239 0.019 0.0166 0.018 ...\n  ..$ : num [1:6] 0.0162 0.0225 0.0274 0.0158 0 ...\n  ..$ : num [1:7] 0.0113 0.0175 0.0297 0.0151 0 ...\n  ..$ : num [1:7] 0.0114 0.0108 0.0122 0.0223 0.0146 ...\n  ..$ : num [1:8] 0.0165 0.0153 0.0184 0.0209 0.016 ...\n  ..$ : num [1:8] 0.018 0.0194 0.0228 0.0128 0.0184 ...\n  ..$ : num [1:8] 0.0233 0.0261 0.0147 0.012 0.0164 ...\n  ..$ : num [1:8] 0.013 0.0177 0.0197 0.0188 0.0155 ...\n  ..$ : num [1:9] 0.0152 0.03 0.0218 0.0175 0.0163 ...\n  ..$ : num [1:7] 0.029 0.0213 0.0122 0.0195 0.018 ...\n  ..$ : num [1:6] 0.0171 0.0227 0.0215 0.0197 0.0168 ...\n  ..$ : num [1:10] 0.0207 0.0175 0.017 0.015 0.0159 ...\n  ..$ : num [1:7] 0.0184 0.0302 0.0197 0.0135 0.0134 ...\n  ..$ : num [1:12] 0.0103 0.0159 0.0121 0.0135 0.0108 ...\n  ..$ : num [1:10] 0.0134 0.0161 0.0146 0.0184 0.0142 ...\n  ..$ : num [1:5] 0.0162 0.0209 0.0225 0 0.0233\n  ..$ : num [1:3] 0.0184 0.0233 0\n  ..$ : num [1:6] 0 0.0153 0.0352 0.0218 0.0284 ...\n  ..$ : num [1:6] 0.0153 0 0.016 0.0191 0.0233 ...\n  ..$ : num [1:5] 0.0352 0 0.0458 0.0412 0.0121\n  ..$ : num [1:5] 0.0218 0.0458 0 0.0464 0.0159\n  ..$ : num [1:5] 0.0412 0.0464 0 0.019 0.0135\n  ..$ : num [1:6] 0.0159 0.019 0 0.0271 0.0114 ...\n  ..$ : num [1:5] 0 0.0162 0.0154 0.0113 0.0184\n  ..$ : num [1:8] 0 0.0193 0.0268 0.0215 0.0108 ...\n  ..$ : num [1:7] 0.0193 0 0.0165 0.018 0.0147 ...\n  ..$ : num [1:9] 0 0.0274 0.0139 0.0146 0.0216 ...\n  ..$ : num [1:4] 0 0.0234 0.0236 0.0239\n  .. [list output truncated]\n $ gi_star     : num [1:1496] 0.398 -0.237 1.053 0.966 1.048 ...\n $ e_gi        : num [1:1496] 0.0115 0.0109 0.0126 0.0117 0.012 ...\n $ var_gi      : num [1:1496] 2.69e-06 2.64e-06 3.33e-06 3.24e-06 3.23e-06 ...\n $ p_value     : num [1:1496] 0.3821 0.00199 0.50708 0.92031 0.88485 ...\n $ p_sim       : num [1:1496] 0.702 0.998 0.612 0.357 0.376 ...\n $ p_folded_sim: num [1:1496] 0.608 0.892 0.528 0.308 0.352 0.92 0.008 0.396 0.036 0.08 ...\n $ skewness    : num [1:1496] 0.304 0.446 0.264 0.154 0.176 0.46 0.004 0.198 0.018 0.04 ...\n $ kurtosis    : num [1:1496] 0.893 0.82 0.929 1.185 0.874 ...\n - attr(*, \"groups\")= tibble [17 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ Year : num [1:17] 2005 2006 2007 2008 2009 ...\n  ..$ .rows: list<int> [1:17] \n  .. ..$ : int [1:88] 1 2 3 4 5 6 7 8 9 10 ...\n  .. ..$ : int [1:88] 89 90 91 92 93 94 95 96 97 98 ...\n  .. ..$ : int [1:88] 177 178 179 180 181 182 183 184 185 186 ...\n  .. ..$ : int [1:88] 265 266 267 268 269 270 271 272 273 274 ...\n  .. ..$ : int [1:88] 353 354 355 356 357 358 359 360 361 362 ...\n  .. ..$ : int [1:88] 441 442 443 444 445 446 447 448 449 450 ...\n  .. ..$ : int [1:88] 529 530 531 532 533 534 535 536 537 538 ...\n  .. ..$ : int [1:88] 617 618 619 620 621 622 623 624 625 626 ...\n  .. ..$ : int [1:88] 705 706 707 708 709 710 711 712 713 714 ...\n  .. ..$ : int [1:88] 793 794 795 796 797 798 799 800 801 802 ...\n  .. ..$ : int [1:88] 881 882 883 884 885 886 887 888 889 890 ...\n  .. ..$ : int [1:88] 969 970 971 972 973 974 975 976 977 978 ...\n  .. ..$ : int [1:88] 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 ...\n  .. ..$ : int [1:88] 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 ...\n  .. ..$ : int [1:88] 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 ...\n  .. ..$ : int [1:88] 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 ...\n  .. ..$ : int [1:88] 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 ...\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n\n\nPrint the gi_stars df\n\n#kable(head(gi_stars,5))\ngi_stars %>% \n  arrange(County) %>% \n  head(5) %>% \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear\nCounty\nGDPPC\nnb\nwt\ngi_star\ne_gi\nvar_gi\np_value\np_sim\np_folded_sim\nskewness\nkurtosis\n\n\n\n\n2005\nAnhua\n4411\n8, 31, 32, 36, 56, 78, 80, 85\n0.01076895, 0.01100041, 0.01312949, 0.02041572, 0.00000000, 0.01199886, 0.01269364, 0.01519702\n-1.1495103\n0.0104408\n2.8e-06\n-0.6061786\n0.5443961\n0.632\n0.316\n0.7466849\n\n\n2006\nAnhua\n5048\n8, 31, 32, 36, 56, 78, 80, 85\n0.01076895, 0.01100041, 0.01312949, 0.02041572, 0.00000000, 0.01199886, 0.01269364, 0.01519702\n-1.2062412\n0.0103340\n2.4e-06\n-0.6666373\n0.5050038\n0.532\n0.266\n0.6857186\n\n\n2007\nAnhua\n6130\n8, 31, 32, 36, 56, 78, 80, 85\n0.01076895, 0.01100041, 0.01312949, 0.02041572, 0.00000000, 0.01199886, 0.01269364, 0.01519702\n-1.0623115\n0.0104177\n2.3e-06\n-0.6082854\n0.5429982\n0.580\n0.290\n0.7884648\n\n\n2008\nAnhua\n7230\n8, 31, 32, 36, 56, 78, 80, 85\n0.01076895, 0.01100041, 0.01312949, 0.02041572, 0.00000000, 0.01199886, 0.01269364, 0.01519702\n-0.9631087\n0.0104526\n3.0e-06\n-0.5122872\n0.6084500\n0.696\n0.348\n0.6719202\n\n\n2009\nAnhua\n8528\n8, 31, 32, 36, 56, 78, 80, 85\n0.01076895, 0.01100041, 0.01312949, 0.02041572, 0.00000000, 0.01199886, 0.01269364, 0.01519702\n-0.7063891\n0.0105453\n4.2e-06\n-0.3396736\n0.7341023\n0.848\n0.424\n0.8584200\n\n\n\n\n\n\n\n\n\nWith these yearly Gi* measures for each location, we can then evaluate each location for a trend using the Mann-Kendall test. The code chunk below uses Changsha county. Test location by location.\n\ncbg <- gi_stars %>% \n  ungroup() %>%   # we have grouped it earlier by Year\n  filter(County == 'Changsha') %>% \n  select(County, Year, gi_star)\n\ncbg\n\n# A tibble: 17 × 3\n   County    Year gi_star\n   <chr>    <dbl>   <dbl>\n 1 Changsha  2005    5.03\n 2 Changsha  2006    5.17\n 3 Changsha  2007    5.30\n 4 Changsha  2008    5.60\n 5 Changsha  2009    6.28\n 6 Changsha  2010    5.94\n 7 Changsha  2011    5.75\n 8 Changsha  2012    5.69\n 9 Changsha  2013    5.71\n10 Changsha  2014    5.76\n11 Changsha  2015    6.10\n12 Changsha  2016    6.00\n13 Changsha  2017    6.20\n14 Changsha  2018    6.04\n15 Changsha  2019    6.58\n16 Changsha  2020    5.77\n17 Changsha  2021    5.75\n\n\nPlotting using ggplot2() functions\n\nggplot(data = cbg,\n       aes(x= Year,\n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\nUse ggploty() from plotly library to make the chart interactive.\n\nggplotly(ggplot(data = cbg,\n       aes(x= Year,\n           y = gi_star)) +\n  geom_line() +\n  theme_light())\n\n\n\n\n\nPerforming the Mann-Kendall test.\nThe ‘sl’ column is the p_value. ‘tau’ column is the trend\n\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 0.485 0.00742    66  136.  589.\n\n\nThere is a slight upward but insignificant trend (> 0.05)\n\n\nTo replicate this code for each location (to check for statistical sig for trend in all location), use the group_by function. The number of rows is back to 88.\n\nehsa <- gi_stars %>%\n  group_by(County) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n\nPrint the output in an interactive table\n\ndatatable(ehsa)\n\n\n\n\n\n\n\n\n\n\n\n\n\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)\n\nkable(emerging)\n\n\n\n\nCounty\ntau\nsl\nS\nD\nvarS\n\n\n\n\nShuangfeng\n0.8676472\n1.4e-06\n118\n136\n589.3333\n\n\nXiangtan\n0.8676472\n1.4e-06\n118\n136\n589.3333\n\n\nXiangxiang\n0.8676472\n1.4e-06\n118\n136\n589.3333\n\n\nChengbu\n-0.8235295\n4.8e-06\n-112\n136\n589.3333\n\n\nDongan\n-0.8235295\n4.8e-06\n-112\n136\n589.3333\n\n\n\n\n\n\n\n\n\n\n\nWe will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It requires\n\na spacetime object, x (i.e. GDPPC_st)\nthe quoted name of the variable of interest, .var (i.e. GDPPC)\nk argument is used to specify the number of time lags which is set to 1 by default.\nnsim map numbers of simulation to be performed.\n\n\nehsa <- emerging_hotspot_analysis(\n  x = GDPPC_st, # timeseries data stored in this spacetime cube\n  .var='GDPPC',  # spatial element found inside this column\n  k=1,   # timelag\n  nsim=99\n)\n\nPrint the output\n\ndatatable(ehsa)\n\n\n\n\n\n\n\n\n\nplot barchart to check distribution of EHSA classes.\n\nggplotly(ggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar())\n\n\n\n\n\nSporadic cold spots has the highest numbers of county\n\n\n\nBecause ehsa df does not have geometry data, we can join both hunan geospatial df with ehsa to make a sf object.\n\nhunan_ehsa <-left_join(hunan, ehsa,\n            by=c('County' = 'location'))\n\nclass(hunan_ehsa)\n\n[1] \"sf\"         \"data.frame\"\n\n\nUse tmap functions to plot choropleth map We can use the p-value inside to plot only the significant emerging hot/cold spots, by filtering rows with p_values < 0.05\nTake note: no pattern (yellow) doesnt mean not-sig (grey)\n\nehsa_sig <-  hunan_ehsa %>% \n  filter(p_value < 0.05)\n\ntmap_mode('plot')\n#base\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  #sif\n  tm_shape(ehsa_sig) +\n  tm_fill('classification') +\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex3/data/geospatial/MPSZ-2019.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3.html",
    "href": "In-class_Ex3/In-class_Ex3.html",
    "title": "In-class Exercise 3:",
    "section": "",
    "text": "#pacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#overview",
    "href": "In-class_Ex3/In-class_Ex3_2.html#overview",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.1 Overview",
    "text": "16.1 Overview\nSpatial Interaction Models (SIMs) are mathematical models for estimating flows between spatial entities developed by Alan Wilson in the late 1960s and early 1970, with considerable uptake and refinement for transport modelling since then Boyce and Williams (2015).\nThere are four main types of traditional SIMs (Wilson 1971):\n\nUnconstrained\nProduction-constrained\nAttraction-constrained\nDoubly-constrained\n\nOrdinary least square (OLS), log-normal, Poisson and negative binomial (NB) regression methods have been used extensively to calibrate OD flow models by processing flow data as different types of dependent variables. In this chapter, wewill gain hands-on experiences on using appropriate R packages to calibrate SIM by using there four regression methods."
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#the-case-study-and-data",
    "href": "In-class_Ex3/In-class_Ex3_2.html#the-case-study-and-data",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.2 The Case Study and Data",
    "text": "16.2 The Case Study and Data\nIn this exercise, we are going to calibrate SIM to determine factors affecting the public bus passenger flows during the morning peak in Singapore."
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#getting-started",
    "href": "In-class_Ex3/In-class_Ex3_2.html#getting-started",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.3 Getting Started",
    "text": "16.3 Getting Started\nFor the purpose of this exercise, four R packages will be used. They are:\n\nsf for importing, integrating, processing and transforming geospatial data.\nsp package , although an older package, is more efficient for computation of large data.\ntidyverse for importing, integrating, wrangling and visualising data.\ntmap for creating thematic maps\nggpubr for some easy-to-use functions (like ggarrange())for creating and customizing ‘ggplot2’- based publication ready plots.\nperformance is part of the easystats package for computing measures to assess model quality, which are not directly provided by R’s ‘base’ or ‘stats’ packages. The primary goal of the performance package is to provide utilities for computing indices of model quality and goodness of fit. These include measures like r-squared (R2), root mean squared error (RMSE)\nreshape2 is an old tool from base R. It handles matrix well for our distance matrix, like pivoting function like melt(). Tidyverse does not handle matrix very well.\n\n\npacman::p_load(tmap, sf, sp, DT,\n               performance, reshape2,\n               ggpubr, tidyverse, rcompanion)"
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#the-data",
    "href": "In-class_Ex3/In-class_Ex3_2.html#the-data",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.4 The Data",
    "text": "16.4 The Data\nThis exercise is a continuation of Chapter 15: Processing and Visualising Flow Data and the following data will be used:\n\nod_data.rds, weekday morning peak passenger flows at planning subzone level.\nmpsz.rds, URA Master Plan 2019 Planning Subzone boundary in simple feature tibble data frame format.\n\nBeside these two data sets, an additional attribute data file called pop.csv will be provided.\nNext, we will proceed to (1) compute the distance Matrix, (2) prepare flow data, (3) prepare origin attribute and (4) prepare the destination attribute."
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#computing-distance-matrix",
    "href": "In-class_Ex3/In-class_Ex3_2.html#computing-distance-matrix",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.5 Computing Distance Matrix",
    "text": "16.5 Computing Distance Matrix\nIn spatial interaction, a distance matrix is a table that shows the distance between pairs of locations. For example, in the table below we can see an Euclidean distance of 3926.0025 between MESZ01 and RVSZ05, of 3939.1079 between MESZ01 and SRSZ01, and so on. By definition, an location’s distance from itself, which is shown in the main diagonal of the table, is 0.\n\nIn this section, you will learn how to compute a distance matrix by using URA Master Plan 2019 Planning Subzone boundary in which you saved as an rds file called mpsz.\nFirst, let us import mpsz.rds into R environemnt by using the code chunk below.\n\nmpsz <- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\In-class_Ex3\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\nNotice that it is a sf tibble dataframe object class.\n\n16.5.1 Converting from sf data.table to SpatialPolygonsDataFrame\nThere are at least two ways to compute the required distance matrix. One is based on sf and the other is based on sp. Past experience shown that computing distance matrix by using sf function took relatively longer time that sp method especially the data set is large. In view of this, sp method is used in the code chunks below.\nFirst as.Spatial() will be used to convert mpsz from sf tibble data frame to SpatialPolygonsDataFrame of sp object as shown in the code chunk below.\nIt has become a large spatialpolygendataframe (older). It contains a data table inside, but no geometry column (contain in another table). Wheras in new sf, everything is in a single table.\n\nmpsz_sp <- as(mpsz, \"Spatial\")\n#mpsz_sp <- mpsz %>% \n  #as.Spatial()\nmpsz_sp\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n\n\nExploration: How to access a SpatialPolygonDataFrame object of the older sp package.\n\nmpsz_sp['SUBZONE_N'][[1]]\nmpsz_sp@data  # class dataframe\nmpsz_sp@polygons # class: list\nmpsz_sp@polygons[[1]]  # access the first polygon / subzone\nmpsz_sp@polygons[[1]]@Polygons # access the slot in the polygon object that contains information about individual Polygons within the overall geometry\nmpsz_sp@polygons[[1]]@Polygons[[1]] # same as above, enter another layer\nmpsz_sp@polygons[[1]]@Polygons[[1]]@coords #get the coordinates of the first polygon / subzone\nmpsz_sp@polygons[[332]]@Polygons[[1]]@coords #total of 333 subzones\n\n\n\n16.5.2 Computing the distance matrix\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the planning subzones.\nspDists(x, y = x, longlat = FALSE, segments = FALSE, diagonal = FALSE)\nspDists returns a full matrix of distances in the metric of the points if longlat=FALSE, or in kilometers if longlat=TRUE; it uses spDistsN1 in case points are two-dimensional. In case of spDists(x,x), it will compute all n x n distances, not the sufficient n x (n-1).\nArguments\nx: A matrix of n-D points with row denoting points, first column x/longitude, second column y/latitude, or a Spatial object that has a coordinates method\ny: A matrix of n-D points with row denoting points, first column x/longitude, second column y/latitude, or a Spatial object that has a coordinates method\nlonglat: logical; if FALSE (default), Euclidean distance, if TRUE Great Circle (WGS84 ellipsoid) distance; if x is a Spatial object, longlat should not be specified but will be derived from is.projected(x)\nsegments: logical; if TRUE, y must be missing; the vector of distances between consecutive points in x is returned.\ndiagonal: logical; if TRUE, y must be given and have the same number of points as x; the vector with distances between points with identical index is returned.\nThe diagonals of the ouput (332 by 332) are all 0. Distance with itself. The unit of distance is if ‘m’ (euclidean?) and km if WSG84?\n\ndist <- spDists(mpsz_sp, \n                longlat = FALSE) # already projected in EPSG:3414\nhead(dist, n=c(10, 10))\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,]     0.000  3926.0025  3939.108 20252.964  2989.9839  1431.330 19211.836\n [2,]  3926.003     0.0000   305.737 16513.865   951.8314  5254.066 16242.523\n [3,]  3939.108   305.7370     0.000 16412.062  1045.9088  5299.849 16026.146\n [4,] 20252.964 16513.8648 16412.062     0.000 17450.3044 21665.795  7229.017\n [5,]  2989.984   951.8314  1045.909 17450.304     0.0000  4303.232 17020.916\n [6,]  1431.330  5254.0664  5299.849 21665.795  4303.2323     0.000 20617.082\n [7,] 19211.836 16242.5230 16026.146  7229.017 17020.9161 20617.082     0.000\n [8,] 14960.942 12749.4101 12477.871 11284.279 13336.0421 16281.453  5606.082\n [9,]  7515.256  7934.8082  7649.776 18427.503  7801.6163  8403.896 14810.930\n[10,]  6391.342  4975.0021  4669.295 15469.566  5226.8731  7707.091 13111.391\n           [,8]      [,9]     [,10]\n [1,] 14960.942  7515.256  6391.342\n [2,] 12749.410  7934.808  4975.002\n [3,] 12477.871  7649.776  4669.295\n [4,] 11284.279 18427.503 15469.566\n [5,] 13336.042  7801.616  5226.873\n [6,] 16281.453  8403.896  7707.091\n [7,]  5606.082 14810.930 13111.391\n [8,]     0.000  9472.024  8575.490\n [9,]  9472.024     0.000  3780.800\n[10,]  8575.490  3780.800     0.000\n\n\nNotice that the output dist is a matrix object class of R. Also notice that the column heanders and row headers are not labeled with the planning subzone codes.\n\n\n16.5.3 Labelling column and row heanders of a distance matrix\nFirst, we will create a list sorted according to the the distance matrix by planning sub-zone code.\n\nsz_names <- mpsz$SUBZONE_C\n\nNext we will attach SUBZONE_C to row and column for distance matrix matching ahead\n\ncolnames(dist) <- paste0(sz_names)\nrownames(dist) <- paste0(sz_names)\ndist[1:5,1:5]\n\n          MESZ01     RVSZ05    SRSZ01   WISZ01     MUSZ02\nMESZ01     0.000  3926.0025  3939.108 20252.96  2989.9839\nRVSZ05  3926.003     0.0000   305.737 16513.86   951.8314\nSRSZ01  3939.108   305.7370     0.000 16412.06  1045.9088\nWISZ01 20252.964 16513.8648 16412.062     0.00 17450.3044\nMUSZ02  2989.984   951.8314  1045.909 17450.30     0.0000\n\n\n\n\n16.5.4 Pivoting distance value by SUBZONE_C\nNext, we will pivot the distance matrix into a long table by using the row and column subzone codes as show in the code chunk below.\nWe will use the melt() function of the reshape2 package to convert wide-format data to long-format data. This function will convert wide-format data to a data frame with columns for each combination of row and column indices and their corresponding values.\nTo do the opposite, used cast().\n\nwidelong\n\n\n\nmatrix(1:6, nrow = 2, ncol = 3)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\n\n\n\nreshape2::melt(matrix(1:6, nrow = 2, ncol = 3)) %>% knitr::kable()\n\n\n\n\nVar1\nVar2\nvalue\n\n\n\n\n1\n1\n1\n\n\n2\n1\n2\n\n\n1\n2\n3\n\n\n2\n2\n4\n\n\n1\n3\n5\n\n\n2\n3\n6\n\n\n\n\n\n\n\n\nThree new columns generated, (1) ‘var1’, (2) ‘var2’ and (3) ‘value’ containing the distance for the corresponding var1-var2 pair; thus rename to ‘dist’.\nThere are 110,224 rows in distPair due to 332P2 + 332 = 332*331 + 332. Number of possible permutations with replacement.\n\ndistPair <- melt(dist) %>%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  MESZ01 MESZ01     0.000\n2  RVSZ05 MESZ01  3926.003\n3  SRSZ01 MESZ01  3939.108\n4  WISZ01 MESZ01 20252.964\n5  MUSZ02 MESZ01  2989.984\n6  MPSZ05 MESZ01  1431.330\n7  WISZ03 MESZ01 19211.836\n8  WISZ02 MESZ01 14960.942\n9  SISZ02 MESZ01  7515.256\n10 SISZ01 MESZ01  6391.342\n\n\nNotice that the within zone distance is 0.\n\n\n16.5.5 Updating intra-zonal distances\nIn this section, we are going to append a constant value to replace the intra-zonal distance of 0.\nFirst, we will select and find out the minimum value of the distance by using summary().\n\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n\n      Var1             Var2             dist        \n MESZ01 :   331   MESZ01 :   331   Min.   :  173.8  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.: 7149.5  \n SRSZ01 :   331   SRSZ01 :   331   Median :11890.0  \n WISZ01 :   331   WISZ01 :   331   Mean   :12229.4  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:16401.7  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\nAfter removing distance = 0 (intra), the minimum inter-zonal distance is 173.8m.\nNext, a constant distance value of 50m (estimate based on 173.8m) is added into intra-zones distance. The diagonals of dist matrix (if still a matrix) would have been 50m.\n\ndistPair$dist <- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\nThe code chunk below will be used to check the result data.frame.\n\ndistPair %>%\n  summary()\n\n      Var1             Var2             dist      \n MESZ01 :   332   MESZ01 :   332   Min.   :   50  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 7097  \n SRSZ01 :   332   SRSZ01 :   332   Median :11864  \n WISZ01 :   332   WISZ01 :   332   Mean   :12193  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.:16388  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :49894  \n (Other):108232   (Other):108232                  \n\n\nThe code chunk below is used to rename the origin and destination fields.\n\ndistPair <- distPair %>%\n  rename(orig = Var1,\n         dest = Var2)\n\nLastly, the code chunk below is used to save the dataframe for future use.\n\nwrite_rds(distPair, \"data/rds/distPair.rds\")"
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#preparing-flow-data",
    "href": "In-class_Ex3/In-class_Ex3_2.html#preparing-flow-data",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.6 Preparing flow data",
    "text": "16.6 Preparing flow data\nThe code chunk below is used import od_data save in Chapter 15 into R environment.\nThere are 310 unique origin subzone values and 311 unique destin subzone values.\n\nod_data <- read_rds(\"data/rds/od_data.rds\")\n\nNext, we will compute the total passenger trip between and within planning subzones by using the code chunk below. The output is all flow_data.\n\nflow_data <- od_data %>%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %>% \n  summarize(TRIPS = sum(MORNING_PEAK)) \n\nhead(flow_data, 10)\n\n# A tibble: 10 × 3\n# Groups:   ORIGIN_SZ [1]\n   ORIGIN_SZ DESTIN_SZ TRIPS\n   <chr>     <chr>     <dbl>\n 1 AMSZ01    AMSZ01     2575\n 2 AMSZ01    AMSZ02    11742\n 3 AMSZ01    AMSZ03    14886\n 4 AMSZ01    AMSZ04     3237\n 5 AMSZ01    AMSZ05     9349\n 6 AMSZ01    AMSZ06     2231\n 7 AMSZ01    AMSZ07     1714\n 8 AMSZ01    AMSZ08     2624\n 9 AMSZ01    AMSZ09     2371\n10 AMSZ01    AMSZ10      183\n\n\n\n16.6.1 Separating intra-flow from passenger volume df\nCode chunk below is used to add three new fields in flow_data dataframe.\nTwo new fields called ‘FlowNoIntra’ and ‘offset’ are created.\n\nflow_data$FlowNoIntra <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\nPrint\n\nhead(flow_data,3) %>% knitr::kable()\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nTRIPS\nFlowNoIntra\noffset\n\n\n\n\nAMSZ01\nAMSZ01\n2575\n0\n1e-06\n\n\nAMSZ01\nAMSZ02\n11742\n11742\n1e+00\n\n\nAMSZ01\nAMSZ03\n14886\n14886\n1e+00\n\n\n\n\nglimpse(flow_data)\n\nRows: 20,987\nColumns: 5\nGroups: ORIGIN_SZ [310]\n$ ORIGIN_SZ   <chr> \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\"…\n$ DESTIN_SZ   <chr> \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06\"…\n$ TRIPS       <dbl> 2575, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 18…\n$ FlowNoIntra <dbl> 0, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 183, …\n$ offset      <dbl> 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e…\n\n\n\n\n16.6.2 Combining passenger volume data with distance value\nBefore we can join flow_data and distPair, we need to convert data value type of ORIGIN_SZ and DESTIN_SZ fields of flow_data dataframe into factor data type.\n\nflow_data$ORIGIN_SZ <- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ <- as.factor(flow_data$DESTIN_SZ)\n\nNow, left_join() of dplyr will be used to flow_data dataframe and distPair dataframe. The output is called flow_data1.\nNotes:\ndistPair is a df containing distances for all corresponding subzone pairs (including self, default to 50m). ‘var1’, ‘var2’, ‘dist’\nflow_data is a df containing ‘origin_sz’, ‘destin_sb’ and ‘morning_peak’\nWe will now perform a left join with two sets join keys.\nThe output contains distance and total morning peak trips for each possible pairs of subzones (self included).\nBefore left join:\nflow_data has 20,987 rows.\ndistPair has 110,224 rows (is the all possible pairs out of 332 subzones, order matters and with replacement.)\nAfter join:\nflow_data1 has 20,987 rows.\nflow_data has no distance. flow_data1 has distance data.\n\nflow_data1 <- flow_data %>%\n  left_join (distPair,\n             by = c(\"ORIGIN_SZ\" = \"orig\",\n                    \"DESTIN_SZ\" = \"dest\"))\n\nglimpse(flow_data1)\n\nRows: 20,987\nColumns: 6\nGroups: ORIGIN_SZ [310]\n$ ORIGIN_SZ   <fct> AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AMSZ01, AM…\n$ DESTIN_SZ   <fct> AMSZ01, AMSZ02, AMSZ03, AMSZ04, AMSZ05, AMSZ06, AMSZ07, AM…\n$ TRIPS       <dbl> 2575, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 18…\n$ FlowNoIntra <dbl> 0, 11742, 14886, 3237, 9349, 2231, 1714, 2624, 2371, 183, …\n$ offset      <dbl> 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e…\n$ dist        <dbl> 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805.297…\n\n\nPrint out\n\nhead(flow_data1) %>% knitr::kable()\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nTRIPS\nFlowNoIntra\noffset\ndist\n\n\n\n\nAMSZ01\nAMSZ01\n2575\n0\n1e-06\n50.0000\n\n\nAMSZ01\nAMSZ02\n11742\n11742\n1e+00\n810.4491\n\n\nAMSZ01\nAMSZ03\n14886\n14886\n1e+00\n1360.9294\n\n\nAMSZ01\nAMSZ04\n3237\n3237\n1e+00\n840.4432\n\n\nAMSZ01\nAMSZ05\n9349\n9349\n1e+00\n1076.7916\n\n\nAMSZ01\nAMSZ06\n2231\n2231\n1e+00\n805.2979"
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#preparing-origin-and-destination-attributes",
    "href": "In-class_Ex3/In-class_Ex3_2.html#preparing-origin-and-destination-attributes",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.7 Preparing Origin and Destination Attributes",
    "text": "16.7 Preparing Origin and Destination Attributes\n\n16.7.1 Importing population data\n‘pop.csv’ is a processed version of ‘respopagesextod2011to2020.csv’ .\nThe original dataset used here is the Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2022 in csv format . This is an aspatial data file. It can be downloaded at Department of Statistics, Singapore, the specific link can be found here. Although it does not contain any coordinates values, but it’s ‘PA’ and ‘SZ’ fields can be used as unique identifiers to geocode to ‘PLAN_AREA_N’ and ‘SUBZONE_N’ of the MP14_SUBZONE_WEB_PL shapefile respectively.\n\npop <- read_csv(\"data/aspatial/pop.csv\")\nhead(pop)\n\n# A tibble: 6 × 5\n  PA         SZ                     AGE7_12 AGE13_24 AGE25_64\n  <chr>      <chr>                    <dbl>    <dbl>    <dbl>\n1 ANG MO KIO ANG MO KIO TOWN CENTRE     310      710     2780\n2 ANG MO KIO CHENG SAN                 1140     2770    15700\n3 ANG MO KIO CHONG BOON                1010     2650    14240\n4 ANG MO KIO KEBUN BAHRU               1050     2390    12460\n5 ANG MO KIO SEMBAWANG HILLS            420     1120     3620\n6 ANG MO KIO SHANGRI-LA                 810     1920     9650\n\n\nWhy is the data prepared in this way?\nAge group 7-12: Feeder bus to send kids to school\nAge group 13-24: Feeder bus for secondary / JC / ITE/ poly students to school.\nInteresting observation: When we examine the flow map in Hands-on_Ex3, the top few flow movement by bus have their destinations at Republic Poly in woodlands, AMK central ITE along AMK ave 5 for instance.\n\n\n16.7.2 Geospatial data wrangling\nPOP + MPSZ\nLet us append the zone codes in mpsz df to the pop’s population data by age groups. We do not really need to geometry data.\npop has 332 rows\nmpsz has 332 rows\nAfter join: 984,656 rows\nColumn selected are ‘PA’, ‘SZ’, ‘AGE7-12’, ‘AGE13-24’, ‘AGE25_64’ from pop df and ‘SUBZONE_C’ from mpsz df.\n\npop <- pop %>%\n  left_join(mpsz,\n            by = c(\"PA\" = \"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %>%\n  select(1:6) %>%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)\n\nhead(pop)\n\n# A tibble: 6 × 6\n  PA         SZ_NAME                AGE7_12 AGE13_24 AGE25_64 SZ    \n  <chr>      <chr>                    <dbl>    <dbl>    <dbl> <chr> \n1 ANG MO KIO ANG MO KIO TOWN CENTRE     310      710     2780 AMSZ01\n2 ANG MO KIO CHENG SAN                 1140     2770    15700 AMSZ02\n3 ANG MO KIO CHONG BOON                1010     2650    14240 AMSZ03\n4 ANG MO KIO KEBUN BAHRU               1050     2390    12460 AMSZ06\n5 ANG MO KIO SEMBAWANG HILLS            420     1120     3620 AMSZ07\n6 ANG MO KIO SHANGRI-LA                 810     1920     9650 AMSZ05\n\n\n\n\n16.7.3 Preparing origin attribute\nFLOW_DATA1 + POP\nWe would like to append the origin’s population data from pop to flow_data1 that contains(1) origin -destination pair, (2) actual flows and (3) distance information.\n\nflow_data1 <- flow_data1 %>%\n  left_join(pop,\n            by = c(ORIGIN_SZ = \"SZ\")) %>%\n  rename(ORIGIN_AGE7_12 = AGE7_12,\n         ORIGIN_AGE13_24 = AGE13_24,\n         ORIGIN_AGE25_64 = AGE25_64) %>%\n  select(-c(PA, SZ_NAME))\n\nMorning peak: the push factor should be the population from origin population distribution.\nEvening peak : the pull factor would be the population too.\nLimits of our model: transfer trips not accounted for.\n\n\n16.7.4 Preparing destination attribute\nSimilarly, we want to get the destination’s population data by destination from pop. Once again, perform a left join.\n\nflow_data1 <- flow_data1 %>%\n  left_join(pop,\n            by = c(DESTIN_SZ = \"SZ\")) %>%\n  rename(DESTIN_AGE7_12 = AGE7_12,\n         DESTIN_AGE13_24 = AGE13_24,\n         DESTIN_AGE25_64 = AGE25_64) %>%\n  select(-c(PA, SZ_NAME))\n\nhead(flow_data1) %>% knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nTRIPS\nFlowNoIntra\noffset\ndist\nORIGIN_AGE7_12\nORIGIN_AGE13_24\nORIGIN_AGE25_64\nDESTIN_AGE7_12\nDESTIN_AGE13_24\nDESTIN_AGE25_64\n\n\n\n\nAMSZ01\nAMSZ01\n2575\n0\n1e-06\n50.0000\n310\n710\n2780\n310\n710\n2780\n\n\nAMSZ01\nAMSZ02\n11742\n11742\n1e+00\n810.4491\n310\n710\n2780\n1140\n2770\n15700\n\n\nAMSZ01\nAMSZ03\n14886\n14886\n1e+00\n1360.9294\n310\n710\n2780\n1010\n2650\n14240\n\n\nAMSZ01\nAMSZ04\n3237\n3237\n1e+00\n840.4432\n310\n710\n2780\n980\n2000\n11320\n\n\nAMSZ01\nAMSZ05\n9349\n9349\n1e+00\n1076.7916\n310\n710\n2780\n810\n1920\n9650\n\n\nAMSZ01\nAMSZ06\n2231\n2231\n1e+00\n805.2979\n310\n710\n2780\n1050\n2390\n12460\n\n\n\n\n\nWe will called the output data file SIM_data. it is in rds data file format.\n\nwrite_rds(flow_data1, \"data/rds/SIM_data\")"
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#calibrating-spatial-interaction-models",
    "href": "In-class_Ex3/In-class_Ex3_2.html#calibrating-spatial-interaction-models",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "16.8 Calibrating Spatial Interaction Models",
    "text": "16.8 Calibrating Spatial Interaction Models\nIn this section, we will learn how to calibrate Spatial Interaction Models by using Poisson Regression method.\nIn hands-on3, we visualised the actual flow data without any predictors variables. Now, in flow_data1 contains actual flow data (Y var), distance data, origin propulsiveness variables and destination attractiveness variables. Now we will try to calibrate the model using the 4 Spatial interaction models type to get the best estimates of mu, alpha and beta.\nCalibration is the process of adjusting parameters (of origin and destin related variables) in the model to try and get the estimates to agree with the observed data (actual dependent var) as much as possible. The goodness-of-fit statistics (like R-squared) can be used to indicate when the optimum solution is found. ‘What-if’ scenarios can be studied using these calibrated models.\nWhy not use the usual Linear Regression model (Ordinary least square (OLS)) method?\n\n\n\n\n\n\nOLS is commonly used for modeling continuous outcomes; target variable can be negative or positive. But it does not make sense to have negative ‘TRIPS’ in our context.\nIt assumes that the dependent variable is normally distributed.\nThe residuals (predicted - actual) are expected to be normally distributed around the mean.\nThe goal is to minimize the sum of squared differences between observed and predicted values.\n\nWhy Poisson regression?\n\ntarget variable is count-based\na type of generalised linear model (GLM) used to count data.\nresiduals may follow a asymmetric distribution around the mean (meaning outcomes on either sides of the mean are not EQUALLY likely.)\nIt means that the probability of commuting is not described by a continuous (normal) probability distribution, but a discrete probability distribution such as the Poisson distribution\n\n\n16.8.1 Importing the modelling data\nFirstly, let us import the modelling data by using the code chunk below.\n\nSIM_data <- read_rds(\"data/rds/SIM_data.rds\")\nhead(SIM_data)\n\n# A tibble: 6 × 12\n# Groups:   ORIGIN_SZ [1]\n  ORIGIN_SZ DESTIN_SZ TRIPS FlowNoIntra offset  dist ORIGIN_AGE7_12\n  <chr>     <chr>     <dbl>       <dbl>  <dbl> <dbl>          <dbl>\n1 AMSZ01    AMSZ02     6790        6790      1  810.            310\n2 AMSZ01    AMSZ03     7242        7242      1 1361.            310\n3 AMSZ01    AMSZ04     2048        2048      1  840.            310\n4 AMSZ01    AMSZ05     4594        4594      1 1077.            310\n5 AMSZ01    AMSZ06     1767        1767      1  805.            310\n6 AMSZ01    AMSZ07     1136        1136      1 1799.            310\n# ℹ 5 more variables: ORIGIN_AGE13_24 <dbl>, ORIGIN_AGE25_64 <dbl>,\n#   DESTIN_AGE7_12 <dbl>, DESTIN_AGE13_24 <dbl>, DESTIN_AGE25_64 <dbl>\n\n\n\n\n16.8.2 Visualising the dependent variable\nFirstly, let us plot the distribution of the dependent variable (i.e. TRIPS) by using histogram method by using the code chunk below.\n\nggplot(data = SIM_data,\n       aes(x = TRIPS)) +\n  geom_histogram()\n\n\n\n\nNotice that the distribution is highly skewed and not resemble bell shape or also known as normal distribution. It resembles more like a Poisson distribution with a small mean (right-skewed) or a negative binomial distribution.\nNext, let us visualise the relation between the dependent variable and one of the key independent variable in Spatial Interaction Model, namely distance.\n\nggplot(data = SIM_data,\n       aes(x = dist, # independent\n           y = TRIPS)) +  #dependent\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\nNotice that their relationship hardly resemble linear relationship.\nOn the other hand, if we plot the scatter plot by using the log transformed version of both variables, we can see that their relationship is more resemble linear relationship.\n\nggplot(data = SIM_data,\n       aes(x = log(dist),\n           y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\nWe have come to the end of our data preparation stage.\n\n\n16.8.3 Checking for variables with zero values\nFeature engineering stage starts here: We need to make our data able to work for our chosen algorithm (Poisson regression).\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in SIM_data data frame.\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS           FlowNoIntra      \n Length:14274       Length:14274       Min.   :     1.0   Min.   :     1.0  \n Class :character   Class :character   1st Qu.:    11.0   1st Qu.:    11.0  \n Mode  :character   Mode  :character   Median :    56.0   Median :    56.0  \n                                       Mean   :   664.3   Mean   :   664.3  \n                                       3rd Qu.:   296.0   3rd Qu.:   296.0  \n                                       Max.   :104167.0   Max.   :104167.0  \n     offset       dist         ORIGIN_AGE7_12 ORIGIN_AGE13_24 ORIGIN_AGE25_64\n Min.   :1   Min.   :  173.8   Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.:1   1st Qu.: 3465.4   1st Qu.: 240   1st Qu.:  460   1st Qu.: 2210  \n Median :1   Median : 6121.0   Median : 710   Median : 1400   Median : 7030  \n Mean   :1   Mean   : 6951.8   Mean   :1037   Mean   : 2278   Mean   :10536  \n 3rd Qu.:1   3rd Qu.: 9725.1   3rd Qu.:1500   3rd Qu.: 3282   3rd Qu.:15830  \n Max.   :1   Max.   :26135.8   Max.   :6340   Max.   :16380   Max.   :74610  \n DESTIN_AGE7_12 DESTIN_AGE13_24 DESTIN_AGE25_64\n Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.: 250   1st Qu.:  460   1st Qu.: 2210  \n Median : 720   Median : 1430   Median : 7120  \n Mean   :1040   Mean   : 2305   Mean   :10648  \n 3rd Qu.:1500   3rd Qu.: 3290   3rd Qu.:15830  \n Max.   :6340   Max.   :16380   Max.   :74610  \n\n\nThe print report above reveals that variables ORIGIN_AGE7_12, ORIGIN_AGE13_24, ORIGIN_AGE25_64,DESTIN_AGE7_12, DESTIN_AGE13_24, DESTIN_AGE25_64 consist of 0 values.\nIn view of this, code chunk below will be used to replace zero values to 0.99 (randomly chosen value that is close to 0).\n\nSIM_data$DESTIN_AGE7_12 <- ifelse(\n  SIM_data$DESTIN_AGE7_12 == 0,\n  0.99, SIM_data$DESTIN_AGE7_12)\nSIM_data$DESTIN_AGE13_24 <- ifelse(\n  SIM_data$DESTIN_AGE13_24 == 0,\n  0.99, SIM_data$DESTIN_AGE13_24)\nSIM_data$DESTIN_AGE25_64 <- ifelse(\n  SIM_data$DESTIN_AGE25_64 == 0,\n  0.99, SIM_data$DESTIN_AGE25_64)\nSIM_data$ORIGIN_AGE7_12 <- ifelse(\n  SIM_data$ORIGIN_AGE7_12 == 0,\n  0.99, SIM_data$ORIGIN_AGE7_12)\nSIM_data$ORIGIN_AGE13_24 <- ifelse(\n  SIM_data$ORIGIN_AGE13_24 == 0,\n  0.99, SIM_data$ORIGIN_AGE13_24)\nSIM_data$ORIGIN_AGE25_64 <- ifelse(\n  SIM_data$ORIGIN_AGE25_64 == 0,\n  0.99, SIM_data$ORIGIN_AGE25_64)\n\nAll the 0 values have been replaced by 0.99.\n\n\n16.8.4 Unconstrained Spatial Interaction Model\nIn this section, we will learn how to calibrate an unconstrained spatial interaction model by using glm() of Base Stats. The explanatory variables are\n-origin population by different age cohort,\n-destination population by different age cohort (i.e. DESTIN_AGE25_64) and\n-distance between origin and destination in km (i.e. dist).\nThe general formula of Unconstrained Spatial Interaction Model\n\nThe code chunk used to calibrate to model is shown below:\nTaking natural log on both sides, ln 𝑇𝑖j = 𝑘 + 𝜇 ln𝑉𝑖 + 𝛼 ln𝑊𝑗 − 𝛽 ln𝑑𝑖j .\nTrips (of flow) is logarithmically linked to a linear combination of the logged independent variables in the model. A Poisson regression model can be fitted to produce estimates of 𝑘, 𝜇, 𝛼 and 𝛽.\nIndicate link=‘log’ because the left-hand side of model equation is logarithmically linked to the variables on the right hand side.\nMore information on family and link can be found here.\n\nuncSIM <- glm(formula = TRIPS ~ \n                log(ORIGIN_AGE25_64) + \n                log(DESTIN_AGE25_64) +  # write it as positve, we will see a negative value in the results page.\n                #+ another variable if we have\n                log(dist),   # do not enter negative sign here\n              family = poisson(link = \"log\"),  # need to specify as in glm, many families\n              data = SIM_data,\n              na.action = na.exclude)  # we hav already cleaned up the na though\nuncSIM\n\n\nCall:  glm(formula = TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + \n    log(dist), family = poisson(link = \"log\"), data = SIM_data, \n    na.action = na.exclude)\n\nCoefficients:\n         (Intercept)  log(ORIGIN_AGE25_64)  log(DESTIN_AGE25_64)  \n            17.00287               0.21001               0.01289  \n           log(dist)  \n            -1.51785  \n\nDegrees of Freedom: 14273 Total (i.e. Null);  14270 Residual\nNull Deviance:      36120000 \nResidual Deviance: 19960000     AIC: 20040000\n\n\n\nsummary(uncSIM)\n\n\nCall:\nglm(formula = TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + \n    log(dist), family = poisson(link = \"log\"), data = SIM_data, \n    na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-207.41   -20.89   -12.76    -3.48   587.61  \n\nCoefficients:\n                       Estimate Std. Error z value Pr(>|z|)    \n(Intercept)          17.0028658  0.0034871  4875.9   <2e-16 ***\nlog(ORIGIN_AGE25_64)  0.2100150  0.0001857  1130.7   <2e-16 ***\nlog(DESTIN_AGE25_64)  0.0128911  0.0001071   120.4   <2e-16 ***\nlog(dist)            -1.5178548  0.0004042 -3755.3   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance: 19959425  on 14270  degrees of freedom\nAIC: 20043988\n\nNumber of Fisher Scoring iterations: 7\n\n\nInterpretation of output:\nThe parameter estimate for distance is -1.517. If the sign is positive (something is wrong), double-check our workings.\nThe values of the parameters are:\n𝑘 = 17.0 , 𝜇 = 0.21, 𝛼 = 0.013 and 𝛽 = −1.51\nAll the variables are statistically significant and distance has the most influence on the model followed by the origin age group 25-64.\nAIC: GLM by default do not provide R-square, only provide AIC. We will be calculating R-squared in the next section.\nWe could also extract the coefficients our of model:\n\nattributes(uncSIM)\n\n$names\n [1] \"coefficients\"      \"residuals\"         \"fitted.values\"    \n [4] \"effects\"           \"R\"                 \"rank\"             \n [7] \"qr\"                \"family\"            \"linear.predictors\"\n[10] \"deviance\"          \"aic\"               \"null.deviance\"    \n[13] \"iter\"              \"weights\"           \"prior.weights\"    \n[16] \"df.residual\"       \"df.null\"           \"y\"                \n[19] \"converged\"         \"boundary\"          \"model\"            \n[22] \"call\"              \"formula\"           \"terms\"            \n[25] \"data\"              \"offset\"            \"control\"          \n[28] \"method\"            \"contrasts\"         \"xlevels\"          \n\n$class\n[1] \"glm\" \"lm\" \n\n\n\nkmualphabeta\n\n\n\nuncSIM$coefficients[1]\n\n(Intercept) \n   17.00287 \n\n\n\n\n\nuncSIM$coefficients[2]\n\nlog(ORIGIN_AGE25_64) \n            0.210015 \n\n\n\n\n\nuncSIM$coefficients[3]\n\nlog(DESTIN_AGE25_64) \n          0.01289109 \n\n\n\n\ncareful of the sign\n\n-uncSIM$coefficients[4]\n\nlog(dist) \n 1.517855 \n\n\n\n\n\n\n\n16.8.5 R-squared function\nIn order to measure how much variation of the trips can be accounted by the model we will write a function to calculate R-Squared value as shown below. For GLM models, the R-square and adjusted R-square values are not defined. We can write custom functions to compute them.\n\nCalcRSquared <- function(observed,estimated){\n  r <- cor(observed,estimated)\n  R2 <- r^2\n  R2\n}\n\nNext, we will compute the R-squared of the unconstrained SIM by using the code chunk below.\n\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.1694734\n\n\nThe R-squared value of 0.169 tells us that the explanatory variables are able to explain 17% of the variance in the flow data.\n\n\n\nAlternatively, based on this link, for these models, p-values and pseudo R-squared measures can be calculated.  A few common pseudo R-squared measures include: McFadden, Cox and Snell (also referred to as ML), Nagelkerke (also referred to as Cragg and Uhler), Efron, and count. Efron’s pseudo R-squared has the advantage of being based solely on the actual values of the dependent variable and those values predicted by the model.  This makes it relatively easy to understand. \nCalculate p-values for model\nThe most common way to calculate the p-value for a fitted model is to compare the fitted model to a null model with the anova function.\n\nnull_model <- glm(TRIPS ~ 1, family = poisson, data = SIM_data)\nanova(uncSIM,\n      null_model,\n      test=\"Chisq\")\n\nAnalysis of Deviance Table\n\nModel 1: TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + log(dist)\nModel 2: TRIPS ~ 1\n  Resid. Df Resid. Dev Df  Deviance  Pr(>Chi)    \n1     14270   19959425                           \n2     14273   36117615 -3 -16158190 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCalculate Pseudo R-squared using nagelkerke() of rcompanion package.\nIt outputs McFadden, Cox and Snell (ML), Nagelkerke values.\n\nnagelkerke(uncSIM)\n\n$Models\n                                                                                                                            \nModel: \"glm, TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + log(dist), poisson(link = \\\"log\\\"), SIM_data, na.exclude\"\nNull:  \"glm, TRIPS ~ 1, poisson(link = \\\"log\\\"), SIM_data, na.exclude\"                                                      \n\n$Pseudo.R.squared.for.model.vs.null\n                             Pseudo.R.squared\nMcFadden                             0.446332\nCox and Snell (ML)                   1.000000\nNagelkerke (Cragg and Uhler)         1.000000\n\n$Likelihood.ratio.test\n Df.diff LogLik.diff    Chisq p.value\n      -3    -8079100 16158000       0\n\n$Number.of.observations\n            \nModel: 14274\nNull:  14274\n\n$Messages\n[1] \"Note: For models fit with REML, these statistics are based on refitting with ML\"\n\n$Warnings\n[1] \"None\"\n\n#r2_mcfadden(uncSIM)\n\nWe can obtain Efron’s pseudo R-squared from the efronRsquared function or the accuracy function.\nThe accuracy function also outputs several other measures of accuracy and error.\n\nefronRSquared(uncSIM)\n\nEfronRSquared \n        0.167 \n\n\n\naccuracy(uncSIM)\n\n$Models\n  Call                                                                  \n1 \"glm(formula = TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + \"\n\n$Fit.criteria\n  Min.max.accuracy MAE MedAE MAPE     MSE RMSE NRMSE.mean NRMSE.median\n1            0.285 718   199 28.6 5900000 2430       3.66         43.4\n  Efron.r.squared CV.prcnt\n1           0.167      366\n\n\nTo calculate adjusted R-square, write a custom function:\n\n\n\n\n\nReference: link1 and link2\n\nCalc_AdjRSquared <- function(rsquared, n, p) {\n  result <- 1 - (1 - rsquared) * (n - 1) / (n - p - 1)\n  return(result)\n}\n\n\nCalc_AdjRSquared(CalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values),\n                 length(uncSIM$data$TRIPS),\n                 3)\n\n[1] 0.1692988\n\n\n\n\n16.8.6 Origin (Production) constrained SIM\nIn this section, we will fit an origin constrained SIM by using the code3 chunk below.\nThe general formula of Origin Constrained Spatial Interaction Model\n\nTake ln on both sides: ln 𝑇𝑖j = 𝑘 + 𝜇 + 𝛼 ln𝑊𝑗 − 𝛽 ln𝑑𝑖j\nInstead of feeding ‘ORIGIN_AGE25_64’, we feed ’ORIGIN_SZ’ instead.\nEach origin_sz is a predictor variable.\n\norcSIM <- glm(formula= TRIPS ~\n                ORIGIN_SZ +\n                log(DESTIN_AGE25_64) +\n                log(dist),\n              family = poisson(link='log'),\n              data = SIM_data,\n              na.action = na.exclude)\n\nsummary(orcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(DESTIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-241.02   -16.13    -7.46     0.80   418.33  \n\nCoefficients:\n                       Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)          19.9309957  0.0054015  3689.887  < 2e-16 ***\nORIGIN_SZAMSZ02       0.6805710  0.0052686   129.175  < 2e-16 ***\nORIGIN_SZAMSZ03       0.3597850  0.0054884    65.554  < 2e-16 ***\nORIGIN_SZAMSZ04      -0.1106566  0.0060027   -18.434  < 2e-16 ***\nORIGIN_SZAMSZ05      -0.3140561  0.0067998   -46.186  < 2e-16 ***\nORIGIN_SZAMSZ06       0.0634425  0.0060258    10.528  < 2e-16 ***\nORIGIN_SZAMSZ07      -1.1301580  0.0110298  -102.464  < 2e-16 ***\nORIGIN_SZAMSZ08      -0.6330394  0.0102949   -61.491  < 2e-16 ***\nORIGIN_SZAMSZ09       0.1064915  0.0063450    16.784  < 2e-16 ***\nORIGIN_SZAMSZ10       0.5061899  0.0053889    93.931  < 2e-16 ***\nORIGIN_SZAMSZ11      -1.3167911  0.0144870   -90.895  < 2e-16 ***\nORIGIN_SZAMSZ12      -1.5103004  0.0127453  -118.499  < 2e-16 ***\nORIGIN_SZBDSZ01       1.3626004  0.0051433   264.929  < 2e-16 ***\nORIGIN_SZBDSZ02       0.9554084  0.0059655   160.156  < 2e-16 ***\nORIGIN_SZBDSZ03       1.1476190  0.0054278   211.433  < 2e-16 ***\nORIGIN_SZBDSZ04       2.0110410  0.0046344   433.940  < 2e-16 ***\nORIGIN_SZBDSZ05       1.0658940  0.0053976   197.477  < 2e-16 ***\nORIGIN_SZBDSZ06       1.2719222  0.0054774   232.213  < 2e-16 ***\nORIGIN_SZBDSZ07      -0.5053039  0.0111553   -45.297  < 2e-16 ***\nORIGIN_SZBDSZ08      -0.3556193  0.0102947   -34.544  < 2e-16 ***\nORIGIN_SZBKSZ01      -0.3606399  0.0075473   -47.784  < 2e-16 ***\nORIGIN_SZBKSZ02       0.1357265  0.0061394    22.107  < 2e-16 ***\nORIGIN_SZBKSZ03       0.4101999  0.0058983    69.545  < 2e-16 ***\nORIGIN_SZBKSZ04      -0.3418645  0.0070764   -48.310  < 2e-16 ***\nORIGIN_SZBKSZ05      -0.2986750  0.0074073   -40.322  < 2e-16 ***\nORIGIN_SZBKSZ06      -0.2637855  0.0068739   -38.375  < 2e-16 ***\nORIGIN_SZBKSZ07       0.5498323  0.0051476   106.813  < 2e-16 ***\nORIGIN_SZBKSZ08      -0.0527393  0.0061457    -8.582  < 2e-16 ***\nORIGIN_SZBKSZ09      -0.1564691  0.0067300   -23.249  < 2e-16 ***\nORIGIN_SZBLSZ01      -1.7551329  0.0176599   -99.385  < 2e-16 ***\nORIGIN_SZBLSZ02      -1.9493637  0.0213859   -91.152  < 2e-16 ***\nORIGIN_SZBLSZ03      -2.9057732  0.0535995   -54.213  < 2e-16 ***\nORIGIN_SZBLSZ04      -1.4672066  0.0254726   -57.599  < 2e-16 ***\nORIGIN_SZBMSZ01       0.1806064  0.0060563    29.821  < 2e-16 ***\nORIGIN_SZBMSZ02      -1.4026549  0.0078244  -179.267  < 2e-16 ***\nORIGIN_SZBMSZ03      -0.5976236  0.0063808   -93.660  < 2e-16 ***\nORIGIN_SZBMSZ04      -0.5456513  0.0059061   -92.388  < 2e-16 ***\nORIGIN_SZBMSZ05      -3.1095195  0.0188118  -165.297  < 2e-16 ***\nORIGIN_SZBMSZ06      -3.0273827  0.0194319  -155.794  < 2e-16 ***\nORIGIN_SZBMSZ07      -0.7378197  0.0066865  -110.345  < 2e-16 ***\nORIGIN_SZBMSZ08      -0.9306150  0.0067188  -138.510  < 2e-16 ***\nORIGIN_SZBMSZ09      -1.4137345  0.0101071  -139.876  < 2e-16 ***\nORIGIN_SZBMSZ10      -1.7054195  0.0101582  -167.886  < 2e-16 ***\nORIGIN_SZBMSZ11      -1.2418380  0.0076792  -161.714  < 2e-16 ***\nORIGIN_SZBMSZ12      -1.3746537  0.0109769  -125.231  < 2e-16 ***\nORIGIN_SZBMSZ13      -0.4339494  0.0069335   -62.587  < 2e-16 ***\nORIGIN_SZBMSZ14      -0.9950458  0.0076302  -130.410  < 2e-16 ***\nORIGIN_SZBMSZ15      -0.6544196  0.0068964   -94.892  < 2e-16 ***\nORIGIN_SZBMSZ16      -1.5193747  0.0105329  -144.250  < 2e-16 ***\nORIGIN_SZBMSZ17      -1.6536771  0.0180672   -91.529  < 2e-16 ***\nORIGIN_SZBPSZ01       0.1484355  0.0064734    22.930  < 2e-16 ***\nORIGIN_SZBPSZ02      -0.3602094  0.0073902   -48.741  < 2e-16 ***\nORIGIN_SZBPSZ03      -0.1567975  0.0072226   -21.709  < 2e-16 ***\nORIGIN_SZBPSZ04       0.4504873  0.0058418    77.115  < 2e-16 ***\nORIGIN_SZBPSZ05       0.5028646  0.0053682    93.675  < 2e-16 ***\nORIGIN_SZBPSZ06      -1.0125668  0.0105638   -95.853  < 2e-16 ***\nORIGIN_SZBPSZ07      -0.3859065  0.0098561   -39.154  < 2e-16 ***\nORIGIN_SZBSSZ01       0.1488497  0.0065504    22.724  < 2e-16 ***\nORIGIN_SZBSSZ02       0.4269498  0.0055893    76.387  < 2e-16 ***\nORIGIN_SZBSSZ03      -0.2437385  0.0062020   -39.300  < 2e-16 ***\nORIGIN_SZBTSZ01       0.1987940  0.0066672    29.817  < 2e-16 ***\nORIGIN_SZBTSZ02      -0.4571546  0.0090784   -50.356  < 2e-16 ***\nORIGIN_SZBTSZ03      -0.2697243  0.0077941   -34.606  < 2e-16 ***\nORIGIN_SZBTSZ04      -1.0997236  0.0115225   -95.441  < 2e-16 ***\nORIGIN_SZBTSZ05      -1.0053122  0.0132594   -75.819  < 2e-16 ***\nORIGIN_SZBTSZ06      -1.0841201  0.0102242  -106.035  < 2e-16 ***\nORIGIN_SZBTSZ07      -2.3134497  0.0158499  -145.960  < 2e-16 ***\nORIGIN_SZBTSZ08      -1.1581618  0.0121161   -95.589  < 2e-16 ***\nORIGIN_SZCBSZ01      -1.0805930  0.0577831   -18.701  < 2e-16 ***\nORIGIN_SZCCSZ01      -0.8145372  0.0152638   -53.364  < 2e-16 ***\nORIGIN_SZCHSZ01       0.0377079  0.0133240     2.830 0.004654 ** \nORIGIN_SZCHSZ02      -0.6209553  0.0096388   -64.422  < 2e-16 ***\nORIGIN_SZCHSZ03       1.6790244  0.0069559   241.381  < 2e-16 ***\nORIGIN_SZCKSZ01       0.0839586  0.0059934    14.008  < 2e-16 ***\nORIGIN_SZCKSZ02       0.4379511  0.0062289    70.309  < 2e-16 ***\nORIGIN_SZCKSZ03       0.7956950  0.0051892   153.335  < 2e-16 ***\nORIGIN_SZCKSZ04       1.2740323  0.0053165   239.637  < 2e-16 ***\nORIGIN_SZCKSZ05       0.9326213  0.0061807   150.893  < 2e-16 ***\nORIGIN_SZCKSZ06       0.3976273  0.0085639    46.431  < 2e-16 ***\nORIGIN_SZCLSZ01      -0.7522917  0.0094655   -79.477  < 2e-16 ***\nORIGIN_SZCLSZ02      -1.3937450  0.0153260   -90.940  < 2e-16 ***\nORIGIN_SZCLSZ03      -0.7898683  0.0091016   -86.784  < 2e-16 ***\nORIGIN_SZCLSZ04       0.8451512  0.0051258   164.882  < 2e-16 ***\nORIGIN_SZCLSZ05      -1.6573818  0.0166091   -99.788  < 2e-16 ***\nORIGIN_SZCLSZ06       0.9478181  0.0048182   196.716  < 2e-16 ***\nORIGIN_SZCLSZ07      -0.2499753  0.0064632   -38.677  < 2e-16 ***\nORIGIN_SZCLSZ08       0.1350119  0.0069296    19.483  < 2e-16 ***\nORIGIN_SZCLSZ09      -1.3868782  0.0192743   -71.955  < 2e-16 ***\nORIGIN_SZDTSZ02      -3.7535792  0.0871325   -43.079  < 2e-16 ***\nORIGIN_SZDTSZ03      -3.8462041  0.0840156   -45.780  < 2e-16 ***\nORIGIN_SZDTSZ13      -2.9738127  0.0349241   -85.151  < 2e-16 ***\nORIGIN_SZGLSZ01      -1.5175198  0.0110135  -137.787  < 2e-16 ***\nORIGIN_SZGLSZ02       0.2405712  0.0058742    40.954  < 2e-16 ***\nORIGIN_SZGLSZ03       0.1940241  0.0061989    31.300  < 2e-16 ***\nORIGIN_SZGLSZ04       1.0292572  0.0049028   209.931  < 2e-16 ***\nORIGIN_SZGLSZ05       0.9864552  0.0050898   193.811  < 2e-16 ***\nORIGIN_SZHGSZ01       0.3073609  0.0054307    56.597  < 2e-16 ***\nORIGIN_SZHGSZ02       0.3827293  0.0054555    70.154  < 2e-16 ***\nORIGIN_SZHGSZ03       0.2342580  0.0059240    39.544  < 2e-16 ***\nORIGIN_SZHGSZ04       0.8750090  0.0049639   176.275  < 2e-16 ***\nORIGIN_SZHGSZ05       1.1695280  0.0049468   236.420  < 2e-16 ***\nORIGIN_SZHGSZ06      -0.0462411  0.0063805    -7.247 4.25e-13 ***\nORIGIN_SZHGSZ07       0.4488583  0.0055139    81.404  < 2e-16 ***\nORIGIN_SZHGSZ08       0.2236095  0.0061279    36.490  < 2e-16 ***\nORIGIN_SZHGSZ09      -1.6376674  0.0084442  -193.941  < 2e-16 ***\nORIGIN_SZHGSZ10      -2.9849025  0.0501042   -59.574  < 2e-16 ***\nORIGIN_SZJESZ01       0.3926525  0.0056268    69.783  < 2e-16 ***\nORIGIN_SZJESZ02       0.1230160  0.0056864    21.633  < 2e-16 ***\nORIGIN_SZJESZ03       0.0188276  0.0061020     3.085 0.002032 ** \nORIGIN_SZJESZ04      -1.3611618  0.0117184  -116.156  < 2e-16 ***\nORIGIN_SZJESZ05      -2.0643662  0.0157083  -131.419  < 2e-16 ***\nORIGIN_SZJESZ06       0.1556368  0.0055245    28.172  < 2e-16 ***\nORIGIN_SZJESZ07      -1.7664532  0.0133171  -132.646  < 2e-16 ***\nORIGIN_SZJESZ08      -0.9115981  0.0138203   -65.961  < 2e-16 ***\nORIGIN_SZJESZ09       0.6121916  0.0060381   101.388  < 2e-16 ***\nORIGIN_SZJESZ10      -1.1953045  0.0233216   -51.253  < 2e-16 ***\nORIGIN_SZJESZ11      -1.4088748  0.0220921   -63.773  < 2e-16 ***\nORIGIN_SZJWSZ01       0.5759093  0.0077741    74.081  < 2e-16 ***\nORIGIN_SZJWSZ02       0.9769314  0.0053029   184.227  < 2e-16 ***\nORIGIN_SZJWSZ03       1.3242695  0.0049068   269.882  < 2e-16 ***\nORIGIN_SZJWSZ04       0.5621088  0.0057831    97.199  < 2e-16 ***\nORIGIN_SZJWSZ05      -1.5744341  0.0146904  -107.174  < 2e-16 ***\nORIGIN_SZJWSZ06      -0.9113320  0.0126913   -71.807  < 2e-16 ***\nORIGIN_SZJWSZ07      -2.3083419  0.0357843   -64.507  < 2e-16 ***\nORIGIN_SZJWSZ08       2.0114225  0.0047956   419.429  < 2e-16 ***\nORIGIN_SZJWSZ09       1.9086705  0.0045255   421.759  < 2e-16 ***\nORIGIN_SZKLSZ01       0.2743166  0.0056908    48.204  < 2e-16 ***\nORIGIN_SZKLSZ02      -0.6443386  0.0074521   -86.463  < 2e-16 ***\nORIGIN_SZKLSZ03      -0.3990113  0.0067213   -59.366  < 2e-16 ***\nORIGIN_SZKLSZ04      -2.1413876  0.0138405  -154.719  < 2e-16 ***\nORIGIN_SZKLSZ05      -1.0913697  0.0121512   -89.816  < 2e-16 ***\nORIGIN_SZKLSZ06      -5.6240764  0.1857405   -30.279  < 2e-16 ***\nORIGIN_SZKLSZ07      -1.1885897  0.0096830  -122.750  < 2e-16 ***\nORIGIN_SZKLSZ08      -1.7018593  0.0114317  -148.872  < 2e-16 ***\nORIGIN_SZLKSZ01      -1.6659670  0.0446420   -37.318  < 2e-16 ***\nORIGIN_SZMDSZ01      -1.1210505  0.0318834   -35.161  < 2e-16 ***\nORIGIN_SZMDSZ02      -0.5096299  0.0116645   -43.691  < 2e-16 ***\nORIGIN_SZMDSZ03      -1.9187039  0.0198291   -96.762  < 2e-16 ***\nORIGIN_SZMPSZ01      -0.5260512  0.0094201   -55.844  < 2e-16 ***\nORIGIN_SZMPSZ02      -0.2905084  0.0077974   -37.257  < 2e-16 ***\nORIGIN_SZMPSZ03       0.3342293  0.0063715    52.457  < 2e-16 ***\nORIGIN_SZMUSZ02      -3.8337096  0.1105053   -34.693  < 2e-16 ***\nORIGIN_SZNTSZ01      -2.9845040  0.0397028   -75.171  < 2e-16 ***\nORIGIN_SZNTSZ02      -3.1812985  0.0249470  -127.522  < 2e-16 ***\nORIGIN_SZNTSZ03      -0.9742991  0.0085424  -114.054  < 2e-16 ***\nORIGIN_SZNTSZ05      -4.2086932  0.0579737   -72.597  < 2e-16 ***\nORIGIN_SZNTSZ06      -4.5831822  0.0583494   -78.547  < 2e-16 ***\nORIGIN_SZNVSZ01       0.3186962  0.0052944    60.195  < 2e-16 ***\nORIGIN_SZNVSZ02      -0.5321136  0.0073747   -72.154  < 2e-16 ***\nORIGIN_SZNVSZ03      -0.9911852  0.0090560  -109.451  < 2e-16 ***\nORIGIN_SZNVSZ04      -0.8329721  0.0099590   -83.640  < 2e-16 ***\nORIGIN_SZNVSZ05      -2.1460777  0.0182401  -117.657  < 2e-16 ***\nORIGIN_SZPGSZ01      -0.5604078  0.0151515   -36.987  < 2e-16 ***\nORIGIN_SZPGSZ02      -0.4025139  0.0085135   -47.279  < 2e-16 ***\nORIGIN_SZPGSZ03       0.6975483  0.0055534   125.608  < 2e-16 ***\nORIGIN_SZPGSZ04       1.2175486  0.0051080   238.363  < 2e-16 ***\nORIGIN_SZPGSZ05       0.3895354  0.0069851    55.767  < 2e-16 ***\nORIGIN_SZPLSZ01      -0.5572701  0.0134473   -41.441  < 2e-16 ***\nORIGIN_SZPLSZ02      -0.9854214  0.0172337   -57.180  < 2e-16 ***\nORIGIN_SZPLSZ03      -1.6991954  0.0472629   -35.952  < 2e-16 ***\nORIGIN_SZPLSZ04      -2.2000217  0.0373580   -58.890  < 2e-16 ***\nORIGIN_SZPLSZ05      -1.7086663  0.0260920   -65.486  < 2e-16 ***\nORIGIN_SZPNSZ01       1.5292867  0.0055102   277.535  < 2e-16 ***\nORIGIN_SZPNSZ02       0.7457519  0.0127815    58.346  < 2e-16 ***\nORIGIN_SZPNSZ03      -1.3659046  0.0216180   -63.184  < 2e-16 ***\nORIGIN_SZPNSZ04      -2.0025379  0.0360655   -55.525  < 2e-16 ***\nORIGIN_SZPNSZ05      -0.9157959  0.0320955   -28.533  < 2e-16 ***\nORIGIN_SZPRSZ01       0.0522611  0.0139142     3.756 0.000173 ***\nORIGIN_SZPRSZ02       1.3063371  0.0053809   242.774  < 2e-16 ***\nORIGIN_SZPRSZ03       0.9963670  0.0054293   183.516  < 2e-16 ***\nORIGIN_SZPRSZ04      -0.0300950  0.0088010    -3.419 0.000627 ***\nORIGIN_SZPRSZ05       1.6840313  0.0050839   331.245  < 2e-16 ***\nORIGIN_SZPRSZ06      -0.8277202  0.0131296   -63.042  < 2e-16 ***\nORIGIN_SZPRSZ07      -2.1698449  0.0177362  -122.340  < 2e-16 ***\nORIGIN_SZPRSZ08       0.4559353  0.0072609    62.793  < 2e-16 ***\nORIGIN_SZQTSZ01      -0.3517047  0.0078770   -44.650  < 2e-16 ***\nORIGIN_SZQTSZ02      -0.8199353  0.0071544  -114.605  < 2e-16 ***\nORIGIN_SZQTSZ03      -0.2457614  0.0065555   -37.490  < 2e-16 ***\nORIGIN_SZQTSZ04      -1.2216614  0.0084050  -145.349  < 2e-16 ***\nORIGIN_SZQTSZ05      -0.7219952  0.0072360   -99.778  < 2e-16 ***\nORIGIN_SZQTSZ06      -0.6729363  0.0076658   -87.784  < 2e-16 ***\nORIGIN_SZQTSZ07      -1.4497690  0.0109365  -132.563  < 2e-16 ***\nORIGIN_SZQTSZ08      -0.2770151  0.0070193   -39.465  < 2e-16 ***\nORIGIN_SZQTSZ09      -0.6157554  0.0078739   -78.202  < 2e-16 ***\nORIGIN_SZQTSZ10      -0.3091547  0.0075471   -40.963  < 2e-16 ***\nORIGIN_SZQTSZ11      -1.9698881  0.0151247  -130.243  < 2e-16 ***\nORIGIN_SZQTSZ12      -2.6449643  0.0205857  -128.485  < 2e-16 ***\nORIGIN_SZQTSZ13      -0.3754107  0.0088433   -42.452  < 2e-16 ***\nORIGIN_SZQTSZ14      -1.6537473  0.0134378  -123.067  < 2e-16 ***\nORIGIN_SZQTSZ15      -0.3435351  0.0131956   -26.034  < 2e-16 ***\nORIGIN_SZRCSZ01      -1.7104390  0.0141179  -121.154  < 2e-16 ***\nORIGIN_SZRCSZ06      -1.1250727  0.0094909  -118.542  < 2e-16 ***\nORIGIN_SZRVSZ01      -3.0220116  0.0339694   -88.963  < 2e-16 ***\nORIGIN_SZRVSZ02      -3.6040075  0.0297641  -121.086  < 2e-16 ***\nORIGIN_SZRVSZ03      -3.2345594  0.0259149  -124.814  < 2e-16 ***\nORIGIN_SZRVSZ04      -3.6900313  0.0575908   -64.073  < 2e-16 ***\nORIGIN_SZRVSZ05      -2.9527570  0.0178582  -165.344  < 2e-16 ***\nORIGIN_SZSBSZ01       0.0238445  0.0078563     3.035 0.002405 ** \nORIGIN_SZSBSZ02      -0.5780602  0.0093054   -62.121  < 2e-16 ***\nORIGIN_SZSBSZ03       0.8961719  0.0054586   164.175  < 2e-16 ***\nORIGIN_SZSBSZ04       0.8421798  0.0061888   136.080  < 2e-16 ***\nORIGIN_SZSBSZ05      -0.1682984  0.0078342   -21.482  < 2e-16 ***\nORIGIN_SZSBSZ06      -1.1482701  0.0196421   -58.460  < 2e-16 ***\nORIGIN_SZSBSZ07      -0.8830317  0.0160709   -54.946  < 2e-16 ***\nORIGIN_SZSBSZ08      -1.1039492  0.0174602   -63.226  < 2e-16 ***\nORIGIN_SZSBSZ09      -0.5946691  0.0101961   -58.323  < 2e-16 ***\nORIGIN_SZSESZ02       1.1144933  0.0050948   218.749  < 2e-16 ***\nORIGIN_SZSESZ03       1.1058963  0.0049026   225.574  < 2e-16 ***\nORIGIN_SZSESZ04       0.7427975  0.0056948   130.433  < 2e-16 ***\nORIGIN_SZSESZ05      -0.2812684  0.0069596   -40.414  < 2e-16 ***\nORIGIN_SZSESZ06       0.8168315  0.0055800   146.387  < 2e-16 ***\nORIGIN_SZSESZ07      -2.2842043  0.0231232   -98.784  < 2e-16 ***\nORIGIN_SZSGSZ01      -0.7313790  0.0098957   -73.909  < 2e-16 ***\nORIGIN_SZSGSZ02      -1.1185406  0.0110919  -100.843  < 2e-16 ***\nORIGIN_SZSGSZ03       0.1752618  0.0060508    28.965  < 2e-16 ***\nORIGIN_SZSGSZ04       0.3764395  0.0056165    67.023  < 2e-16 ***\nORIGIN_SZSGSZ05      -1.7203916  0.0118945  -144.637  < 2e-16 ***\nORIGIN_SZSGSZ06       0.4630857  0.0052886    87.563  < 2e-16 ***\nORIGIN_SZSGSZ07      -0.7051233  0.0073133   -96.417  < 2e-16 ***\nORIGIN_SZSKSZ01       0.2053928  0.0100710    20.395  < 2e-16 ***\nORIGIN_SZSKSZ02       1.2630428  0.0063490   198.935  < 2e-16 ***\nORIGIN_SZSKSZ03      -0.3035297  0.0096788   -31.360  < 2e-16 ***\nORIGIN_SZSKSZ04      -1.7952886  0.0359225   -49.977  < 2e-16 ***\nORIGIN_SZSKSZ05      -0.3836861  0.0176686   -21.716  < 2e-16 ***\nORIGIN_SZSLSZ01      -2.5916326  0.0348001   -74.472  < 2e-16 ***\nORIGIN_SZSLSZ04      -0.2251549  0.0088517   -25.436  < 2e-16 ***\nORIGIN_SZSRSZ01      -2.9590365  0.0173638  -170.414  < 2e-16 ***\nORIGIN_SZTHSZ01      -1.9639893  0.0570321   -34.437  < 2e-16 ***\nORIGIN_SZTHSZ03      -1.7281304  0.0272797   -63.349  < 2e-16 ***\nORIGIN_SZTHSZ04      -2.7837906  0.0343179   -81.118  < 2e-16 ***\nORIGIN_SZTHSZ06      -2.1800693  0.0205491  -106.091  < 2e-16 ***\nORIGIN_SZTMSZ01       0.8228136  0.0066824   123.131  < 2e-16 ***\nORIGIN_SZTMSZ02       2.3174781  0.0044978   515.243  < 2e-16 ***\nORIGIN_SZTMSZ03       1.7061757  0.0048615   350.957  < 2e-16 ***\nORIGIN_SZTMSZ04       1.2407899  0.0058389   212.504  < 2e-16 ***\nORIGIN_SZTMSZ05      -0.1000526  0.0124079    -8.064 7.41e-16 ***\nORIGIN_SZTNSZ01      -2.0347519  0.0139596  -145.760  < 2e-16 ***\nORIGIN_SZTNSZ02      -1.8682671  0.0107901  -173.146  < 2e-16 ***\nORIGIN_SZTNSZ03      -2.1737183  0.0146759  -148.115  < 2e-16 ***\nORIGIN_SZTNSZ04      -0.5006452  0.0081501   -61.428  < 2e-16 ***\nORIGIN_SZTPSZ01      -0.6722487  0.0075606   -88.914  < 2e-16 ***\nORIGIN_SZTPSZ02       0.4552916  0.0050191    90.711  < 2e-16 ***\nORIGIN_SZTPSZ03      -0.7865781  0.0072250  -108.869  < 2e-16 ***\nORIGIN_SZTPSZ04      -0.7049044  0.0066456  -106.071  < 2e-16 ***\nORIGIN_SZTPSZ05      -0.5574925  0.0070366   -79.227  < 2e-16 ***\nORIGIN_SZTPSZ06      -0.4247282  0.0068709   -61.815  < 2e-16 ***\nORIGIN_SZTPSZ07      -0.2846984  0.0071030   -40.081  < 2e-16 ***\nORIGIN_SZTPSZ08      -1.0898051  0.0110046   -99.031  < 2e-16 ***\nORIGIN_SZTPSZ09      -0.8092746  0.0079160  -102.232  < 2e-16 ***\nORIGIN_SZTPSZ10      -0.9332072  0.0086809  -107.502  < 2e-16 ***\nORIGIN_SZTPSZ11      -0.0421981  0.0064343    -6.558 5.44e-11 ***\nORIGIN_SZTPSZ12      -0.6330081  0.0078324   -80.819  < 2e-16 ***\nORIGIN_SZTSSZ01      -1.7650409  0.0517357   -34.116  < 2e-16 ***\nORIGIN_SZTSSZ02       1.1707267  0.0094178   124.310  < 2e-16 ***\nORIGIN_SZTSSZ03       0.6581679  0.0095894    68.635  < 2e-16 ***\nORIGIN_SZTSSZ04       0.8736493  0.0104965    83.233  < 2e-16 ***\nORIGIN_SZTSSZ05       0.0957248  0.0178709     5.356 8.49e-08 ***\nORIGIN_SZTSSZ06       1.7581609  0.0206810    85.013  < 2e-16 ***\nORIGIN_SZWCSZ01       0.8097950  0.0105622    76.669  < 2e-16 ***\nORIGIN_SZWCSZ02      -1.9966163  0.0345747   -57.748  < 2e-16 ***\nORIGIN_SZWCSZ03      -5.0687420  0.1474971   -34.365  < 2e-16 ***\nORIGIN_SZWDSZ01       1.4926003  0.0047216   316.124  < 2e-16 ***\nORIGIN_SZWDSZ02       0.9916597  0.0055755   177.859  < 2e-16 ***\nORIGIN_SZWDSZ03       1.5918065  0.0052180   305.062  < 2e-16 ***\nORIGIN_SZWDSZ04       1.3717152  0.0060516   226.669  < 2e-16 ***\nORIGIN_SZWDSZ05       0.6700111  0.0062287   107.569  < 2e-16 ***\nORIGIN_SZWDSZ06       0.8115996  0.0060947   133.165  < 2e-16 ***\nORIGIN_SZWDSZ07      -0.6488914  0.0093567   -69.351  < 2e-16 ***\nORIGIN_SZWDSZ08      -0.3610234  0.0096440   -37.435  < 2e-16 ***\nORIGIN_SZWDSZ09       1.4445461  0.0052279   276.317  < 2e-16 ***\nORIGIN_SZYSSZ01      -0.2039272  0.0069548   -29.322  < 2e-16 ***\nORIGIN_SZYSSZ02       0.8707707  0.0058957   147.697  < 2e-16 ***\nORIGIN_SZYSSZ03       1.8348842  0.0050377   364.231  < 2e-16 ***\nORIGIN_SZYSSZ04       1.0780641  0.0052960   203.564  < 2e-16 ***\nORIGIN_SZYSSZ05       0.3222765  0.0069700    46.237  < 2e-16 ***\nORIGIN_SZYSSZ06      -0.4424689  0.0124866   -35.435  < 2e-16 ***\nORIGIN_SZYSSZ07      -1.0267883  0.0155821   -65.895  < 2e-16 ***\nORIGIN_SZYSSZ08       0.1833117  0.0070935    25.842  < 2e-16 ***\nORIGIN_SZYSSZ09       1.0766070  0.0050451   213.396  < 2e-16 ***\nlog(DESTIN_AGE25_64)  0.0295428  0.0001051   280.998  < 2e-16 ***\nlog(dist)            -1.7024691  0.0004625 -3681.042  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance: 12983718  on 13993  degrees of freedom\nAIC: 13068835\n\nNumber of Fisher Scoring iterations: 6\n\n\nOutput table:\nCoefficients: This table shows the estimated coefficients for each predictor variable in the model. The columns include:\n\nEstimate: The estimated value of the coefficient.\nStd. Error: The standard error of the coefficient estimate.\nz value: The z-value, which is the ratio of the estimate to its standard error. It is used in hypothesis testing.\nPr(>|z|): The p-value associated with the z-value. It indicates the probability of observing a z-value as extreme or more extreme than the one calculated if the null hypothesis (that the coefficient is zero) is true.\n\nInterpretation of output table:\nThe values of the parameters are:\n𝑘 = 19.9 , 𝛼 = 0.030 and 𝛽 = −1.70. The list of coefficients of all the origin_sz codes are 𝜇i. All these coefficients can be extracted using\n\nkalphabetamu\n\n\n\norcSIM$coefficients[1]\n\n(Intercept) \n     19.931 \n\n\n\n\n\norcSIM$coefficients[2:279] %>% head()\n\nORIGIN_SZAMSZ02 ORIGIN_SZAMSZ03 ORIGIN_SZAMSZ04 ORIGIN_SZAMSZ05 ORIGIN_SZAMSZ06 \n     0.68057098      0.35978498     -0.11065661     -0.31405610      0.06344251 \nORIGIN_SZAMSZ07 \n    -1.13015804 \n\n\n\n\n\norcSIM$coefficients[280]\n\nlog(DESTIN_AGE25_64) \n          0.02954284 \n\n\n\n\n\norcSIM$coefficients[281]\n\nlog(dist) \n-1.702469 \n\n\n\n\n\nAll the variables are statistically significant and ‘dist’ has the most influence on the model followed by the ‘DESTIN_AGE25_64’ variable.\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(orcSIM$data$TRIPS, orcSIM$fitted.values)\n\n[1] 0.4029115\n\n\n\n\n16.8.7 Destination constrained\nIn this section, we will fit a destination constrained SIM by using the code chunk below.\nThe general formula of Destination Constrained Spatial Interaction Model\n\nInstead of feeding ‘DESTNI_AGE25_64’, we feed ‘DESTIN_SZ’ instead.\nEach destin_sz is a predictor variable.\n\ndecSIM <- glm(formula = TRIPS ~ \n                DESTIN_SZ + \n                log(ORIGIN_AGE25_64) + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(decSIM)\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_SZ + log(ORIGIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-189.20   -15.64    -7.08     1.55   379.03  \n\nCoefficients:\n                       Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)          19.4822997  0.0050784  3836.298  < 2e-16 ***\nDESTIN_SZAMSZ02       0.1263056  0.0049743    25.392  < 2e-16 ***\nDESTIN_SZAMSZ03       0.0421788  0.0049859     8.460  < 2e-16 ***\nDESTIN_SZAMSZ04      -1.1668479  0.0074254  -157.143  < 2e-16 ***\nDESTIN_SZAMSZ05      -1.2586639  0.0075854  -165.931  < 2e-16 ***\nDESTIN_SZAMSZ06      -1.1414791  0.0073474  -155.359  < 2e-16 ***\nDESTIN_SZAMSZ07      -1.5565804  0.0109476  -142.185  < 2e-16 ***\nDESTIN_SZAMSZ08      -0.3990754  0.0074159   -53.813  < 2e-16 ***\nDESTIN_SZAMSZ09      -1.0109118  0.0076802  -131.626  < 2e-16 ***\nDESTIN_SZAMSZ10       0.0159285  0.0051765     3.077  0.00209 ** \nDESTIN_SZAMSZ11      -0.3653273  0.0094866   -38.510  < 2e-16 ***\nDESTIN_SZAMSZ12       0.5297606  0.0053243    99.500  < 2e-16 ***\nDESTIN_SZBDSZ01       1.0394822  0.0044226   235.037  < 2e-16 ***\nDESTIN_SZBDSZ02       0.1956964  0.0059564    32.855  < 2e-16 ***\nDESTIN_SZBDSZ03       0.3209267  0.0053718    59.742  < 2e-16 ***\nDESTIN_SZBDSZ04       1.2429874  0.0043104   288.370  < 2e-16 ***\nDESTIN_SZBDSZ05       0.8535842  0.0046360   184.122  < 2e-16 ***\nDESTIN_SZBDSZ06       0.5181443  0.0053736    96.423  < 2e-16 ***\nDESTIN_SZBDSZ07      -0.5849371  0.0110468   -52.951  < 2e-16 ***\nDESTIN_SZBDSZ08      -1.2871050  0.0128623  -100.068  < 2e-16 ***\nDESTIN_SZBKSZ01      -1.0633560  0.0077771  -136.730  < 2e-16 ***\nDESTIN_SZBKSZ02      -0.4065316  0.0066712   -60.938  < 2e-16 ***\nDESTIN_SZBKSZ03      -0.6815674  0.0066509  -102.477  < 2e-16 ***\nDESTIN_SZBKSZ04      -0.4185485  0.0058306   -71.785  < 2e-16 ***\nDESTIN_SZBKSZ05      -0.8887654  0.0073867  -120.319  < 2e-16 ***\nDESTIN_SZBKSZ06      -0.9436078  0.0068625  -137.501  < 2e-16 ***\nDESTIN_SZBKSZ07      -0.0067325  0.0048408    -1.391  0.16430    \nDESTIN_SZBKSZ08      -1.2680903  0.0079177  -160.160  < 2e-16 ***\nDESTIN_SZBKSZ09      -0.0350151  0.0054287    -6.450 1.12e-10 ***\nDESTIN_SZBLSZ01      -0.3045203  0.0081978   -37.146  < 2e-16 ***\nDESTIN_SZBLSZ02       0.6432424  0.0074449    86.400  < 2e-16 ***\nDESTIN_SZBLSZ03       1.9595113  0.0084705   231.333  < 2e-16 ***\nDESTIN_SZBLSZ04       0.0149756  0.0172081     0.870  0.38415    \nDESTIN_SZBMSZ01      -0.0378127  0.0055294    -6.838 8.00e-12 ***\nDESTIN_SZBMSZ02      -0.8458055  0.0054043  -156.505  < 2e-16 ***\nDESTIN_SZBMSZ03      -1.1334399  0.0063720  -177.878  < 2e-16 ***\nDESTIN_SZBMSZ04      -1.1164759  0.0057743  -193.353  < 2e-16 ***\nDESTIN_SZBMSZ05      -1.1078742  0.0078703  -140.766  < 2e-16 ***\nDESTIN_SZBMSZ06      -2.2787234  0.0155126  -146.895  < 2e-16 ***\nDESTIN_SZBMSZ07      -0.2739089  0.0051924   -52.752  < 2e-16 ***\nDESTIN_SZBMSZ08      -1.6825978  0.0071842  -234.209  < 2e-16 ***\nDESTIN_SZBMSZ09      -3.0047801  0.0159980  -187.823  < 2e-16 ***\nDESTIN_SZBMSZ10      -2.2232689  0.0096907  -229.423  < 2e-16 ***\nDESTIN_SZBMSZ11      -1.9657136  0.0086445  -227.394  < 2e-16 ***\nDESTIN_SZBMSZ12      -1.5359286  0.0089658  -171.310  < 2e-16 ***\nDESTIN_SZBMSZ13      -0.5657561  0.0059960   -94.355  < 2e-16 ***\nDESTIN_SZBMSZ14      -1.6904858  0.0084858  -199.214  < 2e-16 ***\nDESTIN_SZBMSZ15      -1.5268383  0.0079959  -190.953  < 2e-16 ***\nDESTIN_SZBMSZ16      -2.2045600  0.0130872  -168.452  < 2e-16 ***\nDESTIN_SZBMSZ17      -2.2992381  0.0184895  -124.353  < 2e-16 ***\nDESTIN_SZBPSZ01      -0.8549497  0.0065168  -131.191  < 2e-16 ***\nDESTIN_SZBPSZ02      -1.7470549  0.0095751  -182.457  < 2e-16 ***\nDESTIN_SZBPSZ03      -1.4015145  0.0090888  -154.203  < 2e-16 ***\nDESTIN_SZBPSZ04      -0.5250632  0.0066496   -78.962  < 2e-16 ***\nDESTIN_SZBPSZ05       0.3413171  0.0046404    73.553  < 2e-16 ***\nDESTIN_SZBPSZ06      -0.8569188  0.0090795   -94.380  < 2e-16 ***\nDESTIN_SZBPSZ07      -0.0751284  0.0089704    -8.375  < 2e-16 ***\nDESTIN_SZBSSZ01       0.1015228  0.0055735    18.215  < 2e-16 ***\nDESTIN_SZBSSZ02      -0.7066412  0.0063845  -110.682  < 2e-16 ***\nDESTIN_SZBSSZ03       0.1622730  0.0046689    34.756  < 2e-16 ***\nDESTIN_SZBTSZ01       0.5470615  0.0047984   114.009  < 2e-16 ***\nDESTIN_SZBTSZ02      -0.1393371  0.0078266   -17.803  < 2e-16 ***\nDESTIN_SZBTSZ03       0.1474771  0.0059428    24.816  < 2e-16 ***\nDESTIN_SZBTSZ04      -1.2857827  0.0122000  -105.392  < 2e-16 ***\nDESTIN_SZBTSZ05      -0.2629188  0.0081769   -32.154  < 2e-16 ***\nDESTIN_SZBTSZ06      -0.8319920  0.0081401  -102.209  < 2e-16 ***\nDESTIN_SZBTSZ07      -1.8829448  0.0121227  -155.324  < 2e-16 ***\nDESTIN_SZBTSZ08      -1.5732123  0.0116752  -134.748  < 2e-16 ***\nDESTIN_SZCBSZ01      -3.5334327  0.3333510   -10.600  < 2e-16 ***\nDESTIN_SZCCSZ01      -0.2129306  0.0093782   -22.705  < 2e-16 ***\nDESTIN_SZCHSZ01      -0.1494972  0.0113078   -13.221  < 2e-16 ***\nDESTIN_SZCHSZ02       0.0041774  0.0063195     0.661  0.50860    \nDESTIN_SZCHSZ03       2.5565450  0.0046495   549.857  < 2e-16 ***\nDESTIN_SZCKSZ01       0.0489719  0.0053801     9.102  < 2e-16 ***\nDESTIN_SZCKSZ02      -0.3548993  0.0060671   -58.496  < 2e-16 ***\nDESTIN_SZCKSZ03       0.5386351  0.0044913   119.928  < 2e-16 ***\nDESTIN_SZCKSZ04      -0.4425512  0.0073837   -59.936  < 2e-16 ***\nDESTIN_SZCKSZ05      -0.4092591  0.0077267   -52.967  < 2e-16 ***\nDESTIN_SZCKSZ06       0.2207041  0.0074252    29.724  < 2e-16 ***\nDESTIN_SZCLSZ01       0.2851460  0.0052362    54.457  < 2e-16 ***\nDESTIN_SZCLSZ02      -1.9270528  0.0147688  -130.482  < 2e-16 ***\nDESTIN_SZCLSZ03      -0.6266521  0.0086780   -72.212  < 2e-16 ***\nDESTIN_SZCLSZ04      -0.1335581  0.0054216   -24.634  < 2e-16 ***\nDESTIN_SZCLSZ05      -0.8912963  0.0096015   -92.829  < 2e-16 ***\nDESTIN_SZCLSZ06       0.1781234  0.0048150    36.993  < 2e-16 ***\nDESTIN_SZCLSZ07      -0.5609619  0.0062277   -90.075  < 2e-16 ***\nDESTIN_SZCLSZ08      -0.3875308  0.0068390   -56.665  < 2e-16 ***\nDESTIN_SZCLSZ09       0.2539453  0.0072623    34.968  < 2e-16 ***\nDESTIN_SZDTSZ02      -2.5036295  0.0373421   -67.046  < 2e-16 ***\nDESTIN_SZDTSZ03      -0.8956407  0.0149971   -59.721  < 2e-16 ***\nDESTIN_SZDTSZ13      -1.6562176  0.0175441   -94.403  < 2e-16 ***\nDESTIN_SZGLSZ01      -0.2716152  0.0056553   -48.029  < 2e-16 ***\nDESTIN_SZGLSZ02      -0.1735665  0.0055548   -31.246  < 2e-16 ***\nDESTIN_SZGLSZ03       0.7029507  0.0044934   156.441  < 2e-16 ***\nDESTIN_SZGLSZ04       0.5788027  0.0045449   127.351  < 2e-16 ***\nDESTIN_SZGLSZ05       0.6865291  0.0045131   152.118  < 2e-16 ***\nDESTIN_SZHGSZ01       0.3275950  0.0043866    74.681  < 2e-16 ***\nDESTIN_SZHGSZ02      -0.6326974  0.0063517   -99.610  < 2e-16 ***\nDESTIN_SZHGSZ03      -1.0597982  0.0073914  -143.382  < 2e-16 ***\nDESTIN_SZHGSZ04      -0.2267013  0.0052178   -43.448  < 2e-16 ***\nDESTIN_SZHGSZ05      -0.3063050  0.0055452   -55.238  < 2e-16 ***\nDESTIN_SZHGSZ06      -0.7483961  0.0065544  -114.182  < 2e-16 ***\nDESTIN_SZHGSZ07       0.1096958  0.0051309    21.379  < 2e-16 ***\nDESTIN_SZHGSZ08      -0.1374201  0.0056692   -24.240  < 2e-16 ***\nDESTIN_SZHGSZ09       0.0775400  0.0060230    12.874  < 2e-16 ***\nDESTIN_SZHGSZ10      -3.3017475  0.0289292  -114.132  < 2e-16 ***\nDESTIN_SZJESZ01      -0.0489065  0.0057246    -8.543  < 2e-16 ***\nDESTIN_SZJESZ02      -0.5101614  0.0060074   -84.921  < 2e-16 ***\nDESTIN_SZJESZ03      -0.5328921  0.0064129   -83.097  < 2e-16 ***\nDESTIN_SZJESZ04      -0.7348953  0.0082249   -89.351  < 2e-16 ***\nDESTIN_SZJESZ05      -1.0864570  0.0111740   -97.231  < 2e-16 ***\nDESTIN_SZJESZ06       0.2407920  0.0046801    51.451  < 2e-16 ***\nDESTIN_SZJESZ07      -1.1523093  0.0090103  -127.888  < 2e-16 ***\nDESTIN_SZJESZ08      -0.4627356  0.0094529   -48.952  < 2e-16 ***\nDESTIN_SZJESZ09       0.0528616  0.0068126     7.759 8.53e-15 ***\nDESTIN_SZJESZ10       1.0240660  0.0084045   121.848  < 2e-16 ***\nDESTIN_SZJESZ11       0.7875517  0.0076251   103.284  < 2e-16 ***\nDESTIN_SZJWSZ01      -0.1533418  0.0076198   -20.124  < 2e-16 ***\nDESTIN_SZJWSZ02      -0.0011019  0.0059389    -0.186  0.85280    \nDESTIN_SZJWSZ03       0.9063789  0.0046747   193.892  < 2e-16 ***\nDESTIN_SZJWSZ04       0.7019286  0.0049743   141.112  < 2e-16 ***\nDESTIN_SZJWSZ05      -0.5197057  0.0072971   -71.220  < 2e-16 ***\nDESTIN_SZJWSZ06       0.3350986  0.0061171    54.780  < 2e-16 ***\nDESTIN_SZJWSZ07      -0.5961960  0.0328336   -18.158  < 2e-16 ***\nDESTIN_SZJWSZ08       0.8054662  0.0056006   143.819  < 2e-16 ***\nDESTIN_SZJWSZ09       1.5860146  0.0040282   393.723  < 2e-16 ***\nDESTIN_SZKLSZ01      -0.6500838  0.0063560  -102.279  < 2e-16 ***\nDESTIN_SZKLSZ02      -0.7039434  0.0064465  -109.197  < 2e-16 ***\nDESTIN_SZKLSZ03      -1.1972384  0.0075577  -158.413  < 2e-16 ***\nDESTIN_SZKLSZ04      -1.7172228  0.0097573  -175.993  < 2e-16 ***\nDESTIN_SZKLSZ05      -0.6042386  0.0093730   -64.466  < 2e-16 ***\nDESTIN_SZKLSZ06      -3.0201496  0.0389503   -77.539  < 2e-16 ***\nDESTIN_SZKLSZ07      -1.1522413  0.0076607  -150.409  < 2e-16 ***\nDESTIN_SZKLSZ08      -0.6977825  0.0057610  -121.122  < 2e-16 ***\nDESTIN_SZLKSZ01      -0.6895952  0.0268661   -25.668  < 2e-16 ***\nDESTIN_SZMDSZ01      -0.7155951  0.0228203   -31.358  < 2e-16 ***\nDESTIN_SZMDSZ02      -0.8153643  0.0123003   -66.288  < 2e-16 ***\nDESTIN_SZMDSZ03      -2.7745226  0.0301326   -92.077  < 2e-16 ***\nDESTIN_SZMPSZ01      -0.5492095  0.0087198   -62.984  < 2e-16 ***\nDESTIN_SZMPSZ02      -0.6104744  0.0069346   -88.033  < 2e-16 ***\nDESTIN_SZMPSZ03       0.2775047  0.0054964    50.489  < 2e-16 ***\nDESTIN_SZMUSZ02      -2.6322870  0.0214943  -122.464  < 2e-16 ***\nDESTIN_SZNTSZ01      -4.0762008  0.0531046   -76.758  < 2e-16 ***\nDESTIN_SZNTSZ02      -1.9765545  0.0125659  -157.296  < 2e-16 ***\nDESTIN_SZNTSZ03      -1.4563069  0.0085433  -170.462  < 2e-16 ***\nDESTIN_SZNTSZ05      -2.0125598  0.0270737   -74.336  < 2e-16 ***\nDESTIN_SZNTSZ06      -3.0145357  0.0504986   -59.695  < 2e-16 ***\nDESTIN_SZNVSZ01      -0.4693625  0.0053866   -87.135  < 2e-16 ***\nDESTIN_SZNVSZ02      -0.4525631  0.0060428   -74.894  < 2e-16 ***\nDESTIN_SZNVSZ03      -0.4821492  0.0064725   -74.492  < 2e-16 ***\nDESTIN_SZNVSZ04      -1.8929756  0.0128397  -147.432  < 2e-16 ***\nDESTIN_SZNVSZ05      -1.4501752  0.0099737  -145.400  < 2e-16 ***\nDESTIN_SZPGSZ01      -1.2305867  0.0174321   -70.593  < 2e-16 ***\nDESTIN_SZPGSZ02      -0.8232919  0.0080153  -102.715  < 2e-16 ***\nDESTIN_SZPGSZ03       0.2138480  0.0050850    42.054  < 2e-16 ***\nDESTIN_SZPGSZ04       0.1045757  0.0053579    19.518  < 2e-16 ***\nDESTIN_SZPGSZ05      -0.7542450  0.0088883   -84.858  < 2e-16 ***\nDESTIN_SZPLSZ01      -0.0098642  0.0080428    -1.226  0.22003    \nDESTIN_SZPLSZ02      -1.2630412  0.0152594   -82.771  < 2e-16 ***\nDESTIN_SZPLSZ03      -0.1554479  0.0108611   -14.312  < 2e-16 ***\nDESTIN_SZPLSZ04      -1.5505819  0.0114768  -135.105  < 2e-16 ***\nDESTIN_SZPLSZ05      -0.2417805  0.0130391   -18.543  < 2e-16 ***\nDESTIN_SZPNSZ01       0.7926715  0.0073628   107.659  < 2e-16 ***\nDESTIN_SZPNSZ02       2.1914920  0.0073537   298.013  < 2e-16 ***\nDESTIN_SZPNSZ03       1.0246845  0.0086874   117.951  < 2e-16 ***\nDESTIN_SZPNSZ04       2.5522612  0.0091789   278.057  < 2e-16 ***\nDESTIN_SZPNSZ05       1.7995301  0.0138562   129.872  < 2e-16 ***\nDESTIN_SZPRSZ01      -0.6576686  0.0096037   -68.481  < 2e-16 ***\nDESTIN_SZPRSZ02       0.3113532  0.0059851    52.021  < 2e-16 ***\nDESTIN_SZPRSZ03       0.9255296  0.0044779   206.687  < 2e-16 ***\nDESTIN_SZPRSZ04      -0.0028578  0.0093218    -0.307  0.75917    \nDESTIN_SZPRSZ05       0.2457863  0.0058261    42.187  < 2e-16 ***\nDESTIN_SZPRSZ06       0.3692137  0.0064542    57.205  < 2e-16 ***\nDESTIN_SZPRSZ07      -1.6733306  0.0138440  -120.871  < 2e-16 ***\nDESTIN_SZPRSZ08      -0.2221048  0.0074846   -29.675  < 2e-16 ***\nDESTIN_SZQTSZ01      -1.0185488  0.0093179  -109.311  < 2e-16 ***\nDESTIN_SZQTSZ02      -1.2802688  0.0081670  -156.761  < 2e-16 ***\nDESTIN_SZQTSZ03      -1.3322708  0.0079106  -168.415  < 2e-16 ***\nDESTIN_SZQTSZ04      -1.1803631  0.0077366  -152.568  < 2e-16 ***\nDESTIN_SZQTSZ05      -1.2215818  0.0072829  -167.734  < 2e-16 ***\nDESTIN_SZQTSZ06      -1.3213145  0.0074858  -176.509  < 2e-16 ***\nDESTIN_SZQTSZ07      -1.6426306  0.0123347  -133.171  < 2e-16 ***\nDESTIN_SZQTSZ08      -0.2224169  0.0058405   -38.082  < 2e-16 ***\nDESTIN_SZQTSZ09      -0.8142678  0.0069796  -116.665  < 2e-16 ***\nDESTIN_SZQTSZ10      -0.1090496  0.0062573   -17.428  < 2e-16 ***\nDESTIN_SZQTSZ11      -0.0108951  0.0061145    -1.782  0.07477 .  \nDESTIN_SZQTSZ12      -0.8582515  0.0090243   -95.105  < 2e-16 ***\nDESTIN_SZQTSZ13       0.1834409  0.0065231    28.122  < 2e-16 ***\nDESTIN_SZQTSZ14       0.1994454  0.0073615    27.093  < 2e-16 ***\nDESTIN_SZQTSZ15       0.6740197  0.0088699    75.990  < 2e-16 ***\nDESTIN_SZRCSZ01      -0.7746427  0.0079375   -97.593  < 2e-16 ***\nDESTIN_SZRCSZ06      -1.4394098  0.0209931   -68.566  < 2e-16 ***\nDESTIN_SZRVSZ01      -2.6060495  0.0175759  -148.274  < 2e-16 ***\nDESTIN_SZRVSZ02      -2.5823769  0.0354706   -72.803  < 2e-16 ***\nDESTIN_SZRVSZ03      -2.5890601  0.0152644  -169.614  < 2e-16 ***\nDESTIN_SZRVSZ04      -2.2277482  0.0165661  -134.477  < 2e-16 ***\nDESTIN_SZRVSZ05      -3.8610445  0.0298251  -129.456  < 2e-16 ***\nDESTIN_SZSBSZ01      -1.2035529  0.0103954  -115.777  < 2e-16 ***\nDESTIN_SZSBSZ02      -1.0267199  0.0085239  -120.452  < 2e-16 ***\nDESTIN_SZSBSZ03       0.5977382  0.0050336   118.750  < 2e-16 ***\nDESTIN_SZSBSZ04       0.5362769  0.0060573    88.534  < 2e-16 ***\nDESTIN_SZSBSZ05      -1.0440525  0.0089622  -116.495  < 2e-16 ***\nDESTIN_SZSBSZ06      -1.3939595  0.0246679   -56.509  < 2e-16 ***\nDESTIN_SZSBSZ07       0.1029116  0.0235414     4.372 1.23e-05 ***\nDESTIN_SZSBSZ08       1.3564902  0.0060529   224.105  < 2e-16 ***\nDESTIN_SZSBSZ09       0.4573712  0.0056585    80.829  < 2e-16 ***\nDESTIN_SZSESZ02      -0.1553609  0.0056716   -27.393  < 2e-16 ***\nDESTIN_SZSESZ03       0.5412776  0.0043801   123.576  < 2e-16 ***\nDESTIN_SZSESZ04      -0.6382091  0.0065411   -97.568  < 2e-16 ***\nDESTIN_SZSESZ05      -0.3332093  0.0055002   -60.581  < 2e-16 ***\nDESTIN_SZSESZ06      -0.3085951  0.0072340   -42.659  < 2e-16 ***\nDESTIN_SZSESZ07      -2.6237684  0.0245753  -106.764  < 2e-16 ***\nDESTIN_SZSGSZ01      -0.1062372  0.0066634   -15.943  < 2e-16 ***\nDESTIN_SZSGSZ02      -0.0475568  0.0058908    -8.073 6.85e-16 ***\nDESTIN_SZSGSZ03      -0.2118402  0.0055056   -38.477  < 2e-16 ***\nDESTIN_SZSGSZ04      -0.1099618  0.0054841   -20.051  < 2e-16 ***\nDESTIN_SZSGSZ05      -2.1556963  0.0113821  -189.394  < 2e-16 ***\nDESTIN_SZSGSZ06       0.4416352  0.0043842   100.734  < 2e-16 ***\nDESTIN_SZSGSZ07      -0.3949335  0.0059250   -66.655  < 2e-16 ***\nDESTIN_SZSISZ01      -1.2847094  0.0288610   -44.514  < 2e-16 ***\nDESTIN_SZSKSZ01       0.3089834  0.0082924    37.261  < 2e-16 ***\nDESTIN_SZSKSZ02       1.4139309  0.0059981   235.729  < 2e-16 ***\nDESTIN_SZSKSZ03       0.2427688  0.0067373    36.034  < 2e-16 ***\nDESTIN_SZSKSZ04      -0.2527488  0.0161286   -15.671  < 2e-16 ***\nDESTIN_SZSKSZ05       0.6046051  0.0122766    49.249  < 2e-16 ***\nDESTIN_SZSLSZ01      -0.3927387  0.0099790   -39.356  < 2e-16 ***\nDESTIN_SZSLSZ04      -0.5942110  0.0086225   -68.914  < 2e-16 ***\nDESTIN_SZSRSZ01      -2.6855766  0.0138707  -193.615  < 2e-16 ***\nDESTIN_SZTHSZ01      -3.2750084  0.0402668   -81.333  < 2e-16 ***\nDESTIN_SZTHSZ03      -1.7964408  0.0261810   -68.616  < 2e-16 ***\nDESTIN_SZTHSZ04      -2.6323994  0.0241831  -108.853  < 2e-16 ***\nDESTIN_SZTHSZ06      -1.9444390  0.0166052  -117.098  < 2e-16 ***\nDESTIN_SZTMSZ01       0.3856054  0.0063086    61.123  < 2e-16 ***\nDESTIN_SZTMSZ02       1.8586526  0.0039229   473.790  < 2e-16 ***\nDESTIN_SZTMSZ03       1.2601385  0.0044018   286.278  < 2e-16 ***\nDESTIN_SZTMSZ04       1.5884327  0.0043362   366.316  < 2e-16 ***\nDESTIN_SZTMSZ05       1.0377553  0.0063271   164.018  < 2e-16 ***\nDESTIN_SZTNSZ01      -0.9954275  0.0080345  -123.895  < 2e-16 ***\nDESTIN_SZTNSZ02      -2.1032696  0.0109228  -192.557  < 2e-16 ***\nDESTIN_SZTNSZ03      -2.0044892  0.0129215  -155.128  < 2e-16 ***\nDESTIN_SZTNSZ04      -0.9750326  0.0081677  -119.377  < 2e-16 ***\nDESTIN_SZTPSZ01      -0.7788383  0.0068769  -113.254  < 2e-16 ***\nDESTIN_SZTPSZ02       0.2866080  0.0042843    66.898  < 2e-16 ***\nDESTIN_SZTPSZ03      -0.8749841  0.0065470  -133.646  < 2e-16 ***\nDESTIN_SZTPSZ04      -1.6852792  0.0081488  -206.812  < 2e-16 ***\nDESTIN_SZTPSZ05      -1.3721346  0.0068230  -201.104  < 2e-16 ***\nDESTIN_SZTPSZ06      -0.7832133  0.0069164  -113.239  < 2e-16 ***\nDESTIN_SZTPSZ07      -2.3109126  0.0130830  -176.635  < 2e-16 ***\nDESTIN_SZTPSZ08      -1.6406531  0.0104897  -156.406  < 2e-16 ***\nDESTIN_SZTPSZ09      -0.5636273  0.0076848   -73.343  < 2e-16 ***\nDESTIN_SZTPSZ10      -1.5640843  0.0099984  -156.433  < 2e-16 ***\nDESTIN_SZTPSZ11      -0.3700482  0.0059834   -61.846  < 2e-16 ***\nDESTIN_SZTPSZ12      -0.8828228  0.0072302  -122.102  < 2e-16 ***\nDESTIN_SZTSSZ01       0.3529526  0.0221887    15.907  < 2e-16 ***\nDESTIN_SZTSSZ02       1.0265792  0.0153515    66.871  < 2e-16 ***\nDESTIN_SZTSSZ03       1.9647347  0.0092388   212.662  < 2e-16 ***\nDESTIN_SZTSSZ04       1.8649836  0.0089976   207.275  < 2e-16 ***\nDESTIN_SZTSSZ05       2.8437058  0.0085738   331.673  < 2e-16 ***\nDESTIN_SZTSSZ06       3.4238870  0.0161304   212.263  < 2e-16 ***\nDESTIN_SZWCSZ01       2.9550693  0.0051690   571.689  < 2e-16 ***\nDESTIN_SZWCSZ02      -0.8214103  0.0129213   -63.570  < 2e-16 ***\nDESTIN_SZWCSZ03      -1.7393427  0.0347472   -50.057  < 2e-16 ***\nDESTIN_SZWDSZ01       1.3424417  0.0039957   335.972  < 2e-16 ***\nDESTIN_SZWDSZ02      -0.2103694  0.0068601   -30.666  < 2e-16 ***\nDESTIN_SZWDSZ03       0.8268551  0.0051363   160.983  < 2e-16 ***\nDESTIN_SZWDSZ04      -0.0643997  0.0079076    -8.144 3.82e-16 ***\nDESTIN_SZWDSZ05       0.0451985  0.0075732     5.968 2.40e-09 ***\nDESTIN_SZWDSZ06       0.6981330  0.0051936   134.423  < 2e-16 ***\nDESTIN_SZWDSZ07      -0.0403233  0.0067749    -5.952 2.65e-09 ***\nDESTIN_SZWDSZ08       0.2850631  0.0069225    41.179  < 2e-16 ***\nDESTIN_SZWDSZ09       1.3016106  0.0050365   258.433  < 2e-16 ***\nDESTIN_SZYSSZ01       0.7598564  0.0044144   172.133  < 2e-16 ***\nDESTIN_SZYSSZ02       0.2648061  0.0058239    45.469  < 2e-16 ***\nDESTIN_SZYSSZ03      -0.0412163  0.0068337    -6.031 1.63e-09 ***\nDESTIN_SZYSSZ04      -0.0561054  0.0060829    -9.223  < 2e-16 ***\nDESTIN_SZYSSZ05      -0.9970159  0.0121827   -81.839  < 2e-16 ***\nDESTIN_SZYSSZ06      -1.3808376  0.0125738  -109.819  < 2e-16 ***\nDESTIN_SZYSSZ07      -0.7128364  0.0165296   -43.125  < 2e-16 ***\nDESTIN_SZYSSZ08       0.9409510  0.0045886   205.064  < 2e-16 ***\nDESTIN_SZYSSZ09       0.3738436  0.0047971    77.930  < 2e-16 ***\nlog(ORIGIN_AGE25_64)  0.1928847  0.0001667  1157.214  < 2e-16 ***\nlog(dist)            -1.7828141  0.0004794 -3718.501  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance: 12319763  on 13992  degrees of freedom\nAIC: 12404881\n\nNumber of Fisher Scoring iterations: 7\n\n\n\nmethods(class= class(decSIM))\n\n [1] add1                 anova                check_normality     \n [4] check_overdispersion coerce               confint             \n [7] cooks.distance       deviance             drop1               \n[10] effects              extractAIC           family              \n[13] formula              influence            initialize          \n[16] logLik               model.frame          model_performance   \n[19] nobs                 predict              print               \n[22] profile              r2                   r2_coxsnell         \n[25] r2_mcfadden          r2_nagelkerke        residuals           \n[28] rstandard            rstudent             show                \n[31] slotsFromS3          summary              vcov                \n[34] weights             \nsee '?methods' for accessing help and source code\n\nattributes(decSIM) # so we know how to access\n\n$names\n [1] \"coefficients\"      \"residuals\"         \"fitted.values\"    \n [4] \"effects\"           \"R\"                 \"rank\"             \n [7] \"qr\"                \"family\"            \"linear.predictors\"\n[10] \"deviance\"          \"aic\"               \"null.deviance\"    \n[13] \"iter\"              \"weights\"           \"prior.weights\"    \n[16] \"df.residual\"       \"df.null\"           \"y\"                \n[19] \"converged\"         \"boundary\"          \"model\"            \n[22] \"call\"              \"formula\"           \"terms\"            \n[25] \"data\"              \"offset\"            \"control\"          \n[28] \"method\"            \"contrasts\"         \"xlevels\"          \n\n$class\n[1] \"glm\" \"lm\" \n\n#decSIM['fitted.values']\n#plot(check_normality(decSIM))\n\nThere are several destination subzone predictors that are not statiscally significant at 95% confidence level.\n\nCalcRSquared(decSIM$data$TRIPS, decSIM$fitted.values)\n\n[1] 0.496166\n\n\n\n\n16.8.8 Doubly constrained\nIn this section, we will fit a doubly constrained SIM by using the code chunk below.\nThe general formula of Doubly Constrained Spatial Interaction Model\n\n\ndbcSIM <- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(dbcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-159.373   -12.413    -4.694     2.892   270.252  \n\nCoefficients:\n                  Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)     21.9587595  0.0066831  3285.715  < 2e-16 ***\nORIGIN_SZAMSZ02  0.4778050  0.0054127    88.275  < 2e-16 ***\nORIGIN_SZAMSZ03  0.2895973  0.0055517    52.163  < 2e-16 ***\nORIGIN_SZAMSZ04 -0.2628080  0.0060720   -43.282  < 2e-16 ***\nORIGIN_SZAMSZ05 -0.2631404  0.0069008   -38.132  < 2e-16 ***\nORIGIN_SZAMSZ06  0.1722337  0.0062028    27.767  < 2e-16 ***\nORIGIN_SZAMSZ07 -0.9883200  0.0111224   -88.859  < 2e-16 ***\nORIGIN_SZAMSZ08 -0.4052821  0.0104095   -38.934  < 2e-16 ***\nORIGIN_SZAMSZ09  0.0356290  0.0064816     5.497 3.86e-08 ***\nORIGIN_SZAMSZ10  0.4815569  0.0055521    86.735  < 2e-16 ***\nORIGIN_SZAMSZ11 -1.4440079  0.0146079   -98.851  < 2e-16 ***\nORIGIN_SZAMSZ12 -1.7862677  0.0128071  -139.475  < 2e-16 ***\nORIGIN_SZBDSZ01  0.8653749  0.0054381   159.132  < 2e-16 ***\nORIGIN_SZBDSZ02  0.0841000  0.0062834    13.385  < 2e-16 ***\nORIGIN_SZBDSZ03  0.3158343  0.0057510    54.918  < 2e-16 ***\nORIGIN_SZBDSZ04  1.4556701  0.0049986   291.215  < 2e-16 ***\nORIGIN_SZBDSZ05  0.6363125  0.0057193   111.257  < 2e-16 ***\nORIGIN_SZBDSZ06  0.6749341  0.0058650   115.078  < 2e-16 ***\nORIGIN_SZBDSZ07 -1.2176407  0.0113698  -107.095  < 2e-16 ***\nORIGIN_SZBDSZ08 -0.9803580  0.0105604   -92.833  < 2e-16 ***\nORIGIN_SZBKSZ01 -0.2919642  0.0080763   -36.151  < 2e-16 ***\nORIGIN_SZBKSZ02  0.4609570  0.0067997    67.791  < 2e-16 ***\nORIGIN_SZBKSZ03  0.6273448  0.0065989    95.068  < 2e-16 ***\nORIGIN_SZBKSZ04 -0.2499063  0.0076555   -32.644  < 2e-16 ***\nORIGIN_SZBKSZ05 -0.2628428  0.0078905   -33.311  < 2e-16 ***\nORIGIN_SZBKSZ06 -0.2174034  0.0075134   -28.936  < 2e-16 ***\nORIGIN_SZBKSZ07  0.7094093  0.0058574   121.114  < 2e-16 ***\nORIGIN_SZBKSZ08 -0.1614362  0.0067626   -23.872  < 2e-16 ***\nORIGIN_SZBKSZ09 -0.2739085  0.0072969   -37.537  < 2e-16 ***\nORIGIN_SZBLSZ01 -2.4281074  0.0181172  -134.022  < 2e-16 ***\nORIGIN_SZBLSZ02 -2.7305447  0.0219341  -124.489  < 2e-16 ***\nORIGIN_SZBLSZ03 -3.3071431  0.0540398   -61.198  < 2e-16 ***\nORIGIN_SZBLSZ04 -2.4550671  0.0263946   -93.014  < 2e-16 ***\nORIGIN_SZBMSZ01  0.1198976  0.0065964    18.176  < 2e-16 ***\nORIGIN_SZBMSZ02 -1.3908667  0.0083230  -167.112  < 2e-16 ***\nORIGIN_SZBMSZ03 -0.6999122  0.0069754  -100.339  < 2e-16 ***\nORIGIN_SZBMSZ04 -0.2691159  0.0066184   -40.662  < 2e-16 ***\nORIGIN_SZBMSZ05 -2.6163780  0.0190989  -136.991  < 2e-16 ***\nORIGIN_SZBMSZ06 -2.9729956  0.0197182  -150.774  < 2e-16 ***\nORIGIN_SZBMSZ07 -0.7309916  0.0072407  -100.956  < 2e-16 ***\nORIGIN_SZBMSZ08 -1.0019514  0.0073169  -136.936  < 2e-16 ***\nORIGIN_SZBMSZ09 -1.3667460  0.0105325  -129.764  < 2e-16 ***\nORIGIN_SZBMSZ10 -1.6907268  0.0106687  -158.476  < 2e-16 ***\nORIGIN_SZBMSZ11 -1.2288802  0.0082919  -148.202  < 2e-16 ***\nORIGIN_SZBMSZ12 -1.6517767  0.0115101  -143.507  < 2e-16 ***\nORIGIN_SZBMSZ13 -0.7251351  0.0075289   -96.314  < 2e-16 ***\nORIGIN_SZBMSZ14 -1.1534912  0.0082629  -139.599  < 2e-16 ***\nORIGIN_SZBMSZ15 -0.5476774  0.0075710   -72.339  < 2e-16 ***\nORIGIN_SZBMSZ16 -1.5195034  0.0111459  -136.329  < 2e-16 ***\nORIGIN_SZBMSZ17 -1.6026767  0.0184419   -86.904  < 2e-16 ***\nORIGIN_SZBPSZ01  0.5571291  0.0071866    77.523  < 2e-16 ***\nORIGIN_SZBPSZ02  0.0523197  0.0082259     6.360 2.01e-10 ***\nORIGIN_SZBPSZ03  0.2942047  0.0080482    36.555  < 2e-16 ***\nORIGIN_SZBPSZ04  0.6246296  0.0065878    94.816  < 2e-16 ***\nORIGIN_SZBPSZ05  0.8663708  0.0060852   142.372  < 2e-16 ***\nORIGIN_SZBPSZ06 -0.9896182  0.0109551   -90.334  < 2e-16 ***\nORIGIN_SZBPSZ07 -0.5219250  0.0101830   -51.255  < 2e-16 ***\nORIGIN_SZBSSZ01  0.3299588  0.0066440    49.663  < 2e-16 ***\nORIGIN_SZBSSZ02  0.2851357  0.0057077    49.956  < 2e-16 ***\nORIGIN_SZBSSZ03 -0.2084740  0.0063364   -32.901  < 2e-16 ***\nORIGIN_SZBTSZ01  0.1425664  0.0071103    20.051  < 2e-16 ***\nORIGIN_SZBTSZ02 -0.5591999  0.0093616   -59.733  < 2e-16 ***\nORIGIN_SZBTSZ03 -0.3648190  0.0081677   -44.666  < 2e-16 ***\nORIGIN_SZBTSZ04 -1.4555078  0.0120138  -121.152  < 2e-16 ***\nORIGIN_SZBTSZ05 -0.8635510  0.0133848   -64.517  < 2e-16 ***\nORIGIN_SZBTSZ06 -1.1383111  0.0106421  -106.963  < 2e-16 ***\nORIGIN_SZBTSZ07 -2.3477669  0.0160858  -145.953  < 2e-16 ***\nORIGIN_SZBTSZ08 -1.2918779  0.0124862  -103.464  < 2e-16 ***\nORIGIN_SZCBSZ01 -3.3713588  0.0578683   -58.259  < 2e-16 ***\nORIGIN_SZCCSZ01 -0.6029242  0.0153385   -39.308  < 2e-16 ***\nORIGIN_SZCHSZ01 -0.7641380  0.0135100   -56.561  < 2e-16 ***\nORIGIN_SZCHSZ02 -0.8400736  0.0101951   -82.400  < 2e-16 ***\nORIGIN_SZCHSZ03  1.2753127  0.0072576   175.720  < 2e-16 ***\nORIGIN_SZCKSZ01  0.2470943  0.0067135    36.806  < 2e-16 ***\nORIGIN_SZCKSZ02  0.5793581  0.0070498    82.181  < 2e-16 ***\nORIGIN_SZCKSZ03  1.0795767  0.0060642   178.025  < 2e-16 ***\nORIGIN_SZCKSZ04  1.4947920  0.0063122   236.808  < 2e-16 ***\nORIGIN_SZCKSZ05  0.7457580  0.0074071   100.681  < 2e-16 ***\nORIGIN_SZCKSZ06  0.5760952  0.0094861    60.730  < 2e-16 ***\nORIGIN_SZCLSZ01 -0.9061335  0.0098617   -91.884  < 2e-16 ***\nORIGIN_SZCLSZ02 -1.7609479  0.0156124  -112.791  < 2e-16 ***\nORIGIN_SZCLSZ03 -1.0081325  0.0095171  -105.929  < 2e-16 ***\nORIGIN_SZCLSZ04  0.6181200  0.0057953   106.659  < 2e-16 ***\nORIGIN_SZCLSZ05 -2.0462335  0.0168934  -121.127  < 2e-16 ***\nORIGIN_SZCLSZ06  0.7902389  0.0055680   141.924  < 2e-16 ***\nORIGIN_SZCLSZ07 -0.5472929  0.0071001   -77.082  < 2e-16 ***\nORIGIN_SZCLSZ08 -0.2197650  0.0077460   -28.372  < 2e-16 ***\nORIGIN_SZCLSZ09 -1.8175782  0.0195989   -92.739  < 2e-16 ***\nORIGIN_SZDTSZ02 -3.7618796  0.0872098   -43.136  < 2e-16 ***\nORIGIN_SZDTSZ03 -3.4514766  0.0840812   -41.049  < 2e-16 ***\nORIGIN_SZDTSZ13 -3.0627578  0.0352485   -86.891  < 2e-16 ***\nORIGIN_SZGLSZ01 -1.8055929  0.0111938  -161.303  < 2e-16 ***\nORIGIN_SZGLSZ02 -0.1588829  0.0061413   -25.871  < 2e-16 ***\nORIGIN_SZGLSZ03 -0.2508524  0.0064276   -39.027  < 2e-16 ***\nORIGIN_SZGLSZ04  0.8819358  0.0051993   169.627  < 2e-16 ***\nORIGIN_SZGLSZ05  0.6062778  0.0053735   112.828  < 2e-16 ***\nORIGIN_SZHGSZ01  0.3841503  0.0056776    67.660  < 2e-16 ***\nORIGIN_SZHGSZ02  0.3962330  0.0057579    68.815  < 2e-16 ***\nORIGIN_SZHGSZ03  0.2159531  0.0061671    35.017  < 2e-16 ***\nORIGIN_SZHGSZ04  0.7831941  0.0052216   149.992  < 2e-16 ***\nORIGIN_SZHGSZ05  1.1741558  0.0051799   226.677  < 2e-16 ***\nORIGIN_SZHGSZ06 -0.1891403  0.0065556   -28.852  < 2e-16 ***\nORIGIN_SZHGSZ07  0.3105421  0.0057186    54.304  < 2e-16 ***\nORIGIN_SZHGSZ08 -0.0766364  0.0063474   -12.074  < 2e-16 ***\nORIGIN_SZHGSZ09 -1.2211107  0.0101434  -120.384  < 2e-16 ***\nORIGIN_SZHGSZ10 -3.4844709  0.0504793   -69.028  < 2e-16 ***\nORIGIN_SZJESZ01  0.4916496  0.0063444    77.493  < 2e-16 ***\nORIGIN_SZJESZ02  0.1343893  0.0063762    21.077  < 2e-16 ***\nORIGIN_SZJESZ03 -0.2761723  0.0068085   -40.563  < 2e-16 ***\nORIGIN_SZJESZ04 -1.5932744  0.0121402  -131.240  < 2e-16 ***\nORIGIN_SZJESZ05 -2.3041311  0.0160245  -143.788  < 2e-16 ***\nORIGIN_SZJESZ06  0.2811076  0.0062495    44.981  < 2e-16 ***\nORIGIN_SZJESZ07 -1.9413956  0.0136276  -142.461  < 2e-16 ***\nORIGIN_SZJESZ08 -1.3315645  0.0143168   -93.007  < 2e-16 ***\nORIGIN_SZJESZ09  0.4418314  0.0069208    63.841  < 2e-16 ***\nORIGIN_SZJESZ10 -1.5551555  0.0236523   -65.751  < 2e-16 ***\nORIGIN_SZJESZ11 -1.8888230  0.0224630   -84.086  < 2e-16 ***\nORIGIN_SZJWSZ01  0.2564586  0.0084699    30.279  < 2e-16 ***\nORIGIN_SZJWSZ02  0.6899398  0.0061751   111.729  < 2e-16 ***\nORIGIN_SZJWSZ03  1.4761229  0.0057392   257.198  < 2e-16 ***\nORIGIN_SZJWSZ04  0.5701272  0.0065749    86.713  < 2e-16 ***\nORIGIN_SZJWSZ05 -2.1253657  0.0150769  -140.968  < 2e-16 ***\nORIGIN_SZJWSZ06 -1.5307265  0.0131906  -116.047  < 2e-16 ***\nORIGIN_SZJWSZ07 -2.8801618  0.0360772   -79.833  < 2e-16 ***\nORIGIN_SZJWSZ08  1.4428820  0.0059638   241.938  < 2e-16 ***\nORIGIN_SZJWSZ09  1.8968475  0.0055649   340.860  < 2e-16 ***\nORIGIN_SZKLSZ01  0.1116580  0.0059844    18.658  < 2e-16 ***\nORIGIN_SZKLSZ02 -0.9618787  0.0077344  -124.364  < 2e-16 ***\nORIGIN_SZKLSZ03 -0.7070626  0.0070275  -100.613  < 2e-16 ***\nORIGIN_SZKLSZ04 -2.2742765  0.0139991  -162.459  < 2e-16 ***\nORIGIN_SZKLSZ05 -1.1907262  0.0123719   -96.244  < 2e-16 ***\nORIGIN_SZKLSZ06 -5.9774897  0.1857994   -32.172  < 2e-16 ***\nORIGIN_SZKLSZ07 -1.4258369  0.0103083  -138.320  < 2e-16 ***\nORIGIN_SZKLSZ08 -1.7625888  0.0116107  -151.808  < 2e-16 ***\nORIGIN_SZLKSZ01 -2.0541388  0.0448216   -45.829  < 2e-16 ***\nORIGIN_SZMDSZ01 -0.8571117  0.0321054   -26.697  < 2e-16 ***\nORIGIN_SZMDSZ02 -0.6034597  0.0120724   -49.987  < 2e-16 ***\nORIGIN_SZMDSZ03 -2.1681163  0.0201078  -107.825  < 2e-16 ***\nORIGIN_SZMPSZ01 -0.9331562  0.0096218   -96.984  < 2e-16 ***\nORIGIN_SZMPSZ02 -1.0268229  0.0081379  -126.178  < 2e-16 ***\nORIGIN_SZMPSZ03  0.0054001  0.0066875     0.807 0.419385    \nORIGIN_SZMUSZ02 -3.6269863  0.1105492   -32.809  < 2e-16 ***\nORIGIN_SZNTSZ01 -3.0593717  0.0399843   -76.514  < 2e-16 ***\nORIGIN_SZNTSZ02 -3.3331415  0.0251754  -132.397  < 2e-16 ***\nORIGIN_SZNTSZ03 -0.8351522  0.0090372   -92.413  < 2e-16 ***\nORIGIN_SZNTSZ05 -4.2082472  0.0583343   -72.140  < 2e-16 ***\nORIGIN_SZNTSZ06 -3.8549296  0.0593793   -64.920  < 2e-16 ***\nORIGIN_SZNVSZ01  0.2789069  0.0056024    49.784  < 2e-16 ***\nORIGIN_SZNVSZ02 -0.6036857  0.0077126   -78.273  < 2e-16 ***\nORIGIN_SZNVSZ03 -1.0072683  0.0092678  -108.685  < 2e-16 ***\nORIGIN_SZNVSZ04 -0.8723996  0.0101399   -86.037  < 2e-16 ***\nORIGIN_SZNVSZ05 -2.1552928  0.0183064  -117.734  < 2e-16 ***\nORIGIN_SZPGSZ01  0.0520607  0.0157846     3.298 0.000973 ***\nORIGIN_SZPGSZ02 -0.3481687  0.0089328   -38.976  < 2e-16 ***\nORIGIN_SZPGSZ03  0.9095292  0.0058835   154.590  < 2e-16 ***\nORIGIN_SZPGSZ04  1.3653717  0.0054727   249.489  < 2e-16 ***\nORIGIN_SZPGSZ05  0.3762720  0.0073841    50.957  < 2e-16 ***\nORIGIN_SZPLSZ01 -0.9142754  0.0136552   -66.954  < 2e-16 ***\nORIGIN_SZPLSZ02 -1.0987582  0.0175891   -62.468  < 2e-16 ***\nORIGIN_SZPLSZ03 -2.3427113  0.0474176   -49.406  < 2e-16 ***\nORIGIN_SZPLSZ04 -2.9140779  0.0374458   -77.821  < 2e-16 ***\nORIGIN_SZPLSZ05 -2.2381965  0.0261572   -85.567  < 2e-16 ***\nORIGIN_SZPNSZ01  0.9659006  0.0075177   128.484  < 2e-16 ***\nORIGIN_SZPNSZ02 -0.0158348  0.0143869    -1.101 0.271053    \nORIGIN_SZPNSZ03 -2.1837321  0.0224396   -97.316  < 2e-16 ***\nORIGIN_SZPNSZ04 -3.2481509  0.0370762   -87.608  < 2e-16 ***\nORIGIN_SZPNSZ05 -2.0450679  0.0328165   -62.318  < 2e-16 ***\nORIGIN_SZPRSZ01 -0.6701245  0.0141567   -47.336  < 2e-16 ***\nORIGIN_SZPRSZ02  0.7931907  0.0058079   136.570  < 2e-16 ***\nORIGIN_SZPRSZ03  0.4249094  0.0058610    72.498  < 2e-16 ***\nORIGIN_SZPRSZ04 -0.8529967  0.0090997   -93.739  < 2e-16 ***\nORIGIN_SZPRSZ05  0.7865479  0.0055282   142.278  < 2e-16 ***\nORIGIN_SZPRSZ06 -1.3303664  0.0134512   -98.903  < 2e-16 ***\nORIGIN_SZPRSZ07 -3.0458370  0.0181514  -167.802  < 2e-16 ***\nORIGIN_SZPRSZ08 -0.5342399  0.0075966   -70.327  < 2e-16 ***\nORIGIN_SZQTSZ01 -0.2548930  0.0086485   -29.473  < 2e-16 ***\nORIGIN_SZQTSZ02 -0.8662439  0.0076549  -113.162  < 2e-16 ***\nORIGIN_SZQTSZ03 -0.0890168  0.0072455   -12.286  < 2e-16 ***\nORIGIN_SZQTSZ04 -1.4634370  0.0089384  -163.724  < 2e-16 ***\nORIGIN_SZQTSZ05 -0.6535669  0.0077612   -84.210  < 2e-16 ***\nORIGIN_SZQTSZ06 -0.8275765  0.0081835  -101.128  < 2e-16 ***\nORIGIN_SZQTSZ07 -1.5369800  0.0112808  -136.248  < 2e-16 ***\nORIGIN_SZQTSZ08 -0.4437979  0.0075302   -58.936  < 2e-16 ***\nORIGIN_SZQTSZ09 -0.8184934  0.0083589   -97.918  < 2e-16 ***\nORIGIN_SZQTSZ10 -0.6906597  0.0080980   -85.288  < 2e-16 ***\nORIGIN_SZQTSZ11 -2.3251162  0.0154191  -150.795  < 2e-16 ***\nORIGIN_SZQTSZ12 -3.0442790  0.0208985  -145.670  < 2e-16 ***\nORIGIN_SZQTSZ13 -0.7241013  0.0093441   -77.493  < 2e-16 ***\nORIGIN_SZQTSZ14 -1.8225351  0.0138207  -131.870  < 2e-16 ***\nORIGIN_SZQTSZ15 -0.8720806  0.0138589   -62.926  < 2e-16 ***\nORIGIN_SZRCSZ01 -1.8063415  0.0144295  -125.184  < 2e-16 ***\nORIGIN_SZRCSZ06 -0.5370905  0.0101573   -52.877  < 2e-16 ***\nORIGIN_SZRVSZ01 -2.7426167  0.0341386   -80.338  < 2e-16 ***\nORIGIN_SZRVSZ02 -3.0827269  0.0302299  -101.976  < 2e-16 ***\nORIGIN_SZRVSZ03 -2.9133853  0.0262543  -110.968  < 2e-16 ***\nORIGIN_SZRVSZ04 -3.4220022  0.0582209   -58.776  < 2e-16 ***\nORIGIN_SZRVSZ05 -2.6206257  0.0197470  -132.710  < 2e-16 ***\nORIGIN_SZSBSZ01  0.1010337  0.0085117    11.870  < 2e-16 ***\nORIGIN_SZSBSZ02 -0.8810456  0.0098244   -89.680  < 2e-16 ***\nORIGIN_SZSBSZ03  0.8303668  0.0063009   131.785  < 2e-16 ***\nORIGIN_SZSBSZ04  0.3489128  0.0071456    48.829  < 2e-16 ***\nORIGIN_SZSBSZ05 -0.3182914  0.0085560   -37.201  < 2e-16 ***\nORIGIN_SZSBSZ06 -0.9074308  0.0200035   -45.364  < 2e-16 ***\nORIGIN_SZSBSZ07 -0.2217124  0.0167188   -13.261  < 2e-16 ***\nORIGIN_SZSBSZ08 -1.3007367  0.0178771   -72.760  < 2e-16 ***\nORIGIN_SZSBSZ09 -0.9813703  0.0107885   -90.965  < 2e-16 ***\nORIGIN_SZSESZ02  1.1283424  0.0054209   208.146  < 2e-16 ***\nORIGIN_SZSESZ03  1.2389996  0.0051926   238.610  < 2e-16 ***\nORIGIN_SZSESZ04  0.7535119  0.0060371   124.814  < 2e-16 ***\nORIGIN_SZSESZ05 -0.2347978  0.0071482   -32.847  < 2e-16 ***\nORIGIN_SZSESZ06  0.9520620  0.0057572   165.368  < 2e-16 ***\nORIGIN_SZSESZ07 -2.4296685  0.0231677  -104.873  < 2e-16 ***\nORIGIN_SZSGSZ01 -0.6995899  0.0099969   -69.980  < 2e-16 ***\nORIGIN_SZSGSZ02 -1.2602157  0.0111471  -113.053  < 2e-16 ***\nORIGIN_SZSGSZ03  0.0725860  0.0061970    11.713  < 2e-16 ***\nORIGIN_SZSGSZ04  0.2738315  0.0057524    47.603  < 2e-16 ***\nORIGIN_SZSGSZ05 -2.0207710  0.0119838  -168.625  < 2e-16 ***\nORIGIN_SZSGSZ06  0.4885608  0.0054646    89.404  < 2e-16 ***\nORIGIN_SZSGSZ07 -0.8892155  0.0075074  -118.445  < 2e-16 ***\nORIGIN_SZSKSZ01 -0.3682754  0.0108025   -34.092  < 2e-16 ***\nORIGIN_SZSKSZ02  1.1826086  0.0071388   165.659  < 2e-16 ***\nORIGIN_SZSKSZ03 -0.3230177  0.0101683   -31.767  < 2e-16 ***\nORIGIN_SZSKSZ04 -1.8504236  0.0362400   -51.060  < 2e-16 ***\nORIGIN_SZSKSZ05 -0.2759035  0.0185157   -14.901  < 2e-16 ***\nORIGIN_SZSLSZ01 -2.2757902  0.0348766   -65.253  < 2e-16 ***\nORIGIN_SZSLSZ04 -0.0899820  0.0090356    -9.959  < 2e-16 ***\nORIGIN_SZSRSZ01 -2.1460151  0.0187871  -114.228  < 2e-16 ***\nORIGIN_SZTHSZ01 -2.6851549  0.0571841   -46.956  < 2e-16 ***\nORIGIN_SZTHSZ03 -1.0121495  0.0275551   -36.732  < 2e-16 ***\nORIGIN_SZTHSZ04 -2.6129645  0.0345167   -75.701  < 2e-16 ***\nORIGIN_SZTHSZ06 -1.7229100  0.0208134   -82.779  < 2e-16 ***\nORIGIN_SZTMSZ01 -0.2254986  0.0070312   -32.071  < 2e-16 ***\nORIGIN_SZTMSZ02  1.7271575  0.0049219   350.914  < 2e-16 ***\nORIGIN_SZTMSZ03  0.9891319  0.0052266   189.250  < 2e-16 ***\nORIGIN_SZTMSZ04  0.2018090  0.0062114    32.490  < 2e-16 ***\nORIGIN_SZTMSZ05 -1.1882870  0.0125842   -94.427  < 2e-16 ***\nORIGIN_SZTNSZ01 -1.6122620  0.0141911  -113.611  < 2e-16 ***\nORIGIN_SZTNSZ02 -1.5630967  0.0112227  -139.280  < 2e-16 ***\nORIGIN_SZTNSZ03 -2.0739538  0.0149298  -138.914  < 2e-16 ***\nORIGIN_SZTNSZ04 -0.2816960  0.0085295   -33.026  < 2e-16 ***\nORIGIN_SZTPSZ01 -0.7822239  0.0077901  -100.412  < 2e-16 ***\nORIGIN_SZTPSZ02  0.5735478  0.0053042   108.131  < 2e-16 ***\nORIGIN_SZTPSZ03 -0.8748650  0.0074202  -117.903  < 2e-16 ***\nORIGIN_SZTPSZ04 -0.8537831  0.0069792  -122.332  < 2e-16 ***\nORIGIN_SZTPSZ05 -0.5581114  0.0077012   -72.471  < 2e-16 ***\nORIGIN_SZTPSZ06  0.0262001  0.0075241     3.482 0.000497 ***\nORIGIN_SZTPSZ07 -0.5969952  0.0074272   -80.380  < 2e-16 ***\nORIGIN_SZTPSZ08 -1.0537959  0.0111297   -94.683  < 2e-16 ***\nORIGIN_SZTPSZ09 -0.9588508  0.0081314  -117.920  < 2e-16 ***\nORIGIN_SZTPSZ10 -1.1177249  0.0089403  -125.021  < 2e-16 ***\nORIGIN_SZTPSZ11 -0.2799677  0.0067135   -41.702  < 2e-16 ***\nORIGIN_SZTPSZ12 -0.8898871  0.0080215  -110.938  < 2e-16 ***\nORIGIN_SZTSSZ01 -2.6146463  0.0521606   -50.127  < 2e-16 ***\nORIGIN_SZTSSZ02  0.1682588  0.0119965    14.026  < 2e-16 ***\nORIGIN_SZTSSZ03  0.2587653  0.0123809    20.900  < 2e-16 ***\nORIGIN_SZTSSZ04 -0.5473825  0.0135215   -40.482  < 2e-16 ***\nORIGIN_SZTSSZ05 -0.9967379  0.0206068   -48.369  < 2e-16 ***\nORIGIN_SZTSSZ06  0.4933147  0.0229597    21.486  < 2e-16 ***\nORIGIN_SZWCSZ01  1.2524706  0.0111133   112.700  < 2e-16 ***\nORIGIN_SZWCSZ02 -2.8544820  0.0347805   -82.071  < 2e-16 ***\nORIGIN_SZWCSZ03 -5.1277334  0.1475585   -34.751  < 2e-16 ***\nORIGIN_SZWDSZ01  1.4725308  0.0056496   260.645  < 2e-16 ***\nORIGIN_SZWDSZ02  0.1571680  0.0064909    24.214  < 2e-16 ***\nORIGIN_SZWDSZ03  1.2584097  0.0061471   204.717  < 2e-16 ***\nORIGIN_SZWDSZ04  0.8578765  0.0069277   123.833  < 2e-16 ***\nORIGIN_SZWDSZ05  0.1702728  0.0069687    24.434  < 2e-16 ***\nORIGIN_SZWDSZ06  0.1736910  0.0069507    24.989  < 2e-16 ***\nORIGIN_SZWDSZ07 -1.5610176  0.0100803  -154.859  < 2e-16 ***\nORIGIN_SZWDSZ08 -0.9490906  0.0102047   -93.005  < 2e-16 ***\nORIGIN_SZWDSZ09  1.2107011  0.0062294   194.354  < 2e-16 ***\nORIGIN_SZYSSZ01 -0.3324158  0.0074537   -44.598  < 2e-16 ***\nORIGIN_SZYSSZ02  0.8177113  0.0066108   123.693  < 2e-16 ***\nORIGIN_SZYSSZ03  1.6751777  0.0058470   286.503  < 2e-16 ***\nORIGIN_SZYSSZ04  0.8130044  0.0059025   137.738  < 2e-16 ***\nORIGIN_SZYSSZ05  0.3678420  0.0072431    50.785  < 2e-16 ***\nORIGIN_SZYSSZ06 -0.6024384  0.0126722   -47.540  < 2e-16 ***\nORIGIN_SZYSSZ07 -0.7631918  0.0158478   -48.157  < 2e-16 ***\nORIGIN_SZYSSZ08  0.2141930  0.0076154    28.126  < 2e-16 ***\nORIGIN_SZYSSZ09  1.0809368  0.0057973   186.457  < 2e-16 ***\nDESTIN_SZAMSZ02  0.0761304  0.0051207    14.867  < 2e-16 ***\nDESTIN_SZAMSZ03  0.0143394  0.0050755     2.825 0.004724 ** \nDESTIN_SZAMSZ04 -1.2516780  0.0074947  -167.008  < 2e-16 ***\nDESTIN_SZAMSZ05 -1.2312375  0.0076598  -160.741  < 2e-16 ***\nDESTIN_SZAMSZ06 -1.0333412  0.0075283  -137.261  < 2e-16 ***\nDESTIN_SZAMSZ07 -1.5338249  0.0110036  -139.392  < 2e-16 ***\nDESTIN_SZAMSZ08 -0.3751665  0.0075358   -49.784  < 2e-16 ***\nDESTIN_SZAMSZ09 -1.1633493  0.0077556  -150.001  < 2e-16 ***\nDESTIN_SZAMSZ10  0.1017717  0.0053151    19.148  < 2e-16 ***\nDESTIN_SZAMSZ11 -0.8840362  0.0097007   -91.131  < 2e-16 ***\nDESTIN_SZAMSZ12  0.1628123  0.0055220    29.484  < 2e-16 ***\nDESTIN_SZBDSZ01  1.0040794  0.0047922   209.523  < 2e-16 ***\nDESTIN_SZBDSZ02 -0.2478149  0.0063085   -39.283  < 2e-16 ***\nDESTIN_SZBDSZ03  0.1016088  0.0057420    17.696  < 2e-16 ***\nDESTIN_SZBDSZ04  1.1082928  0.0047747   232.116  < 2e-16 ***\nDESTIN_SZBDSZ05  0.8737933  0.0050593   172.712  < 2e-16 ***\nDESTIN_SZBDSZ06  0.2897032  0.0058244    49.740  < 2e-16 ***\nDESTIN_SZBDSZ07 -0.9026193  0.0113656   -79.416  < 2e-16 ***\nDESTIN_SZBDSZ08 -1.7063577  0.0131234  -130.024  < 2e-16 ***\nDESTIN_SZBKSZ01 -1.3892839  0.0083307  -166.767  < 2e-16 ***\nDESTIN_SZBKSZ02 -0.6661120  0.0073464   -90.672  < 2e-16 ***\nDESTIN_SZBKSZ03 -0.9536826  0.0073196  -130.292  < 2e-16 ***\nDESTIN_SZBKSZ04 -0.6655610  0.0065868  -101.044  < 2e-16 ***\nDESTIN_SZBKSZ05 -0.9053119  0.0079264  -114.215  < 2e-16 ***\nDESTIN_SZBKSZ06 -1.2622159  0.0075079  -168.119  < 2e-16 ***\nDESTIN_SZBKSZ07 -0.0423370  0.0056686    -7.469 8.10e-14 ***\nDESTIN_SZBKSZ08 -1.3811240  0.0084985  -162.515  < 2e-16 ***\nDESTIN_SZBKSZ09 -0.0797012  0.0061428   -12.975  < 2e-16 ***\nDESTIN_SZBLSZ01 -0.8859670  0.0088108  -100.555  < 2e-16 ***\nDESTIN_SZBLSZ02  0.1362723  0.0082167    16.585  < 2e-16 ***\nDESTIN_SZBLSZ03  1.2037396  0.0093508   128.732  < 2e-16 ***\nDESTIN_SZBLSZ04 -0.9316219  0.0178080   -52.315  < 2e-16 ***\nDESTIN_SZBMSZ01  0.7188470  0.0061160   117.536  < 2e-16 ***\nDESTIN_SZBMSZ02 -0.0597895  0.0061206    -9.769  < 2e-16 ***\nDESTIN_SZBMSZ03 -0.2427075  0.0069937   -34.704  < 2e-16 ***\nDESTIN_SZBMSZ04 -0.0622494  0.0065569    -9.494  < 2e-16 ***\nDESTIN_SZBMSZ05 -0.2857019  0.0086450   -33.048  < 2e-16 ***\nDESTIN_SZBMSZ06 -1.3486558  0.0158904   -84.872  < 2e-16 ***\nDESTIN_SZBMSZ07  0.4549687  0.0058315    78.020  < 2e-16 ***\nDESTIN_SZBMSZ08 -0.8730268  0.0077814  -112.195  < 2e-16 ***\nDESTIN_SZBMSZ09 -2.0319890  0.0163038  -124.633  < 2e-16 ***\nDESTIN_SZBMSZ10 -1.4319101  0.0102616  -139.541  < 2e-16 ***\nDESTIN_SZBMSZ11 -1.2429176  0.0092250  -134.733  < 2e-16 ***\nDESTIN_SZBMSZ12 -0.8526549  0.0096009   -88.810  < 2e-16 ***\nDESTIN_SZBMSZ13  0.1399907  0.0066885    20.930  < 2e-16 ***\nDESTIN_SZBMSZ14 -1.0103155  0.0091377  -110.566  < 2e-16 ***\nDESTIN_SZBMSZ15 -0.6819769  0.0086179   -79.135  < 2e-16 ***\nDESTIN_SZBMSZ16 -1.4468308  0.0134051  -107.931  < 2e-16 ***\nDESTIN_SZBMSZ17 -1.5312175  0.0186843   -81.952  < 2e-16 ***\nDESTIN_SZBPSZ01 -1.1726725  0.0073257  -160.077  < 2e-16 ***\nDESTIN_SZBPSZ02 -2.1072012  0.0103320  -203.949  < 2e-16 ***\nDESTIN_SZBPSZ03 -1.6944911  0.0098520  -171.995  < 2e-16 ***\nDESTIN_SZBPSZ04 -0.7664610  0.0074458  -102.939  < 2e-16 ***\nDESTIN_SZBPSZ05  0.1358370  0.0056258    24.145  < 2e-16 ***\nDESTIN_SZBPSZ06 -1.2425471  0.0096942  -128.175  < 2e-16 ***\nDESTIN_SZBPSZ07 -0.1666192  0.0094969   -17.545  < 2e-16 ***\nDESTIN_SZBSSZ01  0.3857894  0.0057261    67.374  < 2e-16 ***\nDESTIN_SZBSSZ02 -0.5293265  0.0064886   -81.578  < 2e-16 ***\nDESTIN_SZBSSZ03  0.3909966  0.0048540    80.551  < 2e-16 ***\nDESTIN_SZBTSZ01  0.7114965  0.0054528   130.482  < 2e-16 ***\nDESTIN_SZBTSZ02 -0.0487084  0.0082474    -5.906 3.51e-09 ***\nDESTIN_SZBTSZ03  0.5539032  0.0064423    85.979  < 2e-16 ***\nDESTIN_SZBTSZ04 -0.7120734  0.0128676   -55.339  < 2e-16 ***\nDESTIN_SZBTSZ05  0.2176097  0.0086791    25.073  < 2e-16 ***\nDESTIN_SZBTSZ06 -0.2167084  0.0084925   -25.518  < 2e-16 ***\nDESTIN_SZBTSZ07 -1.4045618  0.0124363  -112.940  < 2e-16 ***\nDESTIN_SZBTSZ08 -0.8213918  0.0120793   -68.000  < 2e-16 ***\nDESTIN_SZCBSZ01 -5.7340877  0.3333916   -17.199  < 2e-16 ***\nDESTIN_SZCCSZ01 -0.0304192  0.0095920    -3.171 0.001518 ** \nDESTIN_SZCHSZ01 -0.2598507  0.0115311   -22.535  < 2e-16 ***\nDESTIN_SZCHSZ02  0.3497750  0.0068334    51.186  < 2e-16 ***\nDESTIN_SZCHSZ03  2.4550172  0.0050883   482.481  < 2e-16 ***\nDESTIN_SZCKSZ01 -0.4691744  0.0063130   -74.319  < 2e-16 ***\nDESTIN_SZCKSZ02 -0.9557084  0.0069331  -137.847  < 2e-16 ***\nDESTIN_SZCKSZ03  0.0442112  0.0057117     7.740 9.91e-15 ***\nDESTIN_SZCKSZ04 -0.8592063  0.0081238  -105.764  < 2e-16 ***\nDESTIN_SZCKSZ05 -1.1745333  0.0087305  -134.532  < 2e-16 ***\nDESTIN_SZCKSZ06 -0.4982877  0.0085514   -58.269  < 2e-16 ***\nDESTIN_SZCLSZ01  0.2665065  0.0059712    44.632  < 2e-16 ***\nDESTIN_SZCLSZ02 -1.9758876  0.0150823  -131.007  < 2e-16 ***\nDESTIN_SZCLSZ03 -0.9051310  0.0091479   -98.944  < 2e-16 ***\nDESTIN_SZCLSZ04 -0.0828732  0.0061559   -13.462  < 2e-16 ***\nDESTIN_SZCLSZ05 -1.1414780  0.0100760  -113.287  < 2e-16 ***\nDESTIN_SZCLSZ06  0.3229402  0.0056269    57.392  < 2e-16 ***\nDESTIN_SZCLSZ07 -0.4833612  0.0069777   -69.272  < 2e-16 ***\nDESTIN_SZCLSZ08 -0.3219670  0.0075615   -42.580  < 2e-16 ***\nDESTIN_SZCLSZ09  0.0564166  0.0080703     6.991 2.74e-12 ***\nDESTIN_SZDTSZ02 -1.6384236  0.0374725   -43.723  < 2e-16 ***\nDESTIN_SZDTSZ03 -0.4021571  0.0152716   -26.334  < 2e-16 ***\nDESTIN_SZDTSZ13 -1.2799441  0.0177095   -72.274  < 2e-16 ***\nDESTIN_SZGLSZ01 -0.0190303  0.0060665    -3.137 0.001707 ** \nDESTIN_SZGLSZ02 -0.0308469  0.0058724    -5.253 1.50e-07 ***\nDESTIN_SZGLSZ03  0.6927638  0.0048456   142.969  < 2e-16 ***\nDESTIN_SZGLSZ04  0.9325848  0.0049183   189.616  < 2e-16 ***\nDESTIN_SZGLSZ05  0.8480056  0.0048801   173.768  < 2e-16 ***\nDESTIN_SZHGSZ01  0.0652969  0.0047795    13.662  < 2e-16 ***\nDESTIN_SZHGSZ02 -0.9498251  0.0066577  -142.667  < 2e-16 ***\nDESTIN_SZHGSZ03 -1.4372499  0.0076387  -188.154  < 2e-16 ***\nDESTIN_SZHGSZ04 -0.5236292  0.0055353   -94.599  < 2e-16 ***\nDESTIN_SZHGSZ05 -0.5420295  0.0058099   -93.295  < 2e-16 ***\nDESTIN_SZHGSZ06 -0.9054730  0.0067581  -133.983  < 2e-16 ***\nDESTIN_SZHGSZ07  0.0215109  0.0054019     3.982 6.83e-05 ***\nDESTIN_SZHGSZ08 -0.0490979  0.0059206    -8.293  < 2e-16 ***\nDESTIN_SZHGSZ09 -0.0711560  0.0062875   -11.317  < 2e-16 ***\nDESTIN_SZHGSZ10 -3.5807154  0.0290642  -123.200  < 2e-16 ***\nDESTIN_SZJESZ01 -0.4023638  0.0065057   -61.848  < 2e-16 ***\nDESTIN_SZJESZ02 -0.7654353  0.0067096  -114.081  < 2e-16 ***\nDESTIN_SZJESZ03 -0.8778812  0.0071238  -123.232  < 2e-16 ***\nDESTIN_SZJESZ04 -1.1998075  0.0088733  -135.215  < 2e-16 ***\nDESTIN_SZJESZ05 -1.5623652  0.0116898  -133.652  < 2e-16 ***\nDESTIN_SZJESZ06  0.2311474  0.0055595    41.577  < 2e-16 ***\nDESTIN_SZJESZ07 -1.2753348  0.0094838  -134.475  < 2e-16 ***\nDESTIN_SZJESZ08 -0.7654533  0.0099306   -77.081  < 2e-16 ***\nDESTIN_SZJESZ09  0.1637628  0.0074164    22.081  < 2e-16 ***\nDESTIN_SZJESZ10  0.7394958  0.0091249    81.041  < 2e-16 ***\nDESTIN_SZJESZ11  0.5157364  0.0086546    59.591  < 2e-16 ***\nDESTIN_SZJWSZ01 -1.0165204  0.0083025  -122.435  < 2e-16 ***\nDESTIN_SZJWSZ02 -0.8530646  0.0067851  -125.727  < 2e-16 ***\nDESTIN_SZJWSZ03  0.5176135  0.0056449    91.695  < 2e-16 ***\nDESTIN_SZJWSZ04  0.3427105  0.0058499    58.584  < 2e-16 ***\nDESTIN_SZJWSZ05 -1.1695940  0.0080069  -146.073  < 2e-16 ***\nDESTIN_SZJWSZ06 -0.7466462  0.0070240  -106.299  < 2e-16 ***\nDESTIN_SZJWSZ07 -3.0124535  0.0333481   -90.334  < 2e-16 ***\nDESTIN_SZJWSZ08 -0.4253502  0.0066584   -63.881  < 2e-16 ***\nDESTIN_SZJWSZ09  0.9428005  0.0053190   177.251  < 2e-16 ***\nDESTIN_SZKLSZ01 -0.2965013  0.0066422   -44.639  < 2e-16 ***\nDESTIN_SZKLSZ02 -0.4921137  0.0067689   -72.702  < 2e-16 ***\nDESTIN_SZKLSZ03 -0.8489213  0.0078294  -108.427  < 2e-16 ***\nDESTIN_SZKLSZ04 -1.2656342  0.0099918  -126.667  < 2e-16 ***\nDESTIN_SZKLSZ05 -0.3570126  0.0096300   -37.073  < 2e-16 ***\nDESTIN_SZKLSZ06 -2.4764906  0.0390868   -63.359  < 2e-16 ***\nDESTIN_SZKLSZ07 -0.7316189  0.0080994   -90.330  < 2e-16 ***\nDESTIN_SZKLSZ08 -0.1115398  0.0061168   -18.235  < 2e-16 ***\nDESTIN_SZLKSZ01 -1.4940710  0.0271518   -55.027  < 2e-16 ***\nDESTIN_SZMDSZ01 -1.6101440  0.0231238   -69.631  < 2e-16 ***\nDESTIN_SZMDSZ02 -0.9339318  0.0126277   -73.959  < 2e-16 ***\nDESTIN_SZMDSZ03 -3.4868547  0.0303657  -114.829  < 2e-16 ***\nDESTIN_SZMPSZ01 -0.4518483  0.0089869   -50.279  < 2e-16 ***\nDESTIN_SZMPSZ02 -0.5868264  0.0073193   -80.176  < 2e-16 ***\nDESTIN_SZMPSZ03  0.4805365  0.0059041    81.391  < 2e-16 ***\nDESTIN_SZMUSZ02 -1.3837581  0.0218713   -63.268  < 2e-16 ***\nDESTIN_SZNTSZ01 -3.0694691  0.0533346   -57.551  < 2e-16 ***\nDESTIN_SZNTSZ02 -1.4992973  0.0130358  -115.014  < 2e-16 ***\nDESTIN_SZNTSZ03 -0.5221236  0.0089923   -58.064  < 2e-16 ***\nDESTIN_SZNTSZ05 -1.9751162  0.0282369   -69.948  < 2e-16 ***\nDESTIN_SZNTSZ06 -3.9959411  0.0511214   -78.166  < 2e-16 ***\nDESTIN_SZNVSZ01 -0.1126966  0.0057077   -19.745  < 2e-16 ***\nDESTIN_SZNVSZ02 -0.0259250  0.0064427    -4.024 5.72e-05 ***\nDESTIN_SZNVSZ03 -0.0123214  0.0067692    -1.820 0.068725 .  \nDESTIN_SZNVSZ04 -1.3371298  0.0130261  -102.650  < 2e-16 ***\nDESTIN_SZNVSZ05 -0.9686333  0.0101539   -95.395  < 2e-16 ***\nDESTIN_SZPGSZ01 -1.1798309  0.0180543   -65.349  < 2e-16 ***\nDESTIN_SZPGSZ02 -1.3289737  0.0085335  -155.736  < 2e-16 ***\nDESTIN_SZPGSZ03 -0.1661373  0.0055166   -30.116  < 2e-16 ***\nDESTIN_SZPGSZ04 -0.3046408  0.0058469   -52.103  < 2e-16 ***\nDESTIN_SZPGSZ05 -1.5412612  0.0093261  -165.264  < 2e-16 ***\nDESTIN_SZPLSZ01 -0.3439667  0.0083504   -41.192  < 2e-16 ***\nDESTIN_SZPLSZ02 -1.7574919  0.0154244  -113.942  < 2e-16 ***\nDESTIN_SZPLSZ03 -0.3455776  0.0112089   -30.831  < 2e-16 ***\nDESTIN_SZPLSZ04 -2.0749385  0.0141153  -146.999  < 2e-16 ***\nDESTIN_SZPLSZ05 -0.4855216  0.0134069   -36.214  < 2e-16 ***\nDESTIN_SZPNSZ01  0.0117816  0.0083558     1.410 0.158543    \nDESTIN_SZPNSZ02  0.7389858  0.0089823    82.272  < 2e-16 ***\nDESTIN_SZPNSZ03 -0.4708719  0.0098588   -47.761  < 2e-16 ***\nDESTIN_SZPNSZ04  1.3156771  0.0111200   118.316  < 2e-16 ***\nDESTIN_SZPNSZ05  0.9881886  0.0153169    64.516  < 2e-16 ***\nDESTIN_SZPRSZ01 -1.0678999  0.0098295  -108.642  < 2e-16 ***\nDESTIN_SZPRSZ02  0.0650279  0.0063927    10.172  < 2e-16 ***\nDESTIN_SZPRSZ03  0.6348138  0.0050147   126.592  < 2e-16 ***\nDESTIN_SZPRSZ04 -0.3640286  0.0097572   -37.309  < 2e-16 ***\nDESTIN_SZPRSZ05  0.0380410  0.0062577     6.079 1.21e-09 ***\nDESTIN_SZPRSZ06  0.3153712  0.0068742    45.877  < 2e-16 ***\nDESTIN_SZPRSZ07 -1.6669973  0.0145573  -114.513  < 2e-16 ***\nDESTIN_SZPRSZ08 -0.6170648  0.0078424   -78.683  < 2e-16 ***\nDESTIN_SZQTSZ01 -0.5496582  0.0098285   -55.925  < 2e-16 ***\nDESTIN_SZQTSZ02 -0.7318114  0.0086807   -84.303  < 2e-16 ***\nDESTIN_SZQTSZ03 -0.5893064  0.0084789   -69.503  < 2e-16 ***\nDESTIN_SZQTSZ04 -0.7103906  0.0085341   -83.242  < 2e-16 ***\nDESTIN_SZQTSZ05 -0.4721472  0.0078164   -60.405  < 2e-16 ***\nDESTIN_SZQTSZ06 -0.6591466  0.0080069   -82.322  < 2e-16 ***\nDESTIN_SZQTSZ07 -0.9540454  0.0126807   -75.236  < 2e-16 ***\nDESTIN_SZQTSZ08  0.4508867  0.0064870    69.507  < 2e-16 ***\nDESTIN_SZQTSZ09 -0.4061810  0.0075485   -53.810  < 2e-16 ***\nDESTIN_SZQTSZ10  0.1351889  0.0068202    19.822  < 2e-16 ***\nDESTIN_SZQTSZ11  0.3181553  0.0067958    46.816  < 2e-16 ***\nDESTIN_SZQTSZ12 -0.1055766  0.0095576   -11.046  < 2e-16 ***\nDESTIN_SZQTSZ13  0.5199663  0.0071928    72.290  < 2e-16 ***\nDESTIN_SZQTSZ14  0.6086332  0.0078537    77.496  < 2e-16 ***\nDESTIN_SZQTSZ15  1.3906866  0.0092250   150.753  < 2e-16 ***\nDESTIN_SZRCSZ01 -0.0862091  0.0085363   -10.099  < 2e-16 ***\nDESTIN_SZRCSZ06 -1.0186282  0.0211113   -48.250  < 2e-16 ***\nDESTIN_SZRVSZ01 -1.5294454  0.0179337   -85.283  < 2e-16 ***\nDESTIN_SZRVSZ02 -2.3607754  0.0355628   -66.383  < 2e-16 ***\nDESTIN_SZRVSZ03 -1.5266254  0.0156276   -97.688  < 2e-16 ***\nDESTIN_SZRVSZ04 -1.0986565  0.0168695   -65.127  < 2e-16 ***\nDESTIN_SZRVSZ05 -2.4004418  0.0320917   -74.799  < 2e-16 ***\nDESTIN_SZSBSZ01 -1.4023966  0.0109496  -128.078  < 2e-16 ***\nDESTIN_SZSBSZ02 -1.3899893  0.0090891  -152.929  < 2e-16 ***\nDESTIN_SZSBSZ03  0.4509008  0.0059864    75.321  < 2e-16 ***\nDESTIN_SZSBSZ04  0.1796309  0.0070142    25.610  < 2e-16 ***\nDESTIN_SZSBSZ05 -1.3159699  0.0096485  -136.391  < 2e-16 ***\nDESTIN_SZSBSZ06 -1.7705263  0.0253064   -69.964  < 2e-16 ***\nDESTIN_SZSBSZ07 -0.7471529  0.0238628   -31.310  < 2e-16 ***\nDESTIN_SZSBSZ08  0.7884520  0.0069638   113.221  < 2e-16 ***\nDESTIN_SZSBSZ09  0.0131702  0.0066350     1.985 0.047150 *  \nDESTIN_SZSESZ02 -0.7247347  0.0060626  -119.541  < 2e-16 ***\nDESTIN_SZSESZ03  0.1032728  0.0048330    21.368  < 2e-16 ***\nDESTIN_SZSESZ04 -1.0992420  0.0068328  -160.878  < 2e-16 ***\nDESTIN_SZSESZ05 -0.8374712  0.0058155  -144.006  < 2e-16 ***\nDESTIN_SZSESZ06 -0.5531619  0.0074766   -73.985  < 2e-16 ***\nDESTIN_SZSESZ07 -3.0328672  0.0246371  -123.101  < 2e-16 ***\nDESTIN_SZSGSZ01 -0.1933777  0.0068235   -28.340  < 2e-16 ***\nDESTIN_SZSGSZ02 -0.3000845  0.0060284   -49.779  < 2e-16 ***\nDESTIN_SZSGSZ03 -0.4322879  0.0057308   -75.433  < 2e-16 ***\nDESTIN_SZSGSZ04 -0.1214792  0.0056548   -21.482  < 2e-16 ***\nDESTIN_SZSGSZ05 -2.0309074  0.0114993  -176.611  < 2e-16 ***\nDESTIN_SZSGSZ06  0.6592095  0.0046364   142.182  < 2e-16 ***\nDESTIN_SZSGSZ07 -0.4618538  0.0062027   -74.460  < 2e-16 ***\nDESTIN_SZSISZ01 -0.5227257  0.0293399   -17.816  < 2e-16 ***\nDESTIN_SZSKSZ01 -0.4797341  0.0091087   -52.668  < 2e-16 ***\nDESTIN_SZSKSZ02  0.8477357  0.0067821   124.996  < 2e-16 ***\nDESTIN_SZSKSZ03 -0.2477566  0.0074817   -33.115  < 2e-16 ***\nDESTIN_SZSKSZ04 -1.3315992  0.0167055   -79.710  < 2e-16 ***\nDESTIN_SZSKSZ05 -0.3519096  0.0131326   -26.797  < 2e-16 ***\nDESTIN_SZSLSZ01 -0.8570431  0.0102100   -83.941  < 2e-16 ***\nDESTIN_SZSLSZ04 -0.9949105  0.0088280  -112.699  < 2e-16 ***\nDESTIN_SZSRSZ01 -1.0260696  0.0154393   -66.458  < 2e-16 ***\nDESTIN_SZTHSZ01 -4.2040410  0.0404795  -103.856  < 2e-16 ***\nDESTIN_SZTHSZ03 -2.4907000  0.0264056   -94.325  < 2e-16 ***\nDESTIN_SZTHSZ04 -3.0701470  0.0244975  -125.325  < 2e-16 ***\nDESTIN_SZTHSZ06 -2.5308161  0.0169699  -149.135  < 2e-16 ***\nDESTIN_SZTMSZ01 -0.2354889  0.0067201   -35.042  < 2e-16 ***\nDESTIN_SZTMSZ02  1.7379292  0.0044573   389.906  < 2e-16 ***\nDESTIN_SZTMSZ03  0.9112458  0.0048718   187.043  < 2e-16 ***\nDESTIN_SZTMSZ04  1.0731075  0.0048626   220.685  < 2e-16 ***\nDESTIN_SZTMSZ05  0.6398583  0.0067321    95.046  < 2e-16 ***\nDESTIN_SZTNSZ01 -0.3500456  0.0083835   -41.754  < 2e-16 ***\nDESTIN_SZTNSZ02 -1.0573515  0.0112412   -94.060  < 2e-16 ***\nDESTIN_SZTNSZ03 -1.4069979  0.0132733  -106.002  < 2e-16 ***\nDESTIN_SZTNSZ04 -0.3616604  0.0085207   -42.445  < 2e-16 ***\nDESTIN_SZTPSZ01 -0.5919243  0.0071153   -83.190  < 2e-16 ***\nDESTIN_SZTPSZ02  0.7083350  0.0046540   152.198  < 2e-16 ***\nDESTIN_SZTPSZ03 -0.5746433  0.0069625   -82.534  < 2e-16 ***\nDESTIN_SZTPSZ04 -1.5821259  0.0084517  -187.196  < 2e-16 ***\nDESTIN_SZTPSZ05 -1.1796256  0.0073039  -161.505  < 2e-16 ***\nDESTIN_SZTPSZ06 -0.3968272  0.0077295   -51.339  < 2e-16 ***\nDESTIN_SZTPSZ07 -2.1796617  0.0135199  -161.219  < 2e-16 ***\nDESTIN_SZTPSZ08 -1.2568483  0.0107267  -117.170  < 2e-16 ***\nDESTIN_SZTPSZ09 -0.2446623  0.0080840   -30.265  < 2e-16 ***\nDESTIN_SZTPSZ10 -1.2542191  0.0102049  -122.904  < 2e-16 ***\nDESTIN_SZTPSZ11 -0.0886883  0.0062888   -14.102  < 2e-16 ***\nDESTIN_SZTPSZ12 -0.7211823  0.0075086   -96.048  < 2e-16 ***\nDESTIN_SZTSSZ01 -1.6271921  0.0238498   -68.227  < 2e-16 ***\nDESTIN_SZTSSZ02 -0.3340439  0.0169137   -19.750  < 2e-16 ***\nDESTIN_SZTSSZ03  0.3924580  0.0111060    35.338  < 2e-16 ***\nDESTIN_SZTSSZ04  0.4169932  0.0114926    36.283  < 2e-16 ***\nDESTIN_SZTSSZ05  1.3206287  0.0120381   109.704  < 2e-16 ***\nDESTIN_SZTSSZ06  2.4023725  0.0192840   124.579  < 2e-16 ***\nDESTIN_SZWCSZ01  2.0697378  0.0061379   337.206  < 2e-16 ***\nDESTIN_SZWCSZ02 -2.0934025  0.0134782  -155.318  < 2e-16 ***\nDESTIN_SZWCSZ03 -3.0670149  0.0349748   -87.692  < 2e-16 ***\nDESTIN_SZWDSZ01  1.0113215  0.0051461   196.522  < 2e-16 ***\nDESTIN_SZWDSZ02 -1.3383793  0.0076482  -174.993  < 2e-16 ***\nDESTIN_SZWDSZ03  0.3394361  0.0060396    56.202  < 2e-16 ***\nDESTIN_SZWDSZ04 -0.8324928  0.0086019   -96.780  < 2e-16 ***\nDESTIN_SZWDSZ05 -0.8279090  0.0083251   -99.447  < 2e-16 ***\nDESTIN_SZWDSZ06 -0.2252899  0.0061074   -36.888  < 2e-16 ***\nDESTIN_SZWDSZ07 -1.3638599  0.0077990  -174.877  < 2e-16 ***\nDESTIN_SZWDSZ08 -0.4350176  0.0077566   -56.083  < 2e-16 ***\nDESTIN_SZWDSZ09  0.5461048  0.0060745    89.901  < 2e-16 ***\nDESTIN_SZYSSZ01  0.0243093  0.0053476     4.546 5.47e-06 ***\nDESTIN_SZYSSZ02 -0.3398962  0.0065947   -51.540  < 2e-16 ***\nDESTIN_SZYSSZ03 -0.3694187  0.0074032   -49.900  < 2e-16 ***\nDESTIN_SZYSSZ04 -0.5222848  0.0067396   -77.495  < 2e-16 ***\nDESTIN_SZYSSZ05 -1.5460539  0.0124899  -123.784  < 2e-16 ***\nDESTIN_SZYSSZ06 -1.5556892  0.0127640  -121.881  < 2e-16 ***\nDESTIN_SZYSSZ07 -0.8673403  0.0167723   -51.713  < 2e-16 ***\nDESTIN_SZYSSZ08  0.5389364  0.0052540   102.577  < 2e-16 ***\nDESTIN_SZYSSZ09  0.1199483  0.0055235    21.716  < 2e-16 ***\nlog(dist)       -1.8906989  0.0005319 -3554.786  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance:  8091747  on 13715  degrees of freedom\nAIC: 8177420\n\nNumber of Fisher Scoring iterations: 7\n\n\n\nCalcRSquared(dbcSIM$data$TRIPS, dbcSIM$fitted.values)\n\n[1] 0.6883675\n\n\nWe notice that there is a relatively greater improvement in the R^2 value for the doubly constrained model.\n\n\n\n\n\n16.8.9 Model comparison\nAnother useful model performance measure for continuous dependent variable is Root Mean Squared Error. In this sub-section, you will learn how to use compare_performance() of performance package\nFirst of all, let us create a list called model_list by using the code chunk below. It contains all our fitted models for all four variations of gravity model.\n\nmodel_list <- list(unconstrained=uncSIM,\n                   originConstrained=orcSIM,\n                   destinationConstrained=decSIM,\n                   doublyConstrained=dbcSIM)\n\nNext, we will compute the RMSE of all the models in model_list file by using the code chunk below.\nGenerally, the smaller RMSE the better the model.\nThe print below reveals that doubly constrained SIM is the best model among all the four SIMs because it has the smallest RMSE value of 1487.111.\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName                   | Model |     RMSE\n-----------------------------------------\nunconstrained          |   glm | 2429.978\noriginConstrained      |   glm | 2057.579\ndestinationConstrained |   glm | 1891.724\ndoublyConstrained      |   glm | 1487.111\n\n\n\n\n16.8.10 Visualising fitted\nIn this section, we will learn how to visualise the observed values and the fitted values.\nFirstly we will extract the fitted values from each model by using the code chunk below.\n\ndf <- as.data.frame(uncSIM$fitted.values) %>% \n  round(digits=0)\nhead(df)\n\n  uncSIM$fitted.values\n1                 5580\n2                 2537\n3                 5258\n4                 3602\n5                 5617\n6                 1633\n\n\nNext, we will join the values to SIM_data data frame.\n\nSIM_data <- SIM_data %>% \n  cbind(df) %>% \n  rename(uncTRIPS = `uncSIM$fitted.values`)\n\nRepeat the same step by for Origin Constrained SIM (i.e. orcSIM)\n\ndf <- as.data.frame(orcSIM$fitted.values) %>%\n  round(digits = 0)\n\n\nSIM_data <- SIM_data %>%\n  cbind(df) %>%\n  rename(orcTRIPS = \"orcSIM$fitted.values\")\n\nRepeat the same step by for Destination Constrained SIM (i.e. decSIM)\n\ndf <- as.data.frame(decSIM$fitted.values) %>%\n  round(digits = 0)\n\n\nSIM_data <- SIM_data %>%\n  cbind(df) %>%\n  rename(decTRIPS = \"decSIM$fitted.values\")\n\nRepeat the same step by for Doubly Constrained SIM (i.e. dbcSIM)\n\ndf <- as.data.frame(dbcSIM$fitted.values) %>%\n  round(digits = 0)\n\n\nSIM_data <- SIM_data %>%\n  cbind(df) %>%\n  rename(dbcTRIPS = \"dbcSIM$fitted.values\")\n\n\nsums_vector <- c(sum(SIM_data$TRIPS),\n                 sum(SIM_data$uncTRIPS), \n                 sum(SIM_data$orcTRIPS),\n                 sum(SIM_data$decTRIPS),\n                 sum(SIM_data$dbcTRIPS)\n                 )\n\ndata.frame(Sums= sums_vector) %>% knitr::kable() \n\n\n\n\nSums\n\n\n\n\n9481863\n\n\n9481832\n\n\n9481873\n\n\n9481867\n\n\n9481876\n\n\n\n\n\nIn theory, the sum of the all the TRIPS should be equal. The mis-match in values could be due to round() function used earlier.\nUsing the ggarrange() function of the ggpubr package, we will now print the ‘actual vs predicted’ plots side-by-side\n\nunc_p <- ggplot(data = SIM_data,\n                aes(x = uncTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\norc_p <- ggplot(data = SIM_data,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndec_p <- ggplot(data = SIM_data,\n                aes(x = decTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndbc_p <- ggplot(data = SIM_data,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\nggarrange(unc_p, orc_p, dec_p, dbc_p,\n          ncol = 2,\n          nrow = 2)\n\n\n\n\nDiscussion on results:\nDoubly constrained: best model as not dispersed. The R^2 value of doubly constrained model is 0.688, which means that our indpendent variables can account for more than 60% of the variance in our target variable (Trips) . We have only achieved 60% accuracy because we have only one or two variables. If we add more variables like job opportunities in each destination, we could potentially get better results.\n\n#| eval: false\n#| echo: false\n#| fig-width: 14\n#| fig-asp: 0.68\n#| code-fold: True"
  },
  {
    "objectID": "In-class_Ex3/In-class_Ex3_2.html#summaries",
    "href": "In-class_Ex3/In-class_Ex3_2.html#summaries",
    "title": "In-class Exercise 3: Calibrating Spatial Interaction Models with R",
    "section": "Summaries",
    "text": "Summaries\nOD matrix is often incomplete. Imagine trying to complete the flow values in the OD matrix, it would involve us doing spatial interaction or OD surveys to find the missing values. There are 332 subzones in Singapore, and each survey is expensive,. In addition, OD matrix is constantly changing as flow patterns changes. We are trying to predict future flows between origins and destinations. Flow could be thought of a function of (1) attribute of origin (propulsiveness) (2) attribute of destination (attractiveness) and (3) cost friction (like distance or transport cost or public transport stops). Assumption is that the benefits must outweigh the cost in order for flow to happen.\nGravity model takes into consideration the interaction between all origin and destination locations.\nPotential model takes in consideration the interaction between a location and all other location pairs. (Good for measuring accessibility)\nRetail model is commonly used by franchise like KFC / Pizza Hut to determine their area/region of service (aka delivery zones) for each outlet.\nThere are 4 variations in the Gravity model:\n\nUnconstrained: only the overall outflow is fixed and total outflow from origins = total inflow to destinations\nOrigin constrained: outflow by origin is fixed.\nDestination constrained: inflow by destination is fixed.\nDoubly constrained: outflow by origin and inflow by destination is fixed.\n\nTo calculate flow from each origin to each destination, we need parameters like k, alpha, lambda and beta. The beta for distance is usually negative because we assume that there is an inverse relationship between interaction and distance, like Newtonian physics and laws of gravity."
  },
  {
    "objectID": "In-class_Ex4/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "In-class_Ex4/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex4/In-class_Ex4.html",
    "href": "In-class_Ex4/In-class_Ex4.html",
    "title": "In-class Exercise 4:",
    "section": "",
    "text": "In this in-class exercise, we will gain hands-on experience on the following tasks:\n\nperforming geocoding using data downloaded from data.gov.sg\ncalibrating Geographically Weighted Poisson Regression"
  },
  {
    "objectID": "In-class_Ex4/In-class_Ex4.html#geocoding",
    "href": "In-class_Ex4/In-class_Ex4.html#geocoding",
    "title": "In-class Exercise 4:",
    "section": "Geocoding",
    "text": "Geocoding\nOneMap API is owned by SLA. The complete documentation is found here.\n\nurl <- 'https://www.onemap.gov.sg/api/common/elastic/search'\n\ncsv <- read_csv('data/aspatial/Generalinformationofschools.csv')\npostcodes <- csv$`postal_code`\n\n\nfound <- data.frame()\nnot_found <- data.frame()\n\nfor(postcode in postcodes) {\n  query <- list('searchVal' = postcode, 'returnGeom' = 'Y', 'getAddrDetails' = 'Y', 'pageNum' = '1')\n  res <- GET(url, query=query)\n\n  \n  if((content(res)$found)!=0){\n    found<-rbind(found, data.frame(content(res))[4:13])\n  } else{\n    not_found = data.frame(postcode)\n  }\n}\n\n\n\n\n\n\n\nReload the schools.csv into R\n\nsch <- read_csv('data/aspatial/schools.csv') %>% \n  select(postal_code, school_name, results.LONGITUDE, results.LATITUDE )\n\nConvert to sf object using ‘lng’ and ‘lat’ and convert to SVY21\n\nsch_sf <- st_as_sf(sch,\n                   coords = c('results.LONGITUDE','results.LATITUDE'),\n                        crs=4326) %>% \n  st_transform(crs=3414)\n\nVisualise\n\nmpsz <- st_read(dsn='data/geospatial/MPSZ-2019',\n                layer='MPSZ-2019') %>% \n  st_transform(crs=3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\In-class_Ex4\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\ntmap_mode('view')\n\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons(alpha=0.3) +\ntm_shape(sch_sf) +\n  tm_dots() +\n  tm_view(set.zoom.limits = c(11,16))\n\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "In-class_Ex4/In-class_Ex4.html#sim-calibration",
    "href": "In-class_Ex4/In-class_Ex4.html#sim-calibration",
    "title": "In-class Exercise 4:",
    "section": "SIM Calibration",
    "text": "SIM Calibration\nload the data into R\n\nflow_data <- read_rds('data/rds/flow_data_tidy.rds')\nglimpse(flow_data)\n\nRows: 14,734\nColumns: 13\n$ ORIGIN_SZ       <chr> \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       <chr> \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ MORNING_PEAK    <dbl> 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ dist            <dbl> 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  <dbl> 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 <dbl> 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 <dbl> 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  <dbl> 310.00, 1140.00, 1010.00, 980.00, 810.00, 1050.00, 420…\n$ DESTIN_AGE13_24 <dbl> 710.00, 2770.00, 2650.00, 2000.00, 1920.00, 2390.00, 1…\n$ DESTIN_AGE25_64 <dbl> 2780.00, 15700.00, 14240.00, 11320.00, 9650.00, 12460.…\n$ SCHOOL_COUNT    <dbl> 0.99, 2.00, 2.00, 1.00, 3.00, 2.00, 0.99, 0.99, 3.00, …\n$ RETAIL_COUNT    <dbl> 1.00, 0.99, 6.00, 0.99, 0.99, 0.99, 1.00, 117.00, 0.99…\n$ geometry        <LINESTRING [m]> LINESTRING (29501.77 39419...., LINESTRING …\n\n\n\nflow_data$FlowNoIntra <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$MORNING_PEAK)\nflow_data$offset <- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\n\ninter_zonal_flow <- flow_data %>% \n  filter(FlowNoIntra >0)\n\ninter_zonal_flow <- inter_zonal_flow %>% \n  rename(TRIPS = MORNING_PEAK,\n         DIST = dist)\n\n\nOrigin constrained\nlog(DIST) -1 is to remove the Y-intercept because origin is controlled, we do not need the intercept.\n\norcSIM_Poisson <- glm(formula= TRIPS ~\n                ORIGIN_SZ +\n                log(SCHOOL_COUNT) +\n                log(RETAIL_COUNT) +\n                log(DIST) -1,\n              family = poisson(link='log'),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\n\nsummary(orcSIM_Poisson)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT) + log(RETAIL_COUNT) + \n    log(DIST) - 1, family = poisson(link = \"log\"), data = inter_zonal_flow, \n    na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-250.52   -17.17    -7.98     1.24   470.15  \n\nCoefficients:\n                    Estimate Std. Error  z value Pr(>|z|)    \nORIGIN_SZAMSZ01   19.8739840  0.0047627  4172.84   <2e-16 ***\nORIGIN_SZAMSZ02   20.5902203  0.0042786  4812.33   <2e-16 ***\nORIGIN_SZAMSZ03   20.2327026  0.0045531  4443.70   <2e-16 ***\nORIGIN_SZAMSZ04   19.7744438  0.0049837  3967.79   <2e-16 ***\nORIGIN_SZAMSZ05   19.6574529  0.0056396  3485.61   <2e-16 ***\nORIGIN_SZAMSZ06   19.9659115  0.0048946  4079.16   <2e-16 ***\nORIGIN_SZAMSZ07   18.6746164  0.0096316  1938.90   <2e-16 ***\nORIGIN_SZAMSZ08   19.2701601  0.0090776  2122.82   <2e-16 ***\nORIGIN_SZAMSZ09   19.9889467  0.0052858  3781.64   <2e-16 ***\nORIGIN_SZAMSZ10   20.3422035  0.0045778  4443.62   <2e-16 ***\nORIGIN_SZAMSZ11   18.3944113  0.0129212  1423.58   <2e-16 ***\nORIGIN_SZAMSZ12   18.3484209  0.0109652  1673.33   <2e-16 ***\nORIGIN_SZBDSZ01   20.9668587  0.0043388  4832.36   <2e-16 ***\nORIGIN_SZBDSZ02   20.4059518  0.0050601  4032.75   <2e-16 ***\nORIGIN_SZBDSZ03   20.6725514  0.0045276  4565.93   <2e-16 ***\nORIGIN_SZBDSZ04   21.6703853  0.0038930  5566.44   <2e-16 ***\nORIGIN_SZBDSZ05   20.7497445  0.0046085  4502.46   <2e-16 ***\nORIGIN_SZBDSZ06   20.9119361  0.0046432  4503.77   <2e-16 ***\nORIGIN_SZBDSZ07   18.9749815  0.0097896  1938.28   <2e-16 ***\nORIGIN_SZBDSZ08   19.1933901  0.0091312  2101.95   <2e-16 ***\nORIGIN_SZBKSZ01   19.5422606  0.0064732  3018.96   <2e-16 ***\nORIGIN_SZBKSZ02   20.1748913  0.0050076  4028.89   <2e-16 ***\nORIGIN_SZBKSZ03   20.3984624  0.0047226  4319.35   <2e-16 ***\nORIGIN_SZBKSZ04   19.6182212  0.0059652  3288.76   <2e-16 ***\nORIGIN_SZBKSZ05   19.6033818  0.0063181  3102.74   <2e-16 ***\nORIGIN_SZBKSZ06   19.7145224  0.0056372  3497.20   <2e-16 ***\nORIGIN_SZBKSZ07   20.4237448  0.0041912  4873.03   <2e-16 ***\nORIGIN_SZBKSZ08   19.7992538  0.0050405  3928.02   <2e-16 ***\nORIGIN_SZBKSZ09   19.7821586  0.0055558  3560.66   <2e-16 ***\nORIGIN_SZBLSZ01   17.7977276  0.0149058  1194.01   <2e-16 ***\nORIGIN_SZBLSZ02   17.4287491  0.0192364   906.03   <2e-16 ***\nORIGIN_SZBLSZ03   16.5884288  0.0459848   360.74   <2e-16 ***\nORIGIN_SZBLSZ04   17.7851626  0.0232823   763.89   <2e-16 ***\nORIGIN_SZBMSZ01   20.0751840  0.0052887  3795.89   <2e-16 ***\nORIGIN_SZBMSZ02   18.6956140  0.0066656  2804.80   <2e-16 ***\nORIGIN_SZBMSZ03   19.3204425  0.0054755  3528.56   <2e-16 ***\nORIGIN_SZBMSZ04   19.4724220  0.0049390  3942.59   <2e-16 ***\nORIGIN_SZBMSZ05   16.9581801  0.0168804  1004.61   <2e-16 ***\nORIGIN_SZBMSZ06   16.9898638  0.0181852   934.27   <2e-16 ***\nORIGIN_SZBMSZ07   19.2868403  0.0056231  3429.91   <2e-16 ***\nORIGIN_SZBMSZ08   19.1477543  0.0055918  3424.28   <2e-16 ***\nORIGIN_SZBMSZ09   18.7564539  0.0086298  2173.46   <2e-16 ***\nORIGIN_SZBMSZ10   18.3617854  0.0089250  2057.35   <2e-16 ***\nORIGIN_SZBMSZ11   18.9167941  0.0063340  2986.54   <2e-16 ***\nORIGIN_SZBMSZ12   18.7874661  0.0093024  2019.63   <2e-16 ***\nORIGIN_SZBMSZ13   19.5654046  0.0057517  3401.70   <2e-16 ***\nORIGIN_SZBMSZ14   19.0685619  0.0063346  3010.24   <2e-16 ***\nORIGIN_SZBMSZ15   19.4403124  0.0058147  3343.30   <2e-16 ***\nORIGIN_SZBMSZ16   18.4469203  0.0092638  1991.28   <2e-16 ***\nORIGIN_SZBMSZ17   18.3430175  0.0157692  1163.22   <2e-16 ***\nORIGIN_SZBPSZ01   20.1806714  0.0053660  3760.81   <2e-16 ***\nORIGIN_SZBPSZ02   19.8116707  0.0061485  3222.19   <2e-16 ***\nORIGIN_SZBPSZ03   19.8467602  0.0059769  3320.57   <2e-16 ***\nORIGIN_SZBPSZ04   20.4613200  0.0048398  4227.72   <2e-16 ***\nORIGIN_SZBPSZ05   20.5379711  0.0043769  4692.39   <2e-16 ***\nORIGIN_SZBPSZ06   18.8948034  0.0093668  2017.21   <2e-16 ***\nORIGIN_SZBPSZ07   19.4104568  0.0087961  2206.70   <2e-16 ***\nORIGIN_SZBSSZ01   20.0139503  0.0056561  3538.45   <2e-16 ***\nORIGIN_SZBSSZ02   20.2543885  0.0047198  4291.38   <2e-16 ***\nORIGIN_SZBSSZ03   19.5428803  0.0052713  3707.41   <2e-16 ***\nORIGIN_SZBTSZ01   20.0198045  0.0058541  3419.77   <2e-16 ***\nORIGIN_SZBTSZ02   19.3618525  0.0081472  2376.51   <2e-16 ***\nORIGIN_SZBTSZ03   19.5883853  0.0068935  2841.59   <2e-16 ***\nORIGIN_SZBTSZ04   18.7720238  0.0103909  1806.58   <2e-16 ***\nORIGIN_SZBTSZ05   18.8069026  0.0120628  1559.08   <2e-16 ***\nORIGIN_SZBTSZ06   18.7068633  0.0094575  1978.00   <2e-16 ***\nORIGIN_SZBTSZ07   17.6292257  0.0141551  1245.43   <2e-16 ***\nORIGIN_SZBTSZ08   18.6989374  0.0109610  1705.94   <2e-16 ***\nORIGIN_SZCBSZ01   18.2189868  0.0548317   332.27   <2e-16 ***\nORIGIN_SZCCSZ01   18.9734563  0.0139450  1360.59   <2e-16 ***\nORIGIN_SZCHSZ01   19.5955119  0.0121035  1619.00   <2e-16 ***\nORIGIN_SZCHSZ02   19.3320960  0.0081620  2368.55   <2e-16 ***\nORIGIN_SZCHSZ03   21.2164518  0.0063552  3338.43   <2e-16 ***\nORIGIN_SZCKSZ01   20.1046845  0.0049333  4075.29   <2e-16 ***\nORIGIN_SZCKSZ02   20.5371946  0.0050256  4086.53   <2e-16 ***\nORIGIN_SZCKSZ03   20.7210560  0.0042184  4912.07   <2e-16 ***\nORIGIN_SZCKSZ04   21.4013886  0.0042524  5032.80   <2e-16 ***\nORIGIN_SZCKSZ05   20.9413146  0.0049434  4236.18   <2e-16 ***\nORIGIN_SZCKSZ06   20.2557727  0.0071832  2819.88   <2e-16 ***\nORIGIN_SZCLSZ01   19.3383703  0.0076634  2523.46   <2e-16 ***\nORIGIN_SZCLSZ02   18.5226956  0.0135522  1366.77   <2e-16 ***\nORIGIN_SZCLSZ03   19.0225512  0.0080145  2373.51   <2e-16 ***\nORIGIN_SZCLSZ04   20.7981505  0.0042400  4905.22   <2e-16 ***\nORIGIN_SZCLSZ05   18.3015625  0.0146815  1246.58   <2e-16 ***\nORIGIN_SZCLSZ06   20.8207386  0.0039567  5262.09   <2e-16 ***\nORIGIN_SZCLSZ07   19.6728958  0.0054199  3629.76   <2e-16 ***\nORIGIN_SZCLSZ08   20.0851929  0.0056956  3526.43   <2e-16 ***\nORIGIN_SZCLSZ09   18.5749589  0.0165415  1122.93   <2e-16 ***\nORIGIN_SZDTSZ02   15.8276209  0.0833992   189.78   <2e-16 ***\nORIGIN_SZDTSZ03   16.2512838  0.0737972   220.22   <2e-16 ***\nORIGIN_SZDTSZ13   16.7744385  0.0312450   536.87   <2e-16 ***\nORIGIN_SZGLSZ01   18.2368248  0.0096104  1897.62   <2e-16 ***\nORIGIN_SZGLSZ02   19.8705255  0.0049014  4054.06   <2e-16 ***\nORIGIN_SZGLSZ03   19.8249435  0.0053109  3732.85   <2e-16 ***\nORIGIN_SZGLSZ04   20.7800335  0.0041261  5036.20   <2e-16 ***\nORIGIN_SZGLSZ05   20.6040494  0.0043049  4786.23   <2e-16 ***\nORIGIN_SZHGSZ01   20.0273475  0.0044824  4468.04   <2e-16 ***\nORIGIN_SZHGSZ02   20.2480656  0.0044575  4542.47   <2e-16 ***\nORIGIN_SZHGSZ03   20.0756442  0.0049003  4096.81   <2e-16 ***\nORIGIN_SZHGSZ04   20.7577748  0.0040465  5129.84   <2e-16 ***\nORIGIN_SZHGSZ05   20.9779992  0.0040123  5228.42   <2e-16 ***\nORIGIN_SZHGSZ06   19.7403058  0.0054229  3640.20   <2e-16 ***\nORIGIN_SZHGSZ07   20.1896268  0.0046051  4384.22   <2e-16 ***\nORIGIN_SZHGSZ08   19.8646492  0.0052403  3790.72   <2e-16 ***\nORIGIN_SZHGSZ09   18.3647736  0.0069196  2654.04   <2e-16 ***\nORIGIN_SZHGSZ10   16.8720475  0.0421046   400.72   <2e-16 ***\nORIGIN_SZJESZ01   20.2673794  0.0046723  4337.79   <2e-16 ***\nORIGIN_SZJESZ02   20.0595982  0.0046503  4313.61   <2e-16 ***\nORIGIN_SZJESZ03   19.9128778  0.0049848  3994.75   <2e-16 ***\nORIGIN_SZJESZ04   18.5053667  0.0099227  1864.94   <2e-16 ***\nORIGIN_SZJESZ05   17.8172930  0.0138840  1283.29   <2e-16 ***\nORIGIN_SZJESZ06   20.0124157  0.0045009  4446.36   <2e-16 ***\nORIGIN_SZJESZ07   18.1821423  0.0117267  1550.49   <2e-16 ***\nORIGIN_SZJESZ08   18.8713046  0.0116456  1620.46   <2e-16 ***\nORIGIN_SZJESZ09   20.5535527  0.0048456  4241.72   <2e-16 ***\nORIGIN_SZJESZ10   18.4922322  0.0191243   966.95   <2e-16 ***\nORIGIN_SZJESZ11   18.2891211  0.0197114   927.85   <2e-16 ***\nORIGIN_SZJWSZ01   20.4912737  0.0063102  3247.35   <2e-16 ***\nORIGIN_SZJWSZ02   20.8236694  0.0042249  4928.82   <2e-16 ***\nORIGIN_SZJWSZ03   21.2587613  0.0039733  5350.40   <2e-16 ***\nORIGIN_SZJWSZ04   20.3816464  0.0046199  4411.67   <2e-16 ***\nORIGIN_SZJWSZ05   18.0607448  0.0128857  1401.61   <2e-16 ***\nORIGIN_SZJWSZ06   18.7015202  0.0107614  1737.83   <2e-16 ***\nORIGIN_SZJWSZ07   17.3991822  0.0277096   627.91   <2e-16 ***\nORIGIN_SZJWSZ08   21.8044465  0.0037356  5836.95   <2e-16 ***\nORIGIN_SZJWSZ09   21.5414930  0.0036033  5978.19   <2e-16 ***\nORIGIN_SZKLSZ01   20.0307712  0.0047868  4184.59   <2e-16 ***\nORIGIN_SZKLSZ02   19.0634769  0.0062318  3059.05   <2e-16 ***\nORIGIN_SZKLSZ03   19.2685700  0.0057172  3370.25   <2e-16 ***\nORIGIN_SZKLSZ04   17.7085067  0.0119809  1478.06   <2e-16 ***\nORIGIN_SZKLSZ05   18.6384471  0.0107596  1732.26   <2e-16 ***\nORIGIN_SZKLSZ06   13.7280296  0.1857160    73.92   <2e-16 ***\nORIGIN_SZKLSZ07   18.6425146  0.0084952  2194.47   <2e-16 ***\nORIGIN_SZKLSZ08   18.0928506  0.0101567  1781.37   <2e-16 ***\nORIGIN_SZLKSZ01   17.8907138  0.0397083   450.55   <2e-16 ***\nORIGIN_SZMDSZ01   18.7605188  0.0285455   657.22   <2e-16 ***\nORIGIN_SZMDSZ02   19.1533927  0.0102815  1862.90   <2e-16 ***\nORIGIN_SZMDSZ03   17.8404982  0.0169690  1051.36   <2e-16 ***\nORIGIN_SZMPSZ01   19.0765941  0.0083937  2272.74   <2e-16 ***\nORIGIN_SZMPSZ02   19.2162527  0.0068331  2812.24   <2e-16 ***\nORIGIN_SZMPSZ03   19.9965344  0.0054569  3664.44   <2e-16 ***\nORIGIN_SZMUSZ02   15.9130765  0.1037472   153.38   <2e-16 ***\nORIGIN_SZNTSZ01   17.0840999  0.0352513   484.64   <2e-16 ***\nORIGIN_SZNTSZ02   16.5792122  0.0233186   710.99   <2e-16 ***\nORIGIN_SZNTSZ03   18.9506415  0.0075957  2494.93   <2e-16 ***\nORIGIN_SZNTSZ05   15.8770261  0.0495825   320.21   <2e-16 ***\nORIGIN_SZNTSZ06   15.3997415  0.0557029   276.46   <2e-16 ***\nORIGIN_SZNVSZ01   20.2241694  0.0043487  4650.65   <2e-16 ***\nORIGIN_SZNVSZ02   19.1897826  0.0065383  2934.97   <2e-16 ***\nORIGIN_SZNVSZ03   18.8854268  0.0080459  2347.22   <2e-16 ***\nORIGIN_SZNVSZ04   18.8940191  0.0090985  2076.61   <2e-16 ***\nORIGIN_SZNVSZ05   17.6278585  0.0168107  1048.61   <2e-16 ***\nORIGIN_SZPGSZ01   19.4825220  0.0122960  1584.46   <2e-16 ***\nORIGIN_SZPGSZ02   19.4726761  0.0073116  2663.25   <2e-16 ***\nORIGIN_SZPGSZ03   20.5515713  0.0045631  4503.86   <2e-16 ***\nORIGIN_SZPGSZ04   21.0527131  0.0041500  5072.89   <2e-16 ***\nORIGIN_SZPGSZ05   20.1436604  0.0057267  3517.48   <2e-16 ***\nORIGIN_SZPLSZ01   19.1832002  0.0120006  1598.53   <2e-16 ***\nORIGIN_SZPLSZ02   18.8752206  0.0149740  1260.53   <2e-16 ***\nORIGIN_SZPLSZ03   18.1000818  0.0371769   486.86   <2e-16 ***\nORIGIN_SZPLSZ04   17.1730559  0.0370280   463.79   <2e-16 ***\nORIGIN_SZPLSZ05   17.9084439  0.0225031   795.82   <2e-16 ***\nORIGIN_SZPNSZ01   21.0804425  0.0044829  4702.41   <2e-16 ***\nORIGIN_SZPNSZ02   19.8822123  0.0111507  1783.05   <2e-16 ***\nORIGIN_SZPNSZ03   17.9293289  0.0193571   926.24   <2e-16 ***\nORIGIN_SZPNSZ04   17.1039594  0.0334954   510.64   <2e-16 ***\nORIGIN_SZPNSZ05   18.2543864  0.0275554   662.46   <2e-16 ***\nORIGIN_SZPRSZ01   19.8777935  0.0117586  1690.49   <2e-16 ***\nORIGIN_SZPRSZ02   21.0751780  0.0044832  4700.88   <2e-16 ***\nORIGIN_SZPRSZ03   20.6717019  0.0045577  4535.55   <2e-16 ***\nORIGIN_SZPRSZ04   19.6365125  0.0074923  2620.90   <2e-16 ***\nORIGIN_SZPRSZ05   21.3132151  0.0042119  5060.24   <2e-16 ***\nORIGIN_SZPRSZ06   18.9314574  0.0117278  1614.24   <2e-16 ***\nORIGIN_SZPRSZ07   17.2822918  0.0162430  1063.98   <2e-16 ***\nORIGIN_SZPRSZ08   19.9267642  0.0062298  3198.62   <2e-16 ***\nORIGIN_SZQTSZ01   19.7357175  0.0066359  2974.08   <2e-16 ***\nORIGIN_SZQTSZ02   19.2082141  0.0061402  3128.26   <2e-16 ***\nORIGIN_SZQTSZ03   19.7771883  0.0056220  3517.83   <2e-16 ***\nORIGIN_SZQTSZ04   18.7114421  0.0072842  2568.76   <2e-16 ***\nORIGIN_SZQTSZ05   19.3049324  0.0062401  3093.69   <2e-16 ***\nORIGIN_SZQTSZ06   19.2643228  0.0065590  2937.09   <2e-16 ***\nORIGIN_SZQTSZ07   18.5697347  0.0095373  1947.06   <2e-16 ***\nORIGIN_SZQTSZ08   19.6147001  0.0061330  3198.21   <2e-16 ***\nORIGIN_SZQTSZ09   19.2550793  0.0069947  2752.82   <2e-16 ***\nORIGIN_SZQTSZ10   19.5801866  0.0064513  3035.07   <2e-16 ***\nORIGIN_SZQTSZ11   17.7398366  0.0143648  1234.95   <2e-16 ***\nORIGIN_SZQTSZ12   17.2420354  0.0186736   923.34   <2e-16 ***\nORIGIN_SZQTSZ13   19.3857418  0.0078878  2457.69   <2e-16 ***\nORIGIN_SZQTSZ14   18.1300753  0.0122096  1484.90   <2e-16 ***\nORIGIN_SZQTSZ15   19.4222283  0.0120871  1606.86   <2e-16 ***\nORIGIN_SZRCSZ01   18.1549045  0.0125108  1451.13   <2e-16 ***\nORIGIN_SZRCSZ06   18.8836400  0.0082161  2298.38   <2e-16 ***\nORIGIN_SZRVSZ01   16.7864438  0.0323796   518.43   <2e-16 ***\nORIGIN_SZRVSZ02   16.4203244  0.0276836   593.14   <2e-16 ***\nORIGIN_SZRVSZ03   16.6453738  0.0244992   679.42   <2e-16 ***\nORIGIN_SZRVSZ04   15.9559213  0.0556344   286.80   <2e-16 ***\nORIGIN_SZRVSZ05   17.0476331  0.0164122  1038.71   <2e-16 ***\nORIGIN_SZSBSZ01   20.0417968  0.0062488  3207.29   <2e-16 ***\nORIGIN_SZSBSZ02   19.1869565  0.0081051  2367.26   <2e-16 ***\nORIGIN_SZSBSZ03   20.5769861  0.0045108  4561.70   <2e-16 ***\nORIGIN_SZSBSZ04   20.5154199  0.0050548  4058.57   <2e-16 ***\nORIGIN_SZSBSZ05   19.6250669  0.0065562  2993.35   <2e-16 ***\nORIGIN_SZSBSZ06   18.8419757  0.0171135  1101.00   <2e-16 ***\nORIGIN_SZSBSZ07   19.4897259  0.0124528  1565.09   <2e-16 ***\nORIGIN_SZSBSZ08   18.7027917  0.0140545  1330.73   <2e-16 ***\nORIGIN_SZSBSZ09   18.8893480  0.0088571  2132.67   <2e-16 ***\nORIGIN_SZSESZ02   20.8962192  0.0041665  5015.34   <2e-16 ***\nORIGIN_SZSESZ03   20.9452771  0.0039737  5270.94   <2e-16 ***\nORIGIN_SZSESZ04   20.6576142  0.0046364  4455.55   <2e-16 ***\nORIGIN_SZSESZ05   19.5170732  0.0058912  3312.92   <2e-16 ***\nORIGIN_SZSESZ06   20.7595824  0.0045747  4537.89   <2e-16 ***\nORIGIN_SZSESZ07   17.6888256  0.0195787   903.47   <2e-16 ***\nORIGIN_SZSGSZ01   19.1359250  0.0085781  2230.79   <2e-16 ***\nORIGIN_SZSGSZ02   18.5614369  0.0102037  1819.10   <2e-16 ***\nORIGIN_SZSGSZ03   19.9933176  0.0050434  3964.23   <2e-16 ***\nORIGIN_SZSGSZ04   20.2426871  0.0047211  4287.71   <2e-16 ***\nORIGIN_SZSGSZ05   18.0114965  0.0107743  1671.70   <2e-16 ***\nORIGIN_SZSGSZ06   20.2593194  0.0044538  4548.76   <2e-16 ***\nORIGIN_SZSGSZ07   19.0763664  0.0062968  3029.54   <2e-16 ***\nORIGIN_SZSKSZ01   19.9222451  0.0085136  2340.04   <2e-16 ***\nORIGIN_SZSKSZ02   20.8633383  0.0055248  3776.33   <2e-16 ***\nORIGIN_SZSKSZ03   19.6528148  0.0080534  2440.33   <2e-16 ***\nORIGIN_SZSKSZ04   18.0754470  0.0275771   655.45   <2e-16 ***\nORIGIN_SZSKSZ05   19.1192521  0.0155579  1228.91   <2e-16 ***\nORIGIN_SZSLSZ01   17.1501034  0.0329384   520.67   <2e-16 ***\nORIGIN_SZSLSZ04   19.5949774  0.0076753  2552.98   <2e-16 ***\nORIGIN_SZSRSZ01   16.9761403  0.0162020  1047.78   <2e-16 ***\nORIGIN_SZTHSZ01   17.9695687  0.0488559   367.81   <2e-16 ***\nORIGIN_SZTHSZ03   18.5427522  0.0223617   829.22   <2e-16 ***\nORIGIN_SZTHSZ04   17.4760374  0.0286247   610.52   <2e-16 ***\nORIGIN_SZTHSZ06   17.8401186  0.0183322   973.16   <2e-16 ***\nORIGIN_SZTMSZ01   20.3406361  0.0056607  3593.33   <2e-16 ***\nORIGIN_SZTMSZ02   22.0307026  0.0037386  5892.85   <2e-16 ***\nORIGIN_SZTMSZ03   21.3451920  0.0040606  5256.65   <2e-16 ***\nORIGIN_SZTMSZ04   20.6611593  0.0049896  4140.87   <2e-16 ***\nORIGIN_SZTMSZ05   19.3323133  0.0112868  1712.82   <2e-16 ***\nORIGIN_SZTNSZ01   17.9513571  0.0128266  1399.54   <2e-16 ***\nORIGIN_SZTNSZ02   18.0267387  0.0098372  1832.51   <2e-16 ***\nORIGIN_SZTNSZ03   17.7253700  0.0134668  1316.23   <2e-16 ***\nORIGIN_SZTNSZ04   19.4474075  0.0073760  2636.59   <2e-16 ***\nORIGIN_SZTPSZ01   19.1078631  0.0065635  2911.25   <2e-16 ***\nORIGIN_SZTPSZ02   20.2837634  0.0041411  4898.18   <2e-16 ***\nORIGIN_SZTPSZ03   19.1838238  0.0059552  3221.37   <2e-16 ***\nORIGIN_SZTPSZ04   19.1805388  0.0054778  3501.53   <2e-16 ***\nORIGIN_SZTPSZ05   19.3718076  0.0058610  3305.18   <2e-16 ***\nORIGIN_SZTPSZ06   19.6605723  0.0054968  3576.70   <2e-16 ***\nORIGIN_SZTPSZ07   19.4499807  0.0060491  3215.36   <2e-16 ***\nORIGIN_SZTPSZ08   18.7996538  0.0095757  1963.28   <2e-16 ***\nORIGIN_SZTPSZ09   19.0025110  0.0067068  2833.31   <2e-16 ***\nORIGIN_SZTPSZ10   18.8899657  0.0076094  2482.46   <2e-16 ***\nORIGIN_SZTPSZ11   19.6277780  0.0053983  3635.93   <2e-16 ***\nORIGIN_SZTPSZ12   19.1471104  0.0065742  2912.45   <2e-16 ***\nORIGIN_SZTSSZ01   17.4901113  0.0478954   365.17   <2e-16 ***\nORIGIN_SZTSSZ02   20.4997466  0.0081850  2504.55   <2e-16 ***\nORIGIN_SZTSSZ03   20.1076553  0.0084728  2373.19   <2e-16 ***\nORIGIN_SZTSSZ04   20.0646610  0.0089008  2254.26   <2e-16 ***\nORIGIN_SZTSSZ05   19.3962067  0.0151392  1281.19   <2e-16 ***\nORIGIN_SZTSSZ06   20.9235857  0.0178278  1173.65   <2e-16 ***\nORIGIN_SZWCSZ01   20.8411600  0.0086519  2408.86   <2e-16 ***\nORIGIN_SZWCSZ02   17.7355404  0.0328889   539.26   <2e-16 ***\nORIGIN_SZWCSZ03   14.9380886  0.1240699   120.40   <2e-16 ***\nORIGIN_SZWDSZ01   21.1969012  0.0037830  5603.23   <2e-16 ***\nORIGIN_SZWDSZ02   20.5930001  0.0044572  4620.13   <2e-16 ***\nORIGIN_SZWDSZ03   21.2521867  0.0041672  5099.85   <2e-16 ***\nORIGIN_SZWDSZ04   21.0702687  0.0048648  4331.13   <2e-16 ***\nORIGIN_SZWDSZ05   20.4008998  0.0051801  3938.35   <2e-16 ***\nORIGIN_SZWDSZ06   20.6669176  0.0049280  4193.78   <2e-16 ***\nORIGIN_SZWDSZ07   19.0500370  0.0082729  2302.71   <2e-16 ***\nORIGIN_SZWDSZ08   19.0816252  0.0080667  2365.49   <2e-16 ***\nORIGIN_SZWDSZ09   21.4182096  0.0040391  5302.73   <2e-16 ***\nORIGIN_SZYSSZ01   19.5355157  0.0057540  3395.14   <2e-16 ***\nORIGIN_SZYSSZ02   20.8737972  0.0048278  4323.64   <2e-16 ***\nORIGIN_SZYSSZ03   21.6614437  0.0040011  5413.81   <2e-16 ***\nORIGIN_SZYSSZ04   20.9305289  0.0043595  4801.10   <2e-16 ***\nORIGIN_SZYSSZ05   20.1727678  0.0058466  3450.34   <2e-16 ***\nORIGIN_SZYSSZ06   19.1481507  0.0116724  1640.47   <2e-16 ***\nORIGIN_SZYSSZ07   18.7919074  0.0141636  1326.78   <2e-16 ***\nORIGIN_SZYSSZ08   19.9733515  0.0061229  3262.07   <2e-16 ***\nORIGIN_SZYSSZ09   20.9366181  0.0040347  5189.15   <2e-16 ***\nlog(SCHOOL_COUNT)  0.4755516  0.0004701  1011.55   <2e-16 ***\nlog(RETAIL_COUNT)  0.1796905  0.0001856   968.12   <2e-16 ***\nlog(DIST)         -1.6929522  0.0004093 -4136.01   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 189463537  on 14471  degrees of freedom\nResidual deviance:  15526121  on 14189  degrees of freedom\nAIC: 15615824\n\nNumber of Fisher Scoring iterations: 6\n\n\nExtracting residuals can help us see which flows tend to be underestimated and overestimate in our analysis later.\n\norcSIM_Poisson$residuals[1:10]\n\n         1          2          3          4          5          6          7 \n 0.1730140  1.2086730 -0.5287580  0.1584206 -0.6992904  0.2329349  0.1436298 \n         8          9         10 \n-0.5954588 -0.9813821 -0.3668106 \n\n\n\nlength(orcSIM_Poisson$coefficients)\n\n[1] 282\n\norcSIM_Poisson$coefficients[1]\n\nORIGIN_SZAMSZ01 \n       19.87398 \n\norcSIM_Poisson$coefficients[280:282]\n\nlog(SCHOOL_COUNT) log(RETAIL_COUNT)         log(DIST) \n        0.4755516         0.1796905        -1.6929522 \n\n\nIf an explanatory variable is not statistically significant, we might want to re-calibrate the model and exclude this variable in our model.\nDefine function to calculate R-square\n\nCalcRSquared <- function(observed,estimated){\n  r <- cor(observed,estimated)\n  R2 <- r^2\n  R2\n}\n\n\nCalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n[1] 0.4362208\n\n\n\nperformance_rmse(orcSIM_Poisson,\n                 normalized = FALSE)\n\n[1] 2613.236"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html",
    "href": "In-class_Ex5/In-class_Ex5.html",
    "title": "In-class Exercise 5:",
    "section": "",
    "text": "#pacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624_AGA",
    "section": "",
    "text": "Welcome to my Applied Geospatial Analysis Website.\nI will be sharing my learning journey with you."
  },
  {
    "objectID": "Take-home_Ex1/data/geospatial/hexagon/hexagon.html",
    "href": "Take-home_Ex1/data/geospatial/hexagon/hexagon.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n                 +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs 0 0     false"
  },
  {
    "objectID": "Take-home_Ex1/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "Take-home_Ex1/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home_Ex1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "The increasing digitization of urban infrastructures, such as public transportation and utilities, generates vast datasets using technologies like GPS and RFID. These datasets offer valuable insights into human movement patterns within a city, especially with the widespread deployment of smart cards and GPS devices in vehicles. However, current practices often limit the use of this data to basic tracking and mapping with GIS applications, primarily because conventional GIS lacks advanced functions for analyzing and modeling spatial and spatio-temporal data effectively. Enhanced analysis of these datasets could significantly contribute to better urban management and informed decision-making for both public and private urban transport services providers."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#objectives-of-take-home_ex1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#objectives-of-take-home_ex1",
    "title": "Take-home_Ex1: Geospatial Analytics for Public Good",
    "section": "Objectives of Take-home_Ex1",
    "text": "Objectives of Take-home_Ex1\nExploratory Spatial Data Analysis (ESDA) hold tremendous potential to address complex problems facing society. In this study, I will perform\n\nGeovisualisation of passengers trips by four different time intervals\n\nWith reference to the time intervals provided in the table below, compute the passenger trips generated by origin at the hexagon level,\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\nDisplay the geographical distribution of the passenger trips by using appropriate geovisualisation methods,\nDescribe the spatial patterns revealed by the geovisualisation (not more than 200 words per visual).\n\nApply appropriate Local Indicators of Spatial Association (GLISA) to undercover the spatial mobility patterns of public bus passengers in Singapore.\n\nCompute LISA of the passengers trips generate by origin at hexagon level.\nDisplay the LISA maps of the passengers trips generate by origin at hexagon level. The maps should only display the significant (i.e. p-value < 0.05)\nWith reference to the analysis results, draw statistical conclusions (not more than 200 words per visual)."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#the-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#the-data",
    "title": "Take-home_Ex1: Geospatial Analytics for Public Good",
    "section": "The Data",
    "text": "The Data\n\nAspatial data\nFor this take-home exercise, Passenger Volume by Origin Destination Bus Stops downloaded from LTA DataMall will be used. It contains the number of trips by weekdays and weekends from origin to destination bus stops.\nFor this exercise, the data is collected in August 2023.\nThe fields are YEAR_MONTH, DAY_TYPE, TIME_PER_HOUR, PT_TYPE , ORIGIN_PT_CODE, DESTINATION_PT_CODE, TOTAL_TRIPS .\nA sample row for bus dataset could be ‘2023-08, WEEKDAY, 16, BUS, 28299, 28009, 63’. TIME_PER_HOUR of 16 represents data is collected between 4 pm to 5pm.\n\n\nGeospatial data\nTwo geospatial data will be used in this study, they are:\n\nBus Stop Location from LTA DataMall’s static dataset. It provides information about all the bus stops currently being serviced by buses, including the bus stop code (identifier) and location coordinates.\nhexagon, a hexagon layer of 250m (perpendicular distance between the centre of the hexagon and its edges.) Each spatial unit is regular in shape and finer than the Master Plan 2019 Planning Sub-zone GIS data set of URA."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "href": "Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "title": "Take-home_Ex1: Geospatial Analytics for Public Good",
    "section": "Getting Started",
    "text": "Getting Started\nIn this exercise, the following libraries will be used:\n\nsf packageto perform geoprocessing tasks\nsfdep package which builds upon spdep package (compute spatial weights matrix and spatially lagged variable for instance..)\ntmap to create geovisualisations\ntidyverse that supports data science, analysis and communication task including creating static statistical graphs.\nknitr to create html tables\nDT library to create interactive html tables\nggplot2 to plot graphs\nplotly to plot interactive graphs\\\n\n\npacman::p_load(sf, sfdep, tmap, tidyverse, knitr, DT, ggplot2, plotly, h3jsr, skimr)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#importing-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#importing-data",
    "title": "Take-home_Ex1: Geospatial Analytics for Public Good",
    "section": "Importing Data",
    "text": "Importing Data\n\nAspatial data\nImport the Passenger volume by Origin Destination Bus Stops dataset downloaded from the LTA Datamall by using the read_csv() of the readr package.\n\nodbus_aug <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\nCheck the data fields\n\nglimpse(odbus_aug)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\nProcessing the aspatial OD data\nThe ‘ORIGIN_PT_CODE’ and ‘DESTINATION_PT_CODE’ field is in character field. We will convert it to factor data type.\n\nodbus_aug$ORIGIN_PT_CODE <- as.factor(odbus_aug$ORIGIN_PT_CODE)\nodbus_aug$DESTINATION_PT_CODE <- as.factor(odbus_aug$DESTINATION_PT_CODE)\n\nThe function below will extract origin data based on the four time intervals required by the task. The expected arguments are\n\ndaytype: ‘WEEKDAY’ or ‘WEEKENDS/HOLIDAY’\ntimeinterval: c(8,10) if we want data from 8am to 11am.\n\nThe function will also compute the sum of all trips by ‘ORIGIN_PT_CODE’ for each time interval and stored under a new field called ‘TRIPS’.\n\nget_origin <- function(daytype, timeinterval) {\n  result <- odbus_aug %>%\n    filter(DAY_TYPE == daytype) %>%\n    filter(TIME_PER_HOUR >= timeinterval[1] & TIME_PER_HOUR <= timeinterval[2]) %>%\n    group_by(ORIGIN_PT_CODE) %>%\n    summarise(TRIPS = sum(TOTAL_TRIPS))\n  \n  return(result)\n}\n\nLet’s get the data using get_origin function\n\norigin_day_am <- get_origin('WEEKDAY', c(6, 8))\norigin_day_pm <- get_origin('WEEKDAY', c(5, 7))\n\n\norigin_end_am <- get_origin('WEEKENDS/HOLIDAY', c(11, 13))\norigin_end_pm <- get_origin('WEEKENDS/HOLIDAY', c(4, 6))\n\nTake a look at overview of all the four dataframes.\n\nWD morning peakWD afternoon peakWE morning peakWE afternoon peak\n\n\n\nglimpse(origin_day_am)\n\nRows: 5,005\nColumns: 2\n$ ORIGIN_PT_CODE <fct> 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ TRIPS          <dbl> 1425, 683, 1146, 1707, 1752, 1106, 115, 5827, 6847, 257…\n\n\n\n\n\nglimpse(origin_day_pm)\n\nRows: 4,965\nColumns: 2\n$ ORIGIN_PT_CODE <fct> 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ TRIPS          <dbl> 752, 350, 436, 832, 823, 637, 305, 2918, 5127, 1091, 28…\n\n\n\n\n\nglimpse(origin_end_am)\n\nRows: 4,994\nColumns: 2\n$ ORIGIN_PT_CODE <fct> 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ TRIPS          <dbl> 1546, 1203, 1156, 2373, 3637, 806, 73, 10074, 5624, 446…\n\n\n\n\n\nglimpse(origin_end_pm)\n\nRows: 4,623\nColumns: 2\n$ ORIGIN_PT_CODE <fct> 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ TRIPS          <dbl> 119, 51, 45, 71, 138, 80, 66, 240, 275, 86, 395, 18, 78…\n\n\n\n\n\n\n\n\nGeospatial data\nFirst, we will import the Bus Stop Location shapefiles into R. The output will be a sf point object with 5161 points and 3 fields. As the raw data is in WSG84 geographical coordinate system, we will convert it to EPSG 3414, the projected coordinate system for Singapore.\n\nbusstop <- st_read(dsn=\"data/geospatial/BusStopLocation/BusStopLocation_Jul2023\", layer = \"BusStop\") %>% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex1\\data\\geospatial\\BusStopLocation\\BusStopLocation_Jul2023' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\nbusstop\n\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n1       22069        B06   OPP CEVA LOGISTICS POINT (13576.31 32883.65)\n2       32071        B23         AFT TRACK 13 POINT (13228.59 44206.38)\n3       44331        B01              BLK 239  POINT (21045.1 40242.08)\n4       96081        B05 GRACE INDEPENDENT CH POINT (41603.76 35413.11)\n5       11561        B05              BLK 166 POINT (24568.74 30391.85)\n6       66191        B03         AFT CORFE PL POINT (30951.58 38079.61)\n7       23389       B02A              PEC LTD   POINT (12476.9 32211.6)\n8       54411        B02              BLK 527 POINT (30329.45 39373.92)\n9       28531        B09              BLK 536 POINT (14993.31 36905.61)\n10      96139        B01              BLK 148  POINT (41642.81 36513.9)\n\n\nAre there any duplicates in ‘BUS_STOP_N’ in busstop?\nChecking for duplicates in the ‘BUS_STOP_N’ field reveals that there are about 16 repeated bus stop numbers. However, they have different geometry points in the simple feature busstop object above. These could be due to temprorary bus stops . We should retain all these rows as they might have different hexagon ‘fid’ values later.\n\nbusstop %>% \n  st_drop_geometry() %>% \n  group_by(BUS_STOP_N) %>%\n  filter(n()>1) %>%\n  ungroup() %>% \n  arrange(BUS_STOP_N)\n\n# A tibble: 32 × 3\n   BUS_STOP_N BUS_ROOF_N LOC_DESC            \n   <chr>      <chr>      <chr>               \n 1 11009      B04        Ghim Moh Ter        \n 2 11009      B04-TMNL   GHIM MOH TER        \n 3 22501      B02        Blk 662A            \n 4 22501      B02        BLK 662A            \n 5 43709      B06        BLK 644             \n 6 43709      B06        BLK 644             \n 7 47201      UNK        <NA>                \n 8 47201      NIL        W'LANDS NTH STN     \n 9 51071      B21        MACRITCHIE RESERVOIR\n10 51071      B21        MACRITCHIE RESERVOIR\n# ℹ 22 more rows\n\n\nTake for instance bus stop number 51071 with two different point geometry values.\n\nbusstop[3470,]\n\nSimple feature collection with 1 feature and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 28311.27 ymin: 36036.92 xmax: 28311.27 ymax: 36036.92\nProjected CRS: SVY21 / Singapore TM\n     BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n3470      51071        B21 MACRITCHIE RESERVOIR POINT (28311.27 36036.92)\n\n\n\nbusstop[3472,]\n\nSimple feature collection with 1 feature and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 28282.54 ymin: 36033.93 xmax: 28282.54 ymax: 36033.93\nProjected CRS: SVY21 / Singapore TM\n     BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n3472      51071        B21 MACRITCHIE RESERVOIR POINT (28282.54 36033.93)\n\n\n\nCreating hexagon layer\nBefore we can plot the base layer, we have to create hexagonal grids of 250 m using the busstop points data using sf.\nFirst , create a grid which the extent equals to the bounding box of the busstop points using st_make_grid().\n\nTo create hexagons of 250m (centre to edge), we should input 500 for ‘cellsize’ parameter. ‘Cellsize’ is defined as the distance from edge to edge.\nConvert to sf object and add a unique identifier to each hexagon grid. The output has 5580 hexagon units.\nUse st_intersects() to count the number of bus stops in each hexagon.\nFilter to retain only hexagons with at least one bus stop. The output bs_count has 1524 hexagon units.\n\n\narea_hex_grid = st_make_grid(busstop,\n                             cellsize= 500, \n                             what = \"polygons\", \n                             square = FALSE)\n\nhex_grid_sf = st_sf(area_hex_grid) %>%\n  mutate(grid_id = 1:length(lengths(area_hex_grid)))\n\nhex_grid_sf$bs = lengths(st_intersects(hex_grid_sf, busstop))\n\n\nbs_count = filter(hex_grid_sf, bs > 0)\nbs_count\n\nSimple feature collection with 1524 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3720.122 ymin: 26193.43 xmax: 48720.12 ymax: 53184.55\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                    area_hex_grid grid_id bs\n1  POLYGON ((3970.122 27925.48...      34  1\n2  POLYGON ((4220.122 28358.49...      65  1\n3  POLYGON ((4470.122 30523.55...      99  1\n4  POLYGON ((4720.122 28358.49...     127  1\n5  POLYGON ((4720.122 30090.54...     129  2\n6  POLYGON ((4720.122 30956.57...     130  1\n7  POLYGON ((4720.122 31822.59...     131  1\n8  POLYGON ((4970.122 28791.5,...     159  1\n9  POLYGON ((4970.122 29657.53...     160  1\n10 POLYGON ((4970.122 30523.55...     161  2\n\n\nHow does our hexagon layer look like?\n\nplot(bs_count['bs'],\n     main = 'Count of bus stops at hexagon level')\n\n\n\n\nHow does the distribution of bus stops in hexagon look like?\n\nq <- quantile(bs_count$bs, probs = c(0.25, 0.5, 0.75))\n\nggplot(data=bs_count,\n  aes(x=bs)) +\n  geom_histogram(binwidth = 1, color='black',size= 0.3, fill = '#DD8888') +\n  geom_vline(xintercept = q[2], linetype='dotted', size = 0.8, color='blue') +\n  geom_vline(xintercept = q[3], linetype='dotted', size = 0.8) +\n  annotate('text' , x= 2.3, y=450, label='50th \\npercentile', size = 3) +\n  annotate('text' , x= 4.7, y=450, label='75th \\npercentile', size = 3) +\n  labs(y= 'Count', x='Number of bus stops') +\n  theme(axis.title.y=element_text(angle = 0)) +\n  ggtitle('Distribution of Bus stops')\n\n\n\n\nThe plot above shows that distribution of the bus stop is right-skewed. Within a hexagon of 250m from the centre to edge, the median number of bus stops is about 3.\nIf we like to, we could save the above hexagon layer to disk\n\nst_write(bs_count, 'data/bs_count.shp')\n\n\n\n\n\n\nGeospatial data wrangling\n\nCombining busstop (polygon sf) and bs_count (point sf)\nWe need to get the corresponding bus stop numbers in each hexagon in bs_count hexagon layer.\nThe code chunk below performs points and hexagon polygon overlap using st_intersection() and the output will be in sf point object.\nBefore overlapping:\nbusstop : 5161 points\nbs_count hexagon base layer: 1524 hexagons\nAfter overlapping:\nbusstop_hex : 5161 points and this is good results because all the bus stop location data is mapped to our bs_count base map.\n\nbusstop_hex <- st_intersection(busstop, bs_count) %>% \n  select(BUS_STOP_N, BUS_ROOF_N, LOC_DESC,  grid_id, bs)\n\nbusstop_hex\n\nSimple feature collection with 5161 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     BUS_STOP_N BUS_ROOF_N            LOC_DESC grid_id bs\n3269      25059        UNK   AFT TUAS STH BLVD      34  1\n2570      25751       B02D BEF TUAS STH AVE 14      65  1\n254       26379        NIL            YONG NAM      99  1\n2897      25761        B03      OPP REC S'PORE     127  1\n2827      25719       B01C           THE INDEX     129  2\n4203      26389        NIL  BEF TUAS STH AVE 5     129  2\n2403      26369        NIL        SEE HUP SENG     130  1\n1565      26299        B13  BEF TUAS STH AVE 6     131  1\n2829      25741        B03         HALLIBURTON     159  1\n2828      25711       B02C       OPP THE INDEX     160  1\n                      geometry\n3269 POINT (3970.122 28063.28)\n2570 POINT (4427.939 28758.67)\n254  POINT (4473.292 30681.57)\n2897 POINT (4737.082 28621.29)\n2827 POINT (4799.476 30158.46)\n4203 POINT (4776.694 30324.88)\n2403 POINT (4604.363 31212.96)\n1565 POINT (4879.489 31948.93)\n2829  POINT (5060.733 29212.4)\n2828 POINT (4831.438 30132.43)\n\n\nWe will drop the geometry because busstop_hex is a POINT sf object, there is no hex polygon geometry data for us to plot based on hexagon level. Furthermore, we have to process the attribute data. To get back the hexagon POLYGON geometry data, we can always left_join() bs_count df with our attribute table again later.\nWe will also use datatable() function of the DT library to print the data. The table is interactive and can perform basic sorting.\n\nbusstop_hex <- busstop_hex  %>% \n  st_drop_geometry()\n\ndatatable(busstop_hex, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\nChecking for duplicates in busstop_hex\nLet us check for duplicates in busstop_hex df as it will be used to perform a left join later.\nThe output shows that there are 11 duplicated rows.\n\nbusstop_hex %>%\n  group_by(BUS_STOP_N, grid_id, bs) %>%\n  filter(n()>1) %>%\n  ungroup()\n\n# A tibble: 22 × 5\n   BUS_STOP_N BUS_ROOF_N LOC_DESC        grid_id    bs\n   <chr>      <chr>      <chr>             <int> <int>\n 1 22501      B02        Blk 662A           1251     8\n 2 22501      B02        BLK 662A           1251     8\n 3 43709      B06        BLK 644            1904     7\n 4 43709      B06        BLK 644            1904     7\n 5 47201      UNK        <NA>               2381     2\n 6 47201      NIL        W'LANDS NTH STN    2381     2\n 7 11009      B04        Ghim Moh Ter       2395     7\n 8 11009      B04-TMNL   GHIM MOH TER       2395     7\n 9 58031      UNK        OPP CANBERRA DR    2939     7\n10 58031      UNK        OPP CANBERRA DR    2939     7\n# ℹ 12 more rows\n\n\nRemoval of duplicates\n\nbusstop_hex <- busstop_hex %>%\n  distinct(BUS_STOP_N, grid_id, bs, .keep_all = TRUE)\n#busstop_hex <- unique(busstop_hex)\n\nCheck again to be sure. All’s good.\n\nbusstop_hex[duplicated(busstop_hex), ]\n\n[1] BUS_STOP_N BUS_ROOF_N LOC_DESC   grid_id    bs        \n<0 rows> (or 0-length row.names)\n\n\nNote that there will be repeated bus stop ids with different bus stop roof number / hexagon id.\n\nbusstop_hex['BUS_STOP_N'][duplicated(busstop_hex['BUS_STOP_N']), ]\n\n[1] \"53041\" \"52059\" \"68091\" \"68099\" \"67421\"\n\n\n\n\nCombining each of the four aspatial dataframes with busstop_hex\nThe function below performs left outer join for each of the four aspatial origin dataframes with busstop_hex dataframe.\nThe expected argument:\nasp_df: name of aspatial origin dataframe like origin_day_am or origin_day_pm etc..\nThe function will also rename ‘ORIGIN_PT_CODE’ and ‘fid’ fields to ‘ORIGIN_BS’ and ‘ORIGIN_HEXFID’ respectively.\n\nleftjoin <- function(asp_df) {\n  result <- left_join(asp_df, busstop_hex,\n                         by = c('ORIGIN_PT_CODE' = 'BUS_STOP_N')) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_HEXFID = grid_id) %>% \n  select(ORIGIN_HEXFID, \n         ORIGIN_BS, \n         TRIPS,\n         BUS_ROOF_N,\n         LOC_DESC)\n  \n  return(result)\n}\n\nNow, use the ‘leftjoin’ function to get our dataframes containing grid_id and origin bus stop ids.\n\norigin_data_day_am <- leftjoin(origin_day_am) # 5005 to 5010 rows\norigin_data_day_pm <- leftjoin(origin_day_pm) # 4965 to 4970 rows\norigin_data_end_am <- leftjoin(origin_end_am) # 4994 to 4999 rows\norigin_data_end_pm <- leftjoin(origin_end_pm) # 4623 to 4627 rows\n\nThe number of rows of each df increased by 4-5 after left join , this is due to the duplicated 5 bus stops ids , each with two distinct bus stop roofs and located in different hexagon ids, that originated from the busstop and busstop_hex dataframes earlier.\nAgain, double check for duplicates\n\norigin_data_day_am['ORIGIN_HEXFID', 'ORIGIN_BS'][duplicated(origin_data_day_am['ORIGIN_HEXFID', 'ORIGIN_BS']), ]\n\n# A tibble: 0 × 1\n# ℹ 1 variable: ORIGIN_BS <chr>\n\norigin_data_day_pm['ORIGIN_HEXFID', 'ORIGIN_BS'][duplicated(origin_data_day_pm['ORIGIN_HEXFID', 'ORIGIN_BS']), ]\n\n# A tibble: 0 × 1\n# ℹ 1 variable: ORIGIN_BS <chr>\n\norigin_data_end_am['ORIGIN_HEXFID', 'ORIGIN_BS'][duplicated(origin_data_end_am['ORIGIN_HEXFID', 'ORIGIN_BS']), ]\n\n# A tibble: 0 × 1\n# ℹ 1 variable: ORIGIN_BS <chr>\n\norigin_data_end_pm['ORIGIN_HEXFID', 'ORIGIN_BS'][duplicated(origin_data_end_pm['ORIGIN_HEXFID', 'ORIGIN_BS']), ]\n\n# A tibble: 0 × 1\n# ℹ 1 variable: ORIGIN_BS <chr>\n\n\nBus stops with more than 1 bus roof number and exists in more than 1 hexagon in the tibble below.\n\norigin_data_day_am['ORIGIN_BS'][duplicated(origin_data_day_am['ORIGIN_BS']), ]\n\n# A tibble: 5 × 1\n  ORIGIN_BS\n  <chr>    \n1 52059    \n2 53041    \n3 67421    \n4 68091    \n5 68099    \n\n\nCheck for bus stops without any hexagon id\nUsing the skim() from the skimr package reveals that there are about 44-52 missing ‘ORIGIN_HEXFID’ values in each of our dataframes. (see Summary table below).\nThe code chunk below will\n\nfilter character or numeric field\nfilter for fields with missing values\nselect required columns\nconvert output to tibble df\nrename the column name (static and dynamically)\ncombine all the output in a summary tibble df.\n\nSummary table of number of missing ‘ORIGIN_HEXFID’ in each of the four dataframes.\n\n\nShow the code\n#str(skim(origin_data_day_am))\n\nget_na_hex <- function(df, col2header) {\n  result <- skimr::skim(df) %>%\n  filter(skim_type == \"character\" | skim_type == \"numeric\") %>%\n  filter(n_missing > 0) %>%\n  select(skim_variable, n_missing)%>% \n  as_tibble() %>% \n  rename_with(~col2header, n_missing, .cols = c(n_missing)) %>%\n  rename(Variable = skim_variable)\n  \n  return(result)\n}\n\n\nr1 <- get_na_hex(origin_data_day_am, 'Wkday_morn') \nr2 <- get_na_hex(origin_data_day_pm, 'Wkday_aft') \nr3 <- get_na_hex(origin_data_end_am, 'Wkend_morn') \nr4 <- get_na_hex(origin_data_end_pm, 'Wkend_aft') \n\nbind_cols(r1,r2,r3,r4) %>% \n  select(1,2,4,6,8) %>% \n  slice(3) %>% kable()\n\n\n\n\n\nVariable…1\nWkday_morn\nWkday_aft\nWkend_morn\nWkend_aft\n\n\n\n\nORIGIN_HEXFID\n52\n50\n49\n44\n\n\n\n\n\nThe reason for some bus stop ids without a hexagon id could be that the Bus Stop Location file is outdated (last update in July 2023) while the Passenger Volume by Origin Destination Bus Stops contains data in August 2023.\nBus stop ids without hexagon id\n\nWkday MorningWkday AfternoonWkend MorningWkend Afternoon\n\n\n\n\nShow the code\ndatatable(origin_data_day_am %>%\n  filter(is.na(ORIGIN_HEXFID)), \n  class = 'cell-border stripe', \n  options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ndatatable(origin_data_day_pm %>%\n  filter(is.na(ORIGIN_HEXFID)), \n  class = 'cell-border stripe', \n  options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ndatatable(origin_data_end_am %>%\n  filter(is.na(ORIGIN_HEXFID)), \n  class = 'cell-border stripe', \n  options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ndatatable(origin_data_end_pm %>%\n  filter(is.na(ORIGIN_HEXFID)), \n  class = 'cell-border stripe', \n  options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\nAggregating total trips and average daily trips by hexagon level\nSince we are plotting the number of passenger trips generated by hexagon level, we should aggregate the total trips by ‘ORIGIN_HEXFID’ and store these values in a new field called ‘TTRIPS’.\nIn addition, a new field ‘AVG_TTRIPS’ is calculated where it represents number of average weekday trip (=TTRIPS / 22) and average weekend trips (=TTRIPS/9). There are 22 weekdays , 8 days of weekends and 1 public holiday in August 2023.\nAfter the left join, the total distinct of hexagons for each time intervals are 1491, 1489, 1499 and 1444. The total hexagon in bs_count was 1524. This suggests that were some bus stops with no passengers at different time intervals.\n\nget_ttrips_wkday <- function(df) {\n  result <- df %>% \n    group_by(ORIGIN_HEXFID) %>% \n    summarise(\n      TTRIPS = sum(TRIPS),\n      AVG_TRIPS = ceiling(sum(TRIPS) / 22),\n      DESC = paste(LOC_DESC, collapse = ', ')\n    ) %>% \n    ungroup()\n  \n  return(result)\n}\n\nget_ttrips_wkend <- function(df) {\n  result <- df %>% \n    group_by(ORIGIN_HEXFID) %>% \n    summarise(\n      TTRIPS = sum(TRIPS),\n      AVG_TRIPS = ceiling(sum(TRIPS) / 9),\n      DESC = paste(LOC_DESC, collapse = ', ')\n    ) %>% \n    ungroup()\n  \n  return(result)\n}\n\norigin_data_day_am_hex <- get_ttrips_wkday(origin_data_day_am) # 5010 to 1491 rows\norigin_data_day_pm_hex <- get_ttrips_wkday(origin_data_day_pm) # 4970 to 1489 rows\norigin_data_end_am_hex <- get_ttrips_wkend(origin_data_end_am) # 4999 to 1499 rows\norigin_data_end_pm_hex <- get_ttrips_wkend(origin_data_end_pm) # 4627 to 1444 rows\n\n\n\n\nThe four dataframes above will be printed out in the later sections.\n\n\nRetrieve hexagon geometry coordinates\nIn order to plot choropleth maps, we need the geometry data from bs_countsf polygon object.\nThe function below performs a left join with bs_count and the attributes dataframes and also assign 0 to ‘TTRIPS’ and ‘AVG_TRIPS’ value in a hexagon without any passengers.\n\nget_hexgeo <- function(df) {\n  result <- left_join(bs_count, df,\n                      by = c('grid_id' = 'ORIGIN_HEXFID')) %>%\n    mutate(TTRIPS = if_else(is.na(TTRIPS),0, TTRIPS),\n           AVG_TRIPS = if_else(is.na(AVG_TRIPS), 0, AVG_TRIPS))\n    \n  return(result)\n}\n\nday_am <- get_hexgeo(origin_data_day_am_hex)\nday_pm <- get_hexgeo(origin_data_day_pm_hex)\nend_am <- get_hexgeo(origin_data_end_am_hex)\nend_pm <- get_hexgeo(origin_data_end_pm_hex)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#task-1-geovisulisation-and-analysis",
    "href": "Take-home_Ex1/Take-home_Ex1.html#task-1-geovisulisation-and-analysis",
    "title": "Take-home_Ex1: Geospatial Analytics for Public Good",
    "section": "Task 1: Geovisulisation and Analysis",
    "text": "Task 1: Geovisulisation and Analysis\nIn this section , the choropleth maps will be used to show the geographical distribution of the passenger trips by origin. I will be using ‘AVG_TRIPS’ field to plot instead of ‘’TTRIPS’ so that we can compare fairly on a daily basis.\nPlanning for map classification\nTo plan for the classification for the maps, we could check the distribution of the ‘AVG_TRIPS’ field across ALL four time intervals.\nFIrst, combine all the AVG_‘TRIPS’ and create a new column ‘source’ to retain the name of the time interval.\n\norigin_data_day_am_hex$source <- 'Wkday_am'\norigin_data_day_pm_hex$source <- 'Wkday_pm'\norigin_data_end_am_hex$source <- 'Wkend_am'\norigin_data_end_pm_hex$source <- 'Wkend_pm'\n\ncombine <- rbind(origin_data_day_am_hex,\n                 origin_data_day_pm_hex,\n                 origin_data_end_am_hex,\n                 origin_data_end_pm_hex)\n\n\n\n\n\n\n\nBoxplots\nPlot boxplots to get a general sensing of the distribution of ‘AVG_TRIPS’ across different time intervals. Hover the mouse above each point will show the average daily trips generated in each hexagon.\n\n\nShow the code\nggplotly(ggplot(data=combine, \n       aes(y=AVG_TRIPS,\n           x=source)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=2) + \n  labs(x = \"Time Intervals\", y = \"Total Trips\", title='Daily average origin trips by time intervals') +\n  theme_minimal() +\n  theme(legend.key.size = unit(0.5,'cm'),\n        legend.position=\"bottom\",\n        plot.title = element_text(size = 12,\n                                  face='bold'),\n        axis.title = element_text(size = 11 , face = \"bold\"),\n        axis.text = element_text(size = 10),\n        axis.text.x = element_text(angle = 0, hjust = 1)))\n\n\n\n\n\n\nFrom the chart above, the weekday average daily ridership severely outweighs the weekend period.\n\n\n\nSummary statistics\nFinal check on the summary statistics of TTRIPS before setting custom break points.\n\nsummary(combine$AVG_TRIPS)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    1.0    19.0   122.0   411.1   473.0 15321.0 \n\n\nOutliers\nBecause of the large number of outliers bus stops, let us calculate the upper bound of the outliers.\n\nQ1 <- summary(combine$AVG_TRIPS)[2]\nQ3 <- summary(combine$AVG_TRIPS)[5]\nIQR_value <- Q3 - Q1\n\nlower_bound <- Q1 - 1.5 * IQR_value\nupper_bound <- Q3 + 1.5 * IQR_value\n\n#lower_bound\nupper_bound\n\n3rd Qu. \n   1154 \n\n\nSetting custom breaks\nWith reference to the box plot, summary statistics and upper bound values,\n\nMin : 1 , Max : 13,321\nquantile break points can be 20, 120, 470\nbreak vector is therefore be c(0, 20, 120, 470, 1154, 10000, 13321)\n\nThe first three intervals reflects the 1st -3rd quantiles. The last two intervals would distinguish the outliers and extreme outliers (bus stops with very high daily passengers number) on the map later.\n\nplotmap <- function(df, title) {\n  df2<- df %>% top_n(10, AVG_TRIPS)\n  \n  result <- tm_shape(df)+\n    tm_fill(\"AVG_TRIPS\", \n            breaks =  c(0, 20, 120, 470, 1154, 10000, 13321), #style = \"quantile\", \n            palette = \"Blues\",\n            alpha= 0.5,\n            #legend.hist = TRUE, \n            #legend.is.portrait = TRUE,\n            #legend.hist.z = 0.3,\n\n            title = \"Passengers Trip\") +\n    tm_layout(main.title = title,\n              main.title.position = \"center\",\n              main.title.size = 1.2,\n              legend.height = 0.45, \n              legend.width = 0.35,\n              #legend.outside = TRUE,\n              #legend.text.size= 0.6,\n              #inner.margins = c(0.01, 0.01, 0, .15),\n              #legend.position = c(\"right\", \"top\"),\n              #bg.color = \"black\",\n              #main.title.color = 'white',\n              #legend.title.color = 'white',\n              #legend.text.color= 'white',\n              bg.color = \"mintcream\",\n              frame = TRUE) +\n    tm_borders(alpha = 0.5) +\n    tm_compass(type=\"8star\", size = 2) +\n    tm_scale_bar() +\n    tm_grid(alpha =0.2) +\n    tm_credits(\"Source: Passenger Bus origin and destination data and Bus Stop Location data from LTA datamall\", \n             position = c(\"left\", \"bottom\")) +\n    tm_shape(df2) +\n    tm_bubbles(size='AVG_TRIPS', col='red',alpha=0.5, scale=.6)\n  \n  return(result)\n}\n\n\np1 <- plotmap(day_am, 'Weekday-Morning (Daily Average) \\nPassenger Trips generated at Hex lvl')\np2 <- plotmap(day_pm, 'Weekday-Afternoon (Daily Average) \\nPassenger Trips generated at Hex lvl')\np3 <- plotmap(end_am, 'Weekend-Morning (Daily Average) \\nPassenger Trips generated at Hex lvl')\np4 <- plotmap(end_pm, 'Weekend-Afternoon (Daily Average) \\nPassenger Trips generated at Hex lvl')\n\nInteractive DataTables\nWe will print the datatables here for the ease of counter-checking the interesting hexagon-ids spotted in the maps later.\n\norigin_data_day_amorigin_data_day_pmorigin_data_end_amorigin_data_end_pm\n\n\n\n\nShow the code\ndatatable(origin_data_day_am_hex %>% \n            arrange(desc(TTRIPS)), \n          class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ndatatable(origin_data_day_pm_hex %>% \n            arrange(desc(TTRIPS)),\n          class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ndatatable(origin_data_end_am_hex %>% \n            arrange(desc(TTRIPS)),\n          class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ndatatable(origin_data_end_pm_hex %>% \n            arrange(desc(TTRIPS)),\n          class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nMap of Weekday-Morning (Daily Average) Passenger Trips generated at Hex lvl\nThe tmap_mode is set to ‘view’ mode. Clicking on each hexagon will show the hex-id and the ‘AVG_TRIPS’ field. With the hex-id, we could search for the bus stop description using the interactive data tables above.\n\n\nShow the code\ntmap_mode('view')\n#ttm()\np1\n\n\n\n\n\n\n\n\n\nMap of Weekday-Afternoon (Daily Average) Passenger Trips generated at Hex lvl\n\n\nShow the code\np2\n\n\n\n\n\n\n\n\n\nMap of Weekend-Morning (Daily Average) Passenger Trips generated at Hex lvl\n\n\nShow the code\np3\n\n\n\n\n\n\n\n\n\nMap of Weekend-Afternoon (Daily Average) Passenger Trips generated at Hex lvl\n\n\nShow the code\np4\n\n\n\n\n\n\n\n\n\nFacet View\nLet us plot all four maps side-by-side for easy comparison.\n\nttm()\ntmap_arrange(p1,p2,p3,p4,\n             asp=2, nrow = 2, ncol = 2)\n\n\n\n\n\n\nDiscussion\nThe top row shows the average daily Weekday morning and afternoon passenger trips while the bottom row shows the Weekend morning and afternoon ridership generated at hexagon level. The classification method used is manual; the first three intervals represents the 1st, 2nd and 3rd quantile; and the last two intervals represents all the outliers and extreme outliers. In addition, the red bubbles represent the hexagons with the top 10 average daily passengers trip in each time-interval. We can observe the following:\n\nAverage daily ridership generation is the greatest on weekday morning, followed by weekday afternoon and weekend morning (cannot distinguish between these two at one glance). Lastly, weekend afternoon registers the least ridership volume.\nObserved that the passengers trips generated at the Tuas area is very low as compared to the rest.\nAt first glance, the top two hexagons with the highest origin ridership volume are hex id 1251 and hex id 2411. They are both consistently in the top 2 origin bus stop for all four time intervals. The bus stops (refer to the interactive data table above) that fall within these hexagons are\n\nhex id 1251: BOON LAY INT, BLK 662D, OPP BLK 662C, Blk 662A, BLK 664C\nhex id 2411: WOODLANDS REG INT, W’LANDS CIVIC CTR, OPP W’LANDS CIVIC CTR, BEF W’LANDS STN EXIT 7, W’LANDS STN EXIT 5, W’LANDS STN EXIT 4, BLK 894C, BLK 515\n\nThere are four hexagon ids that are consistently in the top 10 origin bus stops for all four time intervals. They are\n\nHex id 3239: ANG MO KIO INT, BLK 322, AFT ANG MO KIO STN EXIT A, BLK 422, AFT ANG MO KIO INT, ANG MO KIO STN\nHex id 4539: TAMPINES INT, OUR TAMPINES HUB, OPP OUR TAMPINES HUB, UOB TAMPINES CTR, OPP CENTURY SQ, Tampines Stn Exit D, Aft Tampines Stn Exit E\nHex id 4349: BEDOK BUS INT, BEDOK STN EXIT B, BEDOK STN EXIT A, OPP PANASONIC, PANASONIC\n\nThe two hexagons that falls within top 10 in the weekdays but fall out of top 10 during weekends are\n\nhex id 909: BEF JOO KOON INT, OPP JOO KOON INT, MOLEX, OPP MOLEX, OPP FAIRPRICE HUB, JOO KOON INT\nhex id 2054: CLEMENTI STN, CLEMENTI STN, BLK 431\n\nInterestingly, the hexagon within top 10 on weekday and weekend mornings and fall out of this top 10 position on weekday and weekend afternoons is id 3204. Suggesting that this region is more busy in the morning than afternoon.\n\nhex id 3204 : TOA PAYOH BUS INT, OPP TOA PAYOH STN, TOA PAYOH STN, BLK 138B, BLK 84B, BLK 79C\n\nAcross all four time-intervals, there appears to be clusters of High-high and low-low as well as outliers of Low-High and High-Low in our area of study. However , we cannot be sure until we run the local Moran’s I statistical test."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#task-2-local-indicators-of-spatial-association-lisa-analysis",
    "href": "Take-home_Ex1/Take-home_Ex1.html#task-2-local-indicators-of-spatial-association-lisa-analysis",
    "title": "Take-home_Ex1: Geospatial Analytics for Public Good",
    "section": "Task 2: Local Indicators of Spatial Association (LISA) Analysis",
    "text": "Task 2: Local Indicators of Spatial Association (LISA) Analysis\nIn this section, we will use LISA statistics to identify existence of cluster or outlier for a given variable, in our case, the total number of trips generated at hexagon layer. We will apply the Moran’s I statistic to detect cluster and / or outliers for total trips generated at hexagon layer.\n\nComputing Distance-Based Spatial Weights Matrix\nBefore we can compute the global/local spatial autocorrelation statistics, we need to construct a spatial weights of our study area. The spatial weights is used to define who are the neighbours of the spatial units (hexagons) in our study are. There are a few general rules:\n\nFeatures should have at least one neighbour, each feature should not be a neighbour with all other features.\nIf data is skewed, each feature should have at least 8 neighbours.\n\nContiguity or Distance-based method?\nWe will rule out the contiguity methods because as seen in the geovisualisation above, we can see that the location of bus stops are rather ‘sparse’ in some regions like the central catchment areas, military training areas and airports, resulting in gaps in between groups of hexagons. Therefore, we are more inclined towards distance methods.\nThere are two main types of distance-based methods, namely:\n\nAdaptive distance-based (Fixed number of neighbours, eg, knn=18)\nThis is our choice as our data is highly skewed to the right and also each hexagon will be guaranteed at least n neighbours, which makes it useful when testing for statistical significance later. To illustrate this, we can visualise the neighbours network in a cropped area of our study area.\n\nThe code chunk below first determine the rectangular extent of our study area using st_bbox() of sf package. Next, it adjusts the new bounding parameters. Finally we will use the st_crop of sf package to crop the day_am sf object. The resulting cropped map is a grassland bounded by Gambas Ave, Woodlands Ave 12, Seletar Expressway and Mandai Ave.\n\n\nShow the code\nbbox_new <- st_bbox(day_am)\n#    xmin     ymin     xmax     ymax \n#18720.12 31193.43 33720.12 43184.55 \nbbox_new[1] <- bbox_new[1] + 20000  # xmin\nbbox_new[2] <- bbox_new[2] + 15000  # ymin\nbbox_new[3] <- bbox_new[3] - 20000  # xmax\n#bbox_new[4] <- bbox_new[4] - 5000  # ymax\nbbox_new\n\n\n    xmin     ymin     xmax     ymax \n23720.12 41193.43 28720.12 53184.55 \n\n\nShow the code\ncropped <- st_crop(day_am, bbox_new) %>% \n  rename(geometry=area_hex_grid)\n\n\nNext, we will use the st_centroid(), knearneigh() and knn2nb() of spdep package to calculate the centroids coordinates of cropped map. If we use knn = 8 , the neighbours network will look like diagram below. (In this exercise, we will use knn=18 but we will not plot it as the network diagram will look to dense.)\n\n\nShow the code\nlibrary(spdep)\nlongitude <- map_dbl(cropped$geometry, ~st_centroid(.x)[[1]])\nlatitude <- map_dbl(cropped$geometry, ~st_centroid(.x)[[2]])\ncoords <- cbind(longitude, latitude)\nknn8 <- spdep::knn2nb(knearneigh(coords, k=8))\nplot(st_geometry(cropped), border = 'lightgray', main='Grassland bounded by Gambas Ave, \\nWoodlands Ave 12, Seletar Expressway and Mandai Ave')\nplot(knn8, coords, pch=18, cex=0.6, add= TRUE, col='red')\n\n\n\n\n\n\nFixed-distance threshold\nThe reason why this method is less appropriate is because hexagons near to water-bodies/grassland/airports will have less neighbours. This will result in some hexagons having less than 8 neighbours. From the diagram below, we can see that if fixed-distance (green circle) is used, the highlighted hexagon beside the grassland will have only 2 neighbours as compared to the highlighted hexagon above, which will have 6 neighbours.\n\n\n\n\n\n\nIdentify adaptive distance weights\nFor this exercise, we will use knn =18. We will set each hexagon to have 18 neighbours each using the code chunk below.\n\nst_knn() of sfdep will output a list of neighbours ‘nb’ of a hex\nbased on ‘nb’ column, st_weights() of sfdep will generate row-standardised spatial weights\n‘.before = 1’ will put the two columns at the front of our sf dataframe.\n\n\nget_weights <- function(df) {\n  result <- df %>% \n    mutate(nb = st_knn(area_hex_grid,\n                       k=18),\n           wt = st_weights(nb,\n                           style='W'),\n           .before =1)\n  return(result)\n}\n\n\nwm_day_am <- get_weights(day_am)\nwm_day_pm <- get_weights(day_pm)\nwm_end_am <- get_weights(end_am)\nwm_end_pm <- get_weights(end_pm)\n\nTaking a sneak peak at one of the spatial weights matrix above\n\nkable(head(wm_day_am,3))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnb\nwt\ngrid_id\nbs\nTTRIPS\nAVG_TRIPS\nDESC\narea_hex_grid\n\n\n\n\n2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 22, 23, 24, 30, 38, 39\n0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556\n34\n1\n61\n3\nAFT TUAS STH BLVD\nPOLYGON ((3970.122 27925.48…\n\n\n1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 22, 23, 24, 30, 38, 39\n0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556\n65\n1\n43\n2\nBEF TUAS STH AVE 14\nPOLYGON ((4220.122 28358.49…\n\n\n5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 23, 24, 25, 30, 31, 32, 40\n0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556\n99\n1\n43\n2\nYONG NAM\nPOLYGON ((4470.122 30523.55…\n\n\n\n\n\n\n\nGlobal autocorrelation of spatial association (Global Moran’s I with simulation)\nGlobal spatial association assesses the overall spatial pattern of a variable ‘TTRIPS’ across the entire study area. It provides a single value or metric that summarizes the extent to which similar values cluster together or are dispersed across the entire geographic space.\n\n\n\n\n\nSet seed to ensure that the computation is reproducible.\n\nset.seed(1234)\n\nGlobal Moran’s I for weekday morning passenger trips generated by hexagon level. Simulated data is used as we do not assume normality and randomization. The number of simulations is 99+1 = 100.\nWe can use the global_moran_perm() function of the sfdep package to do it. It all starts with the wm_day_am spatial weights matrix.\n\nglobal_moran_perm(wm_day_am$TTRIPS,\n                       wm_day_am$nb,\n                       wm_day_am$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.17009, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n\n\nGlobal Moran’s I for weekday afternoon passenger trips generated by hexagon level.\n\nglobal_moran_perm(wm_day_pm$TTRIPS,\n                       wm_day_pm$nb,\n                       wm_day_pm$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.18789, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n\n\nGlobal Moran’s I for weekend morning passenger trips generated by hexagon level.\n\nglobal_moran_perm(wm_end_am$TTRIPS,\n                       wm_end_am$nb,\n                       wm_end_am$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.13575, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n\n\nGlobal Moran’s I for weekend afternoon passenger trips generated by hexagon level.\n\nglobal_moran_perm(wm_end_pm$TTRIPS,\n                       wm_end_pm$nb,\n                       wm_end_pm$wt,\n                  nsim = 99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.17146, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n\n\nFor all the four time intervals, since p-value for global Moran’s I is smaller than 0.05 , we can reject the null hypothesis that the spatial patterns is random. Because the Moran’s I statistics is greater than 0, we can infer the spatial distribution shows sign of clustering for all four time intervals. This result is rather consistent with the choropleth maps plotted earlier.\n\n\nLocal autocorrelation of spatial association\nLocal spatial association examines the spatial patterns at a more detailed, local level. Instead of providing a single summary value for the entire study area, local measures identify specific areas where the spatial association is particularly strong or weak. If the Local Moran’s I is positive, it suggests clusters of high-high or low-low. If negative, it suggests outliers of low-high or high-low.\n\n\n\n\n\nCompute LISA of the passengers trips generated by origin at hex level\nWe can use the local_moran() function of the sfdep package to do so, It all starts with the wm_day_am spatial weights matrix, this function automatically compute the neighbour lists and weights using simulated data. As this function outputs results in a group format, we will need to unnest() in order to access the output.\n\nget_lisa<- function(wm){\n  result<- wm %>% \n  mutate(local_moran = local_moran(\n    TTRIPS, nb,wt, nsim=99),\n    .before=1) %>%\n  unnest(local_moran)\n  \n  return(result)\n}\n\nlisa_day_am <- get_lisa(wm_day_am)\nlisa_day_pm <- get_lisa(wm_day_pm)\nlisa_end_am <- get_lisa(wm_end_am)\nlisa_end_pm <- get_lisa(wm_end_pm)\n\nNew columns are added to the lisa_day_am simple feature dataframe smartly. The new columns are\n\nii: local moran statistic\neii: expectation of local moran statistic; for localmoran_permthe permutation sample means\nvar_ii: variance of local moran statistic; for localmoran_permthe permutation sample standard deviations\nz_ii: standard deviate of local moran statistic; for localmoran_perm based on permutation sample means and standard deviations\np_ii: p-value of local moran statistic using pnorm(); for localmoran_perm using standard deviatse based on permutation sample means and standard deviations\np_ii_sim: For localmoran_perm(), rank() and punif() of observed statistic rank for [0, 1] p-values using alternative=\np_folded_sim: the simulation folded [0, 0.5] range ranked p-value\nskewness: For localmoran_perm, the output of e1071::skewness() for the permutation samples underlying the standard deviates\nkurtosis: For localmoran_perm, the output of e1071::kurtosis() for the permutation samples underlying the standard deviates\nmean: contains the quadrant ‘type’ of a typical Moran Scatterplot\nmedian: contains the quadrant ‘type’ of a typical Moran Scatterplot (use this if dataset is highly skewed).\n\nResults of LISA computation for all four time intervals\n\nlisa_day_amlisa_day_pmlisa_end_amlisa_end_pm\n\n\n\ndatatable(lisa_day_am, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\ndatatable(lisa_day_pm, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\ndatatable(lisa_end_am, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\ndatatable(lisa_end_pm, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\nVisualising significant Local Moran’s I at 95% confidence level\nWe will use tmap core functions to build choropleth maps, using the Local Moran’s I field and p-value field for all four time intervals.\nOnly the significant values of Local Moran’s I values at 95% confidence level are plotted.\n\nget_sig_lmi_map <- function(lisatable, title) {\n  \n  sig_lisatable <- lisatable  %>%\n  filter(p_ii_sim < 0.05)\n  \n  result <- tm_shape(lisatable) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(sig_lisatable) +\n    tm_fill(\"ii\") + \n    tm_borders(alpha = 0.4) +\n    tm_layout(main.title = title,\n              main.title.size = 1.3)\n  \n  return(result)\n  \n}\n\nsig_lmi_1 <- get_sig_lmi_map(lisa_day_am,\"Local Moran's I of Total Trips generated on Weekday Morning at 95% CL\" )\nsig_lmi_2 <- get_sig_lmi_map(lisa_day_pm, \"Local Moran's I of Total Trips generated on Weekday Afternoon at 95% CL\" )\nsig_lmi_3 <- get_sig_lmi_map(lisa_end_am, \"Local Moran's I of Total Trips generated on Weekend Morning at 95% CL\" )\nsig_lmi_4 <- get_sig_lmi_map(lisa_end_pm, \"Local Moran's I of Total Trips generated on Weekend Afternoon at 95% CL\" )\n\nWe will plot them side-by-side for easy comparison.\n\n\nShow the code\ntmap_mode('plot')\n\ntmap_arrange(sig_lmi_1,\n              sig_lmi_2,\n              sig_lmi_3,\n              sig_lmi_4,\n              asp=2,\n              nrow=2,\n              ncol=2)\n\n\n\n\n\nFrom the Local Moran choropleth maps above, orange regions would indicate outliers regions however, we would not know whether they are low-high or high-low regions.\nThe green regions would indicate clusters however we would not know whether they are high-high or low-low regions. One thing for sure, the green Tuas region represents low-low based on the geovisualisation in the previous section.\nTo find out, we have to plot the LISA maps in the next section.\n\n\n\n\n\n\n\n\nVisualizing significant LISA map at 95% confidence level\nThe LISA maps that we are building now are categorical map showing outliers (Low-high or High-low) and clusters (high-high or low-low).\nWe will use median values to generate the quadrants (HH, LH, HL or LL) because our data is highly skewed to the right, otherwise we can use the mean values.\n\nget_sig_lisa_map <- function(lisatable, title) {\n  \n  sig_lisatable <- lisatable  %>%\n  filter(p_ii_sim < 0.05)\n  \n  result <- tm_shape(lisatable) +\n    tm_polygons(alpha = 0.5) +\n    tm_borders(alpha = 0.5) +\n    \n    tm_shape(sig_lisatable) +\n    tm_fill(\"median\",\n            palette = c(\"#2c7bb6\",  \"#fdae61\", \"#abd9e9\", \"#d7191c\"),\n            alpha= 0.7) + \n    tm_dots('grid_id', alpha=0.05) +\n    tm_borders(alpha = 0.4) +\n    tm_layout(main.title = title,\n              main.title.size = 1.5,\n              legend.position = c(\"left\", \"top\"))\n    \n  return(result)\n  \n}\n\nsig_lisa_1 <- get_sig_lisa_map(lisa_day_am,\"LISA categories generated on Weekday Morning at 95% CL\" )\nsig_lisa_2 <- get_sig_lisa_map(lisa_day_pm, \"LISA categories generated on Weekday Afternoon at 95% CL\" )\nsig_lisa_3 <- get_sig_lisa_map(lisa_end_am, \"LISA categories generated on Weekend Morning at 95% CL\" )\nsig_lisa_4 <- get_sig_lisa_map(lisa_end_pm, \"LISA categories generated on Weekend Afternoon at 95% CL\" )\n\n\nLISA categories generated on Weekday Morning at 95% CL\nTo leverage on the interactivity of the map, tm_dots() are used to plot the hexagon’s grid_id on the map for identification of each hexagon.\nClicking on the center of the significant hexgons will reveal their grid_id for easy identification of the bus stops that fall within the hexagon. (Use the interactive datatable above to search for hexagon grid id).\n\n\nShow the code\ntmap_mode('view')\nsig_lisa_1\n\n\n\n\n\n\n\n\n\nLISA categories generated on Weekday Afternoon at 95% CL\n\n\nShow the code\ntmap_mode('view')\nsig_lisa_2\n\n\n\n\n\n\n\n\n\nLISA categories generated on Weekend Morning at 95% CL\n\n\nShow the code\ntmap_mode('view')\nsig_lisa_3\n\n\n\n\n\n\n\n\n\nLISA categories generated on Weekend Afternoon at 95% CL\n\n\nShow the code\ntmap_mode('view')\nsig_lisa_4\n\n\n\n\n\n\n\n\n\nPlotting all four LISA maps side by side for easy comparison\n\n\nShow the code\ntmap_mode('plot')\n\ntmap_arrange(sig_lisa_1,\n              sig_lisa_2,\n              sig_lisa_3,\n              sig_lisa_4,\n              asp=2,\n              nrow=2,\n              ncol=2)\n\n\n\n\n\n\n\n\nDiscussion\nThe four maps (different time-intervals) above shows significant clusters and outliers for passengers trips generate by origin bus stops at each hexagon. The confidence level used is 95%.\nBlue region: Low-Low cluster\nLight-blue region: Low-High outlier\nOrange region: High-Low outlier\nRed region: High-High cluster\nWe observe that passengers trips by origin is not homogeneous throughout Singapore, our study area.\nAnalysis by regions\nAt one glance, the spatial pattern is observed to be higher in the North, East and West residential regions than in the South part of Singapore.\nThe high clusters are Boon Lay interchange, Woodlands interchange, Yishun Interchange, Ang Mo kio Interchange, Seng Kang/ Hougang, Tampines Interchange Bedok Bus Interchange, Toa Payoh Interchange, Clementi Station, Chua Chu kang Interchange, Bukit Batok Interchange and Joo Koon Interchange .\nThe western parts of Singapore is a cluster of low passenger trips. They are the Tuas, Pioneer Sector, Gul Circle, Shipyard, Samulun, Jurong port, Penjuru Crescent and Pandan subzones. These are mainly industrial zones and workers are usually provided with company transport.\nAnalysis of the edges\nThe edges of Singapore tend to be clusters of low passenger trips, with the exception of a few outliers edges, namely:\n\nhex id 194 (Western edge High-low): AFT TUAS STH AVE 4, BEF TUAS STH AVE 4\nhex id 353 (Western edge High-Low): OPPO TUAS LK STN\nhex id 2298 (Southern edge High-Low): OPP HAW PAR VILLA STN, HAW PAR VILLA STN, OPP HAW PAR VILLA STN, HAW PAR VILLA STN\nhex id 5154 (Eastern edge High-Low only on weekends): TANAH MERRY FERRY TER .\nThe Tanah Merah Ferry terminal is one of the gateways to Batam and Bintan, Indonesia, as well as Desaru and Tanjung Pengelih, Malaysia.\nhex id 5133 (Eastern edge High-Low): CHANGI VILLAGE TER, AFT CHANGI GOLF COURSE, CHANGI GOLF COURSE, CHANGI VILLAGE HOTEL, BLK 4, BLK 5\nChangi Village is a place of food and leisure attraction.\nhex id 5349 (Eastern edge High-Low): POLICE PASS OFF\nThis is the SAF Ferry terminal.\n\nAnalysis of weekends vs weekdays\nA few interesting observations\n\nA short stretch of bus stops along Bukit Timah / Dunearn Road near to junction of Clementi Road and PIE exit seems to come alive on weekend afternoons, turning into High-Low outliers.\nBus stops near to the Singapore Botanic Gardens also turns into a high-low outliers during weekend afternoons.\nBus stops along Jalan Bukit Merah, River Valley Road, Havelock Road and the Rochor areas turn into high clusters only on Weekend Mornings.\nThe woodlands checkpoint area is also observed to be a high cluster only on weekend afternoons, suggesting increased human flow via bus on the weekends.\n\nWhile this exercise helps us to locate clusters and outliers and we have tried to suggest potential reasons behind the observed spatial pattern, there could be other social and economic factors like income levels, population density and other demographic factors that can play a role in this pattern.\n\n\nReferences\nTin Seong Kam. “2 Choropleth Mapping with R” From R for Geospatial Data Science and Analytics https://r4gdsa.netlify.app/chap02\nTin Seong Kam. “9 Global Measures of Spatial Autocorrelation” From R for Geospatial Data Science and Analytics https://r4gdsa.netlify.app/chap09\nTin Seong Kam. “10 Local Measures of Spatial Autocorrelation” From R for Geospatial Data Science and Analytics https://r4gdsa.netlify.app/chap10"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Business.html",
    "href": "Take-home_Ex2/data/geospatial/Business.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/entertn.html",
    "href": "Take-home_Ex2/data/geospatial/entertn.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/F&B.html",
    "href": "Take-home_Ex2/data/geospatial/F&B.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/FinServ.html",
    "href": "Take-home_Ex2/data/geospatial/FinServ.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "href": "Take-home_Ex2/data/geospatial/Liesure&Recreation.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "Take-home_Ex2/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-home_Ex2/data/geospatial/Retails.html",
    "href": "Take-home_Ex2/data/geospatial/Retails.html",
    "title": "NYX Geospatial App",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#setting-the-scene",
    "href": "Take-home_Ex2/Take-home_Ex2.html#setting-the-scene",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Setting the Scene",
    "text": "Setting the Scene\nThe challenges in urban mobility confront transport operators and city managers. Traditional methods like commuter surveys, despite being costly and time-consuming, have been used to address these questions. However, the delays in cleaning and analyzing survey data often render it outdated by the time reports are ready. The digitization of city-wide infrastructures offers a solution by using data from digital platforms such as GPS and SMART cards.\nCurrently, although there are a large amount of open data available for public consumption, there are not much research to make use of these data and lack of practical research (using Geospatial Data Science and Analysis) to support policy making decisions."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#objective",
    "href": "Take-home_Ex2/Take-home_Ex2.html#objective",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Objective",
    "text": "Objective\nOur task for this take-home exercise is to conduct a case study to demonstrate the potential value of GDSA to integrate publicly available data from multiple sources for building a spatial interaction models to determine factors affecting urban mobility patterns of public bus transit."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#the-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#the-data",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "The Data",
    "text": "The Data\n\nOpen Government Data\nFor the purpose of this assignment, data from several open government sources will be used:\n\nPassenger Volume by Origin Destination Bus Stops, Bus Stop Location, Train Station (Feb 2023) and Train Station Exit Point (Aug 2023), just to name a few of them, from LTA DataMall.\nMaster Plan 2019 Subzone Boundary, HDB Property Information, School Directory and Information and other relevant data from Data.gov.sg.\n\n\n\nSpecially collected data\n\nBusinesses, retail and services, leisure and recreation, etc geospatial data sets assemble by course instructor."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#the-task",
    "href": "Take-home_Ex2/Take-home_Ex2.html#the-task",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "The Task",
    "text": "The Task\nThe specific tasks of this take-home exercise are as follows:\n\nGeospatial Data Science\n\nDerive an analytical hexagon data of 375m (this distance is the perpendicular distance between the centre of the hexagon and its edges) to represent the traffic analysis zone (TAZ).\nWith reference to the time intervals provided in the table below, construct an O-D matrix of commuter flows for ONE time interval of our choice by integrating Passenger Volume by Origin Destination Bus Stops and Bus Stop Location from LTA DataMall. The O-D matrix must be aggregated at the analytics hexagon level. I have selected the Weekday Morning Peak for this take home exercise.\n\n\n\nPeak hour period\nBus tap on time\n\n\n\n\nWeekday morning peak (selected)\n6am to 9am\n\n\nWeekday afternoon peak\n5pm to 8pm\n\n\nWeekend/holiday morning peak\n11am to 2pm\n\n\nWeekend/holiday evening peak\n4pm to 7pm\n\n\n\nDisplay the O-D flows of the passenger trips by using appropriate geovisualisation methods (not more than 5 maps).\nDescribe the spatial patterns revealed by the geovisualisation (not more than 100 words per visual).\nAssemble at least three propulsive and three attractiveness variables by using aspatial and geospatial from publicly available sources.\nCompute a distance matrix by using the analytical hexagon data derived earlier.\n\n\n\nSpatial Interaction Modelling\n\nCalibrate spatial interactive models to determine factors affecting urban commuting flows at the selected time interval.\nPresent the modelling results by using appropriate geovisualisation and graphical visualisation methods. (Not more than 5 visuals)\nWith reference to the Spatial Interaction Model output tables, maps and data visualisation prepared, describe the modelling results. (not more than 100 words per visual)."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#getting-started",
    "href": "Take-home_Ex2/Take-home_Ex2.html#getting-started",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Getting Started",
    "text": "Getting Started\nIn this exercise, the following libraries will be used:\n\nsf package to perform geoprocessing tasks\nsp package , although an older package, is more efficient for computation of large data.\nsfdep package which builds upon spdep package (compute spatial weights matrix and spatially lagged variable for instance..)\ntmap to create geovisualisations\nstplanr for solving common problems in transport planning and modelling, such as how to best get from point A to point B\ntidyverse that supports data science, analysis and communication task including creating static statistical graphs.\nknitr to create html tables\nDT library to create interactive html tables\nggpubr for some easy-to-use functions for creating and customizing ‘ggplot2’- based publication ready plots.\nperformance for for computing measures to assess model quality, which are not directly provided by R’s ‘base’ or ‘stats’ packages. The primary goal of the performance package is to provide utilities for computing indices of model quality and goodness of fit. These include measures like r-squared (R2), root mean squared error (RMSE)\nreshape2is an old tool from base R. It handles matrix well for our distance matrix, like pivoting function like melt(). Tidyverse does not handle matrix very well.\nggplot2 to plot graphs\nplotly to plot interactive graphs\n\n\npacman::p_load(sf, sp, sfdep, tmap, stplanr, tidyverse, skimr, knitr, DT, performance, reshape2, ggpubr, ggplot2, plotly, h3jsr)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#importing-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#importing-data",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Importing Data",
    "text": "Importing Data\n\nAspatial data\nImport the Passenger volume by Origin Destination Bus Stops dataset downloaded from the LTA Datamall by using the read_csv() of the readr package.\n\nodbus_aug <- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\nCheck the data fields\n\nglimpse(odbus_aug)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          <chr> \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            <chr> \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       <dbl> 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             <chr> \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      <chr> \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE <chr> \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         <dbl> 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\nProcessing the aspatial OD data\nThe ‘ORIGIN_PT_CODE’ and ‘DESTINATION_PT_CODE’ field is in character field. We will convert it to factor data type.\n\nodbus_aug$ORIGIN_PT_CODE <- as.factor(odbus_aug$ORIGIN_PT_CODE)\nodbus_aug$DESTINATION_PT_CODE <- as.factor(odbus_aug$DESTINATION_PT_CODE)\n\nThe function below will extract origin data based on the four time intervals required by the task. The expected arguments are\n\ndaytype: ‘WEEKDAY’ or ‘WEEKENDS/HOLIDAY’\ntimeinterval: c(6,8) if we want data from 6am to 9am.\n\nThe function will also compute the sum of all trips by ‘ORIGIN_PT_CODE’ for each time interval and stored under a new field called ‘TRIPS’.\n\nget_origin_dest <- function(daytype, timeinterval) {\n  result <- odbus_aug %>%\n    filter(DAY_TYPE == daytype) %>%\n    filter(TIME_PER_HOUR >= timeinterval[1] & TIME_PER_HOUR <= timeinterval[2]) %>%\n    group_by(ORIGIN_PT_CODE,\n             DESTINATION_PT_CODE) %>%\n    summarise(TRIPS = sum(TOTAL_TRIPS))\n  \n  return(result)\n}\n\nLet’s get the data using get_origin function\n\nday_am <- get_origin_dest('WEEKDAY', c(6, 8))\n#origin_day_pm <- get_origin('WEEKDAY', c(5, 7))\n#origin_end_am <- get_origin('WEEKENDS/HOLIDAY', c(11, 13))\n#origin_end_pm <- get_origin('WEEKENDS/HOLIDAY', c(4, 6))\n\nTake a look at the weekday morning peak dataframe.\n\ndatatable(day_am,\n          class = 'cell-border stripe',\n          options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\nGeospatial data\nFirst, we will import the Bus Stop Location shapefiles into R. The output will be a sf point object with 5161 points and 3 fields. As the raw data is in WSG84 geographical coordinate system, we will convert it to EPSG 3414, the projected coordinate system for Singapore.\n\nbusstop <- st_read(dsn=\"data/geospatial/BusStopLocation/BusStopLocation_Jul2023\", layer = \"BusStop\") %>% \n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex2\\data\\geospatial\\BusStopLocation\\BusStopLocation_Jul2023' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\nbusstop\n\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n1       22069        B06   OPP CEVA LOGISTICS POINT (13576.31 32883.65)\n2       32071        B23         AFT TRACK 13 POINT (13228.59 44206.38)\n3       44331        B01              BLK 239  POINT (21045.1 40242.08)\n4       96081        B05 GRACE INDEPENDENT CH POINT (41603.76 35413.11)\n5       11561        B05              BLK 166 POINT (24568.74 30391.85)\n6       66191        B03         AFT CORFE PL POINT (30951.58 38079.61)\n7       23389       B02A              PEC LTD   POINT (12476.9 32211.6)\n8       54411        B02              BLK 527 POINT (30329.45 39373.92)\n9       28531        B09              BLK 536 POINT (14993.31 36905.61)\n10      96139        B01              BLK 148  POINT (41642.81 36513.9)\n\n\nAre there any duplicates in ‘BUS_STOP_N’ in busstop?\nChecking for duplicates in the ‘BUS_STOP_N’ field reveals that there are about 16 repeated bus stop numbers. Note that they have different geometry points in the simple feature busstop object above. These could be due to temprorary bus stops . We should remove these duplicated bus stops number or else it will give us problems when we try to map these bus stops to a grid_id in the Traffic Analysis Zone (TAZ).\n\nbusstop %>% \n  st_drop_geometry() %>% \n  group_by(BUS_STOP_N) %>%\n  filter(n()>1) %>%\n  ungroup() %>% \n  arrange(BUS_STOP_N)\n\n# A tibble: 32 × 3\n   BUS_STOP_N BUS_ROOF_N LOC_DESC            \n   <chr>      <chr>      <chr>               \n 1 11009      B04        Ghim Moh Ter        \n 2 11009      B04-TMNL   GHIM MOH TER        \n 3 22501      B02        Blk 662A            \n 4 22501      B02        BLK 662A            \n 5 43709      B06        BLK 644             \n 6 43709      B06        BLK 644             \n 7 47201      UNK        <NA>                \n 8 47201      NIL        W'LANDS NTH STN     \n 9 51071      B21        MACRITCHIE RESERVOIR\n10 51071      B21        MACRITCHIE RESERVOIR\n# ℹ 22 more rows\n\n\nTake for instance bus stop number 51071 with two different point geometry values.\n\nbusstop[3470,]\n\nSimple feature collection with 1 feature and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 28311.27 ymin: 36036.92 xmax: 28311.27 ymax: 36036.92\nProjected CRS: SVY21 / Singapore TM\n     BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n3470      51071        B21 MACRITCHIE RESERVOIR POINT (28311.27 36036.92)\n\n\n\nbusstop[3472,]\n\nSimple feature collection with 1 feature and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 28282.54 ymin: 36033.93 xmax: 28282.54 ymax: 36033.93\nProjected CRS: SVY21 / Singapore TM\n     BUS_STOP_N BUS_ROOF_N             LOC_DESC                  geometry\n3472      51071        B21 MACRITCHIE RESERVOIR POINT (28282.54 36033.93)\n\n\nRemoving duplicated bus stops\n\nbusstop <- busstop %>%\n  distinct(BUS_STOP_N,\n           .keep_all = TRUE)\n\nDouble check again that duplicated bus stops have been removed.\n\nbusstop %>% \n  st_drop_geometry() %>% \n  group_by(BUS_STOP_N) %>%\n  filter(n()>1) %>%\n  ungroup() %>% \n  arrange(BUS_STOP_N)\n\n# A tibble: 0 × 3\n# ℹ 3 variables: BUS_STOP_N <chr>, BUS_ROOF_N <chr>, LOC_DESC <chr>\n\n\nImport the MPSZ-2019 data.\nIt is a multipolygon sf object with 332 features / subzones/ units.\n\nmpsz <- st_read(dsn='data/geospatial/MPSZ-2019',\n                layer='MPSZ-2019') %>% \n  st_transform(crs=3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex2\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\nCreating hexagon layer\nBefore we can plot the base layer, we have to create hexagonal grids of 375 m (middle to edge) using the mpsz multipolygon sf object using sf.\nFirst , create a grid which the extent equals to the bounding box of the busstop points using st_make_grid().\n\nTo create hexagons of 375m (centre to edge), we should input 750 for ‘cellsize’ parameter. ‘Cellsize’ is defined as the distance from edge to edge.\nConvert to sf object and add a unique identifier to each hexagon grid. The output has 834 hexagon units.\nUse st_intersects() to count the number of in each hsubzones in each hexagon.\nFilter to retain only hexagons with at least one subzone. The output bs_count has 1945 hexagon units.\n\n\narea_hex_grid = st_make_grid(busstop,\n                             cellsize= 750, \n                             what = \"polygons\", \n                             square = FALSE)\n\nhex_grid_sf = st_sf(area_hex_grid) %>%\n  mutate(grid_id = 1:length(lengths(area_hex_grid)))\n\nhex_grid_sf$num_bs = lengths(st_intersects(hex_grid_sf, busstop))\n\n\nbs_count = filter(hex_grid_sf, num_bs > 0)\n\nIf we like to, we could save the above hexagon layer to disk.\n\nst_write(bs_count, 'data/bs_count_750.shp')\n\nRead bs_count in R\n\nbs_count <- st_read(dsn = 'data/geospatial',\n                    layer='bs_count_750')\n\nReading layer `bs_count_750' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 834 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 3595.122 ymin: 26049.09 xmax: 48595.12 ymax: 53545.39\nProjected CRS: SVY21 / Singapore TM\n\n\nHow does our hexagon layer look like?\n\nplot(bs_count['num_bs'],\n     main = 'Number of bus stops per hexagon')\n\n\n\n\nWe can see that each hexagon contains a minimum of 1 bus stop and up to a maximum of 19 bus stops.\n\n\n\n\n\nGeospatial data wrangling\n\nCombining busstop (point sf) and sz_count (polygon sf)\nWe have to assign a ‘grid_id’ to each bus stops.\nThe code chunk below performs points and hexagon polygon overlap using st_intersection() and the output will be in sf point object.\nBefore overlapping:\nbusstop : 5145 points\nbs_count hexagon base layer: 834 hexagons\nAfter overlapping:\nbusstop_hex : 5145 points suggesting all bus stops falls within at least one hexagon grid. This is good result because we are not losing any bus stops.\n\nbusstop_hex <- st_intersection(busstop, bs_count) %>% \n  select(BUS_STOP_N, LOC_DESC,  grid_id, num_bs)\n\nbusstop_hex\n\nSimple feature collection with 5145 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     BUS_STOP_N            LOC_DESC grid_id num_bs                  geometry\n3261      25059   AFT TUAS STH BLVD      23      1 POINT (3970.122 28063.28)\n2565      25751 BEF TUAS STH AVE 14      44      1 POINT (4427.939 28758.67)\n254       26379            YONG NAM      46      2 POINT (4473.292 30681.57)\n2398      26369        SEE HUP SENG      46      2 POINT (4604.363 31212.96)\n2824      25741         HALLIBURTON      66      1  POINT (5060.733 29212.4)\n1714      26399  AFT TUAS VIEW CRES      67      4  POINT (5079.51 30214.42)\n2822      25719           THE INDEX      67      4 POINT (4799.476 30158.46)\n2823      25711       OPP THE INDEX      67      4 POINT (4831.438 30132.43)\n4189      26389  BEF TUAS STH AVE 5      67      4 POINT (4776.694 30324.88)\n1564      26299  BEF TUAS STH AVE 6      68      1 POINT (4879.489 31948.93)\n\n\nDrop the geometry column of busstop_hex.\n\nbusstop_hex_geo <- busstop_hex\nbusstop_hex <- busstop_hex  %>% \n  st_drop_geometry()\n\ndatatable(busstop_hex, class = 'cell-border stripe', options = list(pageLength = 5))\n\n\n\n\n\n\nAre there duplicates in busstop_hex ?\nLet us check for duplicates in busstop_hex df as it will be used to perform a left join later.\nThe output shows that there are no duplicate rows.\n\nbusstop_hex %>%\n  group_by(BUS_STOP_N, grid_id, num_bs) %>%\n  filter(n()>1) %>%\n  ungroup()\n\n# A tibble: 0 × 4\n# ℹ 4 variables: BUS_STOP_N <chr>, LOC_DESC <chr>, grid_id <int>, num_bs <int>"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#construct-an-o-d-matrix-of-commuter-flows-for-the-morning-weekday-peak-hour",
    "href": "Take-home_Ex2/Take-home_Ex2.html#construct-an-o-d-matrix-of-commuter-flows-for-the-morning-weekday-peak-hour",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Construct an O-D matrix of commuter flows for the morning weekday peak hour",
    "text": "Construct an O-D matrix of commuter flows for the morning weekday peak hour\nThis is how a typical Origin-Destination flow table would look like:\n\n\n\n\n\nIt contains the number of trips between pairs of origin and destination hexagons.\nTo get the table above, perform left join between day_am and busstop_hex df twice.\nFirst, we append the grid_id from busstop_hex data frame onto day_am data frame. By doing so, we get the fields ‘ORIGIN_GRID_ID’ and ‘ORIGIN_LOC_DESC’ (for tooltip later)from busstop_hex into day_am.\nBefore join:\nday_am : 224,363 rows\nAfter join:\nod_data: 224,363 rows\n\nod_data <- left_join(day_am , busstop_hex,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_GRID_ID = grid_id,\n         DESTIN_BS = DESTINATION_PT_CODE,\n         ORIGIN_LOC_DESC= LOC_DESC)\n\nCheck for duplicate before proceeding. There are no duplicates.\n\nduplicate <- od_data %>%\n  group_by_all() %>% \n  #group_by(ORIGIN_BS, DESTIN_BS) %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n\n# A tibble: 0 × 6\n# ℹ 6 variables: ORIGIN_BS <chr>, DESTIN_BS <fct>, TRIPS <dbl>,\n#   ORIGIN_LOC_DESC <chr>, ORIGIN_GRID_ID <int>, num_bs <int>\n\n\nNext, perform another left join between day_am and busstop_hex df to get the ‘DESTIN_GRID_ID’ and the ‘DESTIN_LOC_DESC’ into day_am df. The number of rows before and after the left joins are the same.\n\nod_data <- left_join(od_data, busstop_hex,\n            by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) %>%\n  rename(DESTIN_GRID_ID = grid_id,\n         DESTIN_LOC_DESC= LOC_DESC,\n         num_bs_origin = num_bs.x,\n         num_bs_destin = num_bs.y) \n\nCheck for duplicates. The output shows that there are no duplicates.\n\nduplicate <- od_data %>%\n  group_by_all() %>% \n  #group_by(ORIGIN_BS, DESTIN_BS) %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n\n# A tibble: 0 × 9\n# ℹ 9 variables: ORIGIN_BS <chr>, DESTIN_BS <chr>, TRIPS <dbl>,\n#   ORIGIN_LOC_DESC <chr>, ORIGIN_GRID_ID <int>, num_bs_origin <int>,\n#   DESTIN_LOC_DESC <chr>, DESTIN_GRID_ID <int>, num_bs_destin <int>\n\n\nFinal clean-up of od_data df.\nThe code chunk below will do the following:\n\nThere are missing grid_ids for some of the origin and destination bus stop because the Bus Stops Location data uploaded by LTA in July 2023 could be more outdated than Passenger Volume by Origin Destination Bus Stops data collected in August 2023. We will drop rows with missing values.\nGroup-by ‘ORIGIN_GRID_ID’ and ‘DESTIN_GRID_ID’ to generate a new field ‘MORNING_PEAK’ that contains the summation of all trips between each pair of i,j hexagons. (i denotes origin and j denotes destination)\n\n\nod_data <- od_data %>%\n  drop_na() %>%\n  group_by(ORIGIN_GRID_ID, DESTIN_GRID_ID) %>%\n  summarise(MORNING_PEAK = sum(TRIPS),\n            ORIGIN_DESC = paste(unique(ORIGIN_LOC_DESC), collapse = ', '),\n            DESTIN_DESC = paste(unique(DESTIN_LOC_DESC), collapse = ', ')) %>% \n  ungroup()\n\n\n\n\n\n\n\n\n\n\n\n\n\nORIGIN_GRID_ID\nDESTIN_GRID_ID\nMORNING_PEAK\nORIGIN_DESC\nDESTIN_DESC\n\n\n\n\n23\n67\n1\nAFT TUAS STH BLVD\nTHE INDEX\n\n\n23\n88\n2\nAFT TUAS STH BLVD\nEDGEN MURRAY\n\n\n23\n128\n2\nAFT TUAS STH BLVD\nAFT TUAS STH ST 7\n\n\n\n\n\nWe will not be visualising the flows at this point in time because we would like to get ‘dist’ between each hexagon for clearer visuslisation later."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#compute-distance-matrix-by-analytic-hexagon-level",
    "href": "Take-home_Ex2/Take-home_Ex2.html#compute-distance-matrix-by-analytic-hexagon-level",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Compute Distance Matrix by analytic hexagon level",
    "text": "Compute Distance Matrix by analytic hexagon level\nFirst as.Spatial() will be used to convert bs_count from sf tibble data frame to SpatialPolygonsDataFrame of sp object as shown in the code chunk below. The reason for doing so is because it is faster to compute distance matrix using sp than sf package.\n\nbs_count_sp <- as(bs_count, \"Spatial\")\n\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the hexagons.\nspDists(x, y = x, longlat = FALSE, segments = FALSE, diagonal = FALSE)\nspDists returns a full matrix of distances in the metric of the points if longlat=FALSE, or in kilometers if longlat=TRUE; it uses spDistsN1 in case points are two-dimensional. In case of spDists(x,x), it will compute all n x n distances, not the sufficient n x (n-1).\nRecall that bs_count contains 834 hexagons and a 834 x 834 distance matrix dist will be created.\nWe will print out the first 7 rows of the distance matrix. Notice the column and row headers are not labelled by grid_id.\n\ndist <- sp::spDists(bs_count_sp, \n                longlat = FALSE) # already projected in EPSG:3414\nhead(dist, n=c(7, 7))\n\n         [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]\n[1,]    0.000  750.000 3269.174 1500.000 2704.163 3968.627 1299.038\n[2,]  750.000    0.000 2598.076  750.000 1984.313 3269.174  750.000\n[3,] 3269.174 2598.076    0.000 1984.313  750.000  750.000 2704.163\n[4,] 1500.000  750.000 1984.313    0.000 1299.038 2598.076  750.000\n[5,] 2704.163 1984.313  750.000 1299.038    0.000 1299.038 1984.313\n[6,] 3968.627 3269.174  750.000 2598.076 1299.038    0.000 3269.174\n[7,] 1299.038  750.000 2704.163  750.000 1984.313 3269.174    0.000\n\n\nLabelling column and row headers of a distance matrix\nFirst, we will create a list sorted according to the the distance matrix by grid_id.\nNext we will attach grid_id to row and column for distance matrix matching ahead\n\ngrid_id_names <- bs_count$grid_id\n\ncolnames(dist) <- paste0(grid_id_names)\nrownames(dist) <- paste0(grid_id_names)\ndist[1:5,1:5]\n\n         23       44       46       66       67\n23    0.000  750.000 3269.174 1500.000 2704.163\n44  750.000    0.000 2598.076  750.000 1984.313\n46 3269.174 2598.076    0.000 1984.313  750.000\n66 1500.000  750.000 1984.313    0.000 1299.038\n67 2704.163 1984.313  750.000 1299.038    0.000\n\n\nPivoting distancing value by grid_id\nNext, we will pivot the distance matrix into a long table by using the row and column grid_id as show in the code chunk below.\nWe will use the melt() function of the reshape2 package to convert wide-format data to long-format data. This function will convert wide-format data to a data frame with columns for each combination of row and column indices and their corresponding values.\nTo do the opposite, used cast().\n\nwidelong\n\n\n\nmatrix(1:6, nrow = 2, ncol = 3)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\n\n\n\nreshape2::melt(matrix(1:6, nrow = 2, ncol = 3)) %>% knitr::kable()\n\n\n\n\nVar1\nVar2\nvalue\n\n\n\n\n1\n1\n1\n\n\n2\n1\n2\n\n\n1\n2\n3\n\n\n2\n2\n4\n\n\n1\n3\n5\n\n\n2\n3\n6\n\n\n\n\n\n\n\n\n\ndistPair <- reshape2::melt(dist) %>%\n  rename(dist = value)\nhead(distPair, 10)\n\n   Var1 Var2     dist\n1    23   23    0.000\n2    44   23  750.000\n3    46   23 3269.174\n4    66   23 1500.000\n5    67   23 2704.163\n6    68   23 3968.627\n7    86   23 1299.038\n8    87   23 2250.000\n9    88   23 3436.932\n10   89   23 4683.748\n\n\nThere are 695,556 rows in distPair due to 834P2 + 834 = 834 * 833+ 834 possible pairs of hexagon pairs. (Aka the number of possible permutations with replacement)\nThree new columns generated, (1) ‘var1’, (2) ‘var2’ and (3) ‘value’ containing the distance for the corresponding hex i -hex j pair; thus rename to ‘dist’\nUpdating the intra-zonal distances\nWe will append a constant value to replace the intra-zonal distance of 0.\nFirst, we will remove distance = 0 and find out the minimum value of the inter-zonal distance by using summary().\n\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n\n      Var1           Var2           dist      \n Min.   :  23   Min.   :  23   Min.   :  750  \n 1st Qu.: 871   1st Qu.: 871   1st Qu.: 8352  \n Median :1324   Median :1324   Median :13332  \n Mean   :1269   Mean   :1269   Mean   :14162  \n 3rd Qu.:1688   3rd Qu.:1688   3rd Qu.:18929  \n Max.   :2505   Max.   :2505   Max.   :44680  \n\n\nThe minimum inter-hexagon travel was actually 750 m (indicating travelling to adjacent hexagon). If a hexagon’s apothem is 325m (middle to edge), then the length of its long diagonal will be 750m (vertex to opposite vertex).\nSo we could set the intra-zonal distance to be approximately 300 m.\n\ndistPair$dist <- ifelse(distPair$dist == 0,\n                        300, distPair$dist)\n\nThe code chunk below is used to rename the origin and destination fields.\n\ndistPair <- distPair %>%\n  rename(ORIGIN_GRID_ID = Var1,\n         DESTIN_GRID_ID = Var2)\n\ndistPair %>% head()\n\n  ORIGIN_GRID_ID DESTIN_GRID_ID     dist\n1             23             23  300.000\n2             44             23  750.000\n3             46             23 3269.174\n4             66             23 1500.000\n5             67             23 2704.163\n6             68             23 3968.627\n\n\n\nglimpse(distPair)\n\nRows: 695,556\nColumns: 3\n$ ORIGIN_GRID_ID <int> 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109, 110, 1…\n$ DESTIN_GRID_ID <int> 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,…\n$ dist           <dbl> 300.000, 750.000, 3269.174, 1500.000, 2704.163, 3968.62…"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#preparing-flow-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#preparing-flow-data",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Preparing flow data",
    "text": "Preparing flow data\nIn this section, our desired output is a dataframe containing number of TRIPS and distance for each origin and destination grid id.\nLet us rename the od_data to call it flow_data df.\n\nflow_data <- od_data %>%\n  group_by(ORIGIN_GRID_ID, DESTIN_GRID_ID) %>% \n  summarize(TRIPS = sum(MORNING_PEAK)) \n\nhead(flow_data) %>%  kable()\n\n\n\n\nORIGIN_GRID_ID\nDESTIN_GRID_ID\nTRIPS\n\n\n\n\n23\n67\n1\n\n\n23\n88\n2\n\n\n23\n128\n2\n\n\n23\n150\n1\n\n\n23\n154\n2\n\n\n23\n175\n53\n\n\n\n\n\n\nSeparating intra-flow from flow_data df\nThe code chunk below created two new fields\n‘FlowNoIntra’ is a column containing distance = 0 for intra-zonal pairs (diagonals).\n‘offset’ is also created.\n\nflow_data$FlowNoIntra <- ifelse(\n  flow_data$ORIGIN_GRID_ID == flow_data$DESTIN_GRID_ID, \n  0, flow_data$TRIPS)\nflow_data$offset <- ifelse(\n  flow_data$ORIGIN_GRID_ID == flow_data$DESTIN_GRID_ID, \n  0.000001, 1)\n\nFilter to keep only inter-zonal trips, removing the intra-zonal trips. After filtering, the number of rows reduced from 62, 741 to 62,120 rows.\n\ninter_zonal_flow <- flow_data %>% \n  filter(FlowNoIntra >0)\n\n\nglimpse(inter_zonal_flow)\n\nRows: 62,120\nColumns: 5\nGroups: ORIGIN_GRID_ID [817]\n$ ORIGIN_GRID_ID <int> 23, 23, 23, 23, 23, 23, 44, 44, 44, 46, 46, 46, 46, 46,…\n$ DESTIN_GRID_ID <int> 67, 88, 128, 150, 154, 175, 88, 154, 175, 67, 111, 131,…\n$ TRIPS          <dbl> 1, 2, 2, 1, 2, 53, 11, 3, 29, 3, 1, 1, 1, 52, 22, 9, 17…\n$ FlowNoIntra    <dbl> 1, 2, 2, 1, 2, 53, 11, 3, 29, 3, 1, 1, 1, 52, 22, 9, 17…\n$ offset         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\n\n\nCombining passenger volume data (inter-zone) with distance value\nBefore we can join inter_zonal_flow and distPair, we need to convert data value type of ‘ORIGIN_SZ’ and’DESTIN_SZ’ fields of inter_zonal_flow and distPair dataframes into factor data type.\n\ninter_zonal_flow$ORIGIN_GRID_ID  <- as.factor(inter_zonal_flow$ORIGIN_GRID_ID)\ninter_zonal_flow$DESTIN_GRID_ID  <- as.factor(inter_zonal_flow$DESTIN_GRID_ID )\ndistPair$ORIGIN_GRID_ID  <- as.factor(distPair$ORIGIN_GRID_ID)\ndistPair$DESTIN_GRID_ID  <- as.factor(distPair$DESTIN_GRID_ID )\n\nNow, left_join() of dplyr will be used to inter_zonal_flow dataframe and distPair dataframe. The output is called flow_data1.\n\n\n\n\n\n\nNote\n\n\n\nNotes:\ndistPair is a df containing distances for all corresponding subzone pairs (including self, default to 50m). ‘ORIGIN_GRID_ID’, ‘DESTIN_GRID_ID’, ‘dist’\ninter_zonal_flow is a df containing ‘ORIGIN_GRID_ID’, ‘DESTIN_GRID_ID’ and ‘TRIPS’\nWe will now perform a left join with two sets of join keys.\nThe output flow_data_1 contains distance and total morning peak trips for each possible pairs of grid-ids (self included).\n\n\nBefore left join:\ninter_zonal_flow has 62,741 rows.\ndistPair has 695,556 rows (is the all possible pairs out of 834 hex grid_ids, order matters and with replacement.)\nAfter join:\nflow_data1 has 62,741 rows.\ninter_zonal_flow has no distance data. flow_data1 has distance data.\n\nflow_data1 <- inter_zonal_flow %>%\n  left_join (distPair,\n             by = c(\"ORIGIN_GRID_ID\" = \"ORIGIN_GRID_ID\",\n                    \"DESTIN_GRID_ID\" = \"DESTIN_GRID_ID\"))\n\nglimpse(flow_data1)\n\nRows: 62,120\nColumns: 6\nGroups: ORIGIN_GRID_ID [817]\n$ ORIGIN_GRID_ID <fct> 23, 23, 23, 23, 23, 23, 44, 44, 44, 46, 46, 46, 46, 46,…\n$ DESTIN_GRID_ID <fct> 67, 88, 128, 150, 154, 175, 88, 154, 175, 67, 111, 131,…\n$ TRIPS          <dbl> 1, 2, 2, 1, 2, 53, 11, 3, 29, 3, 1, 1, 1, 52, 22, 9, 17…\n$ FlowNoIntra    <dbl> 1, 2, 2, 1, 2, 53, 11, 3, 29, 3, 1, 1, 1, 52, 22, 9, 17…\n$ offset         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ dist           <dbl> 2704.163, 3436.932, 1984.313, 2598.076, 6873.864, 7611.…\n\n\nPrint out the first 6 rows\n\nhead(flow_data1) %>% knitr::kable()\n\n\n\n\nORIGIN_GRID_ID\nDESTIN_GRID_ID\nTRIPS\nFlowNoIntra\noffset\ndist\n\n\n\n\n23\n67\n1\n1\n1\n2704.163\n\n\n23\n88\n2\n2\n1\n3436.932\n\n\n23\n128\n2\n2\n1\n1984.313\n\n\n23\n150\n1\n1\n1\n2598.076\n\n\n23\n154\n2\n2\n1\n6873.864\n\n\n23\n175\n53\n53\n1\n7611.669"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-o-d-flows-of-the-weekday-morning-peak-period",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualising-the-o-d-flows-of-the-weekday-morning-peak-period",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Visualising the O-D flows of the weekday morning peak period",
    "text": "Visualising the O-D flows of the weekday morning peak period\nRemoving intra-zonal flows\nWe will not plot the intra-zonal flows. The code chunk below will be used to remove intra-zonal flows. It does so by removing the flows that originate and ends in the same subzone.\nRows reduced from 62,685 to 62,079.\n\nod_data1 <- od_data[od_data$ORIGIN_GRID_ID!=od_data$DESTIN_GRID_ID,]\n\nCreate a flowLine simple feature line object.\nIn this code chunk below, od2line() of stplanr package is used to create the desired lines.\nod_data1 is aspatial while bs_count is geospatial data.\n\nflowLine <- od2line(flow=flow_data1,\n                    zones= bs_count,\n                    zone_code= 'grid_id')\n\nPerform a left join with od_data1 to get 'ORIGIN_DESC' and 'DESTIN_DESC' information appended into flowLine df. It will be useful for tooltip later when exploring our maps.\n\nod_data1$ORIGIN_GRID_ID <- as.factor(od_data1$ORIGIN_GRID_ID)\nod_data1$DESTIN_GRID_ID <- as.factor(od_data1$DESTIN_GRID_ID)\n\nflowLine <- left_join(flowLine, od_data1,\n                      by = c('ORIGIN_GRID_ID' = 'ORIGIN_GRID_ID',\n                             'DESTIN_GRID_ID' = 'DESTIN_GRID_ID')) %>% \n  select(-c(MORNING_PEAK))\n\nWe will save flowLine to local disk\n\nwrite_rds(flowLine,\n          \"data/rds/flowLine.rds\")\n\nReload flowLine into R.\n\nflowLine <- read_rds(\"data/rds/flowLine.rds\")\n\nflowLine contains 62,120 rows but we will only print out trips >= 5,000 in the datatable below.\n\ndatatable(flowLine %>%\n            select(-c(FlowNoIntra, offset)) %>% \n            filter(TRIPS>=5000), \n          class = 'cell-border stripe', \n          options = list(pageLength = 5))\n\n\n\n\n\n\n\nVisualisation and Discussion (in Tabset)\n\nStatic Flow MapInteractive Flow Map 1Interactive Flow Map 2Interactive Flow Map 3\n\n\nIn this map, we have filtered trips less than 5000 to make it more manageable to analyse. Thicker line width represents more trips and the length of the lines represents the distance of each inter-hexagonal trip.\nWe observed that there are some bus routes that carry more passengers. Thick bands appeared at Woodlands Checkpoint area and Boon Lay area. Some routes from North to Eastern Singapore are also longer than usual.\nIn the next few tabs, we will perform further filtering on ‘TRIPS’ and ‘dist’ and plot interactive maps for us to get the trips details.\n\n\nShow the code\ntmap_mode('plot')\n\nfiltered_flowLine <- flowLine %>%\n  filter(TRIPS >= 5000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\ntm_shape(mpsz) +\n  tm_polygons(alpha=0.3)+\n              #col='black') +\n#tm_shape(bs_count_filtered) +\n  #tm_polygons(alpha=0.3) +\n  \n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.3,\n           col='blue') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.position = \"center\",\n            main.title.size = 2.0,\n            main.title.fontface = 'bold') +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\n\n\nIn this interactive map, we have filtered and retained the trips >= 15,000, irregardless of the distance of the trip.\nMap Tips: Click on the flowline of your interest, it will reveal the number of trips, origin bus stop descriptions and destination bus stop descriptions.\nFindings:\n1) The flows with the greatest volumes were located near the Woodlands Check Point area that transported commuters across the causeway.\n2) Great volumes of flows were associated with destinations at bus or train stations, suggesting that passengers take bus for further transit. This gives us a hint that presence of bus interchange / train stations could be an important explanatory factors for ‘TRIPS’ in our Spatial Interaction Model later.\n\n\nShow the code\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\nfiltered_flowLine <- flowLine %>%\n  filter(TRIPS >= 15000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\n\ntm_shape(mpsz) +\n  tm_polygons(alpha=0.7,\n              col='black') +\ntm_shape(bs_count_filtered) +\n  tm_polygons(alpha=0.4) +\n#tm_shape(busstop_hex_geo) +\n  #tm_dots(size= 0.005)+\n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.5,\n           popup.vars=c(\"# Trips:\"=\"TRIPS\",\n                        \"Orig Desc:\"=\"ORIGIN_DESC\",\n                        \"Destin Desc:\" = \"DESTIN_DESC\",\n                        \"Distance:\" = 'dist'),\n           col='yellow') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.size = 1.0,\n            main.title.fontface = 'bold')\n\n\n\n\n\n\n\n\n\nIn order to investigate the long distance bus trips with considerable amount of trips volume, we have filtered and retain TRIPS >= 5000 and distance >= 13km. We noticed that these trips tend to connect passengers between the Northern parts of Singapore (Woodlands, Khatib and Yishun for instance) and the Eastern parts of Singapore (Tampanies, Seng Kang and Punggol for instance). Taking a look at the Singapore MRT map, it would require passengers to use at least three different ‘lines’ in order for them to commute between Eastern and Northern Singapore; maybe this is why passengers prefer to take a direct bus instead.\n\n\n\n\n\n\n\nShow the code\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\nfiltered_flowLine <- flowLine %>%\n  filter(dist >= 13000,\n         TRIPS >= 5000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\ntm_shape(mpsz) +\n  tm_polygons(alpha=0.7,\n              col='black') +\ntm_shape(bs_count_filtered) +\n  tm_polygons(alpha=0.4) +\n#tm_shape(busstop_hex_geo) +\n  #tm_dots(size= 0.005)+\n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.5,\n           popup.vars=c(\"# Trips:\"=\"TRIPS\",\n                        \"Orig Desc:\"=\"ORIGIN_DESC\",\n                        \"Destin Desc:\" = \"DESTIN_DESC\",\n                        \"Distance:\" = 'dist'),\n           col='yellow') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.size = 1.0,\n            main.title.fontface = 'bold')\n\n\n\n\n\n\n\n\n\nFor our curiosity of the longest bus route, we filter all trips with distances >= 23 km irregardless of trips volume.\nSome passengers were willing to take bus between Changi Airport and Woodlands Checkpoint and also between Bedok and Boon Lay.\nZoom in and click on the flowlines for details on trip volume, distance and bus stop details!\n\n\nShow the code\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\n\nfiltered_flowLine <- flowLine %>%\n  filter(dist >= 23000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\ntm_shape(mpsz) +\n  tm_polygons(alpha=0.7,\n              col='black') +\ntm_shape(bs_count_filtered) +\n  tm_polygons(alpha=0.4) +\n#tm_shape(busstop_hex_geo) +\n  #tm_dots(size= 0.005)+\n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(lwd = 'TRIPS',\n           style = 'quantile',\n           scale= c(1, 3, 9, 15, 21, 30),\n           #scale= c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha= 0.5,\n           popup.vars=c(\"# Trips:\"=\"TRIPS\",\n                        \"Orig Desc:\"=\"ORIGIN_DESC\",\n                        \"Destin Desc:\" = \"DESTIN_DESC\",\n                        \"Distance:\" = 'dist'),\n           col='yellow') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'O-D Flow On Weekday Morning Peak hour' ,\n            main.title.size = 1.0,\n            main.title.fontface = 'bold')"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#preparing-origin-and-destination-attributes",
    "href": "Take-home_Ex2/Take-home_Ex2.html#preparing-origin-and-destination-attributes",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Preparing Origin and Destination Attributes",
    "text": "Preparing Origin and Destination Attributes\n\nImporting the attractiveness and propulsive geospatial data\n\nGeospatial dataset 1\nTrain_Station_Exit_Layer shapefile downloaded from LTA data mall. It contains point coordinates of station box exits. The train station exits are potentially one of the attractiveness of destinations as bus passengers could take bus to MRT stations for transfer.\n\ntrain_exit <- st_read(dsn='data/geospatial',\n                  layer='Train_Station_Exit_Layer') %>% \n  st_transform(crs=3414)\n\nReading layer `Train_Station_Exit_Layer' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 565 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6134.086 ymin: 27499.7 xmax: 45356.36 ymax: 47865.92\nProjected CRS: SVY21\n\n\n\n\n\nThe file contains duplicated ‘stn_name’ and ‘exit_code’ fields.\n\ntrain_exit %>%\n  group_by(stn_name, exit_code) %>%\n  filter(n()>1) %>%\n  ungroup()\n\nSimple feature collection with 17 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 18072.23 ymin: 27512.2 xmax: 42314.55 ymax: 40853.37\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 17 × 3\n   stn_name                  exit_code            geometry\n   <chr>                     <chr>             <POINT [m]>\n 1 BUKIT PANJANG MRT STATION Exit A    (20054.56 40109.33)\n 2 CHOA CHU KANG MRT STATION Exit D    (18084.87 40849.96)\n 3 HARBOURFRONT MRT STATION  Exit A    (26569.87 27614.83)\n 4 EXPO MRT STATION          Exit A    (42314.55 35278.98)\n 5 HARBOURFRONT MRT STATION  Exit A     (26797.06 27512.2)\n 6 CHOA CHU KANG MRT STATION Exit C    (18117.61 40853.37)\n 7 CHOA CHU KANG MRT STATION Exit A    (18121.99 40819.65)\n 8 BUKIT PANJANG MRT STATION Exit A    (19795.81 40301.42)\n 9 UPPER CHANGI MRT STATION  Exit A    (42246.13 36002.08)\n10 UPPER CHANGI MRT STATION  Exit A    (42205.19 36018.15)\n11 BEDOK NORTH MRT STATION   Exit B    (37542.44 35150.99)\n12 BEDOK NORTH MRT STATION   Exit B    (37550.39 35173.81)\n13 BUKIT PANJANG MRT STATION Exit A     (20066.96 40082.6)\n14 CHOA CHU KANG MRT STATION Exit A    (18122.31 40816.19)\n15 CHOA CHU KANG MRT STATION Exit C    (18112.29 40852.68)\n16 CHOA CHU KANG MRT STATION Exit D    (18072.23 40812.88)\n17 EXPO MRT STATION          Exit A     (42302.73 35296.8)\n\n\nRemove the duplicates and check that all duplicates are removed. 556 rows remaining.\n\ntrain_exit <- train_exit %>%\n  distinct(stn_name,\n           exit_code,\n           .keep_all = TRUE)\n\ntrain_exit %>%\n  group_by(stn_name, exit_code) %>%\n  filter(n()>1) %>%\n  ungroup()\n\nSimple feature collection with 0 features and 2 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 0 × 3\n# ℹ 3 variables: stn_name <chr>, exit_code <chr>, geometry <GEOMETRY [m]>\n\n\nCount the number of station exits within each hexagon and then also, assign ‘grid_id’ to each train station exits points. The bs_count df is now enriched with number of mrt station exits information!\n\nbs_count$train_exit_ct = lengths(st_intersects(bs_count,train_exit))\nbs_count %>% arrange(desc(train_exit_ct)) %>% head()\n\nSimple feature collection with 6 features and 3 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 27595.12 ymin: 28647.16 xmax: 30595.12 ymax: 32111.27\nProjected CRS: SVY21 / Singapore TM\n  grid_id num_bs train_exit_ct                       geometry\n1    1370      7            13 POLYGON ((27970.12 31245.24...\n2    1452     10            13 POLYGON ((29470.12 28647.16...\n3    1473      8            12 POLYGON ((29845.12 29296.68...\n4    1494      5            12 POLYGON ((30220.12 28647.16...\n5    1495     10            10 POLYGON ((30220.12 29946.2,...\n6    1474     16             9 POLYGON ((29845.12 30595.72...\n\n\nLets take a look at the train station exits points (denoted by the black dots). The red hexagons highlights the grids with more than 10 train stations exits.\n\n\nShow the code\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz)+\n  tm_polygons(alpha=0.3) +\ntm_shape(bs_count[bs_count$train_exit_ct >=10,]) +\n  tm_polygons(alpha = 0.3,\n              col='red') +\n  tm_shape(train_exit) +\n  tm_dots(size=0.01) +\n  tm_layout(main.title = \"Train exits location\",\n          main.title.fontface = 'bold',\n          main.title.position = \"center\",\n          main.title.size = 2,\n          legend.height = 0.45, \n          legend.width = 0.35,\n          frame = TRUE) + \n  tm_view(set.zoom.limits = c(11,16)) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\nLet us continue to import more origin and destination attributes data.\n\n\nGeospatial dataset 2\nWe will import Pre-Schools Locations kml file from data.gov.sg. It is a POINT sf object. This variable is potentially one of the attractiveness of our destinations.\n\npreschool = st_read('data/geospatial/pre-schools-location-kml.kml') %>% \n  st_transform(preschool, crs=3414)\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex2\\data\\geospatial\\pre-schools-location-kml.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nCount the number of preschools within each hexagon and then also, assign ‘grid_id’ to each preschool. The bs_count df is now enriched with number of preschool information!\n\nbs_count$preschool_ct = lengths(st_intersects(bs_count,preschool))\n\nLet us take a look at the preschool locations (denoted by the black dots). The red hexagons highlights the grids with more than 10 preschools.\n\n\nShow the code\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz)+\n  tm_polygons(alpha=0.3) +\ntm_shape(bs_count[bs_count$preschool_ct >= 10,]) +\n  tm_polygons(alpha = 0.3,\n              col='red') +\n  tm_shape(preschool) +\n  tm_dots(size=0.01) +\n    tm_layout(main.title = \"Preschool location\",\n          main.title.fontface = 'bold',\n          main.title.position = \"center\",\n          main.title.size = 2,\n          legend.height = 0.45, \n          legend.width = 0.35,\n          frame = TRUE) + \n  tm_view(set.zoom.limits = c(11,16)) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\n\n\nGeospatial dataset 3\nWe will import the Business shape file provided by Prof Kam. It is a POINT sf object containing information about business locations in Singapore. This variable is potentially one of the attractiveness of our destinations because passengers could take bus to work during the morning peak period.\n\nbusiness <- st_read(dsn='data/geospatial',\n                  layer='Business') %>% \n  st_transform(crs=3414)\n\nReading layer `Business' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\nbusiness<- unique(business)\n\nCount the number of businesses within each hexagon and then also, assign ‘grid_id’ to each businesses. The bs_count df is now enriched with business POI!\n\nbs_count$business_ct = lengths(st_intersects(bs_count,business))\n\nLet us take a look at the business locations (denoted by the black dots). The red hexagons highlights the grids with more than 50 business POI.\n\n\nShow the code\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz)+\n  tm_polygons(alpha=0.3) +\ntm_shape(bs_count[bs_count$business_ct >= 50,]) +\n  tm_polygons(alpha = 0.3,\n              col='red') +\n  tm_shape(business) +\n  tm_dots(size=0.01) +\n    tm_layout(main.title = \"Business location\",\n          main.title.fontface = 'bold',\n          main.title.position = \"center\",\n          main.title.size = 2,\n          legend.height = 0.45, \n          legend.width = 0.35,\n          frame = TRUE) + \n  tm_view(set.zoom.limits = c(11,16)) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\n\n\nGeospatial dataset 4\nWe will import the FinServ shape file provided by Prof Kam. It is a POINT sf object containing information about financial service locations (Banks / Money Changers) in Singapore. This variable is potentially one of the attractiveness of our destinations because passengers could take bus to work during the morning peak period.\n\nfinserv <- st_read(dsn='data/geospatial',\n                  layer='FinServ') %>% \n  st_transform(crs=3414)\n\nReading layer `FinServ' from data source \n  `C:\\yixin-neo\\ISSS624_AGA\\Take-home_Ex2\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n\nfinserv<- unique(finserv)\n\nCount the number of financial service points within each hexagon and then also, assign ‘grid_id’ to each financial service points. The bs_count df is now enriched with financial services information!\n\nbs_count$finserv_ct = lengths(st_intersects(bs_count,finserv))\n\nLet us take a look at the financial services locations (denoted by the black dots). The red hexagons highlights the grids with more than 50 financial services points.\n\n\nShow the code\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz)+\n  tm_polygons(alpha=0.3) +\ntm_shape(bs_count[bs_count$finserv_ct >= 50,]) +\n  tm_polygons(alpha = 0.3,\n              col='red') +\n  tm_shape(finserv) +\n  tm_dots(size=0.01) +\n    tm_layout(main.title = \"Financial Service location\",\n          main.title.fontface = 'bold',\n          main.title.position = \"center\",\n          main.title.size = 2,\n          legend.height = 0.45, \n          legend.width = 0.35,\n          frame = TRUE) + \n  tm_view(set.zoom.limits = c(11,16)) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\n\n\n\nImporting the attractiveness and propulsive aspatial data\n\nAspatial dataset 1\nLet us import the Schools general information in csv format , downloaded from School Directory and Information from data.gov.sg. It contains location (implicitly in the form of the field ‘POSTAL_CODE’) of the MOE kindergartens, Primary Schools , Secondary Schools and junior colleges. It does not contain ITEs , Polytechnics and Universities locations. There is a total of 346 records inside this csv file.\n\nsch <- read_csv('data/aspatial/Generalinformationofschools.csv')\nhead(sch) %>% kable\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nschool_name\nurl_address\naddress\npostal_code\ntelephone_no\ntelephone_no_2\nfax_no\nfax_no_2\nemail_address\nmrt_desc\nbus_desc\nprincipal_name\nfirst_vp_name\nsecond_vp_name\nthird_vp_name\nfourth_vp_name\nfifth_vp_name\nsixth_vp_name\ndgp_code\nzone_code\ntype_code\nnature_code\nsession_code\nmainlevel_code\nsap_ind\nautonomous_ind\ngifted_ind\nip_ind\nmothertongue1_code\nmothertongue2_code\nmothertongue3_code\n\n\n\n\nADMIRALTY PRIMARY SCHOOL\nhttps://admiraltypri.moe.edu.sg/\n11 WOODLANDS CIRCLE\n738907\n63620598\nna\n63627512\nna\nADMIRALTY_PS@MOE.EDU.SG\nAdmiralty Station\nTIBS 965, 964, 913\nMR PEK WEE HAUR\nMDM CHUA MUI LING\nMDM NUR SABARIAH BTE MOHD IBRAHIM\nNULL\nNULL\nNULL\nNULL\nWOODLANDS\nNORTH\nGOVERNMENT SCHOOL\nCO-ED SCHOOL\nFULL DAY\nPRIMARY\nNo\nNo\nNo\nNo\nChinese\nMalay\nTamil\n\n\nADMIRALTY SECONDARY SCHOOL\nhttp://www.admiraltysec.moe.edu.sg\n31 WOODLANDS CRESCENT\n737916\n63651733\n63654596\n63652774\nna\nAdmiralty_SS@moe.edu.sg\nADMIRALTY MRT\n904\nMR LAM YUI- P’NG\nMR NG SONG LIM STEVEN\nMR SHEIK ALAUDIN B MOHD ISMAIL\nNULL\nNULL\nNULL\nNULL\nWOODLANDS\nNORTH\nGOVERNMENT SCHOOL\nCO-ED SCHOOL\nSINGLE SESSION\nSECONDARY\nNo\nNo\nNo\nNo\nChinese\nMalay\nTamil\n\n\nAHMAD IBRAHIM PRIMARY SCHOOL\nhttp://www.ahmadibrahimpri.moe.edu.sg\n10 YISHUN STREET 11\n768643\n67592906\nna\n67592927\nna\naips@moe.edu.sg\nYishun\nYishun Ring Road - 812 (white plate); Yishun Ave 2 - 169, 804, 965, 117, 883\nMISS ONG LEE CHOO\nMADAM SULASNI BINTE ABDUL RAHMAN\nNULL\nNULL\nNULL\nNULL\nNULL\nYISHUN\nNORTH\nGOVERNMENT SCHOOL\nCO-ED SCHOOL\nSINGLE SESSION\nPRIMARY\nNo\nNo\nNo\nNo\nChinese\nMalay\nTamil\n\n\nAHMAD IBRAHIM SECONDARY SCHOOL\nhttp://www.ahmadibrahimsec.moe.edu.sg\n751 YISHUN AVENUE 7\n768928\n67585384\nna\n67557778\nna\naiss@moe.edu.sg\nCANBERRA MRT, YISHUN MRT\n117, 167, 169, 800, 811, 812, 883, 856, 858, 859, 965, 969, 980\nMISS TAN KE XIN\nMR YAO ZHIXUAN TERENCE\nMISS LEA SHU HUI\nNULL\nNULL\nNULL\nNULL\nYISHUN\nNORTH\nGOVERNMENT SCHOOL\nCO-ED SCHOOL\nSINGLE SESSION\nSECONDARY\nNo\nNo\nNo\nNo\nChinese\nMalay\nTamil\n\n\nAI TONG SCHOOL\nhttp://www.aitong.moe.edu.sg\n100 Bright Hill Drive\n579646\n64547672\nna\n64532726\nna\nAITONG_SCH@MOE.EDU.SG\nBishan MRT\n410, 162, 52\nMDM GOH LING LING DIANE\nMDM NG BEE ENG, CINDY\nMR YAK BENG WEI\nNULL\nNULL\nNULL\nNULL\nBISHAN\nSOUTH\nGOVERNMENT-AIDED SCH\nCO-ED SCHOOL\nSINGLE SESSION\nPRIMARY\nYes\nNo\nNo\nNo\nChinese\nna\nna\n\n\nALEXANDRA PRIMARY SCHOOL\nhttp://alexandrapri.moe.edu.sg\n2A Prince Charles Crescent\n159016\n62485400\nna\n62485409\nna\nalexandra_ps@moe.edu.sg\nRedhill Station Tiong Bahru Station\n51, 122, 139, 186, 970.\nMDM TEO CHING LING\nMDM NORAINI BTE MANSOOR\nNULL\nNULL\nNULL\nNULL\nNULL\nBUKIT MERAH\nSOUTH\nGOVERNMENT SCHOOL\nCO-ED SCHOOL\nSINGLE SESSION\nPRIMARY\nNo\nNo\nNo\nNo\nChinese\nMalay\nTamil\n\n\n\n\n\nNext, we will load poly_ite_postal csv file that is collated by myself. It contains the postal codes of the 5 polytechnics and the 3 ITE colleges in Singapore.\n\nter <- read_csv('data/aspatial/poly_ite_postal.csv')\nter %>% kable\n\n\n\n\nschool_name\npostal_code\n\n\n\n\nSingapore Polytechnic\n139651\n\n\nRepublic Polytechnic\n738964\n\n\nNanyang Polytechnic\n569830\n\n\nTemasek Polytechnic\n529757\n\n\nNgee Ann Polytechnic\n599489\n\n\nITE Central\n567720\n\n\nITE Colleage East\n486047\n\n\nITE College West\n688236\n\n\n\n\n\nSince there are only 8 records of ITEs and Polys, I have manually added these 8 records into the original Generalinformationofschools.csv above and rename it as allsch.csv\nReload the allsch.csv, which contains 354 records in total.\n\nsch <- read_csv('data/aspatial/allsch.csv')\n\n\nGeocoding the schools location\nWe will use the OneMap API to retrieve the longitude (X) and latitude (Y) coordinates using the ‘POSTAL_CODE’ field. First load the httr package which works in a TIDY manner.\n\nlibrary('httr')\n\nOneMap API is owned by SLA. The API documentation is found here.\n\nurl <- 'https://www.onemap.gov.sg/api/common/elastic/search'\n\npostcodes <- sch$`postal_code`\n\nThe code chunk below does the following:\n\nInitiate two empty dataframes; found to contain the results of the postal codes that are successful geocoded and not_found to contain the postal codes that are not successfully geocoded.\nUses a loop to use the OneMap API for sch and ter df.\n\n\nfound <- data.frame()\nnot_found <- data.frame()\n\n\nfor(postcode in postcodes) {\n  query <- list('searchVal' = postcode, 'returnGeom' = 'Y', 'getAddrDetails' = 'Y', 'pageNum' = '1')\n  res <- GET(url, query=query)\n\n  \n  if((content(res)$found)!=0){\n    found<-rbind(found, data.frame(content(res))[4:13])\n  } else{\n    not_found = data.frame(postcode)\n  }\n}\n\nOut of the 354 records in allsch, 1 school (Zhenghua Secondary School) is unsuccessfully geocoded.\nLet us merge the output of geocoding with the original allsch.csv file.\n\nmerged = merge(sch, found, by.x = 'postal_code' , by.y='results.POSTAL', all=TRUE)\n\nWrite merged into a csv file and manually add the longitude and latitude (﻿1.3887, 103.7652 ) of Zhenghua Secondary into the csv file.\n\nwrite.csv(merged, file = 'data/aspatial/schools_geocoded.csv')\nwrite.csv(not_found, file = 'data/aspatial/not_found.csv')\n\nAfter manual edit, reload the schools_geocoded.csv file in R.\n\nsch <- read_csv('data/aspatial/schools_geocoded.csv') %>% \n  select(postal_code, school_name, results.LONGITUDE, results.LATITUDE )\n\nConvert sch to sf point object with longitude and latitude\nConvert to SVY21 Singapore Projected Coordinates System after converting to sf object.\n\nsch_sf <- st_as_sf(sch,\n                   coords = c('results.LONGITUDE','results.LATITUDE'),\n                        crs=4326) %>% \n  st_transform(crs=3414)\n\nCount the number of schools in each hexagon and assign each school to a grid_id.\n\nbs_count$sch_ct = lengths(st_intersects(bs_count,sch_sf))\nbs_count %>% arrange(desc(sch_ct)) %>% head()\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 15220.12 ymin: 31894.76 xmax: 37720.12 ymax: 42503.57\nProjected CRS: SVY21 / Singapore TM\n  grid_id num_bs train_exit_ct preschool_ct business_ct finserv_ct sch_ct\n1     873      1             0            2           0          0      4\n2    1350      4             1            2           0          1      4\n3    1895     11             0            1           0          1      4\n4     680      9             3            2           0          5      3\n5     786     11             0            3           0          1      3\n6     832     11             4           10           0         12      3\n                        geometry\n1 POLYGON ((18970.12 40338.51...\n2 POLYGON ((27595.12 33193.8,...\n3 POLYGON ((37345.12 31894.76...\n4 POLYGON ((15595.12 35791.87...\n5 POLYGON ((17470.12 36441.39...\n6 POLYGON ((18220.12 41637.55...\n\n\nLet us take a look at the map. The highest count of schools in a hexagon is 4.\n\n\nShow the code\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz)+\n  tm_polygons(alpha=0.3) +\ntm_shape(bs_count[bs_count$sch_ct>=4,]) +\n  tm_polygons(alpha = 0.3,\n              col = 'red') +\n  tm_shape(sch_sf) +\n  tm_dots() +\n    tm_layout(main.title = \"Schools location\",\n          main.title.fontface = 'bold',\n          main.title.position = \"center\",\n          main.title.size = 2,\n          legend.height = 0.45, \n          legend.width = 0.35,\n          frame = TRUE) + \n  tm_view(set.zoom.limits = c(11,16)) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\n\n\n\nAspatial dataset 2\nWe will now import the hdb.csv file provided by Prof Kam. The original source file is named HDB Property Information downloaded from this link, but it contains no postal code or coordinates. it contains data from Jan 1937 - Jun 2023.\nThe hdb.csv used in this exercise has been geocoded by Prof Kam. It contains information postal code and longitude/ latitude coordinates.\nWe will not be using commercial HDB property, therefore we will remove non-residential rows. The number of rows reduced from 12,442 to to 10,181.\nThe fields ‘total_rental_ct’ refers to the estimated number of people who stay in rented apartments, ‘total_nroom_ct’ refers to the estimated number of people staying in n-room apartment and ‘total_owner_ct’ refers to the estimated number of residents who stay in HDB property.\nThe reason for retaining the details of n-room count is because it is a potential proxy for income level. The multipliers for each room type (eg. 1 for 1 room, 2 for 2 rooms, 10 for 3 rooms for instance) is estimated using the HDBResidentPopulationAged15YearsandAbovebyFlatType.csv retrieved from data.gov. The bar chart below will show how the multipliers were estimated.\n\n\n\n\n\nShow the code\nggplot(res_est, aes(x = flat_type, y = number)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = paste0(number,', ', round(number/sum(number)*100,1), '%')),\n            position = position_dodge(width = 0.8), vjust= -1, size = 3.5) +\n  labs(title = \"Number of residents by Flat Types\",\n       x = \"Flat Type\",\n       y = \"Number\") +\n  theme(plot.title = element_text(face=\"bold\"))\n\n\n\n\n\n\nhdb <- read_csv('data/aspatial/hdb.csv') %>% \n  filter(residential == \"Y\") %>% \n  mutate(total_rental_ct = `1room_rental`*1 + `2room_rental`*2 + `3room_rental`*3 + `other_room_rental`*4,\n         total_1room_ct = `1room_sold`,\n         total_2room_ct = `2room_sold`*2,\n         total_3room_ct = `3room_sold`*10,\n         total_4room_ct = `4room_sold`*21,\n         total_5room_ct = `5room_sold`*13,\n         total_exec_ct = `exec_sold`*4,\n         total_multi_ct = `multigen_sold`*13,\n         total_studio_ct = `studio_apartment_sold`,\n         total_owner_ct = `1room_sold`*1 + `2room_sold`*2 + `3room_sold`*10 + `4room_sold`*21 + `5room_sold`*13 + `exec_sold`*4 + `multigen_sold`*13 + `studio_apartment_sold`*1) %>% \n  select(blk_no, street, total_rental_ct, total_1room_ct, total_1room_ct,total_2room_ct,total_3room_ct,total_4room_ct,total_5room_ct,total_exec_ct,total_multi_ct, total_studio_ct,total_owner_ct, lat, lng)\n\nLet us take a look at the first six rows of hdb df.\n\nhead(hdb) %>% kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nblk_no\nstreet\ntotal_rental_ct\ntotal_1room_ct\ntotal_2room_ct\ntotal_3room_ct\ntotal_4room_ct\ntotal_5room_ct\ntotal_exec_ct\ntotal_multi_ct\ntotal_studio_ct\ntotal_owner_ct\nlat\nlng\n\n\n\n\n1\nBEACH RD\n0\n0\n2\n1380\n21\n26\n0\n0\n0\n1429\n1.295097\n103.8541\n\n\n1\nBEDOK STH AVE 1\n0\n0\n0\n2040\n0\n26\n0\n0\n0\n2066\n1.320852\n103.9337\n\n\n1\nCHAI CHEE RD\n0\n0\n0\n0\n210\n1196\n0\n0\n0\n1406\n1.327969\n103.9227\n\n\n1\nCHANGI VILLAGE RD\n0\n0\n0\n540\n0\n13\n0\n0\n0\n553\n1.388610\n103.9881\n\n\n1\nDELTA AVE\n0\n0\n0\n0\n0\n1248\n0\n0\n0\n1248\n1.292075\n103.8286\n\n\n1\nDOVER RD\n0\n0\n0\n1180\n0\n91\n0\n0\n0\n1271\n1.302530\n103.7833\n\n\n\n\n\nTranform hdb to a simply feature POINT object using st_as_sf function and transform from WSG84 to SVY21 Singapore Projected Coordinate System using st_transform() of sf package.\n\nhdb_sf <- st_as_sf(hdb,\n                   coords = c('lng','lat'),\n                        crs=4326) %>% \n  st_transform(crs=3414)\n\nhdb_sf\n\nSimple feature collection with 10181 features and 12 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11519.15 ymin: 28097.64 xmax: 45224.46 ymax: 48741.06\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 10,181 × 13\n   blk_no street    total_rental_ct total_1room_ct total_2room_ct total_3room_ct\n * <chr>  <chr>               <dbl>          <dbl>          <dbl>          <dbl>\n 1 1      BEACH RD                0              0              2           1380\n 2 1      BEDOK ST…               0              0              0           2040\n 3 1      CHAI CHE…               0              0              0              0\n 4 1      CHANGI V…               0              0              0            540\n 5 1      DELTA AVE               0              0              0              0\n 6 1      DOVER RD                0              0              0           1180\n 7 1      EUNOS CR…             494              0              0              0\n 8 1      EVERTON …               0              0              0            620\n 9 1      GHIM MOH…               0              0              0           2160\n10 1      HAIG RD                 0              0              0           2140\n# ℹ 10,171 more rows\n# ℹ 7 more variables: total_4room_ct <dbl>, total_5room_ct <dbl>,\n#   total_exec_ct <dbl>, total_multi_ct <dbl>, total_studio_ct <dbl>,\n#   total_owner_ct <dbl>, geometry <POINT [m]>\n\n\nAssign a ‘grid_id’ to each observation inside the hdb_sf POINT sf object by using the st_intersection() function.\nBefore: hdb_sf contains 10,181 rows\nAfter: st_intersection(): hdb_hex contains 10,133 rows. Some points in hdb_sf do not fall within bs_count basic hexagon units. This is expected as bs_count that does not have hexagons with zero bus stop counts.\n\nhdb_hex <- st_intersection(hdb_sf,bs_count)\n\nDrop the geometry column, and check for duplicates.\n\nhdb_hex<- hdb_hex %>% \n  st_drop_geometry()\nhdb_hex %>% \n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\n# A tibble: 0 × 19\n# ℹ 19 variables: blk_no <chr>, street <chr>, total_rental_ct <dbl>,\n#   total_1room_ct <dbl>, total_2room_ct <dbl>, total_3room_ct <dbl>,\n#   total_4room_ct <dbl>, total_5room_ct <dbl>, total_exec_ct <dbl>,\n#   total_multi_ct <dbl>, total_studio_ct <dbl>, total_owner_ct <dbl>,\n#   grid_id <int>, num_bs <int>, train_exit_ct <int>, preschool_ct <int>,\n#   business_ct <int>, finserv_ct <int>, sch_ct <int>\n\n\nFor each ‘grid_id’, sum the ‘total_rental_ct’ and ‘total_owners_ct’. After group_by, the number of rows reduced from 10,133 to 392 unique ‘grid_id’\n\nhdb_hex <- hdb_hex %>% \n  group_by(grid_id) %>% \n  summarise(hdb_rental_ct = sum(total_rental_ct),\n            hdb_1room_ct = sum(total_1room_ct),\n            hdb_2room_ct = sum(total_2room_ct),\n            hdb_3room_ct = sum(total_3room_ct),\n            hdb_4room_ct = sum(total_4room_ct),\n            hdb_5room_ct = sum(total_5room_ct),\n            hdb_exec_ct = sum(total_exec_ct),\n            hdb_multi_ct = sum(total_multi_ct),\n            hdb_studio_ct = sum(total_studio_ct),\n            hdb_owner_ct = sum (total_owner_ct)) %>% \n  ungroup()\n\nAppend the HDB rental and owner counts to the bs_count df by performing a left join\n\nbs_count <- left_join(bs_count, hdb_hex,\n                      by= c('grid_id' = 'grid_id'))\n\nbs_count<- bs_count %>% \n  mutate(hdb_rental_ct = replace_na(hdb_rental_ct, 0),\n         hdb_1room_ct = replace_na(hdb_1room_ct, 0),\n         hdb_2room_ct = replace_na(hdb_2room_ct, 0),\n         hdb_3room_ct = replace_na(hdb_3room_ct, 0),\n         hdb_4room_ct = replace_na(hdb_4room_ct, 0),\n         hdb_5room_ct = replace_na(hdb_5room_ct, 0),\n         hdb_exec_ct = replace_na(hdb_exec_ct, 0),\n         hdb_multi_ct = replace_na(hdb_multi_ct, 0),\n         hdb_studio_ct = replace_na(hdb_studio_ct, 0),\n         hdb_owner_ct = replace_na(hdb_owner_ct, 0))\n\nLet us visualise the estimated population density of Singapore residents who stays in HDB property.\n\n\nShow the code\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\n\ntm_shape(mpsz)+\n  tm_polygons(alpha=0.3) +\ntm_shape(bs_count) +\n  tm_fill('hdb_owner_ct',\n          alpha= 0.7) +\n  tm_borders(col='grey') +\n  tm_layout(main.title = \"Population density of HDB residents 2023 by Hexagon\",\n            main.title.fontface = 'bold',\n            main.title.position = \"center\",\n            main.title.size = 2,\n            legend.height = 0.55, \n            legend.width = 0.45,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\n\n\n\nThis rough estimation of the population density of residents staying in HDB (until June 2023) is acceptable because according to Singapore Census of Population 2020, the top four planning areas with more than 250,000 residents are Bedok, Jurong West, Tampanies and Woodlands. (see chart below). The level of intensity of the map above looks similar to the intensity of the map below, with the exception of the North_east area. The North-East region with planning areas like Punggol and Seng Kang are newer estates that are probably not captured in 2020 census."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#append-all-attributes-to-flow_data1-df",
    "href": "Take-home_Ex2/Take-home_Ex2.html#append-all-attributes-to-flow_data1-df",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Append all attributes to flow_data1 df",
    "text": "Append all attributes to flow_data1 df\nWe will perform left_join() twice to get the origin and destination attributes properly appended into the flow_data1 df (currently contains only response variable ‘TRIPS’ and one explanatory variable ‘dist’) .\nFirst, convert ‘grid_id’ in sz_count to factor format.\n\nbs_count$grid_id <- as.factor(bs_count$grid_id)\n\n\nAppend all origin attributesAppend all destin attributes\n\n\n\nflow_data1 <- flow_data1 %>%\n  left_join(bs_count,\n            by = c('ORIGIN_GRID_ID' = 'grid_id')) %>%\n  rename(ORIGIN_TRAIN_EXIT_CT=train_exit_ct,\n         ORIGIN_PRESCHOOL_CT=preschool_ct,\n         ORIGIN_BUSINESS_CT=business_ct,\n         ORIGIN_FINSERV_CT=finserv_ct,\n         ORIGIN_SCH_CT=sch_ct,\n         ORIGIN_RENTAL_CT=hdb_rental_ct,\n         ORIGIN_1ROOM_CT=hdb_1room_ct,\n         ORIGIN_2ROOM_CT=hdb_2room_ct,\n         ORIGIN_3ROOM_CT=hdb_3room_ct,\n         ORIGIN_4ROOM_CT=hdb_4room_ct,\n         ORIGIN_5ROOM_CT=hdb_5room_ct,\n         ORIGIN_EXEC_CT=hdb_exec_ct,\n         ORIGIN_MULTI_CT=hdb_multi_ct,\n         ORIGIN_STUDIO_CT=hdb_studio_ct,\n         ORIGIN_OWNER_CT=hdb_owner_ct) %>%\n  select(-c(num_bs,geometry))\n\n\n\n\nflow_data1 <- flow_data1 %>%\n  left_join(bs_count,\n            by = c('DESTIN_GRID_ID' = 'grid_id')) %>%\n  rename(DESTIN_TRAIN_EXIT_CT=train_exit_ct,\n         DESTIN_PRESCHOOL_CT=preschool_ct,\n         DESTIN_BUSINESS_CT=business_ct,\n         DESTIN_FINSERV_CT=finserv_ct,\n         DESTIN_SCH_CT=sch_ct,\n         DESTIN_RENTAL_CT=hdb_rental_ct,\n         DESTIN_1ROOM_CT=hdb_1room_ct,\n         DESTIN_2ROOM_CT=hdb_2room_ct,\n         DESTIN_3ROOM_CT=hdb_3room_ct,\n         DESTIN_4ROOM_CT=hdb_4room_ct,\n         DESTIN_5ROOM_CT=hdb_5room_ct,\n         DESTIN_EXEC_CT=hdb_exec_ct,\n         DESTIN_MULTI_CT=hdb_multi_ct,\n         DESTIN_STUDIO_CT=hdb_studio_ct,\n         DESTIN_OWNER_CT=hdb_owner_ct) %>%\n  select(-c(num_bs, geometry))\n\n\n\n\nWrite flow_data1 into local disk.\n\nwrite_rds(flow_data1,\n          \"data/rds/flow_data_tidy.rds\")\n\nRead the flow_data1 back into R\n\nflow_data1 <- read_rds(\"data/rds/flow_data_tidy.rds\")"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#calibrating-spatial-interaction-models",
    "href": "Take-home_Ex2/Take-home_Ex2.html#calibrating-spatial-interaction-models",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Calibrating Spatial Interaction Models",
    "text": "Calibrating Spatial Interaction Models\nBasic data exploration of flow_data1 df.\n\nDistribution of TRIPS (Target variable)TRIPS vs DistanceLog(TRIPS) vs Log(Distance)\n\n\n‘TRIPS’ are all positive values, its distribution is highly skewed to the right.\n\nggplot(data = flow_data1,\n       aes(x = TRIPS)) +\n  geom_histogram(color='black',size= 0.3, fill = '#DD8888') +\n  labs(y= 'Count of TRIPS', x='TRIPS') +\n  theme(axis.title.y=element_text(angle = 0),\n        plot.title = element_text(face=\"bold\")) +\n  ggtitle('Distribution of TRIPS')\n\n\n\n\n\n\nThese two variables are not linearly related, suggesting that we could apply data transformation on them.\n\nggplot(data = flow_data1,\n       aes(x = dist, # independent\n           y = TRIPS)) +  #dependent\n  geom_point() +\n  geom_smooth(method = lm) +\n  labs(y= 'TRIPS', x='dist') +\n  theme(axis.title.y=element_text(angle = 0),\n        plot.title = element_text(face=\"bold\")) +\n  ggtitle('Relationship between TRIPS and Distance')\n\n\n\n\n\n\n\nggplot(data = flow_data1,\n       aes(x = log(dist),\n           y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  labs(y= 'log(TRIPS)', x='log(dist)') +\n  theme(axis.title.y=element_text(angle = 0),\n        plot.title = element_text(face=\"bold\")) +\n  ggtitle('Relationship between log(TRIPS) and log(dist)')\n\n\n\n\n\n\n\nThe first choice of our regression model is the Poisson Regression in glm() function.\nWhy Poisson regression?\n\nour target variable (TRIPS) is count-based\ntarget variable can only be positive values (unlike Linear regression where positive and negative values are possible; negative TRIPS do not make sense)\na type of generalised linear model (GLM) used to count data\nresiduals may follow a asymmetric distribution around the mean (meaning outcomes on either sides of the mean are NOT equally likely.)\nIt means that the probability of commuting is not described by a continuous (normal) probability distribution, but a discrete probability distribution such as the Poisson distribution\n\nIt would also mean that we do not have to adhere to the assumptions of the Linear Regression Model:\n\ndependent variable and predictors have linear relationship\nresidual errors (predicted - actual) are normally distributed, have a constant variance and unrelated with one another.\n\nCheck independent variables for zero values\nSince we have chosen the Poisson regression, which is based on log and log 0 is undefined, it is important for us to ensure that are no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in flow_data1 data frame.\n\nsummary(flow_data1)\n\n ORIGIN_GRID_ID  DESTIN_GRID_ID      TRIPS        FlowNoIntra        offset \n 1960   :  290   1474   :  344   Min.   :    1   Min.   :    1   Min.   :1  \n 1477   :  288   1452   :  331   1st Qu.:    7   1st Qu.:    7   1st Qu.:1  \n 1474   :  277   1516   :  314   Median :   34   Median :   34   Median :1  \n 1496   :  272   1960   :  289   Mean   :  327   Mean   :  327   Mean   :1  \n 1623   :  267   1477   :  288   3rd Qu.:  156   3rd Qu.:  156   3rd Qu.:1  \n 1480   :  266   1494   :  283   Max.   :75374   Max.   :75374   Max.   :1  \n (Other):60460   (Other):60271                                              \n      dist       ORIGIN_TRAIN_EXIT_CT ORIGIN_PRESCHOOL_CT ORIGIN_BUSINESS_CT\n Min.   :  750   Min.   : 0.000       Min.   : 0.000      Min.   : 0.000    \n 1st Qu.: 2704   1st Qu.: 0.000       1st Qu.: 1.000      1st Qu.: 0.000    \n Median : 5250   Median : 0.000       Median : 3.000      Median : 1.000    \n Mean   : 6233   Mean   : 1.234       Mean   : 3.362      Mean   : 6.367    \n 3rd Qu.: 8649   3rd Qu.: 2.000       3rd Qu.: 5.000      3rd Qu.: 6.000    \n Max.   :24784   Max.   :13.000       Max.   :18.000      Max.   :97.000    \n                                                                            \n ORIGIN_FINSERV_CT ORIGIN_SCH_CT    ORIGIN_RENTAL_CT ORIGIN_1ROOM_CT   \n Min.   :  0.000   Min.   :0.0000   Min.   :   0.0   Min.   :  0.0000  \n 1st Qu.:  1.000   1st Qu.:0.0000   1st Qu.:   0.0   1st Qu.:  0.0000  \n Median :  3.000   Median :0.0000   Median :   0.0   Median :  0.0000  \n Mean   :  7.147   Mean   :0.5765   Mean   : 197.5   Mean   :  0.3571  \n 3rd Qu.:  8.000   3rd Qu.:1.0000   3rd Qu.:  24.0   3rd Qu.:  0.0000  \n Max.   :130.000   Max.   :4.0000   Max.   :2893.0   Max.   :255.0000  \n                                                                       \n ORIGIN_2ROOM_CT   ORIGIN_3ROOM_CT ORIGIN_4ROOM_CT ORIGIN_5ROOM_CT\n Min.   :   0.00   Min.   :    0   Min.   :    0   Min.   :    0  \n 1st Qu.:   0.00   1st Qu.:    0   1st Qu.:    0   1st Qu.:    0  \n Median :   0.00   Median : 1030   Median : 6048   Median : 2119  \n Mean   :  78.29   Mean   : 4883   Mean   :15138   Mean   : 5136  \n 3rd Qu.:  44.00   3rd Qu.: 6700   3rd Qu.:25683   3rd Qu.: 7605  \n Max.   :4164.00   Max.   :40960   Max.   :99162   Max.   :61945  \n                                                                  \n ORIGIN_EXEC_CT   ORIGIN_MULTI_CT    ORIGIN_STUDIO_CT ORIGIN_OWNER_CT \n Min.   :   0.0   Min.   :   0.000   Min.   :  0.00   Min.   :     0  \n 1st Qu.:   0.0   1st Qu.:   0.000   1st Qu.:  0.00   1st Qu.:     0  \n Median :   0.0   Median :   0.000   Median :  0.00   Median : 12883  \n Mean   : 424.9   Mean   :   6.994   Mean   : 14.59   Mean   : 25682  \n 3rd Qu.: 448.0   3rd Qu.:   0.000   3rd Qu.:  0.00   3rd Qu.: 46830  \n Max.   :6776.0   Max.   :1976.000   Max.   :252.00   Max.   :130585  \n                                                                      \n DESTIN_TRAIN_EXIT_CT DESTIN_PRESCHOOL_CT DESTIN_BUSINESS_CT DESTIN_FINSERV_CT\n Min.   : 0.000       Min.   : 0.000      Min.   : 0.000     Min.   :  0.00   \n 1st Qu.: 0.000       1st Qu.: 1.000      1st Qu.: 0.000     1st Qu.:  1.00   \n Median : 0.000       Median : 3.000      Median : 1.000     Median :  3.00   \n Mean   : 1.348       Mean   : 3.208      Mean   : 7.368     Mean   :  7.93   \n 3rd Qu.: 2.000       3rd Qu.: 5.000      3rd Qu.: 6.000     3rd Qu.:  9.00   \n Max.   :13.000       Max.   :18.000      Max.   :97.000     Max.   :130.00   \n                                                                              \n DESTIN_SCH_CT    DESTIN_RENTAL_CT DESTIN_1ROOM_CT    DESTIN_2ROOM_CT  \n Min.   :0.0000   Min.   :   0.0   Min.   :  0.0000   Min.   :   0.00  \n 1st Qu.:0.0000   1st Qu.:   0.0   1st Qu.:  0.0000   1st Qu.:   0.00  \n Median :0.0000   Median :   0.0   Median :  0.0000   Median :   0.00  \n Mean   :0.5383   Mean   : 188.9   Mean   :  0.3941   Mean   :  71.92  \n 3rd Qu.:1.0000   3rd Qu.:  15.0   3rd Qu.:  0.0000   3rd Qu.:  16.00  \n Max.   :4.0000   Max.   :2893.0   Max.   :255.0000   Max.   :4164.00  \n                                                                       \n DESTIN_3ROOM_CT DESTIN_4ROOM_CT DESTIN_5ROOM_CT DESTIN_EXEC_CT  \n Min.   :    0   Min.   :    0   Min.   :    0   Min.   :   0.0  \n 1st Qu.:    0   1st Qu.:    0   1st Qu.:    0   1st Qu.:   0.0  \n Median :  660   Median : 4599   Median : 1092   Median :   0.0  \n Mean   : 4558   Mean   :13814   Mean   : 4634   Mean   : 374.6  \n 3rd Qu.: 6170   3rd Qu.:23961   3rd Qu.: 6877   3rd Qu.: 288.0  \n Max.   :40960   Max.   :99162   Max.   :61945   Max.   :6776.0  \n                                                                 \n DESTIN_MULTI_CT   DESTIN_STUDIO_CT DESTIN_OWNER_CT \n Min.   :   0.00   Min.   :  0.00   Min.   :     0  \n 1st Qu.:   0.00   1st Qu.:  0.00   1st Qu.:     0  \n Median :   0.00   Median :  0.00   Median :  9446  \n Mean   :   6.82   Mean   : 13.24   Mean   : 23473  \n 3rd Qu.:   0.00   3rd Qu.:  0.00   3rd Qu.: 42903  \n Max.   :1976.00   Max.   :252.00   Max.   :130585  \n                                                    \n\n\nThe print report above reveals that variables all consist of 0 values.\nIn view of this, code chunk below will be used to use a loop to replace zero values to 0.99 (randomly chosen value that is close to 0). The names of the fields to be transformed will be stored in ‘columns_to_transform’ variable.\n\ncolumns_to_transform <- c(\n\"ORIGIN_TRAIN_EXIT_CT\", \"ORIGIN_PRESCHOOL_CT\",  \"ORIGIN_BUSINESS_CT\",   \"ORIGIN_FINSERV_CT\",   \"ORIGIN_SCH_CT\",        \"ORIGIN_RENTAL_CT\", \"ORIGIN_1ROOM_CT\",      \"ORIGIN_2ROOM_CT\",      \"ORIGIN_3ROOM_CT\",      \"ORIGIN_4ROOM_CT\",      \"ORIGIN_5ROOM_CT\",      \"ORIGIN_EXEC_CT\",       \"ORIGIN_MULTI_CT\",      \"ORIGIN_STUDIO_CT\",    \"ORIGIN_OWNER_CT\",      \"DESTIN_TRAIN_EXIT_CT\", \"DESTIN_PRESCHOOL_CT\",  \"DESTIN_BUSINESS_CT\",   \"DESTIN_FINSERV_CT\",   \"DESTIN_SCH_CT\",        \"DESTIN_RENTAL_CT\", \"DESTIN_1ROOM_CT\",      \"DESTIN_2ROOM_CT\",      \"DESTIN_3ROOM_CT\",     \n\"DESTIN_4ROOM_CT\",      \"DESTIN_5ROOM_CT\",      \"DESTIN_EXEC_CT\",       \"DESTIN_MULTI_CT\",      \"DESTIN_STUDIO_CT\",    \"DESTIN_OWNER_CT\"\n)\n\n\nfor (col in columns_to_transform) {\n  flow_data1[[col]] <- ifelse(flow_data1[[col]] == 0, 0.99, flow_data1[[col]])\n}\n\n\nThe four SIMs\nFor modelling the weekday morning peak passenger flow , we have the following attractive and propulsive variables:\nPropulsive: ‘ORIGIN_RENTAL_CT’, ‘ORIGIN_nROOM_CT’, ‘ORIGIN_OWNER_CT’\nAttractive: ‘DESTIN_TRAIN_EXIT_CT’, ‘DESTIN_PRESCHOOL_CT’, ‘DESTIN_BUSINESS_CT’, ‘DESTIN_FINSERV_CT’, ‘DESTIN_SCH_CT’\n\nUnconstrained SIMOrigin Constrained SIMDestination Constrained SIMDoubly Constrained SIM\n\n\n\nuncSIM <- glm(formula = TRIPS ~ \n                #log(ORIGIN_TRAIN_EXIT_CT) + \n                #log(ORIGIN_PRESCHOOL_CT) +\n                #log(ORIGIN_BUSINESS_CT) +\n                #log(ORIGIN_FINSERV_CT) +\n                #log(ORIGIN_SCH_CT) +\n                log(ORIGIN_RENTAL_CT) +\n                #log(ORIGIN_1ROOM_CT) +\n                log(ORIGIN_2ROOM_CT) +\n                log(ORIGIN_3ROOM_CT) +\n                log(ORIGIN_4ROOM_CT) +\n                log(ORIGIN_5ROOM_CT) +\n                log(ORIGIN_EXEC_CT) +\n                #log(ORIGIN_MULTI_CT) +\n                log(ORIGIN_STUDIO_CT) +\n                #log(ORIGIN_OWNER_CT) +\n                log(DESTIN_TRAIN_EXIT_CT) +\n                log(DESTIN_PRESCHOOL_CT) +\n                log(DESTIN_BUSINESS_CT) +\n                log(DESTIN_FINSERV_CT) +\n                log(DESTIN_SCH_CT) +\n                #log(DESTIN_RENTAL_CT) +\n                #log(DESTIN_1ROOM_CT) +\n                #log(DESTIN_2ROOM_CT) +\n                #log(DESTIN_3ROOM_CT) +\n                #log(DESTIN_4ROOM_CT) +\n                #log(DESTIN_5ROOM_CT) +\n                #log(DESTIN_EXEC_CT) +\n                #log(DESTIN_MULTI_CT) +\n                #log(DESTIN_STUDIO_CT) +\n                #log(DESTIN_OWNER_CT) +\n                log(dist),   \n              family = poisson(link = \"log\"),\n              data = flow_data1,\n              na.action = na.exclude)\n\n\n\n\norcSIM <- glm(formula= TRIPS ~\n                ORIGIN_GRID_ID +\n                log(DESTIN_TRAIN_EXIT_CT) +\n                log(DESTIN_PRESCHOOL_CT) +\n                log(DESTIN_BUSINESS_CT) +\n                log(DESTIN_FINSERV_CT) +\n                log(DESTIN_SCH_CT) +\n                #log(DESTIN_RENTAL_CT) +\n                #log(DESTIN_1ROOM_CT) +\n                #log(DESTIN_2ROOM_CT) +\n                #log(DESTIN_3ROOM_CT) +\n                #log(DESTIN_4ROOM_CT) +\n                #log(DESTIN_5ROOM_CT) +\n                #log(DESTIN_EXEC_CT) +\n                #log(DESTIN_MULTI_CT) +\n                #log(DESTIN_STUDIO_CT) +\n                #log(DESTIN_OWNER_CT) +\n                log(dist)-1,\n              family = poisson(link='log'),\n              data = flow_data1,\n              na.action = na.exclude)\n\n\n\n\ndecSIM <- glm(formula= TRIPS ~\n                DESTIN_GRID_ID +\n                #log(ORIGIN_TRAIN_EXIT_CT) + \n                #log(ORIGIN_PRESCHOOL_CT) +\n                #log(ORIGIN_BUSINESS_CT) +\n                #log(ORIGIN_FINSERV_CT) +\n                #log(ORIGIN_SCH_CT) +\n                log(ORIGIN_RENTAL_CT) +\n                #log(ORIGIN_1ROOM_CT) +\n                log(ORIGIN_2ROOM_CT) +\n                log(ORIGIN_3ROOM_CT) +\n                log(ORIGIN_4ROOM_CT) +\n                log(ORIGIN_5ROOM_CT) +\n                log(ORIGIN_EXEC_CT) +\n                #log(ORIGIN_MULTI_CT) +\n                log(ORIGIN_STUDIO_CT) +\n                #log(ORIGIN_OWNER_CT) +\n                log(dist)-1,\n              family = poisson(link='log'),\n              data = flow_data1,\n              na.action = na.exclude)\n\n\n\n\ndbcSIM <- glm(formula = TRIPS ~ \n                ORIGIN_GRID_ID + \n                DESTIN_GRID_ID + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = flow_data1,\n              na.action = na.exclude)\n\n\n\n\nWe will save the output of the four SIMs into rds.\n\nwrite_rds(uncSIM, \"data/rds/uncSIM.rds\")\nwrite_rds(orcSIM, \"data/rds/orcSIM.rds\") \nwrite_rds(decSIM, \"data/rds/decSIM.rds\") \nwrite_rds(dbcSIM, \"data/rds/dbcSIM.rds\") \n\nNow reload them into R\n\nuncSIM<- read_rds(\"data/rds/uncSIM.rds\")\norcSIM<- read_rds( \"data/rds/orcSIM.rds\") \ndecSIM<- read_rds( \"data/rds/decSIM.rds\") \ndbcSIM<- read_rds(\"data/rds/dbcSIM.rds\") \n\n\n\nResults of SIMs\nUnconstrained SIM output\n\nUnconstrained R-squaredUnconstrained CoefficientsUnconstrained Summary\n\n\nThe R-squared value of 0.24 tells us that the explanatory variables are able to explain 24% of the variance in the TRIPS target variable.\n\nCalcRSquared <- function(observed,estimated){\n  r <- cor(observed,estimated)\n  R2 <- r^2\n  R2\n}\n\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.2435403\n\n\n\n\nAll the coefficients are statistically significant (refer to next tab). The most influential explanatory variables are distance, destination train exit count and destination school count with coefficients of -1.43, 0.45 and 0.29 respectively.\n\nuncSIM$coefficients\n\n              (Intercept)     log(ORIGIN_RENTAL_CT)      log(ORIGIN_2ROOM_CT) \n             15.626793956               0.002092952               0.011054065 \n     log(ORIGIN_3ROOM_CT)      log(ORIGIN_4ROOM_CT)      log(ORIGIN_5ROOM_CT) \n              0.003207920               0.022356966               0.091874317 \n      log(ORIGIN_EXEC_CT)     log(ORIGIN_STUDIO_CT) log(DESTIN_TRAIN_EXIT_CT) \n              0.072998692               0.010426315               0.446697044 \n log(DESTIN_PRESCHOOL_CT)   log(DESTIN_BUSINESS_CT)    log(DESTIN_FINSERV_CT) \n              0.053792693               0.024167573               0.147691697 \n       log(DESTIN_SCH_CT)                 log(dist) \n              0.288495127              -1.426134616 \n\n\n\n\n\nsummary(uncSIM)\n\n\nCall:\nglm(formula = TRIPS ~ log(ORIGIN_RENTAL_CT) + log(ORIGIN_2ROOM_CT) + \n    log(ORIGIN_3ROOM_CT) + log(ORIGIN_4ROOM_CT) + log(ORIGIN_5ROOM_CT) + \n    log(ORIGIN_EXEC_CT) + log(ORIGIN_STUDIO_CT) + log(DESTIN_TRAIN_EXIT_CT) + \n    log(DESTIN_PRESCHOOL_CT) + log(DESTIN_BUSINESS_CT) + log(DESTIN_FINSERV_CT) + \n    log(DESTIN_SCH_CT) + log(dist), family = poisson(link = \"log\"), \n    data = flow_data1, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-141.78   -13.67    -7.09    -0.93   854.41  \n\nCoefficients:\n                            Estimate Std. Error  z value Pr(>|z|)    \n(Intercept)                1.563e+01  2.172e-03  7196.26   <2e-16 ***\nlog(ORIGIN_RENTAL_CT)      2.093e-03  9.151e-05    22.87   <2e-16 ***\nlog(ORIGIN_2ROOM_CT)       1.105e-02  1.151e-04    96.08   <2e-16 ***\nlog(ORIGIN_3ROOM_CT)       3.208e-03  8.886e-05    36.10   <2e-16 ***\nlog(ORIGIN_4ROOM_CT)       2.236e-02  1.793e-04   124.67   <2e-16 ***\nlog(ORIGIN_5ROOM_CT)       9.187e-02  1.844e-04   498.35   <2e-16 ***\nlog(ORIGIN_EXEC_CT)        7.300e-02  9.258e-05   788.53   <2e-16 ***\nlog(ORIGIN_STUDIO_CT)      1.043e-02  1.409e-04    73.99   <2e-16 ***\nlog(DESTIN_TRAIN_EXIT_CT)  4.467e-01  4.136e-04  1079.94   <2e-16 ***\nlog(DESTIN_PRESCHOOL_CT)   5.379e-02  3.344e-04   160.84   <2e-16 ***\nlog(DESTIN_BUSINESS_CT)    2.417e-02  1.895e-04   127.52   <2e-16 ***\nlog(DESTIN_FINSERV_CT)     1.477e-01  2.755e-04   536.08   <2e-16 ***\nlog(DESTIN_SCH_CT)         2.885e-01  7.142e-04   403.94   <2e-16 ***\nlog(dist)                 -1.426e+00  2.756e-04 -5174.77   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 81514190  on 62119  degrees of freedom\nResidual deviance: 41434535  on 62106  degrees of freedom\nAIC: 41769936\n\nNumber of Fisher Scoring iterations: 7\n\n\n\n\n\nOrigin Constrained SIM output\n\nOrigin Constrained R-squaredOrigin Constrained CoefficientsOrigin Constrained Summary\n\n\nThe R-squared value of 0.38 tells us that the explanatory variables are able to explain 38 % of the variance in the TRIPS target variable.\n\nCalcRSquared(orcSIM$data$TRIPS, orcSIM$fitted.values)\n\n[1] 0.3774195\n\n\n\n\nAll the coefficients are statistically significant (refer to next tab). The most influential explanatory variables are distance, destination train exit count and destination school count with coefficients of -1.51, 0.49 and 0.29 respectively.\n\norcSIM$coefficients[818:823]\n\nlog(DESTIN_TRAIN_EXIT_CT)  log(DESTIN_PRESCHOOL_CT)   log(DESTIN_BUSINESS_CT) \n              0.492156514               0.006870959               0.069866041 \n   log(DESTIN_FINSERV_CT)        log(DESTIN_SCH_CT)                 log(dist) \n              0.238240503               0.293176283              -1.506419630 \n\n\n\n\n\nsummary(orcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_GRID_ID + log(DESTIN_TRAIN_EXIT_CT) + \n    log(DESTIN_PRESCHOOL_CT) + log(DESTIN_BUSINESS_CT) + log(DESTIN_FINSERV_CT) + \n    log(DESTIN_SCH_CT) + log(dist) - 1, family = poisson(link = \"log\"), \n    data = flow_data1, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-267.63   -11.13    -4.56     1.46   426.19  \n\nCoefficients:\n                            Estimate Std. Error   z value Pr(>|z|)    \nORIGIN_GRID_ID23          14.2451175  0.1280578   111.240   <2e-16 ***\nORIGIN_GRID_ID44          14.9017180  0.1525180    97.705   <2e-16 ***\nORIGIN_GRID_ID46          13.8416319  0.0971519   142.474   <2e-16 ***\nORIGIN_GRID_ID66          14.5827381  0.1348610   108.132   <2e-16 ***\nORIGIN_GRID_ID67          15.6088559  0.0270738   576.529   <2e-16 ***\nORIGIN_GRID_ID68          13.2697276  0.1147267   115.664   <2e-16 ***\nORIGIN_GRID_ID86          14.1222438  0.0860897   164.041   <2e-16 ***\nORIGIN_GRID_ID87          15.8753002  0.0769632   206.271   <2e-16 ***\nORIGIN_GRID_ID88          16.0375415  0.0202271   792.873   <2e-16 ***\nORIGIN_GRID_ID89          14.1386759  0.0503571   280.768   <2e-16 ***\nORIGIN_GRID_ID90          13.2594056  0.1302055   101.834   <2e-16 ***\nORIGIN_GRID_ID109         13.8867955  0.1066208   130.245   <2e-16 ***\nORIGIN_GRID_ID110         14.1451772  0.0808725   174.907   <2e-16 ***\nORIGIN_GRID_ID111         17.0259424  0.0120980  1407.338   <2e-16 ***\nORIGIN_GRID_ID112         13.4360480  0.0718264   187.063   <2e-16 ***\nORIGIN_GRID_ID128         16.4957690  0.0255207   646.368   <2e-16 ***\nORIGIN_GRID_ID129         13.6803266  0.1889960    72.384   <2e-16 ***\nORIGIN_GRID_ID130         14.5702180  0.0558521   260.871   <2e-16 ***\nORIGIN_GRID_ID131         15.3293744  0.0324635   472.204   <2e-16 ***\nORIGIN_GRID_ID132         13.9519453  0.0567443   245.874   <2e-16 ***\nORIGIN_GRID_ID133         13.9369330  0.0427284   326.175   <2e-16 ***\nORIGIN_GRID_ID134         16.2067152  0.0262291   617.891   <2e-16 ***\nORIGIN_GRID_ID150         16.7308526  0.0213193   784.774   <2e-16 ***\nORIGIN_GRID_ID151         13.5327254  0.0822251   164.581   <2e-16 ***\nORIGIN_GRID_ID152         13.3504455  0.0870626   153.343   <2e-16 ***\nORIGIN_GRID_ID153         14.5042281  0.0451310   321.381   <2e-16 ***\nORIGIN_GRID_ID154         17.0687992  0.0096105  1776.064   <2e-16 ***\nORIGIN_GRID_ID155         13.9027121  0.0396143   350.952   <2e-16 ***\nORIGIN_GRID_ID156         14.5736556  0.0549191   265.366   <2e-16 ***\nORIGIN_GRID_ID172         15.4120143  0.0668516   230.541   <2e-16 ***\nORIGIN_GRID_ID174         14.3767175  0.0481532   298.562   <2e-16 ***\nORIGIN_GRID_ID175         16.5702598  0.0106628  1554.027   <2e-16 ***\nORIGIN_GRID_ID176         17.6450750  0.0066238  2663.895   <2e-16 ***\nORIGIN_GRID_ID195         13.2808952  0.0877278   151.387   <2e-16 ***\nORIGIN_GRID_ID196         13.8961090  0.0429643   323.433   <2e-16 ***\nORIGIN_GRID_ID197         12.9514365  0.1336462    96.908   <2e-16 ***\nORIGIN_GRID_ID215         14.0654132  0.0985571   142.713   <2e-16 ***\nORIGIN_GRID_ID216         18.0125123  0.0055704  3233.591   <2e-16 ***\nORIGIN_GRID_ID217         15.2619093  0.0222771   685.094   <2e-16 ***\nORIGIN_GRID_ID237         13.6055930  0.3015202    45.123   <2e-16 ***\nORIGIN_GRID_ID238         13.6194592  0.0762793   178.547   <2e-16 ***\nORIGIN_GRID_ID239         13.8770945  0.1443546    96.132   <2e-16 ***\nORIGIN_GRID_ID257         14.1642064  0.0622926   227.382   <2e-16 ***\nORIGIN_GRID_ID258         14.8953315  0.0289287   514.899   <2e-16 ***\nORIGIN_GRID_ID259         14.6367426  0.0413285   354.156   <2e-16 ***\nORIGIN_GRID_ID278         15.6498051  0.0374813   417.536   <2e-16 ***\nORIGIN_GRID_ID279         13.5977892  0.0487802   278.757   <2e-16 ***\nORIGIN_GRID_ID280         13.9864706  0.0506168   276.321   <2e-16 ***\nORIGIN_GRID_ID298         11.2780623  0.3779700    29.839   <2e-16 ***\nORIGIN_GRID_ID299         13.6961231  0.0597967   229.045   <2e-16 ***\nORIGIN_GRID_ID300         17.0659981  0.0088251  1933.809   <2e-16 ***\nORIGIN_GRID_ID320         14.2672705  0.0520260   274.234   <2e-16 ***\nORIGIN_GRID_ID321         14.1540763  0.0803485   176.159   <2e-16 ***\nORIGIN_GRID_ID322         15.5640058  0.0411565   378.167   <2e-16 ***\nORIGIN_GRID_ID340         15.6839065  0.0311684   503.199   <2e-16 ***\nORIGIN_GRID_ID341         13.9808442  0.0504853   276.929   <2e-16 ***\nORIGIN_GRID_ID342         14.7312414  0.0428850   343.505   <2e-16 ***\nORIGIN_GRID_ID363         15.4295844  0.0400190   385.556   <2e-16 ***\nORIGIN_GRID_ID364         15.2222753  0.0275907   551.718   <2e-16 ***\nORIGIN_GRID_ID383         14.8162818  0.0338898   437.190   <2e-16 ***\nORIGIN_GRID_ID384         13.7784216  0.0526704   261.597   <2e-16 ***\nORIGIN_GRID_ID385         13.9624879  0.0700398   199.351   <2e-16 ***\nORIGIN_GRID_ID404         15.7002804  0.0306507   512.232   <2e-16 ***\nORIGIN_GRID_ID405         14.6953295  0.0562912   261.059   <2e-16 ***\nORIGIN_GRID_ID406         18.9693855  0.0032442  5847.103   <2e-16 ***\nORIGIN_GRID_ID407         14.7927858  0.0497349   297.433   <2e-16 ***\nORIGIN_GRID_ID408         15.5463440  0.0254762   610.230   <2e-16 ***\nORIGIN_GRID_ID425         13.0574115  0.1037143   125.898   <2e-16 ***\nORIGIN_GRID_ID426         14.9468933  0.0311938   479.163   <2e-16 ***\nORIGIN_GRID_ID427         13.5834559  0.0487232   278.788   <2e-16 ***\nORIGIN_GRID_ID428         13.1128677  0.1250189   104.887   <2e-16 ***\nORIGIN_GRID_ID429         16.0302696  0.0216242   741.311   <2e-16 ***\nORIGIN_GRID_ID446         14.2636375  0.0712789   200.110   <2e-16 ***\nORIGIN_GRID_ID447         14.2033528  0.0412555   344.278   <2e-16 ***\nORIGIN_GRID_ID448         14.9973934  0.0282035   531.757   <2e-16 ***\nORIGIN_GRID_ID449         17.7525565  0.0066921  2652.750   <2e-16 ***\nORIGIN_GRID_ID450         15.6239824  0.0207544   752.805   <2e-16 ***\nORIGIN_GRID_ID468         14.9242353  0.0330694   451.301   <2e-16 ***\nORIGIN_GRID_ID469         15.8970418  0.0157313  1010.537   <2e-16 ***\nORIGIN_GRID_ID470         18.0830012  0.0050279  3596.505   <2e-16 ***\nORIGIN_GRID_ID471         16.3700698  0.0176829   925.756   <2e-16 ***\nORIGIN_GRID_ID488         14.6306740  0.0593772   246.402   <2e-16 ***\nORIGIN_GRID_ID489         12.0746590  0.1690428    71.430   <2e-16 ***\nORIGIN_GRID_ID490         16.4783227  0.0127206  1295.402   <2e-16 ***\nORIGIN_GRID_ID491         16.9643794  0.0081630  2078.215   <2e-16 ***\nORIGIN_GRID_ID493         11.6561974  0.2182279    53.413   <2e-16 ***\nORIGIN_GRID_ID494         13.6315522  0.0795839   171.285   <2e-16 ***\nORIGIN_GRID_ID509         14.7963369  0.0389783   379.605   <2e-16 ***\nORIGIN_GRID_ID510         15.4297685  0.0270183   571.086   <2e-16 ***\nORIGIN_GRID_ID511         16.0561083  0.0116733  1375.458   <2e-16 ***\nORIGIN_GRID_ID512         18.5898371  0.0037316  4981.722   <2e-16 ***\nORIGIN_GRID_ID513         15.3143949  0.0277209   552.449   <2e-16 ***\nORIGIN_GRID_ID514         14.0323726  0.0557670   251.625   <2e-16 ***\nORIGIN_GRID_ID515         12.1665310  0.2236167    54.408   <2e-16 ***\nORIGIN_GRID_ID530         13.9406411  0.0905594   153.939   <2e-16 ***\nORIGIN_GRID_ID531         15.2947538  0.0205992   742.494   <2e-16 ***\nORIGIN_GRID_ID532         14.5816153  0.0272166   535.761   <2e-16 ***\nORIGIN_GRID_ID533         18.3661435  0.0038007  4832.323   <2e-16 ***\nORIGIN_GRID_ID534         18.7534090  0.0040803  4596.044   <2e-16 ***\nORIGIN_GRID_ID536         15.4343822  0.0272831   565.711   <2e-16 ***\nORIGIN_GRID_ID537         12.4491355  0.1924616    64.684   <2e-16 ***\nORIGIN_GRID_ID538         12.7884778  0.2582100    49.527   <2e-16 ***\nORIGIN_GRID_ID539         12.3803686  1.0000029    12.380   <2e-16 ***\nORIGIN_GRID_ID551         14.3030229  0.0570147   250.866   <2e-16 ***\nORIGIN_GRID_ID552         15.7846197  0.0376917   418.782   <2e-16 ***\nORIGIN_GRID_ID553         15.0241196  0.0188993   794.957   <2e-16 ***\nORIGIN_GRID_ID554         18.3229635  0.0040238  4553.614   <2e-16 ***\nORIGIN_GRID_ID555         17.6223206  0.0078399  2247.784   <2e-16 ***\nORIGIN_GRID_ID559         13.5823702  0.1066217   127.388   <2e-16 ***\nORIGIN_GRID_ID560         15.5058420  0.0568485   272.757   <2e-16 ***\nORIGIN_GRID_ID561          9.9062088  1.0000018     9.906   <2e-16 ***\nORIGIN_GRID_ID572         10.6508472  0.5773538    18.448   <2e-16 ***\nORIGIN_GRID_ID573         14.0742282  0.0477148   294.966   <2e-16 ***\nORIGIN_GRID_ID574         15.0248881  0.0383198   392.092   <2e-16 ***\nORIGIN_GRID_ID575         19.1952489  0.0028393  6760.592   <2e-16 ***\nORIGIN_GRID_ID576         17.8250380  0.0053514  3330.939   <2e-16 ***\nORIGIN_GRID_ID578         13.1047360  0.1042786   125.670   <2e-16 ***\nORIGIN_GRID_ID582         13.3678316  0.1097837   121.765   <2e-16 ***\nORIGIN_GRID_ID583         13.1607900  0.5773559    22.795   <2e-16 ***\nORIGIN_GRID_ID584         16.3280828  0.0586798   278.257   <2e-16 ***\nORIGIN_GRID_ID593         14.3472750  0.0523865   273.873   <2e-16 ***\nORIGIN_GRID_ID594         15.3220391  0.0265944   576.139   <2e-16 ***\nORIGIN_GRID_ID595         14.8461706  0.0201403   737.136   <2e-16 ***\nORIGIN_GRID_ID596         17.6510301  0.0047349  3727.877   <2e-16 ***\nORIGIN_GRID_ID597         14.5255977  0.0613520   236.758   <2e-16 ***\nORIGIN_GRID_ID603         13.5009558  0.1178705   114.541   <2e-16 ***\nORIGIN_GRID_ID604         13.9893531  0.1924672    72.684   <2e-16 ***\nORIGIN_GRID_ID615         13.5537040  0.0508752   266.411   <2e-16 ***\nORIGIN_GRID_ID616         14.5370826  0.0330696   439.591   <2e-16 ***\nORIGIN_GRID_ID617         15.3499273  0.0194381   789.684   <2e-16 ***\nORIGIN_GRID_ID618         18.2096130  0.0041878  4348.275   <2e-16 ***\nORIGIN_GRID_ID620         15.3416595  0.0323407   474.376   <2e-16 ***\nORIGIN_GRID_ID637         13.9655662  0.0455943   306.301   <2e-16 ***\nORIGIN_GRID_ID638         17.7580489  0.0045821  3875.491   <2e-16 ***\nORIGIN_GRID_ID657         15.6795287  0.0174844   896.770   <2e-16 ***\nORIGIN_GRID_ID658         17.0206852  0.0067936  2505.388   <2e-16 ***\nORIGIN_GRID_ID659         17.3489636  0.0058195  2981.200   <2e-16 ***\nORIGIN_GRID_ID660         18.2707570  0.0038484  4747.686   <2e-16 ***\nORIGIN_GRID_ID662         18.0540697  0.0072726  2482.475   <2e-16 ***\nORIGIN_GRID_ID677         15.7138065  0.0238974   657.554   <2e-16 ***\nORIGIN_GRID_ID678         13.5378729  0.0501073   270.178   <2e-16 ***\nORIGIN_GRID_ID679         18.1888529  0.0040354  4507.310   <2e-16 ***\nORIGIN_GRID_ID680         18.2439364  0.0040227  4535.208   <2e-16 ***\nORIGIN_GRID_ID681         17.3125053  0.0089376  1937.052   <2e-16 ***\nORIGIN_GRID_ID699         15.1870432  0.0239110   635.149   <2e-16 ***\nORIGIN_GRID_ID700         17.2074468  0.0065409  2630.765   <2e-16 ***\nORIGIN_GRID_ID701         17.2993621  0.0065823  2628.155   <2e-16 ***\nORIGIN_GRID_ID702         18.1248396  0.0040088  4521.208   <2e-16 ***\nORIGIN_GRID_ID704         14.8882060  0.0344491   432.180   <2e-16 ***\nORIGIN_GRID_ID722         14.9954163  0.0207384   723.075   <2e-16 ***\nORIGIN_GRID_ID725         14.4419247  0.0419772   344.042   <2e-16 ***\nORIGIN_GRID_ID741         15.7987398  0.0169663   931.183   <2e-16 ***\nORIGIN_GRID_ID743         15.5303683  0.0136350  1139.008   <2e-16 ***\nORIGIN_GRID_ID744         17.5300735  0.0051503  3403.707   <2e-16 ***\nORIGIN_GRID_ID761         15.2343874  0.0305334   498.942   <2e-16 ***\nORIGIN_GRID_ID762         17.2428026  0.0075458  2285.093   <2e-16 ***\nORIGIN_GRID_ID763         14.0213451  0.0305308   459.252   <2e-16 ***\nORIGIN_GRID_ID764         17.9975209  0.0039919  4508.507   <2e-16 ***\nORIGIN_GRID_ID765         17.3232124  0.0088467  1958.161   <2e-16 ***\nORIGIN_GRID_ID767         18.6822161  0.0041205  4533.987   <2e-16 ***\nORIGIN_GRID_ID772         13.5315819  0.0816780   165.670   <2e-16 ***\nORIGIN_GRID_ID784         14.0812024  0.0287647   489.531   <2e-16 ***\nORIGIN_GRID_ID785         17.2967402  0.0048161  3591.408   <2e-16 ***\nORIGIN_GRID_ID786         16.8391374  0.0065861  2556.779   <2e-16 ***\nORIGIN_GRID_ID787         17.4479243  0.0077286  2257.582   <2e-16 ***\nORIGIN_GRID_ID788         17.9821264  0.0057456  3129.698   <2e-16 ***\nORIGIN_GRID_ID789         16.6047313  0.0112362  1477.795   <2e-16 ***\nORIGIN_GRID_ID803         13.4571515  0.0647184   207.934   <2e-16 ***\nORIGIN_GRID_ID804         18.1428701  0.0045475  3989.633   <2e-16 ***\nORIGIN_GRID_ID805         17.9841194  0.0038958  4616.245   <2e-16 ***\nORIGIN_GRID_ID806         17.4842677  0.0047984  3643.751   <2e-16 ***\nORIGIN_GRID_ID807         18.3543240  0.0046069  3984.064   <2e-16 ***\nORIGIN_GRID_ID808         16.6664151  0.0116512  1430.441   <2e-16 ***\nORIGIN_GRID_ID809         18.2269129  0.0039204  4649.216   <2e-16 ***\nORIGIN_GRID_ID810         17.5540710  0.0061040  2875.834   <2e-16 ***\nORIGIN_GRID_ID814         15.1810820  0.0278128   545.831   <2e-16 ***\nORIGIN_GRID_ID819         19.7307746  0.0193330  1020.575   <2e-16 ***\nORIGIN_GRID_ID824         14.4669486  0.0421611   343.135   <2e-16 ***\nORIGIN_GRID_ID826         15.6643387  0.0109143  1435.206   <2e-16 ***\nORIGIN_GRID_ID827         17.7378500  0.0043281  4098.304   <2e-16 ***\nORIGIN_GRID_ID828         17.8134466  0.0042095  4231.708   <2e-16 ***\nORIGIN_GRID_ID829         17.8472752  0.0050041  3566.542   <2e-16 ***\nORIGIN_GRID_ID830         17.9265760  0.0054247  3304.631   <2e-16 ***\nORIGIN_GRID_ID831         18.6478563  0.0034163  5458.481   <2e-16 ***\nORIGIN_GRID_ID832         17.7657923  0.0068185  2605.544   <2e-16 ***\nORIGIN_GRID_ID835         15.1725472  0.0297164   510.578   <2e-16 ***\nORIGIN_GRID_ID844         13.5569360  0.0781173   173.546   <2e-16 ***\nORIGIN_GRID_ID846         17.1754370  0.0058519  2935.043   <2e-16 ***\nORIGIN_GRID_ID847         15.9582774  0.0105858  1507.524   <2e-16 ***\nORIGIN_GRID_ID848         17.2919486  0.0053106  3256.098   <2e-16 ***\nORIGIN_GRID_ID849         16.4570173  0.0082684  1990.348   <2e-16 ***\nORIGIN_GRID_ID850         17.1900995  0.0060909  2822.242   <2e-16 ***\nORIGIN_GRID_ID851         17.7015099  0.0045916  3855.211   <2e-16 ***\nORIGIN_GRID_ID852         17.1785210  0.0065687  2615.212   <2e-16 ***\nORIGIN_GRID_ID853         19.0757214  0.0040162  4749.703   <2e-16 ***\nORIGIN_GRID_ID854         15.4067103  0.0263524   584.643   <2e-16 ***\nORIGIN_GRID_ID855         14.1597407  0.0455946   310.558   <2e-16 ***\nORIGIN_GRID_ID856         15.8127589  0.0187129   845.020   <2e-16 ***\nORIGIN_GRID_ID866         15.1733375  0.0286619   529.391   <2e-16 ***\nORIGIN_GRID_ID867         15.9661696  0.0126869  1258.479   <2e-16 ***\nORIGIN_GRID_ID868         14.9686580  0.0220228   679.690   <2e-16 ***\nORIGIN_GRID_ID869         17.9011738  0.0061764  2898.341   <2e-16 ***\nORIGIN_GRID_ID870         18.3029932  0.0034993  5230.417   <2e-16 ***\nORIGIN_GRID_ID871         17.8147571  0.0063159  2820.630   <2e-16 ***\nORIGIN_GRID_ID872         15.8926714  0.0120031  1324.044   <2e-16 ***\nORIGIN_GRID_ID873         16.1570535  0.0109536  1475.039   <2e-16 ***\nORIGIN_GRID_ID874         16.5276135  0.0084809  1948.798   <2e-16 ***\nORIGIN_GRID_ID875         13.4683734  0.0697046   193.221   <2e-16 ***\nORIGIN_GRID_ID876         14.6382364  0.0315332   464.217   <2e-16 ***\nORIGIN_GRID_ID877         13.9304756  0.0429206   324.564   <2e-16 ***\nORIGIN_GRID_ID887         15.6805940  0.0143171  1095.236   <2e-16 ***\nORIGIN_GRID_ID888         16.8378080  0.0077649  2168.448   <2e-16 ***\nORIGIN_GRID_ID889         14.0550843  0.0349641   401.986   <2e-16 ***\nORIGIN_GRID_ID890         17.8809204  0.0041574  4300.939   <2e-16 ***\nORIGIN_GRID_ID891         16.6618380  0.0117727  1415.298   <2e-16 ***\nORIGIN_GRID_ID893         17.7325033  0.0044407  3993.159   <2e-16 ***\nORIGIN_GRID_ID894         16.0497208  0.0109715  1462.858   <2e-16 ***\nORIGIN_GRID_ID895         15.6805458  0.0158569   988.880   <2e-16 ***\nORIGIN_GRID_ID896         14.7503114  0.0312809   471.544   <2e-16 ***\nORIGIN_GRID_ID897         12.8893467  0.0749790   171.906   <2e-16 ***\nORIGIN_GRID_ID898         14.8048067  0.0332686   445.008   <2e-16 ***\nORIGIN_GRID_ID908         16.8863752  0.0129553  1303.430   <2e-16 ***\nORIGIN_GRID_ID909         16.9089072  0.0063529  2661.590   <2e-16 ***\nORIGIN_GRID_ID910         15.1070021  0.0173971   868.362   <2e-16 ***\nORIGIN_GRID_ID911         16.3074514  0.0095616  1705.511   <2e-16 ***\nORIGIN_GRID_ID912         17.5713512  0.0047289  3715.748   <2e-16 ***\nORIGIN_GRID_ID915         17.6769898  0.0047406  3728.843   <2e-16 ***\nORIGIN_GRID_ID917         17.2504355  0.0074969  2301.006   <2e-16 ***\nORIGIN_GRID_ID918         13.7159455  0.0418266   327.924   <2e-16 ***\nORIGIN_GRID_ID919         17.0002329  0.0092893  1830.093   <2e-16 ***\nORIGIN_GRID_ID928         15.9971269  0.0151922  1052.983   <2e-16 ***\nORIGIN_GRID_ID929         17.3961580  0.0049579  3508.778   <2e-16 ***\nORIGIN_GRID_ID930         18.0672383  0.0035650  5067.982   <2e-16 ***\nORIGIN_GRID_ID931         15.1570526  0.0183782   824.732   <2e-16 ***\nORIGIN_GRID_ID932         15.6964026  0.0185231   847.396   <2e-16 ***\nORIGIN_GRID_ID933         17.3605527  0.0061017  2845.198   <2e-16 ***\nORIGIN_GRID_ID934         14.8466640  0.0203768   728.606   <2e-16 ***\nORIGIN_GRID_ID935         18.4642003  0.0035187  5247.514   <2e-16 ***\nORIGIN_GRID_ID938         11.5253619  0.2773572    41.554   <2e-16 ***\nORIGIN_GRID_ID939         18.4126896  0.0042938  4288.154   <2e-16 ***\nORIGIN_GRID_ID940         13.1812247  0.0945129   139.465   <2e-16 ***\nORIGIN_GRID_ID949         15.6962685  0.0148774  1055.038   <2e-16 ***\nORIGIN_GRID_ID950         17.6851223  0.0054438  3248.668   <2e-16 ***\nORIGIN_GRID_ID951         18.5556438  0.0032329  5739.581   <2e-16 ***\nORIGIN_GRID_ID952         15.5094972  0.0225702   687.166   <2e-16 ***\nORIGIN_GRID_ID953         16.4126656  0.0103696  1582.763   <2e-16 ***\nORIGIN_GRID_ID954         14.9348942  0.0184805   808.143   <2e-16 ***\nORIGIN_GRID_ID955         17.1561890  0.0061661  2782.319   <2e-16 ***\nORIGIN_GRID_ID956         15.6516609  0.0124231  1259.883   <2e-16 ***\nORIGIN_GRID_ID957         17.6012753  0.0060500  2909.322   <2e-16 ***\nORIGIN_GRID_ID959         14.5311537  0.0535671   271.270   <2e-16 ***\nORIGIN_GRID_ID961         14.0809281  0.0357937   393.391   <2e-16 ***\nORIGIN_GRID_ID962         20.2280658  0.0053043  3813.538   <2e-16 ***\nORIGIN_GRID_ID970         16.3144233  0.0087393  1866.784   <2e-16 ***\nORIGIN_GRID_ID971         17.5085776  0.0043044  4067.601   <2e-16 ***\nORIGIN_GRID_ID972         17.3938604  0.0051093  3404.383   <2e-16 ***\nORIGIN_GRID_ID974         16.6638272  0.0079774  2088.875   <2e-16 ***\nORIGIN_GRID_ID975         16.2990423  0.0095357  1709.262   <2e-16 ***\nORIGIN_GRID_ID976         15.0474774  0.0175478   857.514   <2e-16 ***\nORIGIN_GRID_ID977         18.0505873  0.0041061  4396.053   <2e-16 ***\nORIGIN_GRID_ID978         17.7187382  0.0072608  2440.321   <2e-16 ***\nORIGIN_GRID_ID982         15.3791793  0.0168707   911.591   <2e-16 ***\nORIGIN_GRID_ID983         19.6165133  0.0040877  4798.937   <2e-16 ***\nORIGIN_GRID_ID984         20.8246831  0.0042068  4950.205   <2e-16 ***\nORIGIN_GRID_ID991         16.1758763  0.0099366  1627.914   <2e-16 ***\nORIGIN_GRID_ID992         16.6321634  0.0073954  2248.982   <2e-16 ***\nORIGIN_GRID_ID993         16.1916552  0.0082679  1958.378   <2e-16 ***\nORIGIN_GRID_ID994         15.6999363  0.0120264  1305.455   <2e-16 ***\nORIGIN_GRID_ID995         17.0469424  0.0061167  2786.957   <2e-16 ***\nORIGIN_GRID_ID996         16.5744834  0.0083575  1983.186   <2e-16 ***\nORIGIN_GRID_ID997         15.2759456  0.0299495   510.057   <2e-16 ***\nORIGIN_GRID_ID998         18.1349592  0.0042813  4235.812   <2e-16 ***\nORIGIN_GRID_ID999         18.0013431  0.0059399  3030.587   <2e-16 ***\nORIGIN_GRID_ID1001        15.4978076  0.0258063   600.545   <2e-16 ***\nORIGIN_GRID_ID1003        18.0000053  0.0046453  3874.905   <2e-16 ***\nORIGIN_GRID_ID1004        18.8875109  0.0034331  5501.655   <2e-16 ***\nORIGIN_GRID_ID1011        14.8968603  0.0344161   432.845   <2e-16 ***\nORIGIN_GRID_ID1012        14.0527556  0.0418286   335.961   <2e-16 ***\nORIGIN_GRID_ID1013        14.8619614  0.0190716   779.272   <2e-16 ***\nORIGIN_GRID_ID1014        15.6252895  0.0120053  1301.535   <2e-16 ***\nORIGIN_GRID_ID1015        14.9322740  0.0188429   792.463   <2e-16 ***\nORIGIN_GRID_ID1016        16.5302993  0.0082082  2013.878   <2e-16 ***\nORIGIN_GRID_ID1018        17.1362383  0.0101769  1683.839   <2e-16 ***\nORIGIN_GRID_ID1019        18.4169842  0.0050934  3615.845   <2e-16 ***\nORIGIN_GRID_ID1023        17.0698823  0.0096733  1764.635   <2e-16 ***\nORIGIN_GRID_ID1024        18.0815758  0.0047588  3799.604   <2e-16 ***\nORIGIN_GRID_ID1025        13.3740004  0.0679170   196.917   <2e-16 ***\nORIGIN_GRID_ID1033        15.5990674  0.0131995  1181.796   <2e-16 ***\nORIGIN_GRID_ID1034        16.4179635  0.0080575  2037.603   <2e-16 ***\nORIGIN_GRID_ID1035        17.1063245  0.0058722  2913.122   <2e-16 ***\nORIGIN_GRID_ID1036        14.8756444  0.0183647   810.015   <2e-16 ***\nORIGIN_GRID_ID1037        16.2950958  0.0080017  2036.448   <2e-16 ***\nORIGIN_GRID_ID1043        15.5528798  0.0264918   587.083   <2e-16 ***\nORIGIN_GRID_ID1045        17.7657388  0.0048230  3683.569   <2e-16 ***\nORIGIN_GRID_ID1046        17.7677341  0.0054863  3238.572   <2e-16 ***\nORIGIN_GRID_ID1053        17.0492832  0.0063301  2693.359   <2e-16 ***\nORIGIN_GRID_ID1054        16.0434063  0.0094625  1695.473   <2e-16 ***\nORIGIN_GRID_ID1055        17.0894463  0.0056993  2998.507   <2e-16 ***\nORIGIN_GRID_ID1056        15.9528073  0.0101863  1566.106   <2e-16 ***\nORIGIN_GRID_ID1064        12.6204987  0.2582093    48.877   <2e-16 ***\nORIGIN_GRID_ID1066        17.5808656  0.0053893  3262.178   <2e-16 ***\nORIGIN_GRID_ID1067        12.1080898  0.2041348    59.314   <2e-16 ***\nORIGIN_GRID_ID1074        16.5259309  0.0085831  1925.396   <2e-16 ***\nORIGIN_GRID_ID1075        15.7812503  0.0122232  1291.090   <2e-16 ***\nORIGIN_GRID_ID1076        15.8164945  0.0095268  1660.207   <2e-16 ***\nORIGIN_GRID_ID1077        15.8117841  0.0113678  1390.927   <2e-16 ***\nORIGIN_GRID_ID1079        17.1235770  0.0060388  2835.605   <2e-16 ***\nORIGIN_GRID_ID1085        12.8100492  0.1796175    71.318   <2e-16 ***\nORIGIN_GRID_ID1087        17.6759167  0.0060759  2909.168   <2e-16 ***\nORIGIN_GRID_ID1088        16.1727802  0.0125817  1285.416   <2e-16 ***\nORIGIN_GRID_ID1094        14.5954630  0.0496823   293.776   <2e-16 ***\nORIGIN_GRID_ID1095        14.0403575  0.0442392   317.374   <2e-16 ***\nORIGIN_GRID_ID1096        15.4968823  0.0225906   685.988   <2e-16 ***\nORIGIN_GRID_ID1097        17.5426136  0.0042426  4134.886   <2e-16 ***\nORIGIN_GRID_ID1098        14.9352904  0.0200658   744.316   <2e-16 ***\nORIGIN_GRID_ID1099        16.5542420  0.0075442  2194.307   <2e-16 ***\nORIGIN_GRID_ID1105        13.9779803  0.0795874   175.631   <2e-16 ***\nORIGIN_GRID_ID1106        12.9690763  0.1154887   112.297   <2e-16 ***\nORIGIN_GRID_ID1107        15.2019554  0.0309146   491.741   <2e-16 ***\nORIGIN_GRID_ID1108        19.1986166  0.0029459  6517.117   <2e-16 ***\nORIGIN_GRID_ID1109        14.8920609  0.0280518   530.877   <2e-16 ***\nORIGIN_GRID_ID1116        16.2816204  0.0095296  1708.530   <2e-16 ***\nORIGIN_GRID_ID1117        14.3024362  0.0230075   621.641   <2e-16 ***\nORIGIN_GRID_ID1118        14.7064264  0.0206825   711.056   <2e-16 ***\nORIGIN_GRID_ID1119        15.5462158  0.0114503  1357.708   <2e-16 ***\nORIGIN_GRID_ID1120        15.5109387  0.0147893  1048.795   <2e-16 ***\nORIGIN_GRID_ID1129        17.9434691  0.0049768  3605.389   <2e-16 ***\nORIGIN_GRID_ID1130        18.2243182  0.0042446  4293.540   <2e-16 ***\nORIGIN_GRID_ID1131        15.9885622  0.0176500   905.870   <2e-16 ***\nORIGIN_GRID_ID1136        15.2623951  0.0157885   966.680   <2e-16 ***\nORIGIN_GRID_ID1138        13.7507982  0.0406410   338.348   <2e-16 ***\nORIGIN_GRID_ID1139        16.7567951  0.0058367  2870.929   <2e-16 ***\nORIGIN_GRID_ID1141        16.7599501  0.0070031  2393.226   <2e-16 ***\nORIGIN_GRID_ID1148        14.6181755  0.0552656   264.508   <2e-16 ***\nORIGIN_GRID_ID1149        15.6699483  0.0201119   779.138   <2e-16 ***\nORIGIN_GRID_ID1150        18.2630726  0.0039189  4660.295   <2e-16 ***\nORIGIN_GRID_ID1151        17.3338057  0.0068409  2533.855   <2e-16 ***\nORIGIN_GRID_ID1158        15.3814270  0.0127814  1203.425   <2e-16 ***\nORIGIN_GRID_ID1159        16.5980461  0.0063790  2601.989   <2e-16 ***\nORIGIN_GRID_ID1160        17.4554035  0.0043351  4026.542   <2e-16 ***\nORIGIN_GRID_ID1171        18.3989089  0.0041857  4395.621   <2e-16 ***\nORIGIN_GRID_ID1172        18.3175922  0.0041240  4441.732   <2e-16 ***\nORIGIN_GRID_ID1173        16.0262204  0.0136856  1171.027   <2e-16 ***\nORIGIN_GRID_ID1174        12.4266284  0.2582065    48.127   <2e-16 ***\nORIGIN_GRID_ID1178        15.4637874  0.0120600  1282.238   <2e-16 ***\nORIGIN_GRID_ID1179        16.1188222  0.0080372  2005.516   <2e-16 ***\nORIGIN_GRID_ID1180        17.0663933  0.0050026  3411.489   <2e-16 ***\nORIGIN_GRID_ID1181        16.2096781  0.0074509  2175.536   <2e-16 ***\nORIGIN_GRID_ID1183        15.2471728  0.0145962  1044.599   <2e-16 ***\nORIGIN_GRID_ID1190        14.6628397  0.0506860   289.288   <2e-16 ***\nORIGIN_GRID_ID1192        17.5903037  0.0067459  2607.554   <2e-16 ***\nORIGIN_GRID_ID1193        17.5825377  0.0056418  3116.502   <2e-16 ***\nORIGIN_GRID_ID1194        15.7972681  0.0157053  1005.856   <2e-16 ***\nORIGIN_GRID_ID1200        16.4529011  0.0074885  2197.095   <2e-16 ***\nORIGIN_GRID_ID1201        16.0972617  0.0081862  1966.381   <2e-16 ***\nORIGIN_GRID_ID1203        16.6339373  0.0066649  2495.760   <2e-16 ***\nORIGIN_GRID_ID1204        16.6481020  0.0070943  2346.688   <2e-16 ***\nORIGIN_GRID_ID1211        12.3990329  0.2182281    56.817   <2e-16 ***\nORIGIN_GRID_ID1214        18.1774786  0.0044162  4116.076   <2e-16 ***\nORIGIN_GRID_ID1215        14.8980924  0.0443762   335.722   <2e-16 ***\nORIGIN_GRID_ID1216        14.2145982  0.0445488   319.079   <2e-16 ***\nORIGIN_GRID_ID1220        17.2931059  0.0049274  3509.550   <2e-16 ***\nORIGIN_GRID_ID1221        16.9156064  0.0052663  3212.062   <2e-16 ***\nORIGIN_GRID_ID1222        16.5750404  0.0107680  1539.280   <2e-16 ***\nORIGIN_GRID_ID1223        14.6211871  0.0192679   758.835   <2e-16 ***\nORIGIN_GRID_ID1224        15.4541283  0.0119980  1288.060   <2e-16 ***\nORIGIN_GRID_ID1231        12.0962247  0.2000110    60.478   <2e-16 ***\nORIGIN_GRID_ID1232        13.9889198  0.1066261   131.196   <2e-16 ***\nORIGIN_GRID_ID1235        15.6665412  0.0143997  1087.980   <2e-16 ***\nORIGIN_GRID_ID1236        15.8880084  0.0153300  1036.403   <2e-16 ***\nORIGIN_GRID_ID1241        15.5032640  0.0117776  1316.330   <2e-16 ***\nORIGIN_GRID_ID1242        16.2767651  0.0076355  2131.709   <2e-16 ***\nORIGIN_GRID_ID1243        16.7008614  0.0057020  2928.954   <2e-16 ***\nORIGIN_GRID_ID1246        15.6468183  0.0105998  1476.140   <2e-16 ***\nORIGIN_GRID_ID1256        17.0372648  0.0077911  2186.771   <2e-16 ***\nORIGIN_GRID_ID1257        18.0108413  0.0055294  3257.274   <2e-16 ***\nORIGIN_GRID_ID1258        15.9843321  0.0151613  1054.284   <2e-16 ***\nORIGIN_GRID_ID1262        16.0208048  0.0092303  1735.674   <2e-16 ***\nORIGIN_GRID_ID1263        16.3743978  0.0063841  2564.874   <2e-16 ***\nORIGIN_GRID_ID1264        15.2491561  0.0143179  1065.042   <2e-16 ***\nORIGIN_GRID_ID1265        14.6532400  0.0182108   804.644   <2e-16 ***\nORIGIN_GRID_ID1266        16.4057122  0.0083747  1958.965   <2e-16 ***\nORIGIN_GRID_ID1267        14.3323530  0.0332455   431.106   <2e-16 ***\nORIGIN_GRID_ID1272        12.0125320  0.1474567    81.465   <2e-16 ***\nORIGIN_GRID_ID1273        16.0072866  0.0133147  1202.230   <2e-16 ***\nORIGIN_GRID_ID1277        17.9268958  0.0044832  3998.641   <2e-16 ***\nORIGIN_GRID_ID1278        15.5984230  0.0149741  1041.694   <2e-16 ***\nORIGIN_GRID_ID1283        17.4750464  0.0046903  3725.801   <2e-16 ***\nORIGIN_GRID_ID1284        16.8390635  0.0055147  3053.495   <2e-16 ***\nORIGIN_GRID_ID1285        17.5011002  0.0041522  4214.911   <2e-16 ***\nORIGIN_GRID_ID1286        15.6079102  0.0121731  1282.167   <2e-16 ***\nORIGIN_GRID_ID1289        13.8291984  0.0543602   254.399   <2e-16 ***\nORIGIN_GRID_ID1293        13.4836384  0.0822287   163.977   <2e-16 ***\nORIGIN_GRID_ID1294        17.6160698  0.0065529  2688.291   <2e-16 ***\nORIGIN_GRID_ID1295        15.1319287  0.0227239   665.905   <2e-16 ***\nORIGIN_GRID_ID1298        16.9168831  0.0073225  2310.246   <2e-16 ***\nORIGIN_GRID_ID1299        17.5560434  0.0065486  2680.889   <2e-16 ***\nORIGIN_GRID_ID1304        17.4475747  0.0044806  3894.020   <2e-16 ***\nORIGIN_GRID_ID1305        16.8355117  0.0048918  3441.596   <2e-16 ***\nORIGIN_GRID_ID1307        12.7523195  0.0534180   238.727   <2e-16 ***\nORIGIN_GRID_ID1308        16.4931691  0.0071163  2317.665   <2e-16 ***\nORIGIN_GRID_ID1310        11.8443969  0.2357132    50.249   <2e-16 ***\nORIGIN_GRID_ID1316        14.1034330  0.0375950   375.142   <2e-16 ***\nORIGIN_GRID_ID1317        15.9725869  0.0123278  1295.658   <2e-16 ***\nORIGIN_GRID_ID1318        15.2630826  0.0175718   868.614   <2e-16 ***\nORIGIN_GRID_ID1319        18.1534440  0.0043023  4219.506   <2e-16 ***\nORIGIN_GRID_ID1320        16.9359819  0.0092557  1829.797   <2e-16 ***\nORIGIN_GRID_ID1325        15.0968783  0.0137225  1100.153   <2e-16 ***\nORIGIN_GRID_ID1326        17.0018469  0.0047504  3579.035   <2e-16 ***\nORIGIN_GRID_ID1327        16.6271780  0.0053683  3097.271   <2e-16 ***\nORIGIN_GRID_ID1328        15.1218931  0.0112606  1342.900   <2e-16 ***\nORIGIN_GRID_ID1329        15.5556712  0.0132047  1178.045   <2e-16 ***\nORIGIN_GRID_ID1330        16.3714381  0.0091529  1788.661   <2e-16 ***\nORIGIN_GRID_ID1331        11.3039077  0.3333400    33.911   <2e-16 ***\nORIGIN_GRID_ID1333        15.6004291  0.0134669  1158.426   <2e-16 ***\nORIGIN_GRID_ID1334        15.8865608  0.0125150  1269.397   <2e-16 ***\nORIGIN_GRID_ID1335        15.3870509  0.0181481   847.858   <2e-16 ***\nORIGIN_GRID_ID1336        12.9630002  0.1386959    93.463   <2e-16 ***\nORIGIN_GRID_ID1337        13.4023439  0.0583662   229.625   <2e-16 ***\nORIGIN_GRID_ID1338        12.0729114  0.1170603   103.134   <2e-16 ***\nORIGIN_GRID_ID1339        17.9820689  0.0043399  4143.444   <2e-16 ***\nORIGIN_GRID_ID1340        16.5002487  0.0096601  1708.085   <2e-16 ***\nORIGIN_GRID_ID1341        13.6662040  0.2236187    61.114   <2e-16 ***\nORIGIN_GRID_ID1346        16.4588634  0.0071532  2300.921   <2e-16 ***\nORIGIN_GRID_ID1347        17.4091371  0.0041156  4230.085   <2e-16 ***\nORIGIN_GRID_ID1348        15.6736325  0.0074603  2100.950   <2e-16 ***\nORIGIN_GRID_ID1349        15.4908038  0.0097021  1596.648   <2e-16 ***\nORIGIN_GRID_ID1350        15.9203914  0.0118226  1346.607   <2e-16 ***\nORIGIN_GRID_ID1353        15.6684748  0.0109038  1436.968   <2e-16 ***\nORIGIN_GRID_ID1354        15.4181140  0.0139284  1106.955   <2e-16 ***\nORIGIN_GRID_ID1355        16.3100210  0.0092426  1764.654   <2e-16 ***\nORIGIN_GRID_ID1357        15.4145943  0.0206915   744.972   <2e-16 ***\nORIGIN_GRID_ID1358        16.6613082  0.0081435  2045.959   <2e-16 ***\nORIGIN_GRID_ID1359        17.2341963  0.0057723  2985.661   <2e-16 ***\nORIGIN_GRID_ID1360        17.3657711  0.0058648  2961.018   <2e-16 ***\nORIGIN_GRID_ID1361        18.3384263  0.0043988  4168.999   <2e-16 ***\nORIGIN_GRID_ID1362        14.7306459  0.0415464   354.559   <2e-16 ***\nORIGIN_GRID_ID1368        15.2840608  0.0097287  1571.022   <2e-16 ***\nORIGIN_GRID_ID1369        15.0033133  0.0105288  1424.975   <2e-16 ***\nORIGIN_GRID_ID1370        16.2730420  0.0059278  2745.193   <2e-16 ***\nORIGIN_GRID_ID1371        15.6654447  0.0112668  1390.412   <2e-16 ***\nORIGIN_GRID_ID1372        15.3660436  0.0140142  1096.463   <2e-16 ***\nORIGIN_GRID_ID1373        13.3268447  0.0527534   252.626   <2e-16 ***\nORIGIN_GRID_ID1374        15.1890676  0.0130282  1165.862   <2e-16 ***\nORIGIN_GRID_ID1375        16.6798721  0.0084530  1973.257   <2e-16 ***\nORIGIN_GRID_ID1376        16.0205479  0.0138804  1154.183   <2e-16 ***\nORIGIN_GRID_ID1379        14.5357689  0.0363150   400.269   <2e-16 ***\nORIGIN_GRID_ID1380        18.2832132  0.0036581  4998.028   <2e-16 ***\nORIGIN_GRID_ID1381        17.9489014  0.0042418  4231.440   <2e-16 ***\nORIGIN_GRID_ID1382        17.5304248  0.0066711  2627.808   <2e-16 ***\nORIGIN_GRID_ID1383        15.0687617  0.0257348   585.540   <2e-16 ***\nORIGIN_GRID_ID1388        15.7740261  0.0076984  2049.003   <2e-16 ***\nORIGIN_GRID_ID1389        14.4490867  0.0128185  1127.208   <2e-16 ***\nORIGIN_GRID_ID1390        15.5434072  0.0079066  1965.869   <2e-16 ***\nORIGIN_GRID_ID1391        15.6088994  0.0086917  1795.847   <2e-16 ***\nORIGIN_GRID_ID1392        15.0702693  0.0190168   792.473   <2e-16 ***\nORIGIN_GRID_ID1393        14.6447975  0.0164810   888.588   <2e-16 ***\nORIGIN_GRID_ID1394        15.9157392  0.0084716  1878.728   <2e-16 ***\nORIGIN_GRID_ID1395        15.9736727  0.0083850  1905.024   <2e-16 ***\nORIGIN_GRID_ID1396        17.1392672  0.0055988  3061.252   <2e-16 ***\nORIGIN_GRID_ID1397        17.1961585  0.0057206  3006.021   <2e-16 ***\nORIGIN_GRID_ID1398        16.2287113  0.0120015  1352.227   <2e-16 ***\nORIGIN_GRID_ID1400        17.4333254  0.0069822  2496.810   <2e-16 ***\nORIGIN_GRID_ID1401        17.6693474  0.0044579  3963.570   <2e-16 ***\nORIGIN_GRID_ID1402        17.8117647  0.0048446  3676.643   <2e-16 ***\nORIGIN_GRID_ID1404        17.4338300  0.0157244  1108.713   <2e-16 ***\nORIGIN_GRID_ID1410        15.2351229  0.0088422  1722.999   <2e-16 ***\nORIGIN_GRID_ID1411        15.1489547  0.0091401  1657.420   <2e-16 ***\nORIGIN_GRID_ID1412        15.5189146  0.0074656  2078.722   <2e-16 ***\nORIGIN_GRID_ID1413        16.5200490  0.0058100  2843.406   <2e-16 ***\nORIGIN_GRID_ID1414        16.0531417  0.0072008  2229.367   <2e-16 ***\nORIGIN_GRID_ID1415        15.5938115  0.0103046  1513.281   <2e-16 ***\nORIGIN_GRID_ID1416        16.2779757  0.0076286  2133.821   <2e-16 ***\nORIGIN_GRID_ID1417        16.2761064  0.0072872  2233.509   <2e-16 ***\nORIGIN_GRID_ID1418        17.1815943  0.0053613  3204.737   <2e-16 ***\nORIGIN_GRID_ID1419        16.6907906  0.0072729  2294.945   <2e-16 ***\nORIGIN_GRID_ID1422        17.7235320  0.0054071  3277.822   <2e-16 ***\nORIGIN_GRID_ID1423        18.7124637  0.0037154  5036.467   <2e-16 ***\nORIGIN_GRID_ID1430        15.8803753  0.0069341  2290.192   <2e-16 ***\nORIGIN_GRID_ID1431        15.8410955  0.0059096  2680.558   <2e-16 ***\nORIGIN_GRID_ID1432        15.9875862  0.0056773  2816.057   <2e-16 ***\nORIGIN_GRID_ID1433        14.7213046  0.0183009   804.405   <2e-16 ***\nORIGIN_GRID_ID1434        16.4591562  0.0061271  2686.288   <2e-16 ***\nORIGIN_GRID_ID1435        17.1015750  0.0046403  3685.477   <2e-16 ***\nORIGIN_GRID_ID1436        14.0108708  0.0261326   536.144   <2e-16 ***\nORIGIN_GRID_ID1437        17.2368138  0.0049619  3473.813   <2e-16 ***\nORIGIN_GRID_ID1438        17.6533563  0.0039049  4520.864   <2e-16 ***\nORIGIN_GRID_ID1439        18.3175407  0.0035155  5210.445   <2e-16 ***\nORIGIN_GRID_ID1440        14.7490518  0.0216425   681.486   <2e-16 ***\nORIGIN_GRID_ID1442        17.3098980  0.0071213  2430.710   <2e-16 ***\nORIGIN_GRID_ID1443        18.3898641  0.0040658  4523.067   <2e-16 ***\nORIGIN_GRID_ID1444        17.6383903  0.0079052  2231.234   <2e-16 ***\nORIGIN_GRID_ID1452        14.9593968  0.0093231  1604.558   <2e-16 ***\nORIGIN_GRID_ID1453        15.1924928  0.0089950  1689.000   <2e-16 ***\nORIGIN_GRID_ID1454        14.2334894  0.0213080   667.987   <2e-16 ***\nORIGIN_GRID_ID1455        15.6970803  0.0092916  1689.386   <2e-16 ***\nORIGIN_GRID_ID1456        16.4522848  0.0066709  2466.269   <2e-16 ***\nORIGIN_GRID_ID1457        17.3909938  0.0046151  3768.295   <2e-16 ***\nORIGIN_GRID_ID1458        17.4836055  0.0042198  4143.226   <2e-16 ***\nORIGIN_GRID_ID1459        17.0888709  0.0051440  3322.077   <2e-16 ***\nORIGIN_GRID_ID1460        16.3151736  0.0072169  2260.676   <2e-16 ***\nORIGIN_GRID_ID1461        15.0664903  0.0180286   835.701   <2e-16 ***\nORIGIN_GRID_ID1464        18.6595210  0.0038671  4825.203   <2e-16 ***\nORIGIN_GRID_ID1465        18.2874288  0.0050610  3613.438   <2e-16 ***\nORIGIN_GRID_ID1472        13.5147737  0.0235105   574.840   <2e-16 ***\nORIGIN_GRID_ID1473        14.5113210  0.0118085  1228.884   <2e-16 ***\nORIGIN_GRID_ID1474        15.6861892  0.0063172  2483.087   <2e-16 ***\nORIGIN_GRID_ID1475        16.7810662  0.0049252  3407.218   <2e-16 ***\nORIGIN_GRID_ID1476        16.3180706  0.0070697  2308.175   <2e-16 ***\nORIGIN_GRID_ID1477        17.8965736  0.0033903  5278.816   <2e-16 ***\nORIGIN_GRID_ID1478        16.3101763  0.0070750  2305.334   <2e-16 ***\nORIGIN_GRID_ID1479        16.5567289  0.0063584  2603.913   <2e-16 ***\nORIGIN_GRID_ID1480        18.2914780  0.0032819  5573.519   <2e-16 ***\nORIGIN_GRID_ID1481        15.8950884  0.0107565  1477.719   <2e-16 ***\nORIGIN_GRID_ID1482        15.7180967  0.0144542  1087.441   <2e-16 ***\nORIGIN_GRID_ID1485        18.1315500  0.0052061  3482.720   <2e-16 ***\nORIGIN_GRID_ID1494        14.6979676  0.0142563  1030.984   <2e-16 ***\nORIGIN_GRID_ID1495        14.9830559  0.0091972  1629.096   <2e-16 ***\nORIGIN_GRID_ID1496        16.1616034  0.0053396  3026.761   <2e-16 ***\nORIGIN_GRID_ID1497        16.7090124  0.0056938  2934.583   <2e-16 ***\nORIGIN_GRID_ID1498        17.2156326  0.0045827  3756.681   <2e-16 ***\nORIGIN_GRID_ID1499        17.5238718  0.0041259  4247.327   <2e-16 ***\nORIGIN_GRID_ID1500        17.4643857  0.0057799  3021.597   <2e-16 ***\nORIGIN_GRID_ID1501        17.5808901  0.0041678  4218.285   <2e-16 ***\nORIGIN_GRID_ID1502        17.2173553  0.0051689  3330.948   <2e-16 ***\nORIGIN_GRID_ID1506        12.8507580  0.1195432   107.499   <2e-16 ***\nORIGIN_GRID_ID1515        13.7973889  0.0260764   529.114   <2e-16 ***\nORIGIN_GRID_ID1516        15.3442328  0.0080525  1905.522   <2e-16 ***\nORIGIN_GRID_ID1517        15.8449939  0.0074663  2122.212   <2e-16 ***\nORIGIN_GRID_ID1518        16.1415084  0.0080100  2015.167   <2e-16 ***\nORIGIN_GRID_ID1519        17.6689961  0.0052478  3366.924   <2e-16 ***\nORIGIN_GRID_ID1520        16.3021631  0.0074225  2196.325   <2e-16 ***\nORIGIN_GRID_ID1521        15.6400889  0.0112459  1390.742   <2e-16 ***\nORIGIN_GRID_ID1522        17.8928311  0.0038908  4598.697   <2e-16 ***\nORIGIN_GRID_ID1523        16.2192624  0.0163322   993.088   <2e-16 ***\nORIGIN_GRID_ID1524        16.4545329  0.0102114  1611.387   <2e-16 ***\nORIGIN_GRID_ID1527        16.0783527  0.0167999   957.049   <2e-16 ***\nORIGIN_GRID_ID1535        12.2668793  0.0995248   123.255   <2e-16 ***\nORIGIN_GRID_ID1536        13.2074040  0.0354155   372.927   <2e-16 ***\nORIGIN_GRID_ID1537        13.7853121  0.0205426   671.058   <2e-16 ***\nORIGIN_GRID_ID1538        15.6766471  0.0070475  2224.439   <2e-16 ***\nORIGIN_GRID_ID1539        16.3345797  0.0056782  2876.732   <2e-16 ***\nORIGIN_GRID_ID1540        17.1228504  0.0047622  3595.608   <2e-16 ***\nORIGIN_GRID_ID1541        18.3669932  0.0054486  3370.951   <2e-16 ***\nORIGIN_GRID_ID1542        15.3819173  0.0162279   947.868   <2e-16 ***\nORIGIN_GRID_ID1543        15.7542749  0.0227144   693.581   <2e-16 ***\nORIGIN_GRID_ID1544        17.1730920  0.0068948  2490.739   <2e-16 ***\nORIGIN_GRID_ID1547        13.9260927  0.0634116   219.614   <2e-16 ***\nORIGIN_GRID_ID1556        13.7388718  0.0690398   198.999   <2e-16 ***\nORIGIN_GRID_ID1557        13.1207730  0.0375865   349.082   <2e-16 ***\nORIGIN_GRID_ID1558        14.4641690  0.0208265   694.507   <2e-16 ***\nORIGIN_GRID_ID1559        16.4087418  0.0053926  3042.853   <2e-16 ***\nORIGIN_GRID_ID1560        17.3903500  0.0040869  4255.115   <2e-16 ***\nORIGIN_GRID_ID1561        17.6973703  0.0049516  3574.047   <2e-16 ***\nORIGIN_GRID_ID1562        14.6073765  0.0215940   676.456   <2e-16 ***\nORIGIN_GRID_ID1563        16.2442491  0.0077791  2088.186   <2e-16 ***\nORIGIN_GRID_ID1564        15.4438127  0.0141634  1090.406   <2e-16 ***\nORIGIN_GRID_ID1565        15.4943511  0.0145833  1062.472   <2e-16 ***\nORIGIN_GRID_ID1566        15.0035428  0.0208648   719.083   <2e-16 ***\nORIGIN_GRID_ID1567        12.9440168  0.0953687   135.726   <2e-16 ***\nORIGIN_GRID_ID1568        13.5629170  0.0677602   200.160   <2e-16 ***\nORIGIN_GRID_ID1578        10.7414127  0.2582065    41.600   <2e-16 ***\nORIGIN_GRID_ID1580        14.9628073  0.0176891   845.876   <2e-16 ***\nORIGIN_GRID_ID1581        13.8963794  0.0220154   631.212   <2e-16 ***\nORIGIN_GRID_ID1582        17.2185734  0.0043257  3980.524   <2e-16 ***\nORIGIN_GRID_ID1583        15.8950566  0.0215038   739.176   <2e-16 ***\nORIGIN_GRID_ID1584        15.9549406  0.0110319  1446.252   <2e-16 ***\nORIGIN_GRID_ID1585        16.2955838  0.0098932  1647.157   <2e-16 ***\nORIGIN_GRID_ID1586        15.4154192  0.0139705  1103.423   <2e-16 ***\nORIGIN_GRID_ID1589        13.1037199  0.0995267   131.660   <2e-16 ***\nORIGIN_GRID_ID1590        13.5740686  0.0703956   192.826   <2e-16 ***\nORIGIN_GRID_ID1600        17.0695739  0.0101699  1678.447   <2e-16 ***\nORIGIN_GRID_ID1601        15.6237697  0.0081704  1912.247   <2e-16 ***\nORIGIN_GRID_ID1602        16.6270190  0.0065424  2541.432   <2e-16 ***\nORIGIN_GRID_ID1603        17.4957952  0.0043904  3985.036   <2e-16 ***\nORIGIN_GRID_ID1604        15.9614359  0.0084373  1891.764   <2e-16 ***\nORIGIN_GRID_ID1605        17.3248410  0.0046388  3734.801   <2e-16 ***\nORIGIN_GRID_ID1606        16.9860016  0.0098900  1717.493   <2e-16 ***\nORIGIN_GRID_ID1607        16.0951157  0.0098553  1633.147   <2e-16 ***\nORIGIN_GRID_ID1608        17.6770689  0.0048076  3676.920   <2e-16 ***\nORIGIN_GRID_ID1609        17.4353525  0.0059252  2942.570   <2e-16 ***\nORIGIN_GRID_ID1610        14.0745559  0.0668522   210.532   <2e-16 ***\nORIGIN_GRID_ID1622        15.7625061  0.0222527   708.343   <2e-16 ***\nORIGIN_GRID_ID1623        17.0443808  0.0045066  3782.095   <2e-16 ***\nORIGIN_GRID_ID1624        15.9792716  0.0086645  1844.232   <2e-16 ***\nORIGIN_GRID_ID1625        17.3173097  0.0050355  3439.069   <2e-16 ***\nORIGIN_GRID_ID1626        17.8794626  0.0037443  4775.073   <2e-16 ***\nORIGIN_GRID_ID1627        16.2890561  0.0075871  2146.940   <2e-16 ***\nORIGIN_GRID_ID1628        18.0724374  0.0038004  4755.436   <2e-16 ***\nORIGIN_GRID_ID1629        16.9179640  0.0070438  2401.820   <2e-16 ***\nORIGIN_GRID_ID1630        16.7650187  0.0079886  2098.624   <2e-16 ***\nORIGIN_GRID_ID1631        13.3046367  0.0702209   189.468   <2e-16 ***\nORIGIN_GRID_ID1642        14.7707906  0.0303865   486.097   <2e-16 ***\nORIGIN_GRID_ID1643        16.9491436  0.0047668  3555.634   <2e-16 ***\nORIGIN_GRID_ID1644        15.0231224  0.0173147   867.650   <2e-16 ***\nORIGIN_GRID_ID1645        16.5620306  0.0065182  2540.905   <2e-16 ***\nORIGIN_GRID_ID1646        16.4668462  0.0094494  1742.628   <2e-16 ***\nORIGIN_GRID_ID1647        16.6047773  0.0062327  2664.137   <2e-16 ***\nORIGIN_GRID_ID1648        17.1696640  0.0051822  3313.208   <2e-16 ***\nORIGIN_GRID_ID1649        17.9054587  0.0040334  4439.261   <2e-16 ***\nORIGIN_GRID_ID1650        17.6309211  0.0055051  3202.668   <2e-16 ***\nORIGIN_GRID_ID1664        11.9737262  0.1474550    81.203   <2e-16 ***\nORIGIN_GRID_ID1665        17.2311991  0.0043739  3939.539   <2e-16 ***\nORIGIN_GRID_ID1666        15.9812745  0.0075814  2107.969   <2e-16 ***\nORIGIN_GRID_ID1667        17.1926925  0.0108682  1581.932   <2e-16 ***\nORIGIN_GRID_ID1668        17.2254454  0.0050337  3422.026   <2e-16 ***\nORIGIN_GRID_ID1670        18.0524064  0.0038126  4734.907   <2e-16 ***\nORIGIN_GRID_ID1671        18.5969241  0.0053266  3491.305   <2e-16 ***\nORIGIN_GRID_ID1672        17.6978414  0.0059516  2973.603   <2e-16 ***\nORIGIN_GRID_ID1684        16.2710668  0.0136857  1188.912   <2e-16 ***\nORIGIN_GRID_ID1685        16.8344316  0.0057030  2951.867   <2e-16 ***\nORIGIN_GRID_ID1686        16.6469488  0.0057551  2892.535   <2e-16 ***\nORIGIN_GRID_ID1687        16.5999421  0.0078216  2122.320   <2e-16 ***\nORIGIN_GRID_ID1688        15.9372845  0.0090901  1753.261   <2e-16 ***\nORIGIN_GRID_ID1689        15.3893192  0.0135694  1134.122   <2e-16 ***\nORIGIN_GRID_ID1690        17.0447163  0.0068254  2497.258   <2e-16 ***\nORIGIN_GRID_ID1691        17.6050203  0.0047169  3732.338   <2e-16 ***\nORIGIN_GRID_ID1692        16.7287393  0.0084918  1969.981   <2e-16 ***\nORIGIN_GRID_ID1706        16.7420287  0.0067616  2476.029   <2e-16 ***\nORIGIN_GRID_ID1707        16.6833061  0.0054200  3078.108   <2e-16 ***\nORIGIN_GRID_ID1708        17.3364541  0.0044729  3875.855   <2e-16 ***\nORIGIN_GRID_ID1709        16.4735307  0.0069583  2367.479   <2e-16 ***\nORIGIN_GRID_ID1710        17.6138773  0.0045756  3849.519   <2e-16 ***\nORIGIN_GRID_ID1711        17.2263867  0.0055178  3121.943   <2e-16 ***\nORIGIN_GRID_ID1712        17.9170753  0.0038147  4696.905   <2e-16 ***\nORIGIN_GRID_ID1713        15.3915583  0.0136571  1127.003   <2e-16 ***\nORIGIN_GRID_ID1714        17.8026448  0.0049738  3579.318   <2e-16 ***\nORIGIN_GRID_ID1727        16.9509231  0.0056716  2988.717   <2e-16 ***\nORIGIN_GRID_ID1728        16.8939841  0.0053120  3180.338   <2e-16 ***\nORIGIN_GRID_ID1729        16.5333646  0.0062203  2657.971   <2e-16 ***\nORIGIN_GRID_ID1730        14.6331953  0.0233272   627.301   <2e-16 ***\nORIGIN_GRID_ID1731        17.2199949  0.0055100  3125.233   <2e-16 ***\nORIGIN_GRID_ID1732        17.6535933  0.0041253  4279.318   <2e-16 ***\nORIGIN_GRID_ID1733        17.3656367  0.0048346  3591.973   <2e-16 ***\nORIGIN_GRID_ID1734        17.5098099  0.0046313  3780.753   <2e-16 ***\nORIGIN_GRID_ID1735        18.5685663  0.0060306  3079.033   <2e-16 ***\nORIGIN_GRID_ID1748        15.7210032  0.0106369  1477.975   <2e-16 ***\nORIGIN_GRID_ID1749        16.6563438  0.0056068  2970.715   <2e-16 ***\nORIGIN_GRID_ID1750        15.8840976  0.0080414  1975.293   <2e-16 ***\nORIGIN_GRID_ID1751        15.8374483  0.0113069  1400.689   <2e-16 ***\nORIGIN_GRID_ID1753        17.7543898  0.0042548  4172.807   <2e-16 ***\nORIGIN_GRID_ID1754        17.9551984  0.0037754  4755.852   <2e-16 ***\nORIGIN_GRID_ID1755        17.4129024  0.0047141  3693.812   <2e-16 ***\nORIGIN_GRID_ID1756        17.1963193  0.0056645  3035.825   <2e-16 ***\nORIGIN_GRID_ID1757        14.5842184  0.0337151   432.572   <2e-16 ***\nORIGIN_GRID_ID1769        16.5471442  0.0065281  2534.767   <2e-16 ***\nORIGIN_GRID_ID1770        16.4583910  0.0107983  1524.159   <2e-16 ***\nORIGIN_GRID_ID1771        15.5105255  0.0116498  1331.396   <2e-16 ***\nORIGIN_GRID_ID1772        15.1895957  0.0268473   565.778   <2e-16 ***\nORIGIN_GRID_ID1774        17.4074013  0.0046984  3704.958   <2e-16 ***\nORIGIN_GRID_ID1775        16.9112113  0.0058896  2871.362   <2e-16 ***\nORIGIN_GRID_ID1776        17.9031157  0.0038288  4675.857   <2e-16 ***\nORIGIN_GRID_ID1777        17.9497827  0.0042139  4259.643   <2e-16 ***\nORIGIN_GRID_ID1778        16.9842143  0.0117141  1449.897   <2e-16 ***\nORIGIN_GRID_ID1790        17.1928929  0.0054629  3147.199   <2e-16 ***\nORIGIN_GRID_ID1791        16.5539607  0.0070481  2348.700   <2e-16 ***\nORIGIN_GRID_ID1792        16.7870476  0.0072420  2318.027   <2e-16 ***\nORIGIN_GRID_ID1793        14.9716042  0.0159229   940.255   <2e-16 ***\nORIGIN_GRID_ID1794        15.5461081  0.0286329   542.945   <2e-16 ***\nORIGIN_GRID_ID1795        14.2471821  0.0344511   413.547   <2e-16 ***\nORIGIN_GRID_ID1796        17.7159282  0.0046868  3779.964   <2e-16 ***\nORIGIN_GRID_ID1797        17.6575413  0.0042777  4127.799   <2e-16 ***\nORIGIN_GRID_ID1798        17.7840567  0.0042308  4203.443   <2e-16 ***\nORIGIN_GRID_ID1799        16.7422829  0.0078873  2122.691   <2e-16 ***\nORIGIN_GRID_ID1800        15.9362698  0.0265277   600.740   <2e-16 ***\nORIGIN_GRID_ID1811        16.3593570  0.0079832  2049.214   <2e-16 ***\nORIGIN_GRID_ID1812        17.5666234  0.0041097  4274.466   <2e-16 ***\nORIGIN_GRID_ID1813        17.5075438  0.0043319  4041.574   <2e-16 ***\nORIGIN_GRID_ID1817        17.4270349  0.0056062  3108.550   <2e-16 ***\nORIGIN_GRID_ID1818        17.4242568  0.0047780  3646.800   <2e-16 ***\nORIGIN_GRID_ID1819        17.7644451  0.0040688  4366.053   <2e-16 ***\nORIGIN_GRID_ID1820        14.5647792  0.0363780   400.373   <2e-16 ***\nORIGIN_GRID_ID1832        17.0242434  0.0059954  2839.555   <2e-16 ***\nORIGIN_GRID_ID1833        16.5954016  0.0064923  2556.165   <2e-16 ***\nORIGIN_GRID_ID1834        17.1583185  0.0049780  3446.843   <2e-16 ***\nORIGIN_GRID_ID1835        16.5041167  0.0079221  2083.310   <2e-16 ***\nORIGIN_GRID_ID1837        13.8177569  0.0631550   218.791   <2e-16 ***\nORIGIN_GRID_ID1839        16.7130871  0.0076324  2189.747   <2e-16 ***\nORIGIN_GRID_ID1840        18.6368947  0.0031947  5833.621   <2e-16 ***\nORIGIN_GRID_ID1841        13.7668985  0.0459755   299.440   <2e-16 ***\nORIGIN_GRID_ID1842        17.4790411  0.0111617  1565.980   <2e-16 ***\nORIGIN_GRID_ID1853        17.0123885  0.0054216  3137.879   <2e-16 ***\nORIGIN_GRID_ID1854        17.2990224  0.0051625  3350.913   <2e-16 ***\nORIGIN_GRID_ID1855        17.6458332  0.0045743  3857.632   <2e-16 ***\nORIGIN_GRID_ID1858        15.3712350  0.0269869   569.581   <2e-16 ***\nORIGIN_GRID_ID1860        17.8363741  0.0087557  2037.117   <2e-16 ***\nORIGIN_GRID_ID1861        17.6240406  0.0048881  3605.511   <2e-16 ***\nORIGIN_GRID_ID1874        17.1880439  0.0065774  2613.207   <2e-16 ***\nORIGIN_GRID_ID1875        15.6330239  0.0138301  1130.365   <2e-16 ***\nORIGIN_GRID_ID1876        17.5045639  0.0107292  1631.490   <2e-16 ***\nORIGIN_GRID_ID1877        17.2880298  0.0051941  3328.396   <2e-16 ***\nORIGIN_GRID_ID1880        14.1332340  0.0491332   287.651   <2e-16 ***\nORIGIN_GRID_ID1882        17.5396611  0.0052676  3329.697   <2e-16 ***\nORIGIN_GRID_ID1883        17.3394199  0.0090068  1925.138   <2e-16 ***\nORIGIN_GRID_ID1895        17.2595298  0.0052287  3300.915   <2e-16 ***\nORIGIN_GRID_ID1896        15.8360561  0.0102226  1549.118   <2e-16 ***\nORIGIN_GRID_ID1897        16.6364825  0.0094912  1752.831   <2e-16 ***\nORIGIN_GRID_ID1898        12.0167369  0.1507712    79.702   <2e-16 ***\nORIGIN_GRID_ID1901        13.8675994  0.0723917   191.563   <2e-16 ***\nORIGIN_GRID_ID1903        16.8043893  0.0090263  1861.704   <2e-16 ***\nORIGIN_GRID_ID1917        15.9001026  0.0102101  1557.284   <2e-16 ***\nORIGIN_GRID_ID1918        17.7511946  0.0061222  2899.481   <2e-16 ***\nORIGIN_GRID_ID1919        17.2382339  0.0055910  3083.224   <2e-16 ***\nORIGIN_GRID_ID1922        15.2282614  0.0280642   542.622   <2e-16 ***\nORIGIN_GRID_ID1924        16.7412794  0.0097097  1724.188   <2e-16 ***\nORIGIN_GRID_ID1937        16.6541469  0.0074564  2233.535   <2e-16 ***\nORIGIN_GRID_ID1938        17.5247129  0.0048193  3636.363   <2e-16 ***\nORIGIN_GRID_ID1939        18.1237378  0.0043548  4161.808   <2e-16 ***\nORIGIN_GRID_ID1942        14.3352507  0.0461759   310.449   <2e-16 ***\nORIGIN_GRID_ID1959        16.3189815  0.0092444  1765.280   <2e-16 ***\nORIGIN_GRID_ID1960        18.2813100  0.0033553  5448.481   <2e-16 ***\nORIGIN_GRID_ID1961        16.9762357  0.0073812  2299.920   <2e-16 ***\nORIGIN_GRID_ID1962        17.9720015  0.0046967  3826.533   <2e-16 ***\nORIGIN_GRID_ID1964        13.6311012  0.0860908   158.334   <2e-16 ***\nORIGIN_GRID_ID1979        16.6060680  0.0085581  1940.398   <2e-16 ***\nORIGIN_GRID_ID1980        15.1236224  0.0149657  1010.553   <2e-16 ***\nORIGIN_GRID_ID1981        17.6391431  0.0046495  3793.760   <2e-16 ***\nORIGIN_GRID_ID1982        16.4978157  0.0117828  1400.155   <2e-16 ***\nORIGIN_GRID_ID1983        17.9967650  0.0046988  3830.059   <2e-16 ***\nORIGIN_GRID_ID1984        16.6773413  0.0080828  2063.318   <2e-16 ***\nORIGIN_GRID_ID1985        17.2609082  0.0065968  2616.576   <2e-16 ***\nORIGIN_GRID_ID2001        16.9037321  0.0063588  2658.304   <2e-16 ***\nORIGIN_GRID_ID2002        17.6610070  0.0042161  4188.907   <2e-16 ***\nORIGIN_GRID_ID2003        17.2921832  0.0054293  3184.994   <2e-16 ***\nORIGIN_GRID_ID2004        18.0391720  0.0045361  3976.806   <2e-16 ***\nORIGIN_GRID_ID2005        17.9131257  0.0044519  4023.685   <2e-16 ***\nORIGIN_GRID_ID2006        16.4690302  0.0098575  1670.703   <2e-16 ***\nORIGIN_GRID_ID2007        15.8694593  0.0168049   944.337   <2e-16 ***\nORIGIN_GRID_ID2022        17.5005651  0.0063389  2760.819   <2e-16 ***\nORIGIN_GRID_ID2023        17.9120537  0.0040756  4394.975   <2e-16 ***\nORIGIN_GRID_ID2024        17.2628946  0.0052008  3319.261   <2e-16 ***\nORIGIN_GRID_ID2025        17.4735115  0.0049332  3542.004   <2e-16 ***\nORIGIN_GRID_ID2026        16.1347271  0.0120835  1335.270   <2e-16 ***\nORIGIN_GRID_ID2027        18.1212867  0.0043055  4208.873   <2e-16 ***\nORIGIN_GRID_ID2043        16.6879677  0.0081775  2040.723   <2e-16 ***\nORIGIN_GRID_ID2044        17.6077734  0.0046067  3822.178   <2e-16 ***\nORIGIN_GRID_ID2045        13.5550127  0.0785970   172.462   <2e-16 ***\nORIGIN_GRID_ID2046        17.5167404  0.0043095  4064.696   <2e-16 ***\nORIGIN_GRID_ID2047        17.4952075  0.0054914  3185.905   <2e-16 ***\nORIGIN_GRID_ID2048        17.6971579  0.0049189  3597.769   <2e-16 ***\nORIGIN_GRID_ID2049        16.6779509  0.0138852  1201.135   <2e-16 ***\nORIGIN_GRID_ID2064        17.5089886  0.0052749  3319.300   <2e-16 ***\nORIGIN_GRID_ID2065        16.1100340  0.0091160  1767.217   <2e-16 ***\nORIGIN_GRID_ID2066        15.6122904  0.0257041   607.384   <2e-16 ***\nORIGIN_GRID_ID2067        18.6393277  0.0031434  5929.600   <2e-16 ***\nORIGIN_GRID_ID2068        17.6285673  0.0072394  2435.086   <2e-16 ***\nORIGIN_GRID_ID2069        17.5284662  0.0057721  3036.740   <2e-16 ***\nORIGIN_GRID_ID2085        16.2629625  0.0101925  1595.584   <2e-16 ***\nORIGIN_GRID_ID2086        17.8239975  0.0043962  4054.437   <2e-16 ***\nORIGIN_GRID_ID2087        16.5184947  0.0078080  2115.583   <2e-16 ***\nORIGIN_GRID_ID2088        17.2022124  0.0049843  3451.277   <2e-16 ***\nORIGIN_GRID_ID2089        16.9678891  0.0068097  2491.736   <2e-16 ***\nORIGIN_GRID_ID2090        18.1837144  0.0038338  4743.017   <2e-16 ***\nORIGIN_GRID_ID2091        13.8541986  0.0739509   187.343   <2e-16 ***\nORIGIN_GRID_ID2105        14.1836995  0.1147348   123.622   <2e-16 ***\nORIGIN_GRID_ID2106        14.8094041  0.0204125   725.505   <2e-16 ***\nORIGIN_GRID_ID2107        15.8911040  0.0098758  1609.090   <2e-16 ***\nORIGIN_GRID_ID2108        17.1551505  0.0059369  2889.563   <2e-16 ***\nORIGIN_GRID_ID2109        17.4036702  0.0048358  3598.905   <2e-16 ***\nORIGIN_GRID_ID2110        16.9457328  0.0077149  2196.486   <2e-16 ***\nORIGIN_GRID_ID2111        14.5146680  0.0497917   291.508   <2e-16 ***\nORIGIN_GRID_ID2128        15.6875307  0.0152392  1029.417   <2e-16 ***\nORIGIN_GRID_ID2129        15.1939133  0.0163654   928.417   <2e-16 ***\nORIGIN_GRID_ID2130        17.6909429  0.0042216  4190.556   <2e-16 ***\nORIGIN_GRID_ID2131        17.9787007  0.0047572  3779.237   <2e-16 ***\nORIGIN_GRID_ID2132        17.1393335  0.0064317  2664.806   <2e-16 ***\nORIGIN_GRID_ID2148        16.4900128  0.0121730  1354.634   <2e-16 ***\nORIGIN_GRID_ID2149        15.1910551  0.0168166   903.337   <2e-16 ***\nORIGIN_GRID_ID2150        17.6075112  0.0049033  3590.972   <2e-16 ***\nORIGIN_GRID_ID2151        18.0764428  0.0038146  4738.728   <2e-16 ***\nORIGIN_GRID_ID2152        18.2028336  0.0041284  4409.176   <2e-16 ***\nORIGIN_GRID_ID2153        17.7002165  0.0057861  3059.067   <2e-16 ***\nORIGIN_GRID_ID2171        16.5764532  0.0076393  2169.900   <2e-16 ***\nORIGIN_GRID_ID2172        16.8376546  0.0082359  2044.410   <2e-16 ***\nORIGIN_GRID_ID2173        17.2339123  0.0054662  3152.841   <2e-16 ***\nORIGIN_GRID_ID2174        17.6036334  0.0055345  3180.684   <2e-16 ***\nORIGIN_GRID_ID2191        16.4817855  0.0107567  1532.235   <2e-16 ***\nORIGIN_GRID_ID2192        15.9824019  0.0118005  1354.383   <2e-16 ***\nORIGIN_GRID_ID2193        17.0847148  0.0063657  2683.878   <2e-16 ***\nORIGIN_GRID_ID2194        17.3929328  0.0054780  3175.039   <2e-16 ***\nORIGIN_GRID_ID2195        16.7117183  0.0221846   753.301   <2e-16 ***\nORIGIN_GRID_ID2212        13.8702951  0.1037198   133.728   <2e-16 ***\nORIGIN_GRID_ID2213        13.6220699  0.0447684   304.279   <2e-16 ***\nORIGIN_GRID_ID2214        15.0942791  0.0279081   540.857   <2e-16 ***\nORIGIN_GRID_ID2215        17.0419116  0.0072144  2362.196   <2e-16 ***\nORIGIN_GRID_ID2216        16.2013786  0.0113903  1422.382   <2e-16 ***\nORIGIN_GRID_ID2233        13.9021489  0.0494285   281.258   <2e-16 ***\nORIGIN_GRID_ID2234        16.4796078  0.0205518   801.858   <2e-16 ***\nORIGIN_GRID_ID2235        15.9603573  0.0138969  1148.485   <2e-16 ***\nORIGIN_GRID_ID2236        16.0356448  0.0132192  1213.060   <2e-16 ***\nORIGIN_GRID_ID2237        13.6923845  0.0618135   221.511   <2e-16 ***\nORIGIN_GRID_ID2256        14.4848644  0.0444171   326.110   <2e-16 ***\nORIGIN_GRID_ID2257        15.5467066  0.0204216   761.288   <2e-16 ***\nORIGIN_GRID_ID2258        15.2526048  0.0167386   911.224   <2e-16 ***\nORIGIN_GRID_ID2259        14.7932003  0.0397070   372.559   <2e-16 ***\nORIGIN_GRID_ID2277        15.3732724  0.0382693   401.713   <2e-16 ***\nORIGIN_GRID_ID2278        15.9828275  0.0163361   978.377   <2e-16 ***\nORIGIN_GRID_ID2279        15.1474458  0.0206664   732.949   <2e-16 ***\nORIGIN_GRID_ID2280        12.8237993  0.1336462    95.953   <2e-16 ***\nORIGIN_GRID_ID2297        17.3566597  0.0100231  1731.662   <2e-16 ***\nORIGIN_GRID_ID2300        13.5305167  0.0698763   193.635   <2e-16 ***\nORIGIN_GRID_ID2301        15.2413672  0.0201743   755.483   <2e-16 ***\nORIGIN_GRID_ID2318        15.7544839  0.0198843   792.306   <2e-16 ***\nORIGIN_GRID_ID2319        16.6478758  0.0114592  1452.790   <2e-16 ***\nORIGIN_GRID_ID2322        16.3302751  0.0129798  1258.131   <2e-16 ***\nORIGIN_GRID_ID2337        17.4635456  0.0156584  1115.284   <2e-16 ***\nORIGIN_GRID_ID2341        16.9025202  0.0105901  1596.072   <2e-16 ***\nORIGIN_GRID_ID2343        16.0182923  0.0148229  1080.647   <2e-16 ***\nORIGIN_GRID_ID2361        16.7230341  0.0128928  1297.084   <2e-16 ***\nORIGIN_GRID_ID2364        13.1269853  0.0958085   137.013   <2e-16 ***\nORIGIN_GRID_ID2379        17.1982695  0.0168270  1022.061   <2e-16 ***\nORIGIN_GRID_ID2384        16.3012039  0.0175054   931.212   <2e-16 ***\nORIGIN_GRID_ID2405        15.9136476  0.0183564   866.928   <2e-16 ***\nORIGIN_GRID_ID2406        14.6313557  0.0399337   366.391   <2e-16 ***\nORIGIN_GRID_ID2426        16.2648375  0.0332916   488.557   <2e-16 ***\nORIGIN_GRID_ID2427        17.1787551  0.0116163  1478.848   <2e-16 ***\nORIGIN_GRID_ID2505        16.7069445  0.0460461   362.831   <2e-16 ***\nlog(DESTIN_TRAIN_EXIT_CT)  0.4921565  0.0004412  1115.538   <2e-16 ***\nlog(DESTIN_PRESCHOOL_CT)   0.0068710  0.0003498    19.644   <2e-16 ***\nlog(DESTIN_BUSINESS_CT)    0.0698660  0.0002004   348.631   <2e-16 ***\nlog(DESTIN_FINSERV_CT)     0.2382405  0.0002998   794.610   <2e-16 ***\nlog(DESTIN_SCH_CT)         0.2931763  0.0007345   399.161   <2e-16 ***\nlog(dist)                 -1.5064196  0.0002911 -5174.065   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 276215117  on 62120  degrees of freedom\nResidual deviance:  30486339  on 61297  degrees of freedom\nAIC: 30823357\n\nNumber of Fisher Scoring iterations: 7\n\n\n\n\n\nDestination Constrained SIM output\n\nDestination Constrained R-squaredDestination Constrained CoefficientsDestination Constrained Summary\n\n\nThe R-squared value of 0.37 tells us that the explanatory variables are able to explain 37% of the variance in the TRIPS target variable.\n\nCalcRSquared(decSIM$data$TRIPS, decSIM$fitted.values)\n\n[1] 0.3686593\n\n\n\n\nAll the coefficients are statistically significant (refer to next tab).\nThe most influential explanatory variables are distance, origin 5 room count and origin exec count count with coefficients of -1.42, 0.09 and 0.05 respectively.\n\ndecSIM$coefficients[819:828]\n\nlog(ORIGIN_RENTAL_CT)  log(ORIGIN_2ROOM_CT)  log(ORIGIN_3ROOM_CT) \n          0.003331047           0.014482843           0.012321306 \n log(ORIGIN_4ROOM_CT)  log(ORIGIN_5ROOM_CT)   log(ORIGIN_EXEC_CT) \n          0.033286118           0.094080481           0.045384669 \nlog(ORIGIN_STUDIO_CT)             log(dist)                  <NA> \n          0.006125000          -1.416437763                    NA \n                 <NA> \n                   NA \n\n\n\n\n\nsummary(decSIM)\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_GRID_ID + log(ORIGIN_RENTAL_CT) + \n    log(ORIGIN_2ROOM_CT) + log(ORIGIN_3ROOM_CT) + log(ORIGIN_4ROOM_CT) + \n    log(ORIGIN_5ROOM_CT) + log(ORIGIN_EXEC_CT) + log(ORIGIN_STUDIO_CT) + \n    log(dist) - 1, family = poisson(link = \"log\"), data = flow_data1, \n    na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-368.49   -11.54    -5.22     0.82   606.37  \n\nCoefficients:\n                        Estimate Std. Error  z value Pr(>|z|)    \nDESTIN_GRID_ID23       1.608e+01  5.527e-02   290.97   <2e-16 ***\nDESTIN_GRID_ID44       1.733e+01  2.344e-02   739.64   <2e-16 ***\nDESTIN_GRID_ID46       1.641e+01  2.050e-02   800.51   <2e-16 ***\nDESTIN_GRID_ID66       1.548e+01  4.879e-02   317.39   <2e-16 ***\nDESTIN_GRID_ID67       1.637e+01  1.448e-02  1130.40   <2e-16 ***\nDESTIN_GRID_ID68       1.655e+01  2.054e-02   805.40   <2e-16 ***\nDESTIN_GRID_ID86       1.648e+01  3.644e-02   452.23   <2e-16 ***\nDESTIN_GRID_ID87       1.423e+01  8.773e-02   162.19   <2e-16 ***\nDESTIN_GRID_ID88       1.597e+01  1.828e-02   873.41   <2e-16 ***\nDESTIN_GRID_ID89       1.629e+01  2.104e-02   774.13   <2e-16 ***\nDESTIN_GRID_ID90       1.183e+01  7.071e-01    16.73   <2e-16 ***\nDESTIN_GRID_ID109      1.612e+01  2.498e-02   645.35   <2e-16 ***\nDESTIN_GRID_ID110      1.257e+01  1.179e-01   106.61   <2e-16 ***\nDESTIN_GRID_ID111      1.646e+01  1.276e-02  1289.94   <2e-16 ***\nDESTIN_GRID_ID112      1.446e+01  3.362e-02   430.12   <2e-16 ***\nDESTIN_GRID_ID128      1.612e+01  2.522e-02   639.18   <2e-16 ***\nDESTIN_GRID_ID129      1.319e+01  1.374e-01    95.98   <2e-16 ***\nDESTIN_GRID_ID130      1.554e+01  2.343e-02   663.07   <2e-16 ***\nDESTIN_GRID_ID131      1.509e+01  2.252e-02   670.26   <2e-16 ***\nDESTIN_GRID_ID132      1.634e+01  1.541e-02  1060.16   <2e-16 ***\nDESTIN_GRID_ID133      1.599e+01  1.291e-02  1238.80   <2e-16 ***\nDESTIN_GRID_ID134      1.616e+01  1.208e-02  1337.68   <2e-16 ***\nDESTIN_GRID_ID150      1.579e+01  2.640e-02   598.04   <2e-16 ***\nDESTIN_GRID_ID151      1.537e+01  2.297e-02   668.91   <2e-16 ***\nDESTIN_GRID_ID152      1.683e+01  1.461e-02  1152.16   <2e-16 ***\nDESTIN_GRID_ID153      1.660e+01  1.356e-02  1224.33   <2e-16 ***\nDESTIN_GRID_ID154      1.469e+01  2.834e-02   518.50   <2e-16 ***\nDESTIN_GRID_ID155      1.530e+01  1.987e-02   770.14   <2e-16 ***\nDESTIN_GRID_ID156      1.608e+01  2.114e-02   760.60   <2e-16 ***\nDESTIN_GRID_ID172      1.447e+01  4.499e-02   321.61   <2e-16 ***\nDESTIN_GRID_ID174      1.606e+01  1.505e-02  1066.74   <2e-16 ***\nDESTIN_GRID_ID175      1.602e+01  1.118e-02  1433.53   <2e-16 ***\nDESTIN_GRID_ID176      1.450e+01  2.781e-02   521.50   <2e-16 ***\nDESTIN_GRID_ID195      1.552e+01  3.065e-02   506.41   <2e-16 ***\nDESTIN_GRID_ID196      1.620e+01  1.041e-02  1556.19   <2e-16 ***\nDESTIN_GRID_ID197      1.322e+01  7.718e-02   171.25   <2e-16 ***\nDESTIN_GRID_ID215      1.615e+01  2.993e-02   539.67   <2e-16 ***\nDESTIN_GRID_ID216      1.543e+01  1.612e-02   957.03   <2e-16 ***\nDESTIN_GRID_ID217      1.678e+01  9.446e-03  1776.31   <2e-16 ***\nDESTIN_GRID_ID237      1.579e+01  3.064e-02   515.51   <2e-16 ***\nDESTIN_GRID_ID238      1.606e+01  1.521e-02  1055.83   <2e-16 ***\nDESTIN_GRID_ID239      1.525e+01  3.143e-02   485.10   <2e-16 ***\nDESTIN_GRID_ID257      1.618e+01  1.567e-02  1033.00   <2e-16 ***\nDESTIN_GRID_ID258      1.544e+01  1.933e-02   798.83   <2e-16 ***\nDESTIN_GRID_ID259      1.660e+01  1.213e-02  1369.26   <2e-16 ***\nDESTIN_GRID_ID278      1.644e+01  1.402e-02  1172.84   <2e-16 ***\nDESTIN_GRID_ID279      1.620e+01  1.345e-02  1204.42   <2e-16 ***\nDESTIN_GRID_ID280      1.644e+01  1.265e-02  1299.58   <2e-16 ***\nDESTIN_GRID_ID298      1.307e+01  1.508e-01    86.66   <2e-16 ***\nDESTIN_GRID_ID299      1.665e+01  1.640e-02  1015.01   <2e-16 ***\nDESTIN_GRID_ID300      1.532e+01  1.725e-02   888.33   <2e-16 ***\nDESTIN_GRID_ID320      1.714e+01  1.397e-02  1227.13   <2e-16 ***\nDESTIN_GRID_ID321      1.554e+01  2.392e-02   649.59   <2e-16 ***\nDESTIN_GRID_ID322      1.746e+01  1.188e-02  1468.97   <2e-16 ***\nDESTIN_GRID_ID340      1.761e+01  1.093e-02  1611.99   <2e-16 ***\nDESTIN_GRID_ID341      1.647e+01  1.235e-02  1333.00   <2e-16 ***\nDESTIN_GRID_ID342      1.702e+01  1.059e-02  1607.09   <2e-16 ***\nDESTIN_GRID_ID363      1.673e+01  1.335e-02  1253.90   <2e-16 ***\nDESTIN_GRID_ID364      1.784e+01  7.940e-03  2247.53   <2e-16 ***\nDESTIN_GRID_ID383      1.681e+01  9.141e-03  1839.29   <2e-16 ***\nDESTIN_GRID_ID384      1.737e+01  8.476e-03  2049.74   <2e-16 ***\nDESTIN_GRID_ID385      1.681e+01  1.521e-02  1105.32   <2e-16 ***\nDESTIN_GRID_ID404      1.746e+01  1.260e-02  1384.95   <2e-16 ***\nDESTIN_GRID_ID405      1.716e+01  1.054e-02  1627.94   <2e-16 ***\nDESTIN_GRID_ID406      1.664e+01  5.480e-03  3036.46   <2e-16 ***\nDESTIN_GRID_ID407      1.684e+01  9.628e-03  1748.59   <2e-16 ***\nDESTIN_GRID_ID408      1.773e+01  5.295e-03  3348.41   <2e-16 ***\nDESTIN_GRID_ID425      1.520e+01  2.491e-02   610.29   <2e-16 ***\nDESTIN_GRID_ID426      1.640e+01  1.035e-02  1585.58   <2e-16 ***\nDESTIN_GRID_ID427      1.347e+01  2.652e-02   508.06   <2e-16 ***\nDESTIN_GRID_ID428      1.577e+01  1.174e-02  1343.48   <2e-16 ***\nDESTIN_GRID_ID429      1.538e+01  2.384e-02   645.10   <2e-16 ***\nDESTIN_GRID_ID446      1.613e+01  2.314e-02   696.85   <2e-16 ***\nDESTIN_GRID_ID447      1.559e+01  1.720e-02   906.38   <2e-16 ***\nDESTIN_GRID_ID448      1.601e+01  1.178e-02  1359.31   <2e-16 ***\nDESTIN_GRID_ID449      1.607e+01  7.434e-03  2161.14   <2e-16 ***\nDESTIN_GRID_ID450      1.533e+01  1.273e-02  1204.41   <2e-16 ***\nDESTIN_GRID_ID468      1.626e+01  1.100e-02  1478.60   <2e-16 ***\nDESTIN_GRID_ID469      1.550e+01  8.719e-03  1777.24   <2e-16 ***\nDESTIN_GRID_ID470      1.575e+01  7.606e-03  2070.89   <2e-16 ***\nDESTIN_GRID_ID471      1.543e+01  1.726e-02   893.61   <2e-16 ***\nDESTIN_GRID_ID488      1.554e+01  2.218e-02   700.79   <2e-16 ***\nDESTIN_GRID_ID489      1.407e+01  4.805e-02   292.80   <2e-16 ***\nDESTIN_GRID_ID490      1.625e+01  8.932e-03  1819.38   <2e-16 ***\nDESTIN_GRID_ID491      1.399e+01  1.688e-02   828.78   <2e-16 ***\nDESTIN_GRID_ID493      1.333e+01  4.890e-02   272.66   <2e-16 ***\nDESTIN_GRID_ID494      1.525e+01  2.319e-02   657.75   <2e-16 ***\nDESTIN_GRID_ID509      1.551e+01  1.530e-02  1013.39   <2e-16 ***\nDESTIN_GRID_ID510      1.625e+01  1.021e-02  1591.16   <2e-16 ***\nDESTIN_GRID_ID511      1.573e+01  7.148e-03  2200.08   <2e-16 ***\nDESTIN_GRID_ID512      1.549e+01  7.237e-03  2140.35   <2e-16 ***\nDESTIN_GRID_ID513      1.638e+01  8.251e-03  1984.97   <2e-16 ***\nDESTIN_GRID_ID514      1.600e+01  1.189e-02  1345.26   <2e-16 ***\nDESTIN_GRID_ID515      1.478e+01  3.197e-02   462.31   <2e-16 ***\nDESTIN_GRID_ID530      1.519e+01  2.905e-02   522.88   <2e-16 ***\nDESTIN_GRID_ID531      1.740e+01  6.210e-03  2802.35   <2e-16 ***\nDESTIN_GRID_ID532      1.594e+01  9.110e-03  1750.02   <2e-16 ***\nDESTIN_GRID_ID533      1.725e+01  3.538e-03  4874.96   <2e-16 ***\nDESTIN_GRID_ID534      1.565e+01  7.268e-03  2153.33   <2e-16 ***\nDESTIN_GRID_ID536      1.503e+01  1.835e-02   819.38   <2e-16 ***\nDESTIN_GRID_ID537      1.473e+01  3.473e-02   424.26   <2e-16 ***\nDESTIN_GRID_ID538      1.417e+01  4.421e-02   320.45   <2e-16 ***\nDESTIN_GRID_ID539      1.289e+01  2.673e-01    48.22   <2e-16 ***\nDESTIN_GRID_ID551      1.585e+01  1.775e-02   892.62   <2e-16 ***\nDESTIN_GRID_ID552      1.761e+01  1.085e-02  1622.93   <2e-16 ***\nDESTIN_GRID_ID553      1.540e+01  8.928e-03  1724.58   <2e-16 ***\nDESTIN_GRID_ID554      1.537e+01  7.381e-03  2082.97   <2e-16 ***\nDESTIN_GRID_ID555      1.632e+01  7.891e-03  2068.01   <2e-16 ***\nDESTIN_GRID_ID559      1.459e+01  5.374e-02   271.47   <2e-16 ***\nDESTIN_GRID_ID560      1.615e+01  1.684e-02   959.60   <2e-16 ***\nDESTIN_GRID_ID561      1.455e+01  6.762e-02   215.23   <2e-16 ***\nDESTIN_GRID_ID572      1.580e+01  3.451e-02   457.91   <2e-16 ***\nDESTIN_GRID_ID573      1.680e+01  1.041e-02  1614.27   <2e-16 ***\nDESTIN_GRID_ID574      1.619e+01  1.581e-02  1024.34   <2e-16 ***\nDESTIN_GRID_ID575      1.787e+01  2.812e-03  6352.96   <2e-16 ***\nDESTIN_GRID_ID576      1.568e+01  6.713e-03  2336.22   <2e-16 ***\nDESTIN_GRID_ID578      1.234e+01  1.072e-01   115.07   <2e-16 ***\nDESTIN_GRID_ID582      1.385e+01  6.316e-02   219.22   <2e-16 ***\nDESTIN_GRID_ID583      1.275e+01  3.780e-01    33.74   <2e-16 ***\nDESTIN_GRID_ID584      1.553e+01  3.615e-02   429.60   <2e-16 ***\nDESTIN_GRID_ID593      1.458e+01  2.564e-02   568.63   <2e-16 ***\nDESTIN_GRID_ID594      1.604e+01  1.390e-02  1153.86   <2e-16 ***\nDESTIN_GRID_ID595      1.642e+01  6.162e-03  2664.51   <2e-16 ***\nDESTIN_GRID_ID596      1.586e+01  5.476e-03  2896.44   <2e-16 ***\nDESTIN_GRID_ID597      1.536e+01  1.560e-02   984.67   <2e-16 ***\nDESTIN_GRID_ID603      1.397e+01  5.275e-02   264.86   <2e-16 ***\nDESTIN_GRID_ID604      1.508e+01  5.084e-02   296.68   <2e-16 ***\nDESTIN_GRID_ID615      1.505e+01  1.486e-02  1012.99   <2e-16 ***\nDESTIN_GRID_ID616      1.596e+01  9.255e-03  1724.35   <2e-16 ***\nDESTIN_GRID_ID617      1.499e+01  9.383e-03  1597.93   <2e-16 ***\nDESTIN_GRID_ID618      1.541e+01  7.073e-03  2178.25   <2e-16 ***\nDESTIN_GRID_ID620      1.611e+01  1.104e-02  1458.69   <2e-16 ***\nDESTIN_GRID_ID637      1.559e+01  1.105e-02  1410.44   <2e-16 ***\nDESTIN_GRID_ID638      1.548e+01  6.510e-03  2377.23   <2e-16 ***\nDESTIN_GRID_ID657      1.643e+01  7.261e-03  2263.22   <2e-16 ***\nDESTIN_GRID_ID658      1.585e+01  6.481e-03  2445.62   <2e-16 ***\nDESTIN_GRID_ID659      1.580e+01  6.128e-03  2578.67   <2e-16 ***\nDESTIN_GRID_ID660      1.619e+01  4.786e-03  3383.56   <2e-16 ***\nDESTIN_GRID_ID662      1.591e+01  1.251e-02  1270.97   <2e-16 ***\nDESTIN_GRID_ID677      1.646e+01  9.594e-03  1715.24   <2e-16 ***\nDESTIN_GRID_ID678      1.475e+01  1.421e-02  1038.13   <2e-16 ***\nDESTIN_GRID_ID679      1.608e+01  5.417e-03  2969.00   <2e-16 ***\nDESTIN_GRID_ID680      1.767e+01  2.966e-03  5958.32   <2e-16 ***\nDESTIN_GRID_ID681      1.400e+01  2.066e-02   677.52   <2e-16 ***\nDESTIN_GRID_ID699      1.599e+01  9.247e-03  1729.15   <2e-16 ***\nDESTIN_GRID_ID700      1.555e+01  7.576e-03  2052.44   <2e-16 ***\nDESTIN_GRID_ID701      1.330e+01  2.321e-02   572.93   <2e-16 ***\nDESTIN_GRID_ID702      1.591e+01  5.358e-03  2968.75   <2e-16 ***\nDESTIN_GRID_ID704      1.594e+01  1.113e-02  1432.17   <2e-16 ***\nDESTIN_GRID_ID722      1.542e+01  9.155e-03  1684.74   <2e-16 ***\nDESTIN_GRID_ID725      1.385e+01  2.769e-02   500.03   <2e-16 ***\nDESTIN_GRID_ID741      1.647e+01  7.441e-03  2213.88   <2e-16 ***\nDESTIN_GRID_ID743      1.305e+01  2.483e-02   525.72   <2e-16 ***\nDESTIN_GRID_ID744      1.599e+01  5.447e-03  2935.39   <2e-16 ***\nDESTIN_GRID_ID761      1.667e+01  8.547e-03  1950.85   <2e-16 ***\nDESTIN_GRID_ID762      1.475e+01  1.430e-02  1031.80   <2e-16 ***\nDESTIN_GRID_ID763      1.332e+01  2.229e-02   597.48   <2e-16 ***\nDESTIN_GRID_ID764      1.639e+01  4.195e-03  3907.28   <2e-16 ***\nDESTIN_GRID_ID765      1.587e+01  9.864e-03  1608.60   <2e-16 ***\nDESTIN_GRID_ID767      1.587e+01  7.312e-03  2170.23   <2e-16 ***\nDESTIN_GRID_ID772      1.463e+01  4.116e-02   355.33   <2e-16 ***\nDESTIN_GRID_ID784      1.363e+01  2.306e-02   590.90   <2e-16 ***\nDESTIN_GRID_ID785      1.550e+01  6.134e-03  2526.43   <2e-16 ***\nDESTIN_GRID_ID786      1.582e+01  5.348e-03  2957.77   <2e-16 ***\nDESTIN_GRID_ID787      1.527e+01  1.125e-02  1357.87   <2e-16 ***\nDESTIN_GRID_ID788      1.405e+01  1.719e-02   817.29   <2e-16 ***\nDESTIN_GRID_ID789      1.423e+01  1.879e-02   757.73   <2e-16 ***\nDESTIN_GRID_ID803      1.560e+01  1.419e-02  1099.62   <2e-16 ***\nDESTIN_GRID_ID804      1.602e+01  6.736e-03  2378.16   <2e-16 ***\nDESTIN_GRID_ID805      1.704e+01  3.472e-03  4908.97   <2e-16 ***\nDESTIN_GRID_ID806      1.546e+01  6.220e-03  2486.23   <2e-16 ***\nDESTIN_GRID_ID807      1.562e+01  7.650e-03  2042.32   <2e-16 ***\nDESTIN_GRID_ID808      1.432e+01  1.813e-02   789.96   <2e-16 ***\nDESTIN_GRID_ID809      1.581e+01  5.734e-03  2756.41   <2e-16 ***\nDESTIN_GRID_ID810      1.562e+01  8.579e-03  1821.07   <2e-16 ***\nDESTIN_GRID_ID814      1.548e+01  2.054e-02   753.77   <2e-16 ***\nDESTIN_GRID_ID819      2.033e+01  1.604e-02  1267.22   <2e-16 ***\nDESTIN_GRID_ID824      1.567e+01  1.401e-02  1118.26   <2e-16 ***\nDESTIN_GRID_ID826      1.562e+01  6.487e-03  2408.35   <2e-16 ***\nDESTIN_GRID_ID827      1.543e+01  6.983e-03  2209.68   <2e-16 ***\nDESTIN_GRID_ID828      1.572e+01  5.539e-03  2837.98   <2e-16 ***\nDESTIN_GRID_ID829      1.526e+01  8.513e-03  1792.69   <2e-16 ***\nDESTIN_GRID_ID830      1.422e+01  1.491e-02   953.75   <2e-16 ***\nDESTIN_GRID_ID831      1.743e+01  3.089e-03  5642.25   <2e-16 ***\nDESTIN_GRID_ID832      1.750e+01  3.813e-03  4589.24   <2e-16 ***\nDESTIN_GRID_ID835      1.503e+01  2.083e-02   721.77   <2e-16 ***\nDESTIN_GRID_ID844      1.546e+01  1.864e-02   829.11   <2e-16 ***\nDESTIN_GRID_ID846      1.555e+01  7.586e-03  2050.31   <2e-16 ***\nDESTIN_GRID_ID847      1.634e+01  5.123e-03  3190.00   <2e-16 ***\nDESTIN_GRID_ID848      1.533e+01  6.961e-03  2202.94   <2e-16 ***\nDESTIN_GRID_ID849      1.490e+01  8.605e-03  1731.11   <2e-16 ***\nDESTIN_GRID_ID850      1.577e+01  5.870e-03  2686.80   <2e-16 ***\nDESTIN_GRID_ID851      1.530e+01  7.028e-03  2176.99   <2e-16 ***\nDESTIN_GRID_ID852      1.536e+01  8.557e-03  1795.22   <2e-16 ***\nDESTIN_GRID_ID853      1.593e+01  9.185e-03  1734.55   <2e-16 ***\nDESTIN_GRID_ID854      1.582e+01  1.438e-02  1100.31   <2e-16 ***\nDESTIN_GRID_ID855      1.491e+01  2.010e-02   741.91   <2e-16 ***\nDESTIN_GRID_ID856      1.432e+01  3.198e-02   447.84   <2e-16 ***\nDESTIN_GRID_ID866      1.616e+01  1.007e-02  1605.06   <2e-16 ***\nDESTIN_GRID_ID867      1.692e+01  4.983e-03  3395.79   <2e-16 ***\nDESTIN_GRID_ID868      1.640e+01  6.019e-03  2724.63   <2e-16 ***\nDESTIN_GRID_ID869      1.732e+01  5.302e-03  3266.16   <2e-16 ***\nDESTIN_GRID_ID870      1.694e+01  3.402e-03  4979.00   <2e-16 ***\nDESTIN_GRID_ID871      1.718e+01  4.244e-03  4049.08   <2e-16 ***\nDESTIN_GRID_ID872      1.567e+01  6.396e-03  2450.29   <2e-16 ***\nDESTIN_GRID_ID873      1.532e+01  8.904e-03  1720.36   <2e-16 ***\nDESTIN_GRID_ID874      1.426e+01  1.393e-02  1023.74   <2e-16 ***\nDESTIN_GRID_ID875      1.449e+01  2.743e-02   528.20   <2e-16 ***\nDESTIN_GRID_ID876      1.508e+01  1.899e-02   793.92   <2e-16 ***\nDESTIN_GRID_ID877      1.579e+01  1.436e-02  1099.56   <2e-16 ***\nDESTIN_GRID_ID887      1.561e+01  9.226e-03  1691.38   <2e-16 ***\nDESTIN_GRID_ID888      1.434e+01  1.491e-02   962.19   <2e-16 ***\nDESTIN_GRID_ID889      1.529e+01  1.306e-02  1171.45   <2e-16 ***\nDESTIN_GRID_ID890      1.605e+01  5.448e-03  2945.92   <2e-16 ***\nDESTIN_GRID_ID891      1.487e+01  1.527e-02   973.65   <2e-16 ***\nDESTIN_GRID_ID893      1.618e+01  4.820e-03  3357.40   <2e-16 ***\nDESTIN_GRID_ID894      1.461e+01  1.155e-02  1265.36   <2e-16 ***\nDESTIN_GRID_ID895      1.568e+01  9.269e-03  1691.20   <2e-16 ***\nDESTIN_GRID_ID896      1.372e+01  3.377e-02   406.19   <2e-16 ***\nDESTIN_GRID_ID897      1.357e+01  3.176e-02   427.25   <2e-16 ***\nDESTIN_GRID_ID898      1.556e+01  1.656e-02   939.87   <2e-16 ***\nDESTIN_GRID_ID908      1.628e+01  1.100e-02  1479.05   <2e-16 ***\nDESTIN_GRID_ID909      1.560e+01  6.758e-03  2308.23   <2e-16 ***\nDESTIN_GRID_ID910      1.476e+01  1.194e-02  1236.11   <2e-16 ***\nDESTIN_GRID_ID911      1.682e+01  4.411e-03  3813.57   <2e-16 ***\nDESTIN_GRID_ID912      1.513e+01  8.268e-03  1829.72   <2e-16 ***\nDESTIN_GRID_ID915      1.566e+01  6.316e-03  2479.31   <2e-16 ***\nDESTIN_GRID_ID917      1.681e+01  5.890e-03  2853.53   <2e-16 ***\nDESTIN_GRID_ID918      1.345e+01  4.013e-02   335.25   <2e-16 ***\nDESTIN_GRID_ID919      1.487e+01  1.647e-02   902.95   <2e-16 ***\nDESTIN_GRID_ID928      1.440e+01  1.905e-02   755.77   <2e-16 ***\nDESTIN_GRID_ID929      1.530e+01  7.875e-03  1943.29   <2e-16 ***\nDESTIN_GRID_ID930      1.651e+01  4.270e-03  3866.80   <2e-16 ***\nDESTIN_GRID_ID931      1.520e+01  1.086e-02  1400.20   <2e-16 ***\nDESTIN_GRID_ID932      1.376e+01  2.526e-02   544.50   <2e-16 ***\nDESTIN_GRID_ID933      1.563e+01  8.388e-03  1863.99   <2e-16 ***\nDESTIN_GRID_ID934      1.556e+01  7.989e-03  1947.30   <2e-16 ***\nDESTIN_GRID_ID935      1.740e+01  3.075e-03  5660.05   <2e-16 ***\nDESTIN_GRID_ID938      1.250e+01  1.429e-01    87.47   <2e-16 ***\nDESTIN_GRID_ID939      1.764e+01  4.038e-03  4368.12   <2e-16 ***\nDESTIN_GRID_ID940      1.471e+01  2.088e-02   704.36   <2e-16 ***\nDESTIN_GRID_ID949      1.460e+01  1.571e-02   929.47   <2e-16 ***\nDESTIN_GRID_ID950      1.662e+01  5.460e-03  3045.01   <2e-16 ***\nDESTIN_GRID_ID951      1.726e+01  3.294e-03  5240.81   <2e-16 ***\nDESTIN_GRID_ID952      1.632e+01  8.083e-03  2018.51   <2e-16 ***\nDESTIN_GRID_ID953      1.549e+01  9.184e-03  1686.73   <2e-16 ***\nDESTIN_GRID_ID954      1.387e+01  1.803e-02   769.38   <2e-16 ***\nDESTIN_GRID_ID955      1.659e+01  4.940e-03  3358.59   <2e-16 ***\nDESTIN_GRID_ID956      1.498e+01  9.786e-03  1530.30   <2e-16 ***\nDESTIN_GRID_ID957      1.527e+01  9.678e-03  1577.63   <2e-16 ***\nDESTIN_GRID_ID959      1.544e+01  1.943e-02   794.73   <2e-16 ***\nDESTIN_GRID_ID961      1.546e+01  1.256e-02  1231.32   <2e-16 ***\nDESTIN_GRID_ID962      1.707e+01  6.072e-03  2811.58   <2e-16 ***\nDESTIN_GRID_ID970      1.548e+01  8.276e-03  1870.74   <2e-16 ***\nDESTIN_GRID_ID971      1.605e+01  5.054e-03  3175.20   <2e-16 ***\nDESTIN_GRID_ID972      1.527e+01  7.926e-03  1927.14   <2e-16 ***\nDESTIN_GRID_ID974      1.489e+01  1.155e-02  1288.92   <2e-16 ***\nDESTIN_GRID_ID975      1.403e+01  1.786e-02   785.37   <2e-16 ***\nDESTIN_GRID_ID976      1.484e+01  1.108e-02  1340.27   <2e-16 ***\nDESTIN_GRID_ID977      1.538e+01  7.050e-03  2182.10   <2e-16 ***\nDESTIN_GRID_ID978      1.506e+01  1.174e-02  1282.62   <2e-16 ***\nDESTIN_GRID_ID982      1.476e+01  1.165e-02  1267.34   <2e-16 ***\nDESTIN_GRID_ID983      1.897e+01  4.167e-03  4552.27   <2e-16 ***\nDESTIN_GRID_ID984      1.987e+01  5.241e-03  3791.81   <2e-16 ***\nDESTIN_GRID_ID991      1.593e+01  7.616e-03  2091.32   <2e-16 ***\nDESTIN_GRID_ID992      1.580e+01  6.883e-03  2295.05   <2e-16 ***\nDESTIN_GRID_ID993      1.472e+01  1.016e-02  1448.97   <2e-16 ***\nDESTIN_GRID_ID994      1.452e+01  1.258e-02  1154.25   <2e-16 ***\nDESTIN_GRID_ID995      1.530e+01  8.947e-03  1709.75   <2e-16 ***\nDESTIN_GRID_ID996      1.490e+01  1.232e-02  1209.34   <2e-16 ***\nDESTIN_GRID_ID997      1.589e+01  1.321e-02  1202.71   <2e-16 ***\nDESTIN_GRID_ID998      1.591e+01  6.577e-03  2418.65   <2e-16 ***\nDESTIN_GRID_ID999      1.496e+01  1.113e-02  1343.67   <2e-16 ***\nDESTIN_GRID_ID1001     1.553e+01  1.623e-02   956.86   <2e-16 ***\nDESTIN_GRID_ID1003     1.722e+01  3.710e-03  4641.25   <2e-16 ***\nDESTIN_GRID_ID1004     1.632e+01  5.658e-03  2884.65   <2e-16 ***\nDESTIN_GRID_ID1011     1.563e+01  1.241e-02  1258.91   <2e-16 ***\nDESTIN_GRID_ID1012     1.647e+01  7.967e-03  2066.83   <2e-16 ***\nDESTIN_GRID_ID1013     1.588e+01  7.244e-03  2192.48   <2e-16 ***\nDESTIN_GRID_ID1014     1.379e+01  1.824e-02   756.18   <2e-16 ***\nDESTIN_GRID_ID1015     1.627e+01  5.556e-03  2928.59   <2e-16 ***\nDESTIN_GRID_ID1016     1.683e+01  4.471e-03  3764.49   <2e-16 ***\nDESTIN_GRID_ID1018     1.518e+01  1.283e-02  1182.99   <2e-16 ***\nDESTIN_GRID_ID1019     1.580e+01  6.798e-03  2323.80   <2e-16 ***\nDESTIN_GRID_ID1023     1.473e+01  1.408e-02  1046.23   <2e-16 ***\nDESTIN_GRID_ID1024     1.598e+01  6.507e-03  2455.46   <2e-16 ***\nDESTIN_GRID_ID1025     1.148e+01  1.054e-01   108.89   <2e-16 ***\nDESTIN_GRID_ID1033     1.632e+01  6.679e-03  2443.49   <2e-16 ***\nDESTIN_GRID_ID1034     1.644e+01  5.172e-03  3177.96   <2e-16 ***\nDESTIN_GRID_ID1035     1.628e+01  5.366e-03  3033.20   <2e-16 ***\nDESTIN_GRID_ID1036     1.655e+01  4.969e-03  3330.21   <2e-16 ***\nDESTIN_GRID_ID1037     1.551e+01  7.159e-03  2166.42   <2e-16 ***\nDESTIN_GRID_ID1043     1.624e+01  1.135e-02  1431.16   <2e-16 ***\nDESTIN_GRID_ID1045     1.573e+01  6.357e-03  2474.63   <2e-16 ***\nDESTIN_GRID_ID1046     1.607e+01  6.250e-03  2571.89   <2e-16 ***\nDESTIN_GRID_ID1053     1.666e+01  5.407e-03  3081.42   <2e-16 ***\nDESTIN_GRID_ID1054     1.629e+01  5.710e-03  2853.68   <2e-16 ***\nDESTIN_GRID_ID1055     1.518e+01  9.506e-03  1597.20   <2e-16 ***\nDESTIN_GRID_ID1056     1.477e+01  1.193e-02  1238.20   <2e-16 ***\nDESTIN_GRID_ID1064     1.332e+01  8.740e-02   152.44   <2e-16 ***\nDESTIN_GRID_ID1066     1.676e+01  4.424e-03  3788.73   <2e-16 ***\nDESTIN_GRID_ID1067     1.147e+01  1.429e-01    80.28   <2e-16 ***\nDESTIN_GRID_ID1074     1.455e+01  1.521e-02   956.48   <2e-16 ***\nDESTIN_GRID_ID1075     1.604e+01  7.318e-03  2191.55   <2e-16 ***\nDESTIN_GRID_ID1076     1.550e+01  7.494e-03  2068.05   <2e-16 ***\nDESTIN_GRID_ID1077     1.496e+01  1.075e-02  1391.59   <2e-16 ***\nDESTIN_GRID_ID1079     1.602e+01  6.584e-03  2433.14   <2e-16 ***\nDESTIN_GRID_ID1085     1.443e+01  5.062e-02   285.06   <2e-16 ***\nDESTIN_GRID_ID1087     1.586e+01  6.539e-03  2425.44   <2e-16 ***\nDESTIN_GRID_ID1088     1.637e+01  5.930e-03  2760.76   <2e-16 ***\nDESTIN_GRID_ID1094     1.261e+01  5.595e-02   225.32   <2e-16 ***\nDESTIN_GRID_ID1095     1.565e+01  1.566e-02   998.83   <2e-16 ***\nDESTIN_GRID_ID1096     1.533e+01  1.636e-02   936.71   <2e-16 ***\nDESTIN_GRID_ID1097     1.637e+01  4.787e-03  3419.67   <2e-16 ***\nDESTIN_GRID_ID1098     1.395e+01  2.376e-02   587.10   <2e-16 ***\nDESTIN_GRID_ID1099     1.531e+01  8.887e-03  1722.63   <2e-16 ***\nDESTIN_GRID_ID1105     1.704e+01  9.262e-03  1839.99   <2e-16 ***\nDESTIN_GRID_ID1106     1.267e+01  1.016e-01   124.72   <2e-16 ***\nDESTIN_GRID_ID1107     1.612e+01  7.766e-03  2075.99   <2e-16 ***\nDESTIN_GRID_ID1108     1.792e+01  2.737e-03  6549.65   <2e-16 ***\nDESTIN_GRID_ID1109     1.354e+01  3.606e-02   375.46   <2e-16 ***\nDESTIN_GRID_ID1116     1.557e+01  9.057e-03  1719.31   <2e-16 ***\nDESTIN_GRID_ID1117     1.582e+01  8.326e-03  1899.76   <2e-16 ***\nDESTIN_GRID_ID1118     1.396e+01  2.010e-02   694.63   <2e-16 ***\nDESTIN_GRID_ID1119     1.470e+01  1.177e-02  1249.55   <2e-16 ***\nDESTIN_GRID_ID1120     1.443e+01  1.902e-02   758.54   <2e-16 ***\nDESTIN_GRID_ID1129     1.529e+01  8.458e-03  1808.03   <2e-16 ***\nDESTIN_GRID_ID1130     1.604e+01  5.847e-03  2743.10   <2e-16 ***\nDESTIN_GRID_ID1131     1.705e+01  7.033e-03  2424.86   <2e-16 ***\nDESTIN_GRID_ID1136     1.658e+01  5.628e-03  2945.78   <2e-16 ***\nDESTIN_GRID_ID1138     1.439e+01  1.961e-02   733.81   <2e-16 ***\nDESTIN_GRID_ID1139     1.519e+01  8.167e-03  1859.54   <2e-16 ***\nDESTIN_GRID_ID1141     1.534e+01  8.795e-03  1744.23   <2e-16 ***\nDESTIN_GRID_ID1148     1.459e+01  3.086e-02   472.79   <2e-16 ***\nDESTIN_GRID_ID1149     1.500e+01  1.417e-02  1058.99   <2e-16 ***\nDESTIN_GRID_ID1150     1.519e+01  7.411e-03  2050.21   <2e-16 ***\nDESTIN_GRID_ID1151     1.585e+01  6.866e-03  2309.07   <2e-16 ***\nDESTIN_GRID_ID1158     1.448e+01  1.235e-02  1172.19   <2e-16 ***\nDESTIN_GRID_ID1159     1.472e+01  1.030e-02  1430.10   <2e-16 ***\nDESTIN_GRID_ID1160     1.636e+01  4.810e-03  3400.47   <2e-16 ***\nDESTIN_GRID_ID1171     1.588e+01  6.314e-03  2515.71   <2e-16 ***\nDESTIN_GRID_ID1172     1.728e+01  3.372e-03  5125.01   <2e-16 ***\nDESTIN_GRID_ID1173     1.673e+01  5.452e-03  3069.06   <2e-16 ***\nDESTIN_GRID_ID1174     1.410e+01  4.065e-02   346.88   <2e-16 ***\nDESTIN_GRID_ID1178     1.670e+01  4.451e-03  3751.65   <2e-16 ***\nDESTIN_GRID_ID1179     1.573e+01  5.998e-03  2623.41   <2e-16 ***\nDESTIN_GRID_ID1180     1.594e+01  5.431e-03  2934.85   <2e-16 ***\nDESTIN_GRID_ID1181     1.489e+01  9.713e-03  1532.69   <2e-16 ***\nDESTIN_GRID_ID1183     1.682e+01  4.891e-03  3438.26   <2e-16 ***\nDESTIN_GRID_ID1190     1.497e+01  2.752e-02   544.14   <2e-16 ***\nDESTIN_GRID_ID1192     1.613e+01  5.676e-03  2841.07   <2e-16 ***\nDESTIN_GRID_ID1193     1.620e+01  5.561e-03  2913.49   <2e-16 ***\nDESTIN_GRID_ID1194     1.655e+01  6.363e-03  2601.51   <2e-16 ***\nDESTIN_GRID_ID1200     1.539e+01  8.207e-03  1875.14   <2e-16 ***\nDESTIN_GRID_ID1201     1.520e+01  8.412e-03  1806.73   <2e-16 ***\nDESTIN_GRID_ID1203     1.527e+01  9.055e-03  1686.60   <2e-16 ***\nDESTIN_GRID_ID1204     1.525e+01  9.445e-03  1614.18   <2e-16 ***\nDESTIN_GRID_ID1211     1.093e+01  4.472e-01    24.44   <2e-16 ***\nDESTIN_GRID_ID1214     1.495e+01  9.277e-03  1611.79   <2e-16 ***\nDESTIN_GRID_ID1215     1.590e+01  1.184e-02  1343.47   <2e-16 ***\nDESTIN_GRID_ID1216     1.628e+01  1.027e-02  1586.06   <2e-16 ***\nDESTIN_GRID_ID1220     1.563e+01  6.932e-03  2255.06   <2e-16 ***\nDESTIN_GRID_ID1221     1.615e+01  4.938e-03  3271.22   <2e-16 ***\nDESTIN_GRID_ID1222     1.519e+01  1.351e-02  1124.61   <2e-16 ***\nDESTIN_GRID_ID1223     1.462e+01  1.356e-02  1078.00   <2e-16 ***\nDESTIN_GRID_ID1224     1.549e+01  8.434e-03  1837.19   <2e-16 ***\nDESTIN_GRID_ID1231     1.332e+01  6.341e-02   210.08   <2e-16 ***\nDESTIN_GRID_ID1232     1.509e+01  2.406e-02   627.36   <2e-16 ***\nDESTIN_GRID_ID1235     1.589e+01  6.125e-03  2594.07   <2e-16 ***\nDESTIN_GRID_ID1236     1.571e+01  8.597e-03  1827.36   <2e-16 ***\nDESTIN_GRID_ID1241     1.452e+01  1.291e-02  1125.41   <2e-16 ***\nDESTIN_GRID_ID1242     1.481e+01  9.955e-03  1487.21   <2e-16 ***\nDESTIN_GRID_ID1243     1.599e+01  5.600e-03  2854.60   <2e-16 ***\nDESTIN_GRID_ID1246     1.495e+01  1.009e-02  1481.28   <2e-16 ***\nDESTIN_GRID_ID1256     1.507e+01  9.149e-03  1646.85   <2e-16 ***\nDESTIN_GRID_ID1257     1.621e+01  6.493e-03  2496.68   <2e-16 ***\nDESTIN_GRID_ID1258     1.705e+01  5.556e-03  3068.52   <2e-16 ***\nDESTIN_GRID_ID1262     1.416e+01  1.492e-02   949.16   <2e-16 ***\nDESTIN_GRID_ID1263     1.645e+01  4.217e-03  3900.39   <2e-16 ***\nDESTIN_GRID_ID1264     1.561e+01  7.909e-03  1973.39   <2e-16 ***\nDESTIN_GRID_ID1265     1.571e+01  8.716e-03  1802.01   <2e-16 ***\nDESTIN_GRID_ID1266     1.586e+01  7.541e-03  2103.21   <2e-16 ***\nDESTIN_GRID_ID1267     1.407e+01  2.006e-02   701.68   <2e-16 ***\nDESTIN_GRID_ID1272     1.161e+01  1.187e-01    97.83   <2e-16 ***\nDESTIN_GRID_ID1273     1.628e+01  7.438e-03  2189.15   <2e-16 ***\nDESTIN_GRID_ID1277     1.636e+01  4.847e-03  3375.89   <2e-16 ***\nDESTIN_GRID_ID1278     1.603e+01  6.413e-03  2499.41   <2e-16 ***\nDESTIN_GRID_ID1283     1.685e+01  4.258e-03  3956.29   <2e-16 ***\nDESTIN_GRID_ID1284     1.640e+01  4.610e-03  3557.02   <2e-16 ***\nDESTIN_GRID_ID1285     1.602e+01  5.300e-03  3022.68   <2e-16 ***\nDESTIN_GRID_ID1286     1.529e+01  1.057e-02  1446.62   <2e-16 ***\nDESTIN_GRID_ID1289     1.292e+01  4.059e-02   318.37   <2e-16 ***\nDESTIN_GRID_ID1293     1.193e+01  8.740e-02   136.52   <2e-16 ***\nDESTIN_GRID_ID1294     1.587e+01  9.425e-03  1683.57   <2e-16 ***\nDESTIN_GRID_ID1295     1.375e+01  2.592e-02   530.62   <2e-16 ***\nDESTIN_GRID_ID1298     1.552e+01  7.458e-03  2081.20   <2e-16 ***\nDESTIN_GRID_ID1299     1.541e+01  9.603e-03  1604.42   <2e-16 ***\nDESTIN_GRID_ID1304     1.588e+01  6.376e-03  2491.03   <2e-16 ***\nDESTIN_GRID_ID1305     1.593e+01  5.119e-03  3112.20   <2e-16 ***\nDESTIN_GRID_ID1307     1.479e+01  1.950e-02   758.25   <2e-16 ***\nDESTIN_GRID_ID1308     1.606e+01  6.230e-03  2577.19   <2e-16 ***\nDESTIN_GRID_ID1310     1.080e+01  2.236e-01    48.28   <2e-16 ***\nDESTIN_GRID_ID1316     1.447e+01  1.625e-02   890.50   <2e-16 ***\nDESTIN_GRID_ID1317     1.421e+01  1.472e-02   965.03   <2e-16 ***\nDESTIN_GRID_ID1318     1.390e+01  1.800e-02   772.22   <2e-16 ***\nDESTIN_GRID_ID1319     1.690e+01  3.998e-03  4227.32   <2e-16 ***\nDESTIN_GRID_ID1320     1.483e+01  1.349e-02  1099.28   <2e-16 ***\nDESTIN_GRID_ID1324     1.568e+01  2.002e-02   783.35   <2e-16 ***\nDESTIN_GRID_ID1325     1.393e+01  1.685e-02   827.09   <2e-16 ***\nDESTIN_GRID_ID1326     1.546e+01  6.751e-03  2289.82   <2e-16 ***\nDESTIN_GRID_ID1327     1.577e+01  6.052e-03  2606.19   <2e-16 ***\nDESTIN_GRID_ID1328     1.561e+01  7.494e-03  2083.18   <2e-16 ***\nDESTIN_GRID_ID1329     1.564e+01  1.003e-02  1559.28   <2e-16 ***\nDESTIN_GRID_ID1330     1.689e+01  5.741e-03  2941.44   <2e-16 ***\nDESTIN_GRID_ID1331     1.058e+01  2.887e-01    36.64   <2e-16 ***\nDESTIN_GRID_ID1333     1.414e+01  1.742e-02   811.58   <2e-16 ***\nDESTIN_GRID_ID1334     1.465e+01  1.450e-02  1010.39   <2e-16 ***\nDESTIN_GRID_ID1335     1.667e+01  6.100e-03  2733.34   <2e-16 ***\nDESTIN_GRID_ID1336     1.343e+01  4.845e-02   277.13   <2e-16 ***\nDESTIN_GRID_ID1337     1.293e+01  3.513e-02   368.20   <2e-16 ***\nDESTIN_GRID_ID1338     1.317e+01  2.890e-02   455.51   <2e-16 ***\nDESTIN_GRID_ID1339     1.653e+01  4.563e-03  3621.74   <2e-16 ***\nDESTIN_GRID_ID1340     1.497e+01  1.073e-02  1395.42   <2e-16 ***\nDESTIN_GRID_ID1341     1.183e+01  9.537e-02   124.02   <2e-16 ***\nDESTIN_GRID_ID1346     1.560e+01  8.309e-03  1877.47   <2e-16 ***\nDESTIN_GRID_ID1347     1.659e+01  4.386e-03  3782.18   <2e-16 ***\nDESTIN_GRID_ID1348     1.530e+01  7.755e-03  1972.29   <2e-16 ***\nDESTIN_GRID_ID1349     1.638e+01  6.193e-03  2644.27   <2e-16 ***\nDESTIN_GRID_ID1350     1.527e+01  1.425e-02  1071.75   <2e-16 ***\nDESTIN_GRID_ID1353     1.541e+01  7.798e-03  1976.60   <2e-16 ***\nDESTIN_GRID_ID1354     1.488e+01  1.051e-02  1416.51   <2e-16 ***\nDESTIN_GRID_ID1355     1.469e+01  1.226e-02  1198.18   <2e-16 ***\nDESTIN_GRID_ID1357     1.427e+01  1.976e-02   721.93   <2e-16 ***\nDESTIN_GRID_ID1358     1.662e+01  4.404e-03  3773.11   <2e-16 ***\nDESTIN_GRID_ID1359     1.570e+01  6.711e-03  2338.98   <2e-16 ***\nDESTIN_GRID_ID1360     1.535e+01  7.490e-03  2049.00   <2e-16 ***\nDESTIN_GRID_ID1361     1.525e+01  1.027e-02  1484.71   <2e-16 ***\nDESTIN_GRID_ID1362     1.412e+01  2.831e-02   498.83   <2e-16 ***\nDESTIN_GRID_ID1368     1.459e+01  1.054e-02  1384.23   <2e-16 ***\nDESTIN_GRID_ID1369     1.484e+01  9.536e-03  1555.81   <2e-16 ***\nDESTIN_GRID_ID1370     1.650e+01  4.576e-03  3604.51   <2e-16 ***\nDESTIN_GRID_ID1371     1.585e+01  7.819e-03  2026.84   <2e-16 ***\nDESTIN_GRID_ID1372     1.575e+01  7.310e-03  2154.57   <2e-16 ***\nDESTIN_GRID_ID1373     1.268e+01  3.679e-02   344.67   <2e-16 ***\nDESTIN_GRID_ID1374     1.386e+01  1.614e-02   858.41   <2e-16 ***\nDESTIN_GRID_ID1375     1.572e+01  8.086e-03  1944.41   <2e-16 ***\nDESTIN_GRID_ID1376     1.424e+01  1.717e-02   829.62   <2e-16 ***\nDESTIN_GRID_ID1379     1.152e+01  7.764e-02   148.36   <2e-16 ***\nDESTIN_GRID_ID1380     1.723e+01  3.301e-03  5218.74   <2e-16 ***\nDESTIN_GRID_ID1381     1.763e+01  2.981e-03  5914.70   <2e-16 ***\nDESTIN_GRID_ID1382     1.679e+01  4.999e-03  3357.95   <2e-16 ***\nDESTIN_GRID_ID1383     1.432e+01  1.984e-02   721.67   <2e-16 ***\nDESTIN_GRID_ID1388     1.531e+01  7.554e-03  2026.32   <2e-16 ***\nDESTIN_GRID_ID1389     1.505e+01  8.393e-03  1792.71   <2e-16 ***\nDESTIN_GRID_ID1390     1.547e+01  7.659e-03  2019.94   <2e-16 ***\nDESTIN_GRID_ID1391     1.649e+01  5.537e-03  2978.58   <2e-16 ***\nDESTIN_GRID_ID1392     1.651e+01  1.169e-02  1413.19   <2e-16 ***\nDESTIN_GRID_ID1393     1.515e+01  8.810e-03  1719.68   <2e-16 ***\nDESTIN_GRID_ID1394     1.534e+01  6.870e-03  2233.14   <2e-16 ***\nDESTIN_GRID_ID1395     1.499e+01  8.038e-03  1864.82   <2e-16 ***\nDESTIN_GRID_ID1396     1.589e+01  5.746e-03  2764.72   <2e-16 ***\nDESTIN_GRID_ID1397     1.495e+01  9.028e-03  1656.39   <2e-16 ***\nDESTIN_GRID_ID1398     1.462e+01  1.551e-02   943.14   <2e-16 ***\nDESTIN_GRID_ID1400     1.477e+01  1.165e-02  1267.99   <2e-16 ***\nDESTIN_GRID_ID1401     1.650e+01  3.949e-03  4177.27   <2e-16 ***\nDESTIN_GRID_ID1402     1.586e+01  5.947e-03  2666.54   <2e-16 ***\nDESTIN_GRID_ID1404     1.504e+01  2.633e-02   571.10   <2e-16 ***\nDESTIN_GRID_ID1410     1.585e+01  5.715e-03  2773.09   <2e-16 ***\nDESTIN_GRID_ID1411     1.539e+01  8.229e-03  1870.03   <2e-16 ***\nDESTIN_GRID_ID1412     1.621e+01  5.188e-03  3124.51   <2e-16 ***\nDESTIN_GRID_ID1413     1.566e+01  7.208e-03  2172.40   <2e-16 ***\nDESTIN_GRID_ID1414     1.552e+01  6.517e-03  2381.34   <2e-16 ***\nDESTIN_GRID_ID1415     1.582e+01  5.988e-03  2641.98   <2e-16 ***\nDESTIN_GRID_ID1416     1.536e+01  7.584e-03  2025.96   <2e-16 ***\nDESTIN_GRID_ID1417     1.555e+01  5.891e-03  2640.20   <2e-16 ***\nDESTIN_GRID_ID1418     1.562e+01  6.228e-03  2507.93   <2e-16 ***\nDESTIN_GRID_ID1419     1.531e+01  8.060e-03  1899.93   <2e-16 ***\nDESTIN_GRID_ID1422     1.567e+01  6.596e-03  2374.90   <2e-16 ***\nDESTIN_GRID_ID1423     1.608e+01  5.693e-03  2824.57   <2e-16 ***\nDESTIN_GRID_ID1430     1.605e+01  5.896e-03  2721.57   <2e-16 ***\nDESTIN_GRID_ID1431     1.637e+01  4.731e-03  3460.74   <2e-16 ***\nDESTIN_GRID_ID1432     1.620e+01  4.932e-03  3285.58   <2e-16 ***\nDESTIN_GRID_ID1433     1.569e+01  1.027e-02  1527.35   <2e-16 ***\nDESTIN_GRID_ID1434     1.637e+01  4.777e-03  3426.90   <2e-16 ***\nDESTIN_GRID_ID1435     1.595e+01  5.288e-03  3015.55   <2e-16 ***\nDESTIN_GRID_ID1436     1.456e+01  1.113e-02  1307.77   <2e-16 ***\nDESTIN_GRID_ID1437     1.526e+01  7.033e-03  2169.83   <2e-16 ***\nDESTIN_GRID_ID1438     1.586e+01  4.878e-03  3251.47   <2e-16 ***\nDESTIN_GRID_ID1439     1.665e+01  4.039e-03  4121.77   <2e-16 ***\nDESTIN_GRID_ID1440     1.597e+01  7.399e-03  2158.31   <2e-16 ***\nDESTIN_GRID_ID1442     1.367e+01  1.989e-02   687.31   <2e-16 ***\nDESTIN_GRID_ID1443     1.580e+01  6.394e-03  2471.59   <2e-16 ***\nDESTIN_GRID_ID1444     1.663e+01  6.376e-03  2607.79   <2e-16 ***\nDESTIN_GRID_ID1452     1.678e+01  4.016e-03  4178.93   <2e-16 ***\nDESTIN_GRID_ID1453     1.589e+01  6.139e-03  2588.76   <2e-16 ***\nDESTIN_GRID_ID1454     1.491e+01  1.317e-02  1131.88   <2e-16 ***\nDESTIN_GRID_ID1455     1.568e+01  7.740e-03  2025.38   <2e-16 ***\nDESTIN_GRID_ID1456     1.569e+01  6.483e-03  2420.42   <2e-16 ***\nDESTIN_GRID_ID1457     1.634e+01  5.170e-03  3161.34   <2e-16 ***\nDESTIN_GRID_ID1458     1.705e+01  3.261e-03  5227.62   <2e-16 ***\nDESTIN_GRID_ID1459     1.453e+01  9.266e-03  1567.96   <2e-16 ***\nDESTIN_GRID_ID1460     1.584e+01  5.115e-03  3096.57   <2e-16 ***\nDESTIN_GRID_ID1461     1.574e+01  7.222e-03  2179.39   <2e-16 ***\nDESTIN_GRID_ID1464     1.540e+01  7.579e-03  2032.29   <2e-16 ***\nDESTIN_GRID_ID1465     1.487e+01  1.227e-02  1211.56   <2e-16 ***\nDESTIN_GRID_ID1472     1.576e+01  8.171e-03  1929.31   <2e-16 ***\nDESTIN_GRID_ID1473     1.661e+01  4.498e-03  3693.17   <2e-16 ***\nDESTIN_GRID_ID1474     1.643e+01  4.342e-03  3783.14   <2e-16 ***\nDESTIN_GRID_ID1475     1.604e+01  5.309e-03  3022.40   <2e-16 ***\nDESTIN_GRID_ID1476     1.523e+01  7.947e-03  1916.61   <2e-16 ***\nDESTIN_GRID_ID1477     1.699e+01  3.184e-03  5336.14   <2e-16 ***\nDESTIN_GRID_ID1478     1.554e+01  5.782e-03  2687.08   <2e-16 ***\nDESTIN_GRID_ID1479     1.481e+01  7.880e-03  1879.45   <2e-16 ***\nDESTIN_GRID_ID1480     1.699e+01  3.234e-03  5254.35   <2e-16 ***\nDESTIN_GRID_ID1481     1.557e+01  7.378e-03  2109.89   <2e-16 ***\nDESTIN_GRID_ID1482     1.671e+01  5.493e-03  3041.55   <2e-16 ***\nDESTIN_GRID_ID1485     1.445e+01  1.397e-02  1034.69   <2e-16 ***\nDESTIN_GRID_ID1494     1.648e+01  5.059e-03  3258.55   <2e-16 ***\nDESTIN_GRID_ID1495     1.549e+01  6.837e-03  2265.30   <2e-16 ***\nDESTIN_GRID_ID1496     1.636e+01  4.399e-03  3718.73   <2e-16 ***\nDESTIN_GRID_ID1497     1.514e+01  8.447e-03  1791.92   <2e-16 ***\nDESTIN_GRID_ID1498     1.535e+01  7.182e-03  2137.22   <2e-16 ***\nDESTIN_GRID_ID1499     1.577e+01  5.069e-03  3111.45   <2e-16 ***\nDESTIN_GRID_ID1500     1.525e+01  8.733e-03  1746.61   <2e-16 ***\nDESTIN_GRID_ID1501     1.614e+01  4.445e-03  3631.88   <2e-16 ***\nDESTIN_GRID_ID1502     1.610e+01  4.873e-03  3304.34   <2e-16 ***\nDESTIN_GRID_ID1506     1.361e+01  6.856e-02   198.48   <2e-16 ***\nDESTIN_GRID_ID1515     1.529e+01  1.507e-02  1014.60   <2e-16 ***\nDESTIN_GRID_ID1516     1.644e+01  4.406e-03  3730.83   <2e-16 ***\nDESTIN_GRID_ID1517     1.553e+01  7.602e-03  2043.23   <2e-16 ***\nDESTIN_GRID_ID1518     1.489e+01  9.092e-03  1637.63   <2e-16 ***\nDESTIN_GRID_ID1519     1.548e+01  8.862e-03  1746.49   <2e-16 ***\nDESTIN_GRID_ID1520     1.503e+01  7.491e-03  2005.87   <2e-16 ***\nDESTIN_GRID_ID1521     1.505e+01  7.814e-03  1925.89   <2e-16 ***\nDESTIN_GRID_ID1522     1.573e+01  5.657e-03  2781.11   <2e-16 ***\nDESTIN_GRID_ID1523     1.703e+01  4.878e-03  3491.15   <2e-16 ***\nDESTIN_GRID_ID1524     1.484e+01  1.309e-02  1134.04   <2e-16 ***\nDESTIN_GRID_ID1527     1.300e+01  3.654e-02   355.92   <2e-16 ***\nDESTIN_GRID_ID1535     1.409e+01  6.685e-02   210.85   <2e-16 ***\nDESTIN_GRID_ID1536     1.399e+01  2.985e-02   468.72   <2e-16 ***\nDESTIN_GRID_ID1537     1.594e+01  6.960e-03  2290.86   <2e-16 ***\nDESTIN_GRID_ID1538     1.571e+01  6.101e-03  2575.48   <2e-16 ***\nDESTIN_GRID_ID1539     1.569e+01  5.388e-03  2912.65   <2e-16 ***\nDESTIN_GRID_ID1540     1.518e+01  6.771e-03  2241.89   <2e-16 ***\nDESTIN_GRID_ID1541     1.587e+01  8.041e-03  1973.04   <2e-16 ***\nDESTIN_GRID_ID1542     1.512e+01  9.535e-03  1586.19   <2e-16 ***\nDESTIN_GRID_ID1543     1.514e+01  2.892e-02   523.32   <2e-16 ***\nDESTIN_GRID_ID1544     1.518e+01  9.865e-03  1539.14   <2e-16 ***\nDESTIN_GRID_ID1547     1.507e+01  1.520e-02   991.60   <2e-16 ***\nDESTIN_GRID_ID1556     1.365e+01  7.182e-02   190.02   <2e-16 ***\nDESTIN_GRID_ID1557     1.443e+01  2.154e-02   669.88   <2e-16 ***\nDESTIN_GRID_ID1558     1.596e+01  1.404e-02  1136.68   <2e-16 ***\nDESTIN_GRID_ID1559     1.622e+01  4.632e-03  3502.68   <2e-16 ***\nDESTIN_GRID_ID1560     1.623e+01  4.406e-03  3684.12   <2e-16 ***\nDESTIN_GRID_ID1561     1.559e+01  7.382e-03  2111.69   <2e-16 ***\nDESTIN_GRID_ID1562     1.351e+01  1.699e-02   795.10   <2e-16 ***\nDESTIN_GRID_ID1563     1.448e+01  1.011e-02  1431.58   <2e-16 ***\nDESTIN_GRID_ID1564     1.501e+01  8.715e-03  1722.08   <2e-16 ***\nDESTIN_GRID_ID1565     1.572e+01  6.688e-03  2350.79   <2e-16 ***\nDESTIN_GRID_ID1566     1.410e+01  1.732e-02   814.04   <2e-16 ***\nDESTIN_GRID_ID1567     1.457e+01  1.834e-02   794.26   <2e-16 ***\nDESTIN_GRID_ID1568     1.562e+01  1.167e-02  1338.69   <2e-16 ***\nDESTIN_GRID_ID1578     1.430e+01  1.111e-01   128.69   <2e-16 ***\nDESTIN_GRID_ID1580     1.329e+01  2.960e-02   449.16   <2e-16 ***\nDESTIN_GRID_ID1581     1.591e+01  5.452e-03  2919.26   <2e-16 ***\nDESTIN_GRID_ID1582     1.609e+01  4.558e-03  3530.93   <2e-16 ***\nDESTIN_GRID_ID1583     1.462e+01  2.231e-02   655.35   <2e-16 ***\nDESTIN_GRID_ID1584     1.459e+01  1.287e-02  1133.36   <2e-16 ***\nDESTIN_GRID_ID1585     1.497e+01  9.218e-03  1623.43   <2e-16 ***\nDESTIN_GRID_ID1586     1.586e+01  5.758e-03  2753.73   <2e-16 ***\nDESTIN_GRID_ID1589     1.428e+01  2.244e-02   636.33   <2e-16 ***\nDESTIN_GRID_ID1590     1.536e+01  1.384e-02  1109.87   <2e-16 ***\nDESTIN_GRID_ID1600     1.524e+01  1.619e-02   941.33   <2e-16 ***\nDESTIN_GRID_ID1601     1.498e+01  7.992e-03  1874.32   <2e-16 ***\nDESTIN_GRID_ID1602     1.541e+01  7.518e-03  2049.19   <2e-16 ***\nDESTIN_GRID_ID1603     1.648e+01  4.508e-03  3654.78   <2e-16 ***\nDESTIN_GRID_ID1604     1.433e+01  1.152e-02  1243.67   <2e-16 ***\nDESTIN_GRID_ID1605     1.538e+01  6.384e-03  2409.85   <2e-16 ***\nDESTIN_GRID_ID1606     1.482e+01  1.534e-02   966.32   <2e-16 ***\nDESTIN_GRID_ID1607     1.622e+01  4.672e-03  3471.56   <2e-16 ***\nDESTIN_GRID_ID1608     1.546e+01  7.053e-03  2192.00   <2e-16 ***\nDESTIN_GRID_ID1609     1.627e+01  5.552e-03  2930.92   <2e-16 ***\nDESTIN_GRID_ID1610     1.435e+01  2.795e-02   513.54   <2e-16 ***\nDESTIN_GRID_ID1622     1.582e+01  1.209e-02  1309.00   <2e-16 ***\nDESTIN_GRID_ID1623     1.601e+01  4.848e-03  3301.60   <2e-16 ***\nDESTIN_GRID_ID1624     1.653e+01  4.357e-03  3794.11   <2e-16 ***\nDESTIN_GRID_ID1625     1.574e+01  6.213e-03  2532.66   <2e-16 ***\nDESTIN_GRID_ID1626     1.743e+01  3.014e-03  5782.40   <2e-16 ***\nDESTIN_GRID_ID1627     1.448e+01  9.510e-03  1522.16   <2e-16 ***\nDESTIN_GRID_ID1628     1.654e+01  4.071e-03  4063.82   <2e-16 ***\nDESTIN_GRID_ID1629     1.380e+01  1.622e-02   851.07   <2e-16 ***\nDESTIN_GRID_ID1630     1.449e+01  1.266e-02  1145.02   <2e-16 ***\nDESTIN_GRID_ID1631     1.432e+01  1.806e-02   792.93   <2e-16 ***\nDESTIN_GRID_ID1642     1.346e+01  3.360e-02   400.65   <2e-16 ***\nDESTIN_GRID_ID1643     1.549e+01  6.418e-03  2414.28   <2e-16 ***\nDESTIN_GRID_ID1644     1.554e+01  8.374e-03  1856.07   <2e-16 ***\nDESTIN_GRID_ID1645     1.540e+01  6.971e-03  2208.86   <2e-16 ***\nDESTIN_GRID_ID1646     1.581e+01  8.303e-03  1903.94   <2e-16 ***\nDESTIN_GRID_ID1647     1.512e+01  6.843e-03  2210.03   <2e-16 ***\nDESTIN_GRID_ID1648     1.536e+01  6.156e-03  2495.51   <2e-16 ***\nDESTIN_GRID_ID1649     1.602e+01  4.719e-03  3394.74   <2e-16 ***\nDESTIN_GRID_ID1650     1.527e+01  7.987e-03  1911.54   <2e-16 ***\nDESTIN_GRID_ID1664     1.177e+01  1.313e-01    89.65   <2e-16 ***\nDESTIN_GRID_ID1665     1.612e+01  4.651e-03  3466.47   <2e-16 ***\nDESTIN_GRID_ID1666     1.617e+01  4.571e-03  3538.07   <2e-16 ***\nDESTIN_GRID_ID1667     1.544e+01  1.475e-02  1046.69   <2e-16 ***\nDESTIN_GRID_ID1668     1.508e+01  7.525e-03  2004.52   <2e-16 ***\nDESTIN_GRID_ID1670     1.587e+01  4.917e-03  3228.11   <2e-16 ***\nDESTIN_GRID_ID1671     1.526e+01  1.224e-02  1246.53   <2e-16 ***\nDESTIN_GRID_ID1672     1.458e+01  1.320e-02  1104.89   <2e-16 ***\nDESTIN_GRID_ID1684     1.612e+01  9.284e-03  1736.63   <2e-16 ***\nDESTIN_GRID_ID1685     1.481e+01  9.992e-03  1482.18   <2e-16 ***\nDESTIN_GRID_ID1686     1.555e+01  6.187e-03  2514.18   <2e-16 ***\nDESTIN_GRID_ID1687     1.596e+01  7.260e-03  2198.51   <2e-16 ***\nDESTIN_GRID_ID1688     1.511e+01  7.538e-03  2004.98   <2e-16 ***\nDESTIN_GRID_ID1689     1.451e+01  1.066e-02  1361.34   <2e-16 ***\nDESTIN_GRID_ID1690     1.397e+01  1.416e-02   986.67   <2e-16 ***\nDESTIN_GRID_ID1691     1.609e+01  4.708e-03  3416.50   <2e-16 ***\nDESTIN_GRID_ID1692     1.403e+01  1.542e-02   909.57   <2e-16 ***\nDESTIN_GRID_ID1706     1.553e+01  8.333e-03  1863.51   <2e-16 ***\nDESTIN_GRID_ID1707     1.464e+01  9.102e-03  1608.85   <2e-16 ***\nDESTIN_GRID_ID1708     1.523e+01  7.105e-03  2143.23   <2e-16 ***\nDESTIN_GRID_ID1709     1.601e+01  5.171e-03  3097.02   <2e-16 ***\nDESTIN_GRID_ID1710     1.597e+01  5.461e-03  2924.96   <2e-16 ***\nDESTIN_GRID_ID1711     1.654e+01  4.080e-03  4054.91   <2e-16 ***\nDESTIN_GRID_ID1712     1.574e+01  4.963e-03  3171.02   <2e-16 ***\nDESTIN_GRID_ID1713     1.343e+01  1.679e-02   800.03   <2e-16 ***\nDESTIN_GRID_ID1714     1.493e+01  9.137e-03  1633.71   <2e-16 ***\nDESTIN_GRID_ID1727     1.605e+01  6.061e-03  2647.88   <2e-16 ***\nDESTIN_GRID_ID1728     1.593e+01  5.132e-03  3104.23   <2e-16 ***\nDESTIN_GRID_ID1729     1.606e+01  4.875e-03  3295.04   <2e-16 ***\nDESTIN_GRID_ID1730     1.518e+01  8.707e-03  1743.96   <2e-16 ***\nDESTIN_GRID_ID1731     1.614e+01  4.975e-03  3244.79   <2e-16 ***\nDESTIN_GRID_ID1732     1.556e+01  5.395e-03  2883.59   <2e-16 ***\nDESTIN_GRID_ID1733     1.455e+01  9.059e-03  1606.46   <2e-16 ***\nDESTIN_GRID_ID1734     1.583e+01  5.248e-03  3015.92   <2e-16 ***\nDESTIN_GRID_ID1735     1.513e+01  1.621e-02   933.24   <2e-16 ***\nDESTIN_GRID_ID1748     1.507e+01  9.887e-03  1524.23   <2e-16 ***\nDESTIN_GRID_ID1749     1.609e+01  4.703e-03  3421.90   <2e-16 ***\nDESTIN_GRID_ID1750     1.605e+01  4.825e-03  3325.91   <2e-16 ***\nDESTIN_GRID_ID1751     1.565e+01  6.729e-03  2325.64   <2e-16 ***\nDESTIN_GRID_ID1753     1.600e+01  4.948e-03  3233.77   <2e-16 ***\nDESTIN_GRID_ID1754     1.698e+01  3.209e-03  5292.06   <2e-16 ***\nDESTIN_GRID_ID1755     1.638e+01  3.979e-03  4116.13   <2e-16 ***\nDESTIN_GRID_ID1756     1.544e+01  6.150e-03  2511.24   <2e-16 ***\nDESTIN_GRID_ID1757     1.416e+01  2.292e-02   617.56   <2e-16 ***\nDESTIN_GRID_ID1769     1.579e+01  6.528e-03  2418.40   <2e-16 ***\nDESTIN_GRID_ID1770     1.530e+01  8.793e-03  1740.40   <2e-16 ***\nDESTIN_GRID_ID1771     1.610e+01  5.579e-03  2885.20   <2e-16 ***\nDESTIN_GRID_ID1772     1.702e+01  7.209e-03  2361.48   <2e-16 ***\nDESTIN_GRID_ID1774     1.512e+01  7.475e-03  2022.90   <2e-16 ***\nDESTIN_GRID_ID1775     1.472e+01  8.270e-03  1780.32   <2e-16 ***\nDESTIN_GRID_ID1776     1.694e+01  3.239e-03  5229.94   <2e-16 ***\nDESTIN_GRID_ID1777     1.521e+01  7.646e-03  1989.57   <2e-16 ***\nDESTIN_GRID_ID1778     1.439e+01  2.277e-02   632.10   <2e-16 ***\nDESTIN_GRID_ID1790     1.625e+01  5.811e-03  2796.50   <2e-16 ***\nDESTIN_GRID_ID1791     1.560e+01  7.014e-03  2223.67   <2e-16 ***\nDESTIN_GRID_ID1792     1.579e+01  7.575e-03  2084.92   <2e-16 ***\nDESTIN_GRID_ID1793     1.577e+01  6.268e-03  2515.80   <2e-16 ***\nDESTIN_GRID_ID1794     1.730e+01  7.604e-03  2274.67   <2e-16 ***\nDESTIN_GRID_ID1795     1.354e+01  2.150e-02   629.90   <2e-16 ***\nDESTIN_GRID_ID1796     1.573e+01  5.700e-03  2759.73   <2e-16 ***\nDESTIN_GRID_ID1797     1.539e+01  5.951e-03  2585.96   <2e-16 ***\nDESTIN_GRID_ID1798     1.573e+01  5.610e-03  2804.83   <2e-16 ***\nDESTIN_GRID_ID1799     1.496e+01  9.334e-03  1602.60   <2e-16 ***\nDESTIN_GRID_ID1800     1.293e+01  6.472e-02   199.82   <2e-16 ***\nDESTIN_GRID_ID1811     1.542e+01  8.936e-03  1725.62   <2e-16 ***\nDESTIN_GRID_ID1812     1.653e+01  3.956e-03  4179.97   <2e-16 ***\nDESTIN_GRID_ID1813     1.673e+01  3.752e-03  4460.46   <2e-16 ***\nDESTIN_GRID_ID1817     1.399e+01  1.411e-02   991.04   <2e-16 ***\nDESTIN_GRID_ID1818     1.534e+01  6.152e-03  2493.46   <2e-16 ***\nDESTIN_GRID_ID1819     1.702e+01  3.274e-03  5197.42   <2e-16 ***\nDESTIN_GRID_ID1820     1.281e+01  5.042e-02   254.00   <2e-16 ***\nDESTIN_GRID_ID1832     1.659e+01  5.090e-03  3258.64   <2e-16 ***\nDESTIN_GRID_ID1833     1.521e+01  7.814e-03  1947.18   <2e-16 ***\nDESTIN_GRID_ID1834     1.514e+01  7.244e-03  2090.18   <2e-16 ***\nDESTIN_GRID_ID1835     1.525e+01  8.005e-03  1904.82   <2e-16 ***\nDESTIN_GRID_ID1837     1.527e+01  1.421e-02  1074.38   <2e-16 ***\nDESTIN_GRID_ID1839     1.409e+01  1.382e-02  1019.69   <2e-16 ***\nDESTIN_GRID_ID1840     1.684e+01  3.615e-03  4658.72   <2e-16 ***\nDESTIN_GRID_ID1841     1.354e+01  2.815e-02   481.08   <2e-16 ***\nDESTIN_GRID_ID1842     1.506e+01  1.635e-02   921.32   <2e-16 ***\nDESTIN_GRID_ID1853     1.577e+01  6.269e-03  2515.90   <2e-16 ***\nDESTIN_GRID_ID1854     1.592e+01  5.658e-03  2813.58   <2e-16 ***\nDESTIN_GRID_ID1855     1.616e+01  5.023e-03  3215.94   <2e-16 ***\nDESTIN_GRID_ID1858     1.629e+01  8.549e-03  1905.80   <2e-16 ***\nDESTIN_GRID_ID1860     1.465e+01  2.211e-02   662.83   <2e-16 ***\nDESTIN_GRID_ID1861     1.571e+01  6.238e-03  2518.04   <2e-16 ***\nDESTIN_GRID_ID1874     1.543e+01  1.072e-02  1439.44   <2e-16 ***\nDESTIN_GRID_ID1875     1.367e+01  2.393e-02   571.42   <2e-16 ***\nDESTIN_GRID_ID1876     1.509e+01  2.466e-02   611.79   <2e-16 ***\nDESTIN_GRID_ID1877     1.593e+01  5.424e-03  2936.74   <2e-16 ***\nDESTIN_GRID_ID1880     1.541e+01  1.418e-02  1087.04   <2e-16 ***\nDESTIN_GRID_ID1882     1.555e+01  6.782e-03  2293.51   <2e-16 ***\nDESTIN_GRID_ID1883     1.434e+01  2.159e-02   664.23   <2e-16 ***\nDESTIN_GRID_ID1895     1.622e+01  5.502e-03  2948.90   <2e-16 ***\nDESTIN_GRID_ID1896     1.517e+01  8.239e-03  1841.40   <2e-16 ***\nDESTIN_GRID_ID1897     1.435e+01  1.318e-02  1089.27   <2e-16 ***\nDESTIN_GRID_ID1898     1.405e+01  2.562e-02   548.22   <2e-16 ***\nDESTIN_GRID_ID1901     1.483e+01  2.049e-02   723.52   <2e-16 ***\nDESTIN_GRID_ID1903     1.406e+01  1.924e-02   730.84   <2e-16 ***\nDESTIN_GRID_ID1917     1.505e+01  9.994e-03  1505.45   <2e-16 ***\nDESTIN_GRID_ID1918     1.630e+01  6.991e-03  2331.62   <2e-16 ***\nDESTIN_GRID_ID1919     1.615e+01  5.136e-03  3143.39   <2e-16 ***\nDESTIN_GRID_ID1922     1.596e+01  1.076e-02  1483.32   <2e-16 ***\nDESTIN_GRID_ID1924     1.364e+01  2.390e-02   570.70   <2e-16 ***\nDESTIN_GRID_ID1937     1.561e+01  8.089e-03  1930.16   <2e-16 ***\nDESTIN_GRID_ID1938     1.631e+01  4.971e-03  3281.27   <2e-16 ***\nDESTIN_GRID_ID1939     1.503e+01  9.521e-03  1578.34   <2e-16 ***\nDESTIN_GRID_ID1942     1.482e+01  1.917e-02   772.79   <2e-16 ***\nDESTIN_GRID_ID1959     1.511e+01  1.044e-02  1447.63   <2e-16 ***\nDESTIN_GRID_ID1960     1.734e+01  3.044e-03  5695.76   <2e-16 ***\nDESTIN_GRID_ID1961     1.484e+01  1.033e-02  1436.70   <2e-16 ***\nDESTIN_GRID_ID1962     1.567e+01  6.471e-03  2422.33   <2e-16 ***\nDESTIN_GRID_ID1964     1.653e+01  1.132e-02  1460.41   <2e-16 ***\nDESTIN_GRID_ID1979     1.560e+01  8.717e-03  1790.08   <2e-16 ***\nDESTIN_GRID_ID1980     1.546e+01  7.282e-03  2123.06   <2e-16 ***\nDESTIN_GRID_ID1981     1.536e+01  7.710e-03  1992.09   <2e-16 ***\nDESTIN_GRID_ID1982     1.567e+01  8.177e-03  1915.82   <2e-16 ***\nDESTIN_GRID_ID1983     1.563e+01  6.575e-03  2376.51   <2e-16 ***\nDESTIN_GRID_ID1984     1.569e+01  6.483e-03  2419.50   <2e-16 ***\nDESTIN_GRID_ID1985     1.591e+01  6.147e-03  2588.16   <2e-16 ***\nDESTIN_GRID_ID2001     1.550e+01  7.177e-03  2159.87   <2e-16 ***\nDESTIN_GRID_ID2002     1.557e+01  5.844e-03  2664.66   <2e-16 ***\nDESTIN_GRID_ID2003     1.611e+01  4.855e-03  3318.92   <2e-16 ***\nDESTIN_GRID_ID2004     1.639e+01  4.679e-03  3503.25   <2e-16 ***\nDESTIN_GRID_ID2005     1.536e+01  7.026e-03  2186.77   <2e-16 ***\nDESTIN_GRID_ID2006     1.643e+01  5.021e-03  3272.94   <2e-16 ***\nDESTIN_GRID_ID2007     1.317e+01  3.310e-02   397.94   <2e-16 ***\nDESTIN_GRID_ID2022     1.616e+01  7.070e-03  2286.07   <2e-16 ***\nDESTIN_GRID_ID2023     1.604e+01  5.158e-03  3110.68   <2e-16 ***\nDESTIN_GRID_ID2024     1.631e+01  4.358e-03  3742.95   <2e-16 ***\nDESTIN_GRID_ID2025     1.510e+01  7.350e-03  2054.84   <2e-16 ***\nDESTIN_GRID_ID2026     1.435e+01  1.287e-02  1115.40   <2e-16 ***\nDESTIN_GRID_ID2027     1.639e+01  4.749e-03  3450.27   <2e-16 ***\nDESTIN_GRID_ID2043     1.459e+01  1.264e-02  1154.09   <2e-16 ***\nDESTIN_GRID_ID2044     1.558e+01  6.450e-03  2415.90   <2e-16 ***\nDESTIN_GRID_ID2045     1.482e+01  1.249e-02  1186.70   <2e-16 ***\nDESTIN_GRID_ID2046     1.629e+01  4.134e-03  3940.53   <2e-16 ***\nDESTIN_GRID_ID2047     1.445e+01  1.039e-02  1390.80   <2e-16 ***\nDESTIN_GRID_ID2048     1.475e+01  9.533e-03  1547.31   <2e-16 ***\nDESTIN_GRID_ID2049     1.316e+01  3.038e-02   433.11   <2e-16 ***\nDESTIN_GRID_ID2064     1.548e+01  7.661e-03  2020.39   <2e-16 ***\nDESTIN_GRID_ID2065     1.539e+01  7.615e-03  2021.24   <2e-16 ***\nDESTIN_GRID_ID2066     1.291e+01  3.802e-02   339.61   <2e-16 ***\nDESTIN_GRID_ID2067     1.764e+01  2.754e-03  6402.60   <2e-16 ***\nDESTIN_GRID_ID2068     1.445e+01  1.541e-02   937.63   <2e-16 ***\nDESTIN_GRID_ID2069     1.497e+01  9.460e-03  1582.67   <2e-16 ***\nDESTIN_GRID_ID2085     1.562e+01  7.808e-03  2000.44   <2e-16 ***\nDESTIN_GRID_ID2086     1.679e+01  4.152e-03  4043.86   <2e-16 ***\nDESTIN_GRID_ID2087     1.646e+01  4.420e-03  3724.47   <2e-16 ***\nDESTIN_GRID_ID2088     1.533e+01  6.254e-03  2451.78   <2e-16 ***\nDESTIN_GRID_ID2089     1.496e+01  9.516e-03  1572.31   <2e-16 ***\nDESTIN_GRID_ID2090     1.743e+01  3.089e-03  5642.30   <2e-16 ***\nDESTIN_GRID_ID2091     1.245e+01  7.110e-02   175.05   <2e-16 ***\nDESTIN_GRID_ID2105     1.535e+01  6.656e-02   230.54   <2e-16 ***\nDESTIN_GRID_ID2106     1.415e+01  1.579e-02   896.07   <2e-16 ***\nDESTIN_GRID_ID2107     1.672e+01  4.223e-03  3959.24   <2e-16 ***\nDESTIN_GRID_ID2108     1.631e+01  5.110e-03  3191.99   <2e-16 ***\nDESTIN_GRID_ID2109     1.496e+01  7.426e-03  2014.55   <2e-16 ***\nDESTIN_GRID_ID2110     1.452e+01  1.266e-02  1147.17   <2e-16 ***\nDESTIN_GRID_ID2111     1.344e+01  3.624e-02   371.02   <2e-16 ***\nDESTIN_GRID_ID2128     1.605e+01  8.678e-03  1850.01   <2e-16 ***\nDESTIN_GRID_ID2129     1.541e+01  1.119e-02  1376.60   <2e-16 ***\nDESTIN_GRID_ID2130     1.540e+01  6.068e-03  2536.99   <2e-16 ***\nDESTIN_GRID_ID2131     1.536e+01  7.884e-03  1948.12   <2e-16 ***\nDESTIN_GRID_ID2132     1.511e+01  8.576e-03  1762.08   <2e-16 ***\nDESTIN_GRID_ID2148     1.494e+01  1.696e-02   880.95   <2e-16 ***\nDESTIN_GRID_ID2149     1.499e+01  1.174e-02  1277.65   <2e-16 ***\nDESTIN_GRID_ID2150     1.501e+01  9.550e-03  1571.18   <2e-16 ***\nDESTIN_GRID_ID2151     1.681e+01  3.509e-03  4790.99   <2e-16 ***\nDESTIN_GRID_ID2152     1.580e+01  5.821e-03  2714.36   <2e-16 ***\nDESTIN_GRID_ID2153     1.464e+01  1.255e-02  1166.85   <2e-16 ***\nDESTIN_GRID_ID2171     1.598e+01  6.189e-03  2581.65   <2e-16 ***\nDESTIN_GRID_ID2172     1.438e+01  1.230e-02  1169.25   <2e-16 ***\nDESTIN_GRID_ID2173     1.495e+01  7.998e-03  1869.29   <2e-16 ***\nDESTIN_GRID_ID2174     1.572e+01  7.001e-03  2244.77   <2e-16 ***\nDESTIN_GRID_ID2191     1.621e+01  8.569e-03  1891.78   <2e-16 ***\nDESTIN_GRID_ID2192     1.501e+01  1.165e-02  1288.13   <2e-16 ***\nDESTIN_GRID_ID2193     1.568e+01  6.771e-03  2315.28   <2e-16 ***\nDESTIN_GRID_ID2194     1.568e+01  6.251e-03  2508.25   <2e-16 ***\nDESTIN_GRID_ID2195     1.427e+01  4.116e-02   346.83   <2e-16 ***\nDESTIN_GRID_ID2212     1.702e+01  1.408e-02  1209.53   <2e-16 ***\nDESTIN_GRID_ID2213     1.598e+01  9.250e-03  1727.32   <2e-16 ***\nDESTIN_GRID_ID2214     1.688e+01  7.265e-03  2323.38   <2e-16 ***\nDESTIN_GRID_ID2215     1.489e+01  1.045e-02  1425.06   <2e-16 ***\nDESTIN_GRID_ID2216     1.593e+01  6.390e-03  2492.81   <2e-16 ***\nDESTIN_GRID_ID2233     1.676e+01  1.028e-02  1630.75   <2e-16 ***\nDESTIN_GRID_ID2234     1.716e+01  8.506e-03  2017.91   <2e-16 ***\nDESTIN_GRID_ID2235     1.599e+01  9.513e-03  1680.33   <2e-16 ***\nDESTIN_GRID_ID2236     1.446e+01  1.420e-02  1018.71   <2e-16 ***\nDESTIN_GRID_ID2237     1.592e+01  1.171e-02  1359.40   <2e-16 ***\nDESTIN_GRID_ID2256     1.623e+01  1.275e-02  1272.99   <2e-16 ***\nDESTIN_GRID_ID2257     1.360e+01  2.944e-02   461.93   <2e-16 ***\nDESTIN_GRID_ID2258     1.566e+01  7.661e-03  2043.95   <2e-16 ***\nDESTIN_GRID_ID2259     1.672e+01  1.061e-02  1576.12   <2e-16 ***\nDESTIN_GRID_ID2277     1.517e+01  2.654e-02   571.59   <2e-16 ***\nDESTIN_GRID_ID2278     1.498e+01  1.753e-02   854.93   <2e-16 ***\nDESTIN_GRID_ID2279     1.574e+01  7.861e-03  2001.82   <2e-16 ***\nDESTIN_GRID_ID2280     1.434e+01  3.439e-02   416.93   <2e-16 ***\nDESTIN_GRID_ID2297     1.473e+01  2.098e-02   701.96   <2e-16 ***\nDESTIN_GRID_ID2300     1.483e+01  2.102e-02   705.80   <2e-16 ***\nDESTIN_GRID_ID2301     1.541e+01  1.032e-02  1493.80   <2e-16 ***\nDESTIN_GRID_ID2318     1.709e+01  6.183e-03  2764.99   <2e-16 ***\nDESTIN_GRID_ID2319     1.706e+01  5.845e-03  2918.79   <2e-16 ***\nDESTIN_GRID_ID2322     1.567e+01  1.031e-02  1518.89   <2e-16 ***\nDESTIN_GRID_ID2337     1.670e+01  1.732e-02   964.31   <2e-16 ***\nDESTIN_GRID_ID2341     1.723e+01  5.867e-03  2937.51   <2e-16 ***\nDESTIN_GRID_ID2343     1.490e+01  1.443e-02  1032.59   <2e-16 ***\nDESTIN_GRID_ID2361     1.603e+01  1.007e-02  1592.20   <2e-16 ***\nDESTIN_GRID_ID2364     1.359e+01  3.639e-02   373.52   <2e-16 ***\nDESTIN_GRID_ID2379     1.594e+01  2.599e-02   613.15   <2e-16 ***\nDESTIN_GRID_ID2384     1.685e+01  7.206e-03  2337.97   <2e-16 ***\nDESTIN_GRID_ID2405     1.756e+01  5.101e-03  3443.18   <2e-16 ***\nDESTIN_GRID_ID2406     1.454e+01  2.430e-02   598.39   <2e-16 ***\nDESTIN_GRID_ID2426     1.693e+01  1.137e-02  1489.45   <2e-16 ***\nDESTIN_GRID_ID2427     1.713e+01  7.129e-03  2402.71   <2e-16 ***\nDESTIN_GRID_ID2505     1.728e+01  1.953e-02   884.97   <2e-16 ***\nlog(ORIGIN_RENTAL_CT)  3.331e-03  9.551e-05    34.88   <2e-16 ***\nlog(ORIGIN_2ROOM_CT)   1.448e-02  1.176e-04   123.10   <2e-16 ***\nlog(ORIGIN_3ROOM_CT)   1.232e-02  9.526e-05   129.35   <2e-16 ***\nlog(ORIGIN_4ROOM_CT)   3.329e-02  1.890e-04   176.10   <2e-16 ***\nlog(ORIGIN_5ROOM_CT)   9.408e-02  1.927e-04   488.23   <2e-16 ***\nlog(ORIGIN_EXEC_CT)    4.538e-02  9.763e-05   464.85   <2e-16 ***\nlog(ORIGIN_STUDIO_CT)  6.125e-03  1.430e-04    42.84   <2e-16 ***\nlog(dist)             -1.416e+00  2.888e-04 -4904.88   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 276215117  on 62120  degrees of freedom\nResidual deviance:  31076048  on 61294  degrees of freedom\nAIC: 31413072\n\nNumber of Fisher Scoring iterations: 8\n\n\n\n\n\nDoubly Constrained SIM Output\n\nDoubly Constrained R-squaredDoubly Constrained CoefficientsDoubly Constrained Summary\n\n\nThe R-squared value of 0.59 tells us that the explanatory variables are able to explain 59 % of the variance in the TRIPS target variable.\n\nCalcRSquared(dbcSIM$data$TRIPS, dbcSIM$fitted.values)\n\n[1] 0.5897933\n\n\n\n\nThe explanatory variable ‘distance’ is staitstically significant and has a coefficient of -0.159.\n\ndbcSIM$coefficients[1]\n\n(Intercept) \n   14.49957 \n\ndbcSIM$coefficients[1635]\n\nlog(dist) \n-1.588491 \n\n\n\n\n\nsummary(dbcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_GRID_ID + DESTIN_GRID_ID + log(dist), \n    family = poisson(link = \"log\"), data = flow_data1, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-217.87    -8.91    -3.06     2.58   387.35  \n\nCoefficients:\n                     Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)        14.4995737  0.1405229   103.183  < 2e-16 ***\nORIGIN_GRID_ID44    1.7056185  0.2004186     8.510  < 2e-16 ***\nORIGIN_GRID_ID46   -0.1467601  0.1618183    -0.907 0.364436    \nORIGIN_GRID_ID66    1.4079544  0.1872682     7.518 5.55e-14 ***\nORIGIN_GRID_ID67    1.7858665  0.1317516    13.555  < 2e-16 ***\nORIGIN_GRID_ID68   -0.6458621  0.1733066    -3.727 0.000194 ***\nORIGIN_GRID_ID86   -0.4812676  0.1543778    -3.117 0.001824 ** \nORIGIN_GRID_ID87    3.3484453  0.1505756    22.238  < 2e-16 ***\nORIGIN_GRID_ID88    2.3745407  0.1304762    18.199  < 2e-16 ***\nORIGIN_GRID_ID89    0.2003904  0.1389305     1.442 0.149196    \nORIGIN_GRID_ID90    0.9121014  0.1837089     4.965 6.87e-07 ***\nORIGIN_GRID_ID109   0.3374593  0.1681154     2.007 0.044717 *  \nORIGIN_GRID_ID110   0.5220464  0.1528295     3.416 0.000636 ***\nORIGIN_GRID_ID111   3.9132098  0.1300257    30.096  < 2e-16 ***\nORIGIN_GRID_ID112   0.1043026  0.1479787     0.705 0.480905    \nORIGIN_GRID_ID128   3.0501922  0.1328349    22.962  < 2e-16 ***\nORIGIN_GRID_ID129   0.3435998  0.2294048     1.498 0.134188    \nORIGIN_GRID_ID130   1.2640907  0.1413194     8.945  < 2e-16 ***\nORIGIN_GRID_ID131   1.8830749  0.1337220    14.082  < 2e-16 ***\nORIGIN_GRID_ID132   0.1682472  0.1412622     1.191 0.233643    \nORIGIN_GRID_ID133   1.0811357  0.1360628     7.946 1.93e-15 ***\nORIGIN_GRID_ID134   4.1188943  0.1328219    31.011  < 2e-16 ***\nORIGIN_GRID_ID150   4.1722876  0.1311427    31.815  < 2e-16 ***\nORIGIN_GRID_ID151   0.4327105  0.1535217     2.819 0.004824 ** \nORIGIN_GRID_ID152   0.2180987  0.1561854     1.396 0.162591    \nORIGIN_GRID_ID153   1.4524080  0.1371681    10.589  < 2e-16 ***\nORIGIN_GRID_ID154   4.1305781  0.1295147    31.893  < 2e-16 ***\nORIGIN_GRID_ID155   0.9760504  0.1351619     7.221 5.15e-13 ***\nORIGIN_GRID_ID156   1.6919869  0.1406782    12.027  < 2e-16 ***\nORIGIN_GRID_ID172   2.3089306  0.1458963    15.826  < 2e-16 ***\nORIGIN_GRID_ID174   1.1016926  0.1381941     7.972 1.56e-15 ***\nORIGIN_GRID_ID175   3.8108284  0.1298083    29.357  < 2e-16 ***\nORIGIN_GRID_ID176   4.8300292  0.1293904    37.329  < 2e-16 ***\nORIGIN_GRID_ID195  -0.0891281  0.1564900    -0.570 0.568986    \nORIGIN_GRID_ID196   0.9041214  0.1363315     6.632 3.32e-11 ***\nORIGIN_GRID_ID197   0.0773601  0.1861108     0.416 0.677654    \nORIGIN_GRID_ID215   1.4496648  0.1628894     8.900  < 2e-16 ***\nORIGIN_GRID_ID216   5.2418091  0.1295177    40.472  < 2e-16 ***\nORIGIN_GRID_ID217   2.3685387  0.1312764    18.042  < 2e-16 ***\nORIGIN_GRID_ID237   0.4374744  0.3281544     1.333 0.182487    \nORIGIN_GRID_ID238   0.8413778  0.1502061     5.601 2.13e-08 ***\nORIGIN_GRID_ID239   1.1068227  0.1939436     5.707 1.15e-08 ***\nORIGIN_GRID_ID257   0.2025771  0.1438887     1.408 0.159169    \nORIGIN_GRID_ID258   2.2499550  0.1326450    16.962  < 2e-16 ***\nORIGIN_GRID_ID259   1.4811751  0.1358451    10.903  < 2e-16 ***\nORIGIN_GRID_ID278   1.6241431  0.1350958    12.022  < 2e-16 ***\nORIGIN_GRID_ID279   0.4203812  0.1383974     3.037 0.002386 ** \nORIGIN_GRID_ID280   0.9470532  0.1389435     6.816 9.35e-12 ***\nORIGIN_GRID_ID298  -3.1158059  0.3996761    -7.796 6.40e-15 ***\nORIGIN_GRID_ID299   0.1412003  0.1426904     0.990 0.322390    \nORIGIN_GRID_ID300   4.1790626  0.1297150    32.217  < 2e-16 ***\nORIGIN_GRID_ID320  -0.2674725  0.1396215    -1.916 0.055404 .  \nORIGIN_GRID_ID321   0.8255990  0.1524912     5.414 6.16e-08 ***\nORIGIN_GRID_ID322   2.5827879  0.1357718    19.023  < 2e-16 ***\nORIGIN_GRID_ID340   1.9864620  0.1332500    14.908  < 2e-16 ***\nORIGIN_GRID_ID341  -0.1167022  0.1389926    -0.840 0.401116    \nORIGIN_GRID_ID342   2.0007361  0.1363843    14.670  < 2e-16 ***\nORIGIN_GRID_ID363   1.5855978  0.1356125    11.692  < 2e-16 ***\nORIGIN_GRID_ID364   2.1537747  0.1323674    16.271  < 2e-16 ***\nORIGIN_GRID_ID383   1.0480369  0.1338339     7.831 4.84e-15 ***\nORIGIN_GRID_ID384   0.5098754  0.1397421     3.649 0.000264 ***\nORIGIN_GRID_ID385   0.8798758  0.1471813     5.978 2.26e-09 ***\nORIGIN_GRID_ID404   2.1439835  0.1331749    16.099  < 2e-16 ***\nORIGIN_GRID_ID405   0.5438981  0.1412133     3.852 0.000117 ***\nORIGIN_GRID_ID406   5.9920842  0.1294253    46.298  < 2e-16 ***\nORIGIN_GRID_ID407   1.9659636  0.1387032    14.174  < 2e-16 ***\nORIGIN_GRID_ID408   2.7054865  0.1319557    20.503  < 2e-16 ***\nORIGIN_GRID_ID425  -0.6394889  0.1660384    -3.851 0.000117 ***\nORIGIN_GRID_ID426   1.4885415  0.1331511    11.179  < 2e-16 ***\nORIGIN_GRID_ID427   0.6586706  0.1382639     4.764 1.90e-06 ***\nORIGIN_GRID_ID428   0.1307966  0.1799603     0.727 0.467343    \nORIGIN_GRID_ID429   2.3308281  0.1312850    17.754  < 2e-16 ***\nORIGIN_GRID_ID446   0.9486316  0.1481095     6.405 1.50e-10 ***\nORIGIN_GRID_ID447   0.9111894  0.1358665     6.707 1.99e-11 ***\nORIGIN_GRID_ID448   1.9589998  0.1324704    14.788  < 2e-16 ***\nORIGIN_GRID_ID449   5.1782842  0.1296044    39.955  < 2e-16 ***\nORIGIN_GRID_ID450   2.1379933  0.1311217    16.305  < 2e-16 ***\nORIGIN_GRID_ID468   1.8118052  0.1335927    13.562  < 2e-16 ***\nORIGIN_GRID_ID469   3.1383156  0.1303711    24.072  < 2e-16 ***\nORIGIN_GRID_ID470   5.2269773  0.1295387    40.351  < 2e-16 ***\nORIGIN_GRID_ID471   3.0058591  0.1306853    23.001  < 2e-16 ***\nORIGIN_GRID_ID488   0.6492692  0.1425139     4.556 5.22e-06 ***\nORIGIN_GRID_ID489  -1.0676049  0.2130489    -5.011 5.41e-07 ***\nORIGIN_GRID_ID490   3.6286983  0.1300446    27.903  < 2e-16 ***\nORIGIN_GRID_ID491   4.1342385  0.1296879    31.878  < 2e-16 ***\nORIGIN_GRID_ID493  -1.6306677  0.2537623    -6.426 1.31e-10 ***\nORIGIN_GRID_ID494   0.7434058  0.1520371     4.890 1.01e-06 ***\nORIGIN_GRID_ID509   0.6666130  0.1352734     4.928 8.31e-07 ***\nORIGIN_GRID_ID510   1.4552065  0.1322857    11.000  < 2e-16 ***\nORIGIN_GRID_ID511   3.0370244  0.1299491    23.371  < 2e-16 ***\nORIGIN_GRID_ID512   5.7576825  0.1294786    44.468  < 2e-16 ***\nORIGIN_GRID_ID513   2.1644251  0.1324025    16.347  < 2e-16 ***\nORIGIN_GRID_ID514   1.4074056  0.1410082     9.981  < 2e-16 ***\nORIGIN_GRID_ID515   0.0068605  0.2586018     0.027 0.978835    \nORIGIN_GRID_ID530  -0.2654633  0.1580716    -1.679 0.093077 .  \nORIGIN_GRID_ID531   1.9451152  0.1311507    14.831  < 2e-16 ***\nORIGIN_GRID_ID532   1.3547510  0.1322679    10.242  < 2e-16 ***\nORIGIN_GRID_ID533   5.4251355  0.1294795    41.900  < 2e-16 ***\nORIGIN_GRID_ID534   6.0474931  0.1294926    46.701  < 2e-16 ***\nORIGIN_GRID_ID536   2.7709226  0.1323696    20.933  < 2e-16 ***\nORIGIN_GRID_ID537   0.4167593  0.2322772     1.794 0.072776 .  \nORIGIN_GRID_ID538   0.3453631  0.2888676     1.196 0.231862    \nORIGIN_GRID_ID539   0.1670732  1.0089951     0.166 0.868485    \nORIGIN_GRID_ID551  -0.2244546  0.1415171    -1.586 0.112726    \nORIGIN_GRID_ID552   2.2522397  0.1349767    16.686  < 2e-16 ***\nORIGIN_GRID_ID553   1.8154373  0.1308048    13.879  < 2e-16 ***\nORIGIN_GRID_ID554   5.3605884  0.1294871    41.399  < 2e-16 ***\nORIGIN_GRID_ID555   4.6261607  0.1296861    35.672  < 2e-16 ***\nORIGIN_GRID_ID559   1.1649950  0.1680287     6.933 4.11e-12 ***\nORIGIN_GRID_ID560   3.2871330  0.1414631    23.237  < 2e-16 ***\nORIGIN_GRID_ID561  -1.3533937  1.0097290    -1.340 0.180130    \nORIGIN_GRID_ID572  -2.5354013  0.5919866    -4.283 1.84e-05 ***\nORIGIN_GRID_ID573   0.1289562  0.1380210     0.934 0.350137    \nORIGIN_GRID_ID574   1.7583129  0.1349887    13.026  < 2e-16 ***\nORIGIN_GRID_ID575   6.3884591  0.1294574    49.348  < 2e-16 ***\nORIGIN_GRID_ID576   4.9806951  0.1295448    38.448  < 2e-16 ***\nORIGIN_GRID_ID578   0.3778852  0.1662897     2.272 0.023059 *  \nORIGIN_GRID_ID582   0.6240475  0.1702608     3.665 0.000247 ***\nORIGIN_GRID_ID583   1.5835599  0.5919019     2.675 0.007465 ** \nORIGIN_GRID_ID584   3.9878945  0.1421301    28.058  < 2e-16 ***\nORIGIN_GRID_ID593   1.3303539  0.1396792     9.524  < 2e-16 ***\nORIGIN_GRID_ID594   1.4025884  0.1322023    10.609  < 2e-16 ***\nORIGIN_GRID_ID595   1.6684085  0.1309936    12.737  < 2e-16 ***\nORIGIN_GRID_ID596   4.7212115  0.1295171    36.452  < 2e-16 ***\nORIGIN_GRID_ID597   2.0074015  0.1432597    14.012  < 2e-16 ***\nORIGIN_GRID_ID603   1.1787352  0.1754663     6.718 1.85e-11 ***\nORIGIN_GRID_ID604   1.6409448  0.2319562     7.074 1.50e-12 ***\nORIGIN_GRID_ID615  -0.0619261  0.1391143    -0.445 0.656215    \nORIGIN_GRID_ID616   1.1284613  0.1336131     8.446  < 2e-16 ***\nORIGIN_GRID_ID617   2.0251545  0.1308888    15.472  < 2e-16 ***\nORIGIN_GRID_ID618   5.4103085  0.1295004    41.778  < 2e-16 ***\nORIGIN_GRID_ID620   2.7695120  0.1334350    20.756  < 2e-16 ***\nORIGIN_GRID_ID637   0.8374534  0.1372380     6.102 1.05e-09 ***\nORIGIN_GRID_ID638   4.8231890  0.1295164    37.240  < 2e-16 ***\nORIGIN_GRID_ID657   2.6629766  0.1306477    20.383  < 2e-16 ***\nORIGIN_GRID_ID658   4.1673799  0.1296183    32.151  < 2e-16 ***\nORIGIN_GRID_ID659   4.3800872  0.1295687    33.805  < 2e-16 ***\nORIGIN_GRID_ID660   5.4602873  0.1294929    42.167  < 2e-16 ***\nORIGIN_GRID_ID662   5.5933020  0.1296765    43.133  < 2e-16 ***\nORIGIN_GRID_ID677   2.5565081  0.1316760    19.415  < 2e-16 ***\nORIGIN_GRID_ID678   0.3595870  0.1388140     2.590 0.009586 ** \nORIGIN_GRID_ID679   5.3856357  0.1295009    41.588  < 2e-16 ***\nORIGIN_GRID_ID680   5.6466524  0.1294998    43.604  < 2e-16 ***\nORIGIN_GRID_ID681   4.3872850  0.1297513    33.813  < 2e-16 ***\nORIGIN_GRID_ID699   2.0733704  0.1316539    15.749  < 2e-16 ***\nORIGIN_GRID_ID700   4.3730388  0.1296040    33.742  < 2e-16 ***\nORIGIN_GRID_ID701   4.2565724  0.1296069    32.842  < 2e-16 ***\nORIGIN_GRID_ID702   5.3070412  0.1294987    40.981  < 2e-16 ***\nORIGIN_GRID_ID704   2.4221633  0.1339788    18.079  < 2e-16 ***\nORIGIN_GRID_ID722   2.0293990  0.1310936    15.481  < 2e-16 ***\nORIGIN_GRID_ID725   1.9829463  0.1360974    14.570  < 2e-16 ***\nORIGIN_GRID_ID741   2.6348977  0.1305826    20.178  < 2e-16 ***\nORIGIN_GRID_ID743   2.8170010  0.1301557    21.643  < 2e-16 ***\nORIGIN_GRID_ID744   4.8474265  0.1295384    37.421  < 2e-16 ***\nORIGIN_GRID_ID761   2.0736496  0.1330384    15.587  < 2e-16 ***\nORIGIN_GRID_ID762   4.1413547  0.1296742    31.937  < 2e-16 ***\nORIGIN_GRID_ID763   1.2997496  0.1329934     9.773  < 2e-16 ***\nORIGIN_GRID_ID764   5.3656376  0.1294984    41.434  < 2e-16 ***\nORIGIN_GRID_ID765   4.6443951  0.1297445    35.796  < 2e-16 ***\nORIGIN_GRID_ID767   6.4904800  0.1295131    50.114  < 2e-16 ***\nORIGIN_GRID_ID772   1.1046116  0.1532452     7.208 5.67e-13 ***\nORIGIN_GRID_ID784   1.2241278  0.1326018     9.232  < 2e-16 ***\nORIGIN_GRID_ID785   4.5292675  0.1295288    34.967  < 2e-16 ***\nORIGIN_GRID_ID786   4.2382271  0.1296076    32.700  < 2e-16 ***\nORIGIN_GRID_ID787   4.8220290  0.1296783    37.185  < 2e-16 ***\nORIGIN_GRID_ID788   5.7028043  0.1295788    44.010  < 2e-16 ***\nORIGIN_GRID_ID789   4.1392340  0.1299457    31.854  < 2e-16 ***\nORIGIN_GRID_ID803   0.1089926  0.1447726     0.753 0.451538    \nORIGIN_GRID_ID804   5.1644291  0.1295247    39.872  < 2e-16 ***\nORIGIN_GRID_ID805   5.1801604  0.1294982    40.002  < 2e-16 ***\nORIGIN_GRID_ID806   4.8589581  0.1295278    37.513  < 2e-16 ***\nORIGIN_GRID_ID807   5.9055258  0.1295305    45.592  < 2e-16 ***\nORIGIN_GRID_ID808   4.1213100  0.1299694    31.710  < 2e-16 ***\nORIGIN_GRID_ID809   5.8755040  0.1295045    45.369  < 2e-16 ***\nORIGIN_GRID_ID810   5.1149791  0.1296048    39.466  < 2e-16 ***\nORIGIN_GRID_ID814   3.0238756  0.1325530    22.813  < 2e-16 ***\nORIGIN_GRID_ID819   5.2076844  0.1310243    39.746  < 2e-16 ***\nORIGIN_GRID_ID824   1.2193227  0.1361904     8.953  < 2e-16 ***\nORIGIN_GRID_ID826   2.8012168  0.1299005    21.564  < 2e-16 ***\nORIGIN_GRID_ID827   4.8032244  0.1295160    37.086  < 2e-16 ***\nORIGIN_GRID_ID828   5.2143004  0.1295084    40.262  < 2e-16 ***\nORIGIN_GRID_ID829   5.2712399  0.1295409    40.692  < 2e-16 ***\nORIGIN_GRID_ID830   5.5628680  0.1295647    42.935  < 2e-16 ***\nORIGIN_GRID_ID831   6.4085138  0.1294886    49.491  < 2e-16 ***\nORIGIN_GRID_ID832   5.4951650  0.1296508    42.384  < 2e-16 ***\nORIGIN_GRID_ID835   2.9242252  0.1329011    22.003  < 2e-16 ***\nORIGIN_GRID_ID844   0.3067812  0.1512441     2.028 0.042521 *  \nORIGIN_GRID_ID846   4.2138943  0.1295746    32.521  < 2e-16 ***\nORIGIN_GRID_ID847   3.2219161  0.1298746    24.808  < 2e-16 ***\nORIGIN_GRID_ID848   4.5827310  0.1295496    35.374  < 2e-16 ***\nORIGIN_GRID_ID849   3.8358095  0.1297083    29.573  < 2e-16 ***\nORIGIN_GRID_ID850   4.6864622  0.1295872    36.165  < 2e-16 ***\nORIGIN_GRID_ID851   5.2971460  0.1295265    40.896  < 2e-16 ***\nORIGIN_GRID_ID852   4.8317913  0.1296266    37.275  < 2e-16 ***\nORIGIN_GRID_ID853   6.8239596  0.1295364    52.680  < 2e-16 ***\nORIGIN_GRID_ID854   3.1997570  0.1321632    24.211  < 2e-16 ***\nORIGIN_GRID_ID855   1.7317701  0.1373101    12.612  < 2e-16 ***\nORIGIN_GRID_ID856   3.3998908  0.1309194    25.969  < 2e-16 ***\nORIGIN_GRID_ID866   2.1395552  0.1326413    16.130  < 2e-16 ***\nORIGIN_GRID_ID867   3.0549809  0.1300651    23.488  < 2e-16 ***\nORIGIN_GRID_ID868   2.0989570  0.1313019    15.986  < 2e-16 ***\nORIGIN_GRID_ID869   4.9992864  0.1296005    38.575  < 2e-16 ***\nORIGIN_GRID_ID870   5.7593886  0.1294867    44.479  < 2e-16 ***\nORIGIN_GRID_ID871   5.5657428  0.1296080    42.943  < 2e-16 ***\nORIGIN_GRID_ID872   3.4871318  0.1299979    26.825  < 2e-16 ***\nORIGIN_GRID_ID873   3.6993847  0.1299132    28.476  < 2e-16 ***\nORIGIN_GRID_ID874   4.0430648  0.1297308    31.165  < 2e-16 ***\nORIGIN_GRID_ID875   0.9334575  0.1470915     6.346 2.21e-10 ***\nORIGIN_GRID_ID876   2.1625170  0.1332906    16.224  < 2e-16 ***\nORIGIN_GRID_ID877   1.6068358  0.1364543    11.776  < 2e-16 ***\nORIGIN_GRID_ID887   2.4454302  0.1302465    18.775  < 2e-16 ***\nORIGIN_GRID_ID888   3.9112234  0.1296742    30.162  < 2e-16 ***\nORIGIN_GRID_ID889   0.8291158  0.1340936     6.183 6.28e-10 ***\nORIGIN_GRID_ID890   5.2020499  0.1295078    40.168  < 2e-16 ***\nORIGIN_GRID_ID891   3.9275250  0.1299965    30.213  < 2e-16 ***\nORIGIN_GRID_ID893   5.3498227  0.1295191    41.305  < 2e-16 ***\nORIGIN_GRID_ID894   3.5930136  0.1299111    27.657  < 2e-16 ***\nORIGIN_GRID_ID895   3.0911795  0.1304272    23.700  < 2e-16 ***\nORIGIN_GRID_ID896   1.8565266  0.1331883    13.939  < 2e-16 ***\nORIGIN_GRID_ID897   0.0947568  0.1496291     0.633 0.526552    \nORIGIN_GRID_ID898   2.3687643  0.1337180    17.715  < 2e-16 ***\nORIGIN_GRID_ID908   3.9094075  0.1301066    30.048  < 2e-16 ***\nORIGIN_GRID_ID909   3.9165043  0.1295976    30.221  < 2e-16 ***\nORIGIN_GRID_ID910   2.0585684  0.1306074    15.762  < 2e-16 ***\nORIGIN_GRID_ID911   3.3505325  0.1298021    25.813  < 2e-16 ***\nORIGIN_GRID_ID912   4.9287760  0.1295271    38.052  < 2e-16 ***\nORIGIN_GRID_ID915   5.2444423  0.1295311    40.488  < 2e-16 ***\nORIGIN_GRID_ID917   4.7954964  0.1296767    36.980  < 2e-16 ***\nORIGIN_GRID_ID918   1.0901332  0.1360598     8.012 1.13e-15 ***\nORIGIN_GRID_ID919   4.2762302  0.1298084    32.943  < 2e-16 ***\nORIGIN_GRID_ID928   2.7517068  0.1303520    21.110  < 2e-16 ***\nORIGIN_GRID_ID929   4.3466880  0.1295386    33.555  < 2e-16 ***\nORIGIN_GRID_ID930   5.1947824  0.1294898    40.117  < 2e-16 ***\nORIGIN_GRID_ID931   2.1575890  0.1307451    16.502  < 2e-16 ***\nORIGIN_GRID_ID932   2.6832660  0.1307685    20.519  < 2e-16 ***\nORIGIN_GRID_ID933   4.7951907  0.1295879    37.003  < 2e-16 ***\nORIGIN_GRID_ID934   2.2555287  0.1310370    17.213  < 2e-16 ***\nORIGIN_GRID_ID935   6.1140919  0.1294879    47.217  < 2e-16 ***\nORIGIN_GRID_ID938  -1.8252160  0.3061150    -5.963 2.48e-09 ***\nORIGIN_GRID_ID939   6.0170462  0.1295306    46.453  < 2e-16 ***\nORIGIN_GRID_ID940   0.1081432  0.1603140     0.675 0.499948    \nORIGIN_GRID_ID949   2.6084733  0.1302994    20.019  < 2e-16 ***\nORIGIN_GRID_ID950   4.7661122  0.1295592    36.787  < 2e-16 ***\nORIGIN_GRID_ID951   5.6275391  0.1294811    43.462  < 2e-16 ***\nORIGIN_GRID_ID952   2.3360064  0.1313998    17.778  < 2e-16 ***\nORIGIN_GRID_ID953   3.5094374  0.1298630    27.024  < 2e-16 ***\nORIGIN_GRID_ID954   2.3986121  0.1307558    18.344  < 2e-16 ***\nORIGIN_GRID_ID955   4.6642394  0.1295889    35.993  < 2e-16 ***\nORIGIN_GRID_ID956   3.0702847  0.1300381    23.611  < 2e-16 ***\nORIGIN_GRID_ID957   5.2517968  0.1295950    40.525  < 2e-16 ***\nORIGIN_GRID_ID959   1.2499285  0.1401534     8.918  < 2e-16 ***\nORIGIN_GRID_ID961   1.1866988  0.1343222     8.835  < 2e-16 ***\nORIGIN_GRID_ID962   6.3903145  0.1296782    49.278  < 2e-16 ***\nORIGIN_GRID_ID970   3.1708829  0.1297415    24.440  < 2e-16 ***\nORIGIN_GRID_ID971   4.5045177  0.1295141    34.780  < 2e-16 ***\nORIGIN_GRID_ID972   4.4470243  0.1295433    34.328  < 2e-16 ***\nORIGIN_GRID_ID974   4.0559613  0.1296893    31.274  < 2e-16 ***\nORIGIN_GRID_ID975   3.7116491  0.1297952    28.596  < 2e-16 ***\nORIGIN_GRID_ID976   2.4544326  0.1306291    18.789  < 2e-16 ***\nORIGIN_GRID_ID977   5.6183860  0.1295093    43.382  < 2e-16 ***\nORIGIN_GRID_ID978   5.5393084  0.1296562    42.723  < 2e-16 ***\nORIGIN_GRID_ID982   2.4188039  0.1305569    18.527  < 2e-16 ***\nORIGIN_GRID_ID983   7.2878643  0.1295237    56.267  < 2e-16 ***\nORIGIN_GRID_ID984   7.6407732  0.1295809    58.965  < 2e-16 ***\nORIGIN_GRID_ID991   3.1509144  0.1298285    24.270  < 2e-16 ***\nORIGIN_GRID_ID992   3.5208655  0.1296576    27.155  < 2e-16 ***\nORIGIN_GRID_ID993   3.2074262  0.1297070    24.728  < 2e-16 ***\nORIGIN_GRID_ID994   2.7606704  0.1300012    21.236  < 2e-16 ***\nORIGIN_GRID_ID995   4.2498313  0.1295888    32.795  < 2e-16 ***\nORIGIN_GRID_ID996   3.9478079  0.1297127    30.435  < 2e-16 ***\nORIGIN_GRID_ID997   2.7064645  0.1328969    20.365  < 2e-16 ***\nORIGIN_GRID_ID998   5.7296831  0.1295143    44.240  < 2e-16 ***\nORIGIN_GRID_ID999   5.7186915  0.1295921    44.128  < 2e-16 ***\nORIGIN_GRID_ID1001  2.6040201  0.1320751    19.716  < 2e-16 ***\nORIGIN_GRID_ID1003  5.2369208  0.1295368    40.428  < 2e-16 ***\nORIGIN_GRID_ID1004  5.9990456  0.1295063    46.322  < 2e-16 ***\nORIGIN_GRID_ID1011  1.3666674  0.1339577    10.202  < 2e-16 ***\nORIGIN_GRID_ID1012  0.9479672  0.1360491     6.968 3.22e-12 ***\nORIGIN_GRID_ID1013  1.8407945  0.1308433    14.069  < 2e-16 ***\nORIGIN_GRID_ID1014  2.7422472  0.1300013    21.094  < 2e-16 ***\nORIGIN_GRID_ID1015  2.0462886  0.1308089    15.643  < 2e-16 ***\nORIGIN_GRID_ID1016  3.8825679  0.1297019    29.935  < 2e-16 ***\nORIGIN_GRID_ID1018  4.6191926  0.1298591    35.571  < 2e-16 ***\nORIGIN_GRID_ID1019  6.1377706  0.1295535    47.376  < 2e-16 ***\nORIGIN_GRID_ID1023  4.2143551  0.1298230    32.462  < 2e-16 ***\nORIGIN_GRID_ID1024  5.2489282  0.1295466    40.518  < 2e-16 ***\nORIGIN_GRID_ID1025  0.4583978  0.1461970     3.135 0.001716 ** \nORIGIN_GRID_ID1033  2.4813134  0.1301224    19.069  < 2e-16 ***\nORIGIN_GRID_ID1034  3.5051673  0.1296971    27.026  < 2e-16 ***\nORIGIN_GRID_ID1035  4.2831008  0.1295783    33.054  < 2e-16 ***\nORIGIN_GRID_ID1036  2.0779189  0.1307404    15.893  < 2e-16 ***\nORIGIN_GRID_ID1037  3.4941789  0.1296890    26.943  < 2e-16 ***\nORIGIN_GRID_ID1043  2.5518687  0.1322257    19.299  < 2e-16 ***\nORIGIN_GRID_ID1045  4.9065742  0.1295434    37.876  < 2e-16 ***\nORIGIN_GRID_ID1046  4.8577906  0.1295733    37.491  < 2e-16 ***\nORIGIN_GRID_ID1053  4.0825772  0.1296066    31.500  < 2e-16 ***\nORIGIN_GRID_ID1054  2.9573413  0.1297957    22.785  < 2e-16 ***\nORIGIN_GRID_ID1055  4.1412171  0.1295720    31.961  < 2e-16 ***\nORIGIN_GRID_ID1056  3.1452592  0.1298463    24.223  < 2e-16 ***\nORIGIN_GRID_ID1064  0.1911943  0.2889232     0.662 0.508133    \nORIGIN_GRID_ID1066  4.5892565  0.1295716    35.419  < 2e-16 ***\nORIGIN_GRID_ID1067 -0.9381733  0.2417461    -3.881 0.000104 ***\nORIGIN_GRID_ID1074  3.3669451  0.1297343    25.953  < 2e-16 ***\nORIGIN_GRID_ID1075  2.5512241  0.1300288    19.620  < 2e-16 ***\nORIGIN_GRID_ID1076  2.8439299  0.1298005    21.910  < 2e-16 ***\nORIGIN_GRID_ID1077  3.0049637  0.1299470    23.125  < 2e-16 ***\nORIGIN_GRID_ID1079  4.4165248  0.1295814    34.083  < 2e-16 ***\nORIGIN_GRID_ID1085 -1.4981541  0.2215701    -6.762 1.37e-11 ***\nORIGIN_GRID_ID1087  4.5927598  0.1296033    35.437  < 2e-16 ***\nORIGIN_GRID_ID1088  2.8748266  0.1300714    22.102  < 2e-16 ***\nORIGIN_GRID_ID1094  1.3962279  0.1386703    10.069  < 2e-16 ***\nORIGIN_GRID_ID1095  0.7893261  0.1368251     5.769 7.98e-09 ***\nORIGIN_GRID_ID1096  2.8257300  0.1314627    21.495  < 2e-16 ***\nORIGIN_GRID_ID1097  4.8052363  0.1295141    37.102  < 2e-16 ***\nORIGIN_GRID_ID1098  2.4069979  0.1309952    18.375  < 2e-16 ***\nORIGIN_GRID_ID1099  3.8293449  0.1296617    29.533  < 2e-16 ***\nORIGIN_GRID_ID1105  1.3077117  0.1520166     8.602  < 2e-16 ***\nORIGIN_GRID_ID1106 -0.2475297  0.1736414    -1.426 0.154006    \nORIGIN_GRID_ID1107  2.1835427  0.1331075    16.404  < 2e-16 ***\nORIGIN_GRID_ID1108  6.5289289  0.1294875    50.421  < 2e-16 ***\nORIGIN_GRID_ID1109  1.6528906  0.1324742    12.477  < 2e-16 ***\nORIGIN_GRID_ID1116  3.1823085  0.1297989    24.517  < 2e-16 ***\nORIGIN_GRID_ID1117  1.5139620  0.1314888    11.514  < 2e-16 ***\nORIGIN_GRID_ID1118  2.0054300  0.1311094    15.296  < 2e-16 ***\nORIGIN_GRID_ID1119  2.9931278  0.1299525    23.032  < 2e-16 ***\nORIGIN_GRID_ID1120  2.9601262  0.1302904    22.719  < 2e-16 ***\nORIGIN_GRID_ID1129  4.9013389  0.1295592    37.831  < 2e-16 ***\nORIGIN_GRID_ID1130  4.9530928  0.1295282    38.239  < 2e-16 ***\nORIGIN_GRID_ID1131  2.8525581  0.1306682    21.831  < 2e-16 ***\nORIGIN_GRID_ID1136  2.2222793  0.1304086    17.041  < 2e-16 ***\nORIGIN_GRID_ID1138  1.0248323  0.1357161     7.551 4.31e-14 ***\nORIGIN_GRID_ID1139  3.9785733  0.1295767    30.704  < 2e-16 ***\nORIGIN_GRID_ID1141  3.9544964  0.1296318    30.506  < 2e-16 ***\nORIGIN_GRID_ID1148  1.3228071  0.1408319     9.393  < 2e-16 ***\nORIGIN_GRID_ID1149  2.6795326  0.1310207    20.451  < 2e-16 ***\nORIGIN_GRID_ID1150  5.1800176  0.1295180    39.995  < 2e-16 ***\nORIGIN_GRID_ID1151  4.0546868  0.1296418    31.276  < 2e-16 ***\nORIGIN_GRID_ID1158  2.2655029  0.1300784    17.416  < 2e-16 ***\nORIGIN_GRID_ID1159  3.7576290  0.1296012    28.994  < 2e-16 ***\nORIGIN_GRID_ID1160  4.8053581  0.1295167    37.102  < 2e-16 ***\nORIGIN_GRID_ID1171  5.7585356  0.1295290    44.457  < 2e-16 ***\nORIGIN_GRID_ID1172  5.5656572  0.1295264    42.969  < 2e-16 ***\nORIGIN_GRID_ID1173  2.8534939  0.1301916    21.918  < 2e-16 ***\nORIGIN_GRID_ID1174 -1.3566427  0.2889056    -4.696 2.66e-06 ***\nORIGIN_GRID_ID1178  2.5078415  0.1300079    19.290  < 2e-16 ***\nORIGIN_GRID_ID1179  3.1812537  0.1296953    24.529  < 2e-16 ***\nORIGIN_GRID_ID1180  4.2827654  0.1295412    33.061  < 2e-16 ***\nORIGIN_GRID_ID1181  3.5676398  0.1296590    27.516  < 2e-16 ***\nORIGIN_GRID_ID1183  2.6734408  0.1302634    20.523  < 2e-16 ***\nORIGIN_GRID_ID1190  1.6279070  0.1391281    11.701  < 2e-16 ***\nORIGIN_GRID_ID1192  4.4424530  0.1296382    34.268  < 2e-16 ***\nORIGIN_GRID_ID1193  4.4269340  0.1295858    34.162  < 2e-16 ***\nORIGIN_GRID_ID1194  2.6377398  0.1304249    20.224  < 2e-16 ***\nORIGIN_GRID_ID1200  3.3459193  0.1296655    25.804  < 2e-16 ***\nORIGIN_GRID_ID1201  3.1272543  0.1297051    24.110  < 2e-16 ***\nORIGIN_GRID_ID1203  4.0399726  0.1296156    31.169  < 2e-16 ***\nORIGIN_GRID_ID1204  3.8887776  0.1296384    29.997  < 2e-16 ***\nORIGIN_GRID_ID1211  0.3628379  0.2538880     1.429 0.152968    \nORIGIN_GRID_ID1214  5.2387184  0.1295361    40.442  < 2e-16 ***\nORIGIN_GRID_ID1215  1.6141673  0.1368661    11.794  < 2e-16 ***\nORIGIN_GRID_ID1216  0.7144107  0.1369354     5.217 1.82e-07 ***\nORIGIN_GRID_ID1220  4.3011500  0.1295397    33.203  < 2e-16 ***\nORIGIN_GRID_ID1221  3.9931290  0.1295529    30.822  < 2e-16 ***\nORIGIN_GRID_ID1222  3.6564904  0.1299059    28.147  < 2e-16 ***\nORIGIN_GRID_ID1223  1.9482983  0.1308732    14.887  < 2e-16 ***\nORIGIN_GRID_ID1224  2.8243000  0.1300007    21.725  < 2e-16 ***\nORIGIN_GRID_ID1231 -1.1508887  0.2382878    -4.830 1.37e-06 ***\nORIGIN_GRID_ID1232  1.3464797  0.1677210     8.028 9.90e-16 ***\nORIGIN_GRID_ID1235  2.7434248  0.1302640    21.060  < 2e-16 ***\nORIGIN_GRID_ID1236  2.5323686  0.1303762    19.424  < 2e-16 ***\nORIGIN_GRID_ID1241  2.5233740  0.1299814    19.413  < 2e-16 ***\nORIGIN_GRID_ID1242  3.1951082  0.1296738    24.640  < 2e-16 ***\nORIGIN_GRID_ID1243  3.8075964  0.1295722    29.386  < 2e-16 ***\nORIGIN_GRID_ID1246  3.0024853  0.1298779    23.118  < 2e-16 ***\nORIGIN_GRID_ID1256  4.1822317  0.1296957    32.246  < 2e-16 ***\nORIGIN_GRID_ID1257  5.0842078  0.1295881    39.234  < 2e-16 ***\nORIGIN_GRID_ID1258  3.0119251  0.1303613    23.104  < 2e-16 ***\nORIGIN_GRID_ID1262  2.9644522  0.1297801    22.842  < 2e-16 ***\nORIGIN_GRID_ID1263  3.4025204  0.1296032    26.253  < 2e-16 ***\nORIGIN_GRID_ID1264  2.3863689  0.1302426    18.322  < 2e-16 ***\nORIGIN_GRID_ID1265  2.0682350  0.1307220    15.822  < 2e-16 ***\nORIGIN_GRID_ID1266  3.7113689  0.1297163    28.611  < 2e-16 ***\nORIGIN_GRID_ID1267  1.6049104  0.1336491    12.008  < 2e-16 ***\nORIGIN_GRID_ID1272 -0.8539361  0.1962445    -4.351 1.35e-05 ***\nORIGIN_GRID_ID1273  3.5100695  0.1301459    26.970  < 2e-16 ***\nORIGIN_GRID_ID1277  5.1494146  0.1295389    39.752  < 2e-16 ***\nORIGIN_GRID_ID1278  2.5330851  0.1303318    19.436  < 2e-16 ***\nORIGIN_GRID_ID1283  4.6794227  0.1295296    36.126  < 2e-16 ***\nORIGIN_GRID_ID1284  3.9456843  0.1295656    30.453  < 2e-16 ***\nORIGIN_GRID_ID1285  4.5788810  0.1295132    35.355  < 2e-16 ***\nORIGIN_GRID_ID1286  2.7655361  0.1300215    21.270  < 2e-16 ***\nORIGIN_GRID_ID1289  1.1320461  0.1404018     8.063 7.45e-16 ***\nORIGIN_GRID_ID1293  0.2130123  0.1533915     1.389 0.164929    \nORIGIN_GRID_ID1294  5.0087128  0.1296248    38.640  < 2e-16 ***\nORIGIN_GRID_ID1295  2.4363046  0.1314408    18.535  < 2e-16 ***\nORIGIN_GRID_ID1298  4.2044427  0.1296673    32.425  < 2e-16 ***\nORIGIN_GRID_ID1299  4.5573011  0.1296324    35.156  < 2e-16 ***\nORIGIN_GRID_ID1304  4.5798557  0.1295282    35.358  < 2e-16 ***\nORIGIN_GRID_ID1305  3.9401059  0.1295393    30.416  < 2e-16 ***\nORIGIN_GRID_ID1307  0.1574184  0.1400458     1.124 0.260992    \nORIGIN_GRID_ID1308  3.7696367  0.1296416    29.077  < 2e-16 ***\nORIGIN_GRID_ID1310 -1.0700018  0.2689230    -3.979 6.93e-05 ***\nORIGIN_GRID_ID1316  1.4780253  0.1348067    10.964  < 2e-16 ***\nORIGIN_GRID_ID1317  3.1951209  0.1300413    24.570  < 2e-16 ***\nORIGIN_GRID_ID1318  2.4219658  0.1306449    18.539  < 2e-16 ***\nORIGIN_GRID_ID1319  5.4601234  0.1295310    42.153  < 2e-16 ***\nORIGIN_GRID_ID1320  4.0132807  0.1297971    30.920  < 2e-16 ***\nORIGIN_GRID_ID1325  2.1833375  0.1301753    16.772  < 2e-16 ***\nORIGIN_GRID_ID1326  4.1481195  0.1295348    32.023  < 2e-16 ***\nORIGIN_GRID_ID1327  3.8840568  0.1295592    29.979  < 2e-16 ***\nORIGIN_GRID_ID1328  2.5018438  0.1299379    19.254  < 2e-16 ***\nORIGIN_GRID_ID1329  2.7977364  0.1301227    21.501  < 2e-16 ***\nORIGIN_GRID_ID1330  3.6862632  0.1297735    28.405  < 2e-16 ***\nORIGIN_GRID_ID1331 -1.3088559  0.3576148    -3.660 0.000252 ***\nORIGIN_GRID_ID1333  3.0878626  0.1301489    23.726  < 2e-16 ***\nORIGIN_GRID_ID1334  3.3347552  0.1300547    25.641  < 2e-16 ***\nORIGIN_GRID_ID1335  2.9381473  0.1307187    22.477  < 2e-16 ***\nORIGIN_GRID_ID1336  0.1097369  0.1897248     0.578 0.562994    \nORIGIN_GRID_ID1337  0.4715310  0.1420051     3.321 0.000898 ***\nORIGIN_GRID_ID1338 -0.9602672  0.1745393    -5.502 3.76e-08 ***\nORIGIN_GRID_ID1339  5.2773246  0.1295284    40.743  < 2e-16 ***\nORIGIN_GRID_ID1340  3.6591414  0.1298182    28.187  < 2e-16 ***\nORIGIN_GRID_ID1341  0.8171489  0.2584384     3.162 0.001568 ** \nORIGIN_GRID_ID1346  3.7686687  0.1296453    29.069  < 2e-16 ***\nORIGIN_GRID_ID1347  4.7672157  0.1295147    36.808  < 2e-16 ***\nORIGIN_GRID_ID1348  3.1160780  0.1296628    24.032  < 2e-16 ***\nORIGIN_GRID_ID1349  2.9400884  0.1298133    22.649  < 2e-16 ***\nORIGIN_GRID_ID1350  3.2910188  0.1299993    25.316  < 2e-16 ***\nORIGIN_GRID_ID1353  3.0944108  0.1299080    23.820  < 2e-16 ***\nORIGIN_GRID_ID1354  2.8526247  0.1301978    21.910  < 2e-16 ***\nORIGIN_GRID_ID1355  3.6655316  0.1297833    28.243  < 2e-16 ***\nORIGIN_GRID_ID1357  2.6975976  0.1310957    20.577  < 2e-16 ***\nORIGIN_GRID_ID1358  4.0397520  0.1297073    31.145  < 2e-16 ***\nORIGIN_GRID_ID1359  4.3691684  0.1295862    33.716  < 2e-16 ***\nORIGIN_GRID_ID1360  4.4323891  0.1295920    34.203  < 2e-16 ***\nORIGIN_GRID_ID1361  5.5738569  0.1295390    43.028  < 2e-16 ***\nORIGIN_GRID_ID1362  1.7029139  0.1359711    12.524  < 2e-16 ***\nORIGIN_GRID_ID1368  2.6326636  0.1298138    20.280  < 2e-16 ***\nORIGIN_GRID_ID1369  2.3384940  0.1298760    18.006  < 2e-16 ***\nORIGIN_GRID_ID1370  3.5746929  0.1295826    27.586  < 2e-16 ***\nORIGIN_GRID_ID1371  2.9594154  0.1299408    22.775  < 2e-16 ***\nORIGIN_GRID_ID1372  2.2759997  0.1302051    17.480  < 2e-16 ***\nORIGIN_GRID_ID1373  0.6660036  0.1397862     4.764 1.89e-06 ***\nORIGIN_GRID_ID1374  2.5838275  0.1301028    19.860  < 2e-16 ***\nORIGIN_GRID_ID1375  4.1259653  0.1297301    31.804  < 2e-16 ***\nORIGIN_GRID_ID1376  3.4095478  0.1302077    26.185  < 2e-16 ***\nORIGIN_GRID_ID1379  1.7024572  0.1344622    12.661  < 2e-16 ***\nORIGIN_GRID_ID1380  5.7612070  0.1295036    44.487  < 2e-16 ***\nORIGIN_GRID_ID1381  5.3501757  0.1295267    41.306  < 2e-16 ***\nORIGIN_GRID_ID1382  4.7922404  0.1296313    36.968  < 2e-16 ***\nORIGIN_GRID_ID1383  2.4033431  0.1320129    18.205  < 2e-16 ***\nORIGIN_GRID_ID1388  3.1701366  0.1296757    24.447  < 2e-16 ***\nORIGIN_GRID_ID1389  1.9100799  0.1300828    14.684  < 2e-16 ***\nORIGIN_GRID_ID1390  3.0585966  0.1296904    23.584  < 2e-16 ***\nORIGIN_GRID_ID1391  3.1479690  0.1297412    24.263  < 2e-16 ***\nORIGIN_GRID_ID1392  2.6551236  0.1308440    20.292  < 2e-16 ***\nORIGIN_GRID_ID1393  1.8247939  0.1304929    13.984  < 2e-16 ***\nORIGIN_GRID_ID1394  3.2794565  0.1297232    25.280  < 2e-16 ***\nORIGIN_GRID_ID1395  3.3567611  0.1297213    25.877  < 2e-16 ***\nORIGIN_GRID_ID1396  4.4675609  0.1295713    34.480  < 2e-16 ***\nORIGIN_GRID_ID1397  4.5388706  0.1295807    35.027  < 2e-16 ***\nORIGIN_GRID_ID1398  3.4733087  0.1300101    26.716  < 2e-16 ***\nORIGIN_GRID_ID1400  4.5631209  0.1296520    35.195  < 2e-16 ***\nORIGIN_GRID_ID1401  4.9251494  0.1295307    38.023  < 2e-16 ***\nORIGIN_GRID_ID1402  4.9305937  0.1295508    38.059  < 2e-16 ***\nORIGIN_GRID_ID1404  5.0484371  0.1304597    38.697  < 2e-16 ***\nORIGIN_GRID_ID1410  2.6825678  0.1297500    20.675  < 2e-16 ***\nORIGIN_GRID_ID1411  2.7246550  0.1297719    20.996  < 2e-16 ***\nORIGIN_GRID_ID1412  2.9949964  0.1296625    23.098  < 2e-16 ***\nORIGIN_GRID_ID1413  3.8890080  0.1295784    30.013  < 2e-16 ***\nORIGIN_GRID_ID1414  3.2647638  0.1296465    25.182  < 2e-16 ***\nORIGIN_GRID_ID1415  2.8079366  0.1298578    21.623  < 2e-16 ***\nORIGIN_GRID_ID1416  3.4832529  0.1296730    26.862  < 2e-16 ***\nORIGIN_GRID_ID1417  3.6214532  0.1296551    27.931  < 2e-16 ***\nORIGIN_GRID_ID1418  4.4367506  0.1295622    34.244  < 2e-16 ***\nORIGIN_GRID_ID1419  3.9133035  0.1296567    30.182  < 2e-16 ***\nORIGIN_GRID_ID1422  4.9996195  0.1295749    38.585  < 2e-16 ***\nORIGIN_GRID_ID1423  5.9092714  0.1295183    45.625  < 2e-16 ***\nORIGIN_GRID_ID1430  3.4807613  0.1296337    26.851  < 2e-16 ***\nORIGIN_GRID_ID1431  3.4492075  0.1295835    26.618  < 2e-16 ***\nORIGIN_GRID_ID1432  3.5770956  0.1295726    27.607  < 2e-16 ***\nORIGIN_GRID_ID1433  2.3236388  0.1307408    17.773  < 2e-16 ***\nORIGIN_GRID_ID1434  3.8599000  0.1295927    29.785  < 2e-16 ***\nORIGIN_GRID_ID1435  4.2632052  0.1295297    32.913  < 2e-16 ***\nORIGIN_GRID_ID1436  1.1282468  0.1320635     8.543  < 2e-16 ***\nORIGIN_GRID_ID1437  4.4402379  0.1295445    34.276  < 2e-16 ***\nORIGIN_GRID_ID1438  4.9240335  0.1295072    38.021  < 2e-16 ***\nORIGIN_GRID_ID1439  5.5268439  0.1294976    42.679  < 2e-16 ***\nORIGIN_GRID_ID1440  1.9674791  0.1312536    14.990  < 2e-16 ***\nORIGIN_GRID_ID1442  4.8253247  0.1296542    37.217  < 2e-16 ***\nORIGIN_GRID_ID1443  5.8880692  0.1295243    45.459  < 2e-16 ***\nORIGIN_GRID_ID1444  4.9313403  0.1297071    38.019  < 2e-16 ***\nORIGIN_GRID_ID1452  2.5609262  0.1297873    19.732  < 2e-16 ***\nORIGIN_GRID_ID1453  2.6939585  0.1297606    20.761  < 2e-16 ***\nORIGIN_GRID_ID1454  1.7832651  0.1311976    13.592  < 2e-16 ***\nORIGIN_GRID_ID1455  3.2192244  0.1297833    24.805  < 2e-16 ***\nORIGIN_GRID_ID1456  3.6264812  0.1296216    27.977  < 2e-16 ***\nORIGIN_GRID_ID1457  4.4969778  0.1295312    34.717  < 2e-16 ***\nORIGIN_GRID_ID1458  4.8363313  0.1295159    37.342  < 2e-16 ***\nORIGIN_GRID_ID1459  4.2737656  0.1295517    32.989  < 2e-16 ***\nORIGIN_GRID_ID1460  3.4501677  0.1296515    26.611  < 2e-16 ***\nORIGIN_GRID_ID1461  2.1279011  0.1307081    16.280  < 2e-16 ***\nORIGIN_GRID_ID1464  6.2828549  0.1295152    48.511  < 2e-16 ***\nORIGIN_GRID_ID1465  5.7609060  0.1295607    44.465  < 2e-16 ***\nORIGIN_GRID_ID1472  1.1277502  0.1315699     8.571  < 2e-16 ***\nORIGIN_GRID_ID1473  2.0946783  0.1299884    16.114  < 2e-16 ***\nORIGIN_GRID_ID1474  3.2694545  0.1296020    25.227  < 2e-16 ***\nORIGIN_GRID_ID1475  4.2409690  0.1295416    32.738  < 2e-16 ***\nORIGIN_GRID_ID1476  3.5961102  0.1296413    27.739  < 2e-16 ***\nORIGIN_GRID_ID1477  5.1482590  0.1294902    39.758  < 2e-16 ***\nORIGIN_GRID_ID1478  3.4629216  0.1296421    26.711  < 2e-16 ***\nORIGIN_GRID_ID1479  3.6903956  0.1296048    28.474  < 2e-16 ***\nORIGIN_GRID_ID1480  5.5151586  0.1294887    42.592  < 2e-16 ***\nORIGIN_GRID_ID1481  2.8481431  0.1299016    21.925  < 2e-16 ***\nORIGIN_GRID_ID1482  3.0385662  0.1302605    23.327  < 2e-16 ***\nORIGIN_GRID_ID1485  5.7318316  0.1295646    44.239  < 2e-16 ***\nORIGIN_GRID_ID1494  2.3308264  0.1302551    17.894  < 2e-16 ***\nORIGIN_GRID_ID1495  2.5732051  0.1297757    19.828  < 2e-16 ***\nORIGIN_GRID_ID1496  3.7224213  0.1295577    28.732  < 2e-16 ***\nORIGIN_GRID_ID1497  4.0742946  0.1295750    31.444  < 2e-16 ***\nORIGIN_GRID_ID1498  4.4340060  0.1295289    34.232  < 2e-16 ***\nORIGIN_GRID_ID1499  4.6717991  0.1295137    36.072  < 2e-16 ***\nORIGIN_GRID_ID1500  4.5683363  0.1295819    35.254  < 2e-16 ***\nORIGIN_GRID_ID1501  4.8100205  0.1295153    37.139  < 2e-16 ***\nORIGIN_GRID_ID1502  4.2538416  0.1295555    32.834  < 2e-16 ***\nORIGIN_GRID_ID1506  0.2700397  0.1762201     1.532 0.125424    \nORIGIN_GRID_ID1515  1.5127157  0.1320548    11.455  < 2e-16 ***\nORIGIN_GRID_ID1516  2.9654101  0.1296990    22.864  < 2e-16 ***\nORIGIN_GRID_ID1517  3.4553345  0.1296646    26.648  < 2e-16 ***\nORIGIN_GRID_ID1518  3.3604584  0.1296969    25.910  < 2e-16 ***\nORIGIN_GRID_ID1519  4.7015797  0.1295609    36.289  < 2e-16 ***\nORIGIN_GRID_ID1520  3.4068287  0.1296613    26.275  < 2e-16 ***\nORIGIN_GRID_ID1521  2.7475525  0.1299356    21.145  < 2e-16 ***\nORIGIN_GRID_ID1522  5.0147790  0.1295079    38.722  < 2e-16 ***\nORIGIN_GRID_ID1523  3.5122644  0.1304822    26.918  < 2e-16 ***\nORIGIN_GRID_ID1524  3.6844218  0.1298572    28.373  < 2e-16 ***\nORIGIN_GRID_ID1527  3.6801928  0.1305458    28.191  < 2e-16 ***\nORIGIN_GRID_ID1535 -0.0256107  0.1641549    -0.156 0.876021    \nORIGIN_GRID_ID1536  0.8592776  0.1342134     6.402 1.53e-10 ***\nORIGIN_GRID_ID1537  1.5478822  0.1310707    11.810  < 2e-16 ***\nORIGIN_GRID_ID1538  3.1974093  0.1296393    24.664  < 2e-16 ***\nORIGIN_GRID_ID1539  3.7315464  0.1295721    28.799  < 2e-16 ***\nORIGIN_GRID_ID1540  4.3341844  0.1295350    33.460  < 2e-16 ***\nORIGIN_GRID_ID1541  5.5177438  0.1295791    42.582  < 2e-16 ***\nORIGIN_GRID_ID1542  2.4655048  0.1304644    18.898  < 2e-16 ***\nORIGIN_GRID_ID1543  3.2900499  0.1314547    25.028  < 2e-16 ***\nORIGIN_GRID_ID1544  4.2634068  0.1296366    32.887  < 2e-16 ***\nORIGIN_GRID_ID1547  1.4000760  0.1441635     9.712  < 2e-16 ***\nORIGIN_GRID_ID1556  1.1160262  0.1488428     7.498 6.48e-14 ***\nORIGIN_GRID_ID1557  0.8760692  0.1348029     6.499 8.09e-11 ***\nORIGIN_GRID_ID1558  2.1114407  0.1311164    16.104  < 2e-16 ***\nORIGIN_GRID_ID1559  3.8598916  0.1295590    29.793  < 2e-16 ***\nORIGIN_GRID_ID1560  4.7021645  0.1295119    36.307  < 2e-16 ***\nORIGIN_GRID_ID1561  4.5767081  0.1295433    35.330  < 2e-16 ***\nORIGIN_GRID_ID1562  1.6339094  0.1312362    12.450  < 2e-16 ***\nORIGIN_GRID_ID1563  3.4486859  0.1296818    26.593  < 2e-16 ***\nORIGIN_GRID_ID1564  2.6083143  0.1302234    20.030  < 2e-16 ***\nORIGIN_GRID_ID1565  2.6712789  0.1302705    20.506  < 2e-16 ***\nORIGIN_GRID_ID1566  2.4196187  0.1311226    18.453  < 2e-16 ***\nORIGIN_GRID_ID1567  0.3613545  0.1608199     2.247 0.024643 *  \nORIGIN_GRID_ID1568  1.3659685  0.1461712     9.345  < 2e-16 ***\nORIGIN_GRID_ID1578 -1.5812104  0.2899386    -5.454 4.94e-08 ***\nORIGIN_GRID_ID1580  2.3243561  0.1306566    17.790  < 2e-16 ***\nORIGIN_GRID_ID1581  1.1713046  0.1313084     8.920  < 2e-16 ***\nORIGIN_GRID_ID1582  4.3920737  0.1295193    33.911  < 2e-16 ***\nORIGIN_GRID_ID1583  2.6601078  0.1312457    20.268  < 2e-16 ***\nORIGIN_GRID_ID1584  2.9271840  0.1299209    22.531  < 2e-16 ***\nORIGIN_GRID_ID1585  3.5562990  0.1298369    27.391  < 2e-16 ***\nORIGIN_GRID_ID1586  2.5487396  0.1302031    19.575  < 2e-16 ***\nORIGIN_GRID_ID1589  0.3490170  0.1633174     2.137 0.032594 *  \nORIGIN_GRID_ID1590  1.0833179  0.1473770     7.351 1.97e-13 ***\nORIGIN_GRID_ID1600  4.4473910  0.1299091    34.235  < 2e-16 ***\nORIGIN_GRID_ID1601  2.9934276  0.1297058    23.079  < 2e-16 ***\nORIGIN_GRID_ID1602  3.6766873  0.1296144    28.366  < 2e-16 ***\nORIGIN_GRID_ID1603  4.5870862  0.1295230    35.415  < 2e-16 ***\nORIGIN_GRID_ID1604  3.0990561  0.1297230    23.890  < 2e-16 ***\nORIGIN_GRID_ID1605  4.5094011  0.1295310    34.813  < 2e-16 ***\nORIGIN_GRID_ID1606  3.9803870  0.1298410    30.656  < 2e-16 ***\nORIGIN_GRID_ID1607  3.3114324  0.1298260    25.507  < 2e-16 ***\nORIGIN_GRID_ID1608  5.3211164  0.1295391    41.077  < 2e-16 ***\nORIGIN_GRID_ID1609  5.2021136  0.1295883    40.143  < 2e-16 ***\nORIGIN_GRID_ID1610  1.7944261  0.1457221    12.314  < 2e-16 ***\nORIGIN_GRID_ID1622  3.0484921  0.1314523    23.191  < 2e-16 ***\nORIGIN_GRID_ID1623  4.3774780  0.1295249    33.796  < 2e-16 ***\nORIGIN_GRID_ID1624  3.1542714  0.1297384    24.313  < 2e-16 ***\nORIGIN_GRID_ID1625  4.5444694  0.1295452    35.080  < 2e-16 ***\nORIGIN_GRID_ID1626  5.2184399  0.1295012    40.296  < 2e-16 ***\nORIGIN_GRID_ID1627  3.6069280  0.1296708    27.816  < 2e-16 ***\nORIGIN_GRID_ID1628  5.3497701  0.1295041    41.310  < 2e-16 ***\nORIGIN_GRID_ID1629  4.3528540  0.1296429    33.576  < 2e-16 ***\nORIGIN_GRID_ID1630  4.4628045  0.1297035    34.408  < 2e-16 ***\nORIGIN_GRID_ID1631  0.8230139  0.1472923     5.588 2.30e-08 ***\nORIGIN_GRID_ID1642  1.8639168  0.1330401    14.010  < 2e-16 ***\nORIGIN_GRID_ID1643  4.3336129  0.1295359    33.455  < 2e-16 ***\nORIGIN_GRID_ID1644  2.1130156  0.1306068    16.178  < 2e-16 ***\nORIGIN_GRID_ID1645  3.5768772  0.1296136    27.596  < 2e-16 ***\nORIGIN_GRID_ID1646  3.4119502  0.1297959    26.287  < 2e-16 ***\nORIGIN_GRID_ID1647  3.7963164  0.1295980    29.293  < 2e-16 ***\nORIGIN_GRID_ID1648  4.4450360  0.1295512    34.311  < 2e-16 ***\nORIGIN_GRID_ID1649  5.2239149  0.1295114    40.336  < 2e-16 ***\nORIGIN_GRID_ID1650  5.3531423  0.1295714    41.314  < 2e-16 ***\nORIGIN_GRID_ID1664 -0.7669466  0.1962837    -3.907 9.33e-05 ***\nORIGIN_GRID_ID1665  4.5082728  0.1295209    34.807  < 2e-16 ***\nORIGIN_GRID_ID1666  3.1955625  0.1296706    24.644  < 2e-16 ***\nORIGIN_GRID_ID1667  4.1908237  0.1299159    32.258  < 2e-16 ***\nORIGIN_GRID_ID1668  4.3454805  0.1295470    33.544  < 2e-16 ***\nORIGIN_GRID_ID1670  5.2460200  0.1295043    40.508  < 2e-16 ***\nORIGIN_GRID_ID1671  5.9639460  0.1295668    46.030  < 2e-16 ***\nORIGIN_GRID_ID1672  5.6147129  0.1295969    43.324  < 2e-16 ***\nORIGIN_GRID_ID1684  3.4741618  0.1301808    26.687  < 2e-16 ***\nORIGIN_GRID_ID1685  4.0746079  0.1295741    31.446  < 2e-16 ***\nORIGIN_GRID_ID1686  3.9330895  0.1295777    30.353  < 2e-16 ***\nORIGIN_GRID_ID1687  3.5154650  0.1296895    27.107  < 2e-16 ***\nORIGIN_GRID_ID1688  3.0532081  0.1297673    23.528  < 2e-16 ***\nORIGIN_GRID_ID1689  2.6536870  0.1301593    20.388  < 2e-16 ***\nORIGIN_GRID_ID1690  4.1712981  0.1296322    32.178  < 2e-16 ***\nORIGIN_GRID_ID1691  4.9626838  0.1295359    38.311  < 2e-16 ***\nORIGIN_GRID_ID1692  4.5589933  0.1297324    35.142  < 2e-16 ***\nORIGIN_GRID_ID1706  4.0081407  0.1296277    30.920  < 2e-16 ***\nORIGIN_GRID_ID1707  3.9637852  0.1295615    30.594  < 2e-16 ***\nORIGIN_GRID_ID1708  4.4675242  0.1295254    34.492  < 2e-16 ***\nORIGIN_GRID_ID1709  3.6166428  0.1296352    27.899  < 2e-16 ***\nORIGIN_GRID_ID1710  4.7904753  0.1295294    36.984  < 2e-16 ***\nORIGIN_GRID_ID1711  4.5356287  0.1295667    35.006  < 2e-16 ***\nORIGIN_GRID_ID1712  5.2217263  0.1295048    40.321  < 2e-16 ***\nORIGIN_GRID_ID1713  2.8477872  0.1301703    21.877  < 2e-16 ***\nORIGIN_GRID_ID1714  5.5210310  0.1295493    42.617  < 2e-16 ***\nORIGIN_GRID_ID1727  4.2674021  0.1295737    32.934  < 2e-16 ***\nORIGIN_GRID_ID1728  4.0791378  0.1295581    31.485  < 2e-16 ***\nORIGIN_GRID_ID1729  3.5449555  0.1295996    27.353  < 2e-16 ***\nORIGIN_GRID_ID1730  1.5892433  0.1315346    12.082  < 2e-16 ***\nORIGIN_GRID_ID1731  4.3869675  0.1295665    33.859  < 2e-16 ***\nORIGIN_GRID_ID1732  4.9073625  0.1295147    37.890  < 2e-16 ***\nORIGIN_GRID_ID1733  4.7065179  0.1295402    36.332  < 2e-16 ***\nORIGIN_GRID_ID1734  5.1276524  0.1295342    39.585  < 2e-16 ***\nORIGIN_GRID_ID1735  6.8799905  0.1296343    53.072  < 2e-16 ***\nORIGIN_GRID_ID1748  2.9361434  0.1298859    22.606  < 2e-16 ***\nORIGIN_GRID_ID1749  3.9056168  0.1295685    30.143  < 2e-16 ***\nORIGIN_GRID_ID1750  3.0562456  0.1296990    23.564  < 2e-16 ***\nORIGIN_GRID_ID1751  2.4420610  0.1299549    18.792  < 2e-16 ***\nORIGIN_GRID_ID1753  4.9711435  0.1295192    38.382  < 2e-16 ***\nORIGIN_GRID_ID1754  5.3337544  0.1295023    41.187  < 2e-16 ***\nORIGIN_GRID_ID1755  4.8917895  0.1295362    37.764  < 2e-16 ***\nORIGIN_GRID_ID1756  4.8391742  0.1295775    37.346  < 2e-16 ***\nORIGIN_GRID_ID1757  2.8529716  0.1338373    21.317  < 2e-16 ***\nORIGIN_GRID_ID1769  3.7838460  0.1296145    29.193  < 2e-16 ***\nORIGIN_GRID_ID1770  3.3796181  0.1299016    26.017  < 2e-16 ***\nORIGIN_GRID_ID1771  2.5103268  0.1299741    19.314  < 2e-16 ***\nORIGIN_GRID_ID1772  1.2899587  0.1322767     9.752  < 2e-16 ***\nORIGIN_GRID_ID1774  4.6851876  0.1295339    36.170  < 2e-16 ***\nORIGIN_GRID_ID1775  4.3544664  0.1295849    33.603  < 2e-16 ***\nORIGIN_GRID_ID1776  5.5403866  0.1295063    42.781  < 2e-16 ***\nORIGIN_GRID_ID1777  5.6145983  0.1295223    43.349  < 2e-16 ***\nORIGIN_GRID_ID1778  5.4232319  0.1300764    41.693  < 2e-16 ***\nORIGIN_GRID_ID1790  4.4477112  0.1295638    34.328  < 2e-16 ***\nORIGIN_GRID_ID1791  3.7901891  0.1296403    29.236  < 2e-16 ***\nORIGIN_GRID_ID1792  3.7807792  0.1296572    29.160  < 2e-16 ***\nORIGIN_GRID_ID1793  1.6174918  0.1304368    12.401  < 2e-16 ***\nORIGIN_GRID_ID1794  1.5863784  0.1326581    11.958  < 2e-16 ***\nORIGIN_GRID_ID1795  1.1702834  0.1339635     8.736  < 2e-16 ***\nORIGIN_GRID_ID1796  5.2011851  0.1295350    40.153  < 2e-16 ***\nORIGIN_GRID_ID1797  5.2007105  0.1295211    40.153  < 2e-16 ***\nORIGIN_GRID_ID1798  5.2566245  0.1295215    40.585  < 2e-16 ***\nORIGIN_GRID_ID1799  4.5086765  0.1296983    34.763  < 2e-16 ***\nORIGIN_GRID_ID1800  3.8509753  0.1324888    29.066  < 2e-16 ***\nORIGIN_GRID_ID1811  3.5362925  0.1296982    27.266  < 2e-16 ***\nORIGIN_GRID_ID1812  4.6886953  0.1295128    36.203  < 2e-16 ***\nORIGIN_GRID_ID1813  4.4860516  0.1295226    34.635  < 2e-16 ***\nORIGIN_GRID_ID1817  5.1020246  0.1295744    39.375  < 2e-16 ***\nORIGIN_GRID_ID1818  5.0506360  0.1295420    38.988  < 2e-16 ***\nORIGIN_GRID_ID1819  5.5558645  0.1295159    42.897  < 2e-16 ***\nORIGIN_GRID_ID1820  2.7786262  0.1346301    20.639  < 2e-16 ***\nORIGIN_GRID_ID1832  4.2234358  0.1295877    32.591  < 2e-16 ***\nORIGIN_GRID_ID1833  3.7691957  0.1296123    29.081  < 2e-16 ***\nORIGIN_GRID_ID1834  4.1157896  0.1295453    31.771  < 2e-16 ***\nORIGIN_GRID_ID1835  3.4028058  0.1296932    26.237  < 2e-16 ***\nORIGIN_GRID_ID1837  0.6487398  0.1440852     4.502 6.72e-06 ***\nORIGIN_GRID_ID1839  4.5123790  0.1296771    34.797  < 2e-16 ***\nORIGIN_GRID_ID1840  6.3155314  0.1294905    48.772  < 2e-16 ***\nORIGIN_GRID_ID1841  1.8222908  0.1374095    13.262  < 2e-16 ***\nORIGIN_GRID_ID1842  6.2900132  0.1299797    48.392  < 2e-16 ***\nORIGIN_GRID_ID1853  4.1833084  0.1295624    32.288  < 2e-16 ***\nORIGIN_GRID_ID1854  4.3782363  0.1295526    33.795  < 2e-16 ***\nORIGIN_GRID_ID1855  4.6865056  0.1295311    36.181  < 2e-16 ***\nORIGIN_GRID_ID1858  2.4701416  0.1322826    18.673  < 2e-16 ***\nORIGIN_GRID_ID1860  5.8422113  0.1297687    45.020  < 2e-16 ***\nORIGIN_GRID_ID1861  5.3003289  0.1295478    40.914  < 2e-16 ***\nORIGIN_GRID_ID1874  4.3349294  0.1296206    33.443  < 2e-16 ***\nORIGIN_GRID_ID1875  2.6918340  0.1301927    20.676  < 2e-16 ***\nORIGIN_GRID_ID1876  4.7533297  0.1299394    36.581  < 2e-16 ***\nORIGIN_GRID_ID1877  4.4058244  0.1295543    34.008  < 2e-16 ***\nORIGIN_GRID_ID1880  0.8414193  0.1385237     6.074 1.25e-09 ***\nORIGIN_GRID_ID1882  5.1464119  0.1295600    39.722  < 2e-16 ***\nORIGIN_GRID_ID1883  5.6665870  0.1297963    43.658  < 2e-16 ***\nORIGIN_GRID_ID1895  4.4713043  0.1295540    34.513  < 2e-16 ***\nORIGIN_GRID_ID1896  2.8490971  0.1298536    21.941  < 2e-16 ***\nORIGIN_GRID_ID1897  3.4797567  0.1298036    26.808  < 2e-16 ***\nORIGIN_GRID_ID1898 -0.9007228  0.1987324    -4.532 5.83e-06 ***\nORIGIN_GRID_ID1901  0.7167528  0.1483662     4.831 1.36e-06 ***\nORIGIN_GRID_ID1903  5.0671462  0.1297827    39.043  < 2e-16 ***\nORIGIN_GRID_ID1917  2.9908502  0.1298537    23.032  < 2e-16 ***\nORIGIN_GRID_ID1918  4.5064227  0.1296026    34.771  < 2e-16 ***\nORIGIN_GRID_ID1919  4.3742247  0.1295716    33.759  < 2e-16 ***\nORIGIN_GRID_ID1922  2.2147164  0.1325120    16.713  < 2e-16 ***\nORIGIN_GRID_ID1924  4.8773986  0.1298234    37.569  < 2e-16 ***\nORIGIN_GRID_ID1937  3.8206609  0.1296646    29.466  < 2e-16 ***\nORIGIN_GRID_ID1938  4.5146459  0.1295401    34.851  < 2e-16 ***\nORIGIN_GRID_ID1939  5.1001144  0.1295282    39.375  < 2e-16 ***\nORIGIN_GRID_ID1942  1.0324386  0.1374806     7.510 5.93e-14 ***\nORIGIN_GRID_ID1959  3.4203092  0.1297809    26.354  < 2e-16 ***\nORIGIN_GRID_ID1960  5.3955995  0.1294925    41.667  < 2e-16 ***\nORIGIN_GRID_ID1961  3.8297833  0.1296616    29.537  < 2e-16 ***\nORIGIN_GRID_ID1962  4.8745811  0.1295354    37.631  < 2e-16 ***\nORIGIN_GRID_ID1964  0.1864415  0.1555351     1.199 0.230641    \nORIGIN_GRID_ID1979  3.7181561  0.1297317    28.660  < 2e-16 ***\nORIGIN_GRID_ID1980  2.0364481  0.1303160    15.627  < 2e-16 ***\nORIGIN_GRID_ID1981  4.5057261  0.1295370    34.783  < 2e-16 ***\nORIGIN_GRID_ID1982  3.5177346  0.1299868    27.062  < 2e-16 ***\nORIGIN_GRID_ID1983  4.7814982  0.1295387    36.912  < 2e-16 ***\nORIGIN_GRID_ID1984  3.4782341  0.1297132    26.815  < 2e-16 ***\nORIGIN_GRID_ID1985  4.2742125  0.1296214    32.975  < 2e-16 ***\nORIGIN_GRID_ID2001  4.0247064  0.1296068    31.053  < 2e-16 ***\nORIGIN_GRID_ID2002  4.5939606  0.1295193    35.469  < 2e-16 ***\nORIGIN_GRID_ID2003  4.2481805  0.1295660    32.788  < 2e-16 ***\nORIGIN_GRID_ID2004  4.8449892  0.1295348    37.403  < 2e-16 ***\nORIGIN_GRID_ID2005  4.7527914  0.1295299    36.693  < 2e-16 ***\nORIGIN_GRID_ID2006  3.2864724  0.1298299    25.314  < 2e-16 ***\nORIGIN_GRID_ID2007  2.7439114  0.1305454    21.019  < 2e-16 ***\nORIGIN_GRID_ID2022  4.3784896  0.1296101    33.782  < 2e-16 ***\nORIGIN_GRID_ID2023  4.8561397  0.1295160    37.495  < 2e-16 ***\nORIGIN_GRID_ID2024  4.1542669  0.1295560    32.065  < 2e-16 ***\nORIGIN_GRID_ID2025  4.2169793  0.1295486    32.551  < 2e-16 ***\nORIGIN_GRID_ID2026  2.9201910  0.1300222    22.459  < 2e-16 ***\nORIGIN_GRID_ID2027  5.1606337  0.1295248    39.843  < 2e-16 ***\nORIGIN_GRID_ID2043  3.7377516  0.1297095    28.816  < 2e-16 ***\nORIGIN_GRID_ID2044  4.4636274  0.1295342    34.459  < 2e-16 ***\nORIGIN_GRID_ID2045 -0.0212320  0.1514585    -0.140 0.888515    \nORIGIN_GRID_ID2046  4.3997735  0.1295238    33.969  < 2e-16 ***\nORIGIN_GRID_ID2047  4.2323301  0.1295729    32.664  < 2e-16 ***\nORIGIN_GRID_ID2048  4.4782133  0.1295482    34.568  < 2e-16 ***\nORIGIN_GRID_ID2049  3.5591754  0.1302141    27.333  < 2e-16 ***\nORIGIN_GRID_ID2064  4.4331496  0.1295630    34.216  < 2e-16 ***\nORIGIN_GRID_ID2065  2.8770447  0.1297752    22.169  < 2e-16 ***\nORIGIN_GRID_ID2066  2.2398769  0.1319895    16.970  < 2e-16 ***\nORIGIN_GRID_ID2067  5.6565188  0.1294887    43.683  < 2e-16 ***\nORIGIN_GRID_ID2068  4.0353594  0.1296607    31.122  < 2e-16 ***\nORIGIN_GRID_ID2069  4.3594690  0.1295855    33.642  < 2e-16 ***\nORIGIN_GRID_ID2085  3.3052739  0.1298518    25.454  < 2e-16 ***\nORIGIN_GRID_ID2086  4.7312367  0.1295289    36.527  < 2e-16 ***\nORIGIN_GRID_ID2087  3.3434085  0.1296897    25.780  < 2e-16 ***\nORIGIN_GRID_ID2088  4.0681396  0.1295497    31.402  < 2e-16 ***\nORIGIN_GRID_ID2089  3.8465707  0.1296358    29.672  < 2e-16 ***\nORIGIN_GRID_ID2090  5.3530284  0.1295080    41.334  < 2e-16 ***\nORIGIN_GRID_ID2091  0.6272784  0.1491060     4.207 2.59e-05 ***\nORIGIN_GRID_ID2105  1.3762062  0.1729928     7.955 1.79e-15 ***\nORIGIN_GRID_ID2106  1.6416363  0.1310556    12.526  < 2e-16 ***\nORIGIN_GRID_ID2107  2.7480620  0.1298307    21.166  < 2e-16 ***\nORIGIN_GRID_ID2108  4.0263186  0.1295913    31.069  < 2e-16 ***\nORIGIN_GRID_ID2109  4.1368436  0.1295454    31.934  < 2e-16 ***\nORIGIN_GRID_ID2110  3.5824107  0.1296842    27.624  < 2e-16 ***\nORIGIN_GRID_ID2111  0.6700390  0.1387166     4.830 1.36e-06 ***\nORIGIN_GRID_ID2128  2.4359535  0.1303538    18.687  < 2e-16 ***\nORIGIN_GRID_ID2129  1.8833465  0.1304877    14.433  < 2e-16 ***\nORIGIN_GRID_ID2130  4.5947032  0.1295218    35.474  < 2e-16 ***\nORIGIN_GRID_ID2131  4.9282000  0.1295443    38.043  < 2e-16 ***\nORIGIN_GRID_ID2132  3.8554910  0.1296144    29.746  < 2e-16 ***\nORIGIN_GRID_ID2148  3.3581574  0.1300295    25.826  < 2e-16 ***\nORIGIN_GRID_ID2149  1.9142023  0.1305527    14.662  < 2e-16 ***\nORIGIN_GRID_ID2150  4.4704212  0.1295493    34.507  < 2e-16 ***\nORIGIN_GRID_ID2151  4.9488778  0.1295102    38.212  < 2e-16 ***\nORIGIN_GRID_ID2152  5.1196802  0.1295184    39.529  < 2e-16 ***\nORIGIN_GRID_ID2153  4.4747507  0.1295865    34.531  < 2e-16 ***\nORIGIN_GRID_ID2171  3.4566020  0.1296859    26.654  < 2e-16 ***\nORIGIN_GRID_ID2172  3.5849907  0.1297190    27.637  < 2e-16 ***\nORIGIN_GRID_ID2173  4.1226858  0.1295682    31.819  < 2e-16 ***\nORIGIN_GRID_ID2174  4.4003538  0.1295764    33.960  < 2e-16 ***\nORIGIN_GRID_ID2191  3.1016828  0.1299305    23.872  < 2e-16 ***\nORIGIN_GRID_ID2192  2.8466244  0.1299961    21.898  < 2e-16 ***\nORIGIN_GRID_ID2193  3.7757363  0.1296222    29.129  < 2e-16 ***\nORIGIN_GRID_ID2194  4.2211959  0.1295703    32.578  < 2e-16 ***\nORIGIN_GRID_ID2195  3.5912065  0.1313733    27.336  < 2e-16 ***\nORIGIN_GRID_ID2212  0.3512218  0.1659238     2.117 0.034280 *  \nORIGIN_GRID_ID2213  0.7193927  0.1369992     5.251 1.51e-07 ***\nORIGIN_GRID_ID2214  1.2875162  0.1325143     9.716  < 2e-16 ***\nORIGIN_GRID_ID2215  3.8536052  0.1296645    29.720  < 2e-16 ***\nORIGIN_GRID_ID2216  2.8738646  0.1299665    22.112  < 2e-16 ***\nORIGIN_GRID_ID2233  0.9638811  0.1386279     6.953 3.58e-12 ***\nORIGIN_GRID_ID2234  2.6929695  0.1311608    20.532  < 2e-16 ***\nORIGIN_GRID_ID2235  2.6459011  0.1302387    20.316  < 2e-16 ***\nORIGIN_GRID_ID2236  2.6638729  0.1301336    20.470  < 2e-16 ***\nORIGIN_GRID_ID2237  0.3779135  0.1434848     2.634 0.008443 ** \nORIGIN_GRID_ID2256  0.3960913  0.1369530     2.892 0.003826 ** \nORIGIN_GRID_ID2257  2.4052035  0.1310821    18.349  < 2e-16 ***\nORIGIN_GRID_ID2258  1.9344473  0.1305465    14.818  < 2e-16 ***\nORIGIN_GRID_ID2259  1.4119817  0.1354761    10.422  < 2e-16 ***\nORIGIN_GRID_ID2277  2.5901320  0.1350260    19.182  < 2e-16 ***\nORIGIN_GRID_ID2278  2.9789131  0.1305063    22.826  < 2e-16 ***\nORIGIN_GRID_ID2279  1.5489447  0.1311234    11.813  < 2e-16 ***\nORIGIN_GRID_ID2280 -0.6829078  0.1861325    -3.669 0.000244 ***\nORIGIN_GRID_ID2297  4.4047659  0.1298340    33.926  < 2e-16 ***\nORIGIN_GRID_ID2300  0.2740099  0.1471373     1.862 0.062565 .  \nORIGIN_GRID_ID2301  1.8788056  0.1310340    14.338  < 2e-16 ***\nORIGIN_GRID_ID2318  2.4764658  0.1309815    18.907  < 2e-16 ***\nORIGIN_GRID_ID2319  3.0715016  0.1299807    23.630  < 2e-16 ***\nORIGIN_GRID_ID2322  2.9809427  0.1301247    22.908  < 2e-16 ***\nORIGIN_GRID_ID2337  4.0314998  0.1307171    30.841  < 2e-16 ***\nORIGIN_GRID_ID2341  3.4439324  0.1299081    26.511  < 2e-16 ***\nORIGIN_GRID_ID2343  2.2924161  0.1303175    17.591  < 2e-16 ***\nORIGIN_GRID_ID2361  3.1653603  0.1301144    24.328  < 2e-16 ***\nORIGIN_GRID_ID2364 -0.9598717  0.1610771    -5.959 2.54e-09 ***\nORIGIN_GRID_ID2379  3.4030193  0.1311183    25.954  < 2e-16 ***\nORIGIN_GRID_ID2384  2.0318912  0.1306699    15.550  < 2e-16 ***\nORIGIN_GRID_ID2405  1.6597664  0.1308169    12.688  < 2e-16 ***\nORIGIN_GRID_ID2406  0.4161095  0.1355219     3.070 0.002138 ** \nORIGIN_GRID_ID2426  1.1372938  0.1337444     8.503  < 2e-16 ***\nORIGIN_GRID_ID2427  2.9696569  0.1300218    22.840  < 2e-16 ***\nORIGIN_GRID_ID2505  3.2509457  0.1375646    23.632  < 2e-16 ***\nDESTIN_GRID_ID44    1.4610699  0.0599516    24.371  < 2e-16 ***\nDESTIN_GRID_ID46    0.5268457  0.0595126     8.853  < 2e-16 ***\nDESTIN_GRID_ID66   -0.3356421  0.0737223    -4.553 5.29e-06 ***\nDESTIN_GRID_ID67    0.4615278  0.0576908     8.000 1.24e-15 ***\nDESTIN_GRID_ID68    0.1698465  0.0596451     2.848 0.004405 ** \nDESTIN_GRID_ID86    0.5425684  0.0661282     8.205 2.31e-16 ***\nDESTIN_GRID_ID87   -2.8429225  0.1051627   -27.034  < 2e-16 ***\nDESTIN_GRID_ID88   -0.0387740  0.0586941    -0.661 0.508862    \nDESTIN_GRID_ID89   -0.5752329  0.0601924    -9.557  < 2e-16 ***\nDESTIN_GRID_ID90   -3.6914168  0.7095101    -5.203 1.96e-07 ***\nDESTIN_GRID_ID109  -0.3567290  0.0610855    -5.840 5.23e-09 ***\nDESTIN_GRID_ID110  -3.3114581  0.1302724   -25.419  < 2e-16 ***\nDESTIN_GRID_ID111   1.1089680  0.0570279    19.446  < 2e-16 ***\nDESTIN_GRID_ID112  -2.3681041  0.0649370   -36.468  < 2e-16 ***\nDESTIN_GRID_ID128   1.1984646  0.0610733    19.623  < 2e-16 ***\nDESTIN_GRID_ID129  -4.2971646  0.1496889   -28.707  < 2e-16 ***\nDESTIN_GRID_ID130  -0.5709847  0.0605596    -9.428  < 2e-16 ***\nDESTIN_GRID_ID131  -1.2930114  0.0602786   -21.451  < 2e-16 ***\nDESTIN_GRID_ID132  -0.7767828  0.0576409   -13.476  < 2e-16 ***\nDESTIN_GRID_ID133  -0.6741147  0.0570096   -11.825  < 2e-16 ***\nDESTIN_GRID_ID134  -0.5411679  0.0568437    -9.520  < 2e-16 ***\nDESTIN_GRID_ID150  -0.1516506  0.0654708    -2.316 0.020541 *  \nDESTIN_GRID_ID151  -0.4658215  0.0603680    -7.716 1.20e-14 ***\nDESTIN_GRID_ID152   0.4810085  0.0578593     8.313  < 2e-16 ***\nDESTIN_GRID_ID153   0.0278521  0.0575516     0.484 0.628422    \nDESTIN_GRID_ID154  -2.1271742  0.0625232   -34.022  < 2e-16 ***\nDESTIN_GRID_ID155  -1.7376108  0.0590421   -29.430  < 2e-16 ***\nDESTIN_GRID_ID156  -1.6110436  0.0601239   -26.795  < 2e-16 ***\nDESTIN_GRID_ID172  -1.5324519  0.0719054   -21.312  < 2e-16 ***\nDESTIN_GRID_ID174  -1.0441369  0.0579117   -18.030  < 2e-16 ***\nDESTIN_GRID_ID175  -0.6305106  0.0566495   -11.130  < 2e-16 ***\nDESTIN_GRID_ID176  -1.9811328  0.0631762   -31.359  < 2e-16 ***\nDESTIN_GRID_ID195  -2.3425966  0.0638239   -36.704  < 2e-16 ***\nDESTIN_GRID_ID196  -0.8985668  0.0566385   -15.865  < 2e-16 ***\nDESTIN_GRID_ID197  -4.1074879  0.0951995   -43.146  < 2e-16 ***\nDESTIN_GRID_ID215  -0.3849170  0.0633992    -6.071 1.27e-09 ***\nDESTIN_GRID_ID216  -0.5207832  0.0579500    -8.987  < 2e-16 ***\nDESTIN_GRID_ID217  -0.1915740  0.0565092    -3.390 0.000699 ***\nDESTIN_GRID_ID237  -2.4959554  0.0637312   -39.164  < 2e-16 ***\nDESTIN_GRID_ID238  -1.5021061  0.0578239   -25.977  < 2e-16 ***\nDESTIN_GRID_ID239  -1.7822038  0.0639682   -27.861  < 2e-16 ***\nDESTIN_GRID_ID257   0.4623821  0.0582248     7.941 2.00e-15 ***\nDESTIN_GRID_ID258  -1.4136448  0.0590904   -23.923  < 2e-16 ***\nDESTIN_GRID_ID259  -0.3061241  0.0570391    -5.367 8.01e-08 ***\nDESTIN_GRID_ID278   0.8349381  0.0577004    14.470  < 2e-16 ***\nDESTIN_GRID_ID279  -0.8919886  0.0574079   -15.538  < 2e-16 ***\nDESTIN_GRID_ID280  -0.6317467  0.0572375   -11.037  < 2e-16 ***\nDESTIN_GRID_ID298  -3.8458707  0.1609022   -23.902  < 2e-16 ***\nDESTIN_GRID_ID299  -0.6039604  0.0581484   -10.387  < 2e-16 ***\nDESTIN_GRID_ID300  -1.1767813  0.0584309   -20.140  < 2e-16 ***\nDESTIN_GRID_ID320   0.7201096  0.0576187    12.498  < 2e-16 ***\nDESTIN_GRID_ID321  -1.5464447  0.0608598   -25.410  < 2e-16 ***\nDESTIN_GRID_ID322  -0.2943587  0.0571107    -5.154 2.55e-07 ***\nDESTIN_GRID_ID340   1.4336843  0.0569572    25.171  < 2e-16 ***\nDESTIN_GRID_ID341  -0.0627381  0.0571590    -1.098 0.272376    \nDESTIN_GRID_ID342  -0.4193694  0.0568467    -7.377 1.62e-13 ***\nDESTIN_GRID_ID363  -0.4359403  0.0574612    -7.587 3.28e-14 ***\nDESTIN_GRID_ID364  -0.4353339  0.0564071    -7.718 1.18e-14 ***\nDESTIN_GRID_ID383   0.5820039  0.0566172    10.280  < 2e-16 ***\nDESTIN_GRID_ID384  -0.6234082  0.0564973   -11.034  < 2e-16 ***\nDESTIN_GRID_ID385  -1.6072532  0.0579213   -27.749  < 2e-16 ***\nDESTIN_GRID_ID404   0.7134065  0.0572976    12.451  < 2e-16 ***\nDESTIN_GRID_ID405  -0.0229839  0.0568779    -0.404 0.686145    \nDESTIN_GRID_ID406   0.3153790  0.0561297     5.619 1.92e-08 ***\nDESTIN_GRID_ID407  -0.2016686  0.0567608    -3.553 0.000381 ***\nDESTIN_GRID_ID408   0.9741113  0.0561943    17.335  < 2e-16 ***\nDESTIN_GRID_ID425  -1.6595213  0.0611864   -27.122  < 2e-16 ***\nDESTIN_GRID_ID426  -1.0812839  0.0568129   -19.032  < 2e-16 ***\nDESTIN_GRID_ID427  -3.7453586  0.0618388   -60.566  < 2e-16 ***\nDESTIN_GRID_ID428  -1.1675551  0.0571924   -20.415  < 2e-16 ***\nDESTIN_GRID_ID429  -1.3551882  0.0608753   -22.262  < 2e-16 ***\nDESTIN_GRID_ID446  -0.4429953  0.0605244    -7.319 2.49e-13 ***\nDESTIN_GRID_ID447  -1.2773973  0.0584571   -21.852  < 2e-16 ***\nDESTIN_GRID_ID448  -1.5924450  0.0570796   -27.899  < 2e-16 ***\nDESTIN_GRID_ID449  -0.9527828  0.0563947   -16.895  < 2e-16 ***\nDESTIN_GRID_ID450  -1.5568039  0.0573869   -27.128  < 2e-16 ***\nDESTIN_GRID_ID468  -0.9247058  0.0569329   -16.242  < 2e-16 ***\nDESTIN_GRID_ID469  -1.4706087  0.0565725   -25.995  < 2e-16 ***\nDESTIN_GRID_ID470  -1.2795145  0.0564335   -22.673  < 2e-16 ***\nDESTIN_GRID_ID471  -1.1073576  0.0585916   -18.900  < 2e-16 ***\nDESTIN_GRID_ID488  -0.5184509  0.0602408    -8.606  < 2e-16 ***\nDESTIN_GRID_ID489  -2.6036607  0.0737457   -35.306  < 2e-16 ***\nDESTIN_GRID_ID490  -0.6908185  0.0565754   -12.211  < 2e-16 ***\nDESTIN_GRID_ID491  -3.1780955  0.0584079   -54.412  < 2e-16 ***\nDESTIN_GRID_ID493  -3.5119478  0.0743175   -47.256  < 2e-16 ***\nDESTIN_GRID_ID494  -1.7166221  0.0605733   -28.340  < 2e-16 ***\nDESTIN_GRID_ID509  -0.1604207  0.0580366    -2.764 0.005708 ** \nDESTIN_GRID_ID510  -0.4352831  0.0568441    -7.657 1.90e-14 ***\nDESTIN_GRID_ID511  -1.2167976  0.0563565   -21.591  < 2e-16 ***\nDESTIN_GRID_ID512  -1.5345981  0.0563860   -27.216  < 2e-16 ***\nDESTIN_GRID_ID513  -0.3745261  0.0565800    -6.619 3.61e-11 ***\nDESTIN_GRID_ID514  -0.6766611  0.0572336   -11.823  < 2e-16 ***\nDESTIN_GRID_ID515  -2.1744748  0.0645579   -33.683  < 2e-16 ***\nDESTIN_GRID_ID530  -0.7794013  0.0630744   -12.357  < 2e-16 ***\nDESTIN_GRID_ID531   1.4297443  0.0562899    25.400  < 2e-16 ***\nDESTIN_GRID_ID532  -0.9750363  0.0566323   -17.217  < 2e-16 ***\nDESTIN_GRID_ID533   0.1811368  0.0560245     3.233 0.001224 ** \nDESTIN_GRID_ID534  -1.3081861  0.0563872   -23.200  < 2e-16 ***\nDESTIN_GRID_ID536  -1.5897228  0.0589097   -26.986  < 2e-16 ***\nDESTIN_GRID_ID537  -2.3757446  0.0658895   -36.057  < 2e-16 ***\nDESTIN_GRID_ID538  -2.7100740  0.0714091   -37.951  < 2e-16 ***\nDESTIN_GRID_ID539  -5.0321516  0.2730833   -18.427  < 2e-16 ***\nDESTIN_GRID_ID551  -0.1724314  0.0587456    -2.935 0.003333 ** \nDESTIN_GRID_ID552   0.2275552  0.0569909     3.993 6.53e-05 ***\nDESTIN_GRID_ID553  -1.7428541  0.0566214   -30.781  < 2e-16 ***\nDESTIN_GRID_ID554  -1.8164249  0.0564052   -32.203  < 2e-16 ***\nDESTIN_GRID_ID555  -0.5618273  0.0564861    -9.946  < 2e-16 ***\nDESTIN_GRID_ID559  -2.8255867  0.0775973   -36.413  < 2e-16 ***\nDESTIN_GRID_ID560  -0.4882698  0.0585018    -8.346  < 2e-16 ***\nDESTIN_GRID_ID561  -2.8699939  0.0877732   -32.698  < 2e-16 ***\nDESTIN_GRID_ID572  -1.0880331  0.0657350   -16.552  < 2e-16 ***\nDESTIN_GRID_ID573   0.5929914  0.0569392    10.414  < 2e-16 ***\nDESTIN_GRID_ID574  -1.2334047  0.0581389   -21.215  < 2e-16 ***\nDESTIN_GRID_ID575   1.2163545  0.0559811    21.728  < 2e-16 ***\nDESTIN_GRID_ID576  -1.4208907  0.0563273   -25.226  < 2e-16 ***\nDESTIN_GRID_ID578  -4.7814343  0.1209528   -39.531  < 2e-16 ***\nDESTIN_GRID_ID582  -3.0782528  0.0844724   -36.441  < 2e-16 ***\nDESTIN_GRID_ID583  -4.9551914  0.3820981   -12.968  < 2e-16 ***\nDESTIN_GRID_ID584  -1.5041341  0.0666759   -22.559  < 2e-16 ***\nDESTIN_GRID_ID593  -1.7191918  0.0615438   -27.934  < 2e-16 ***\nDESTIN_GRID_ID594  -0.4113533  0.0577054    -7.129 1.01e-12 ***\nDESTIN_GRID_ID595  -0.6262470  0.0562647   -11.130  < 2e-16 ***\nDESTIN_GRID_ID596  -1.2127737  0.0561870   -21.585  < 2e-16 ***\nDESTIN_GRID_ID597  -1.6851133  0.0581003   -29.004  < 2e-16 ***\nDESTIN_GRID_ID603  -2.6302551  0.0769900   -34.164  < 2e-16 ***\nDESTIN_GRID_ID604  -2.1680858  0.0755914   -28.682  < 2e-16 ***\nDESTIN_GRID_ID615  -1.3246859  0.0578840   -22.885  < 2e-16 ***\nDESTIN_GRID_ID616  -0.8465800  0.0567004   -14.931  < 2e-16 ***\nDESTIN_GRID_ID617  -1.9388052  0.0567127   -34.186  < 2e-16 ***\nDESTIN_GRID_ID618  -1.4344561  0.0563682   -25.448  < 2e-16 ***\nDESTIN_GRID_ID620  -1.2854927  0.0571318   -22.500  < 2e-16 ***\nDESTIN_GRID_ID637  -1.3516205  0.0570347   -23.698  < 2e-16 ***\nDESTIN_GRID_ID638  -1.4138849  0.0563064   -25.111  < 2e-16 ***\nDESTIN_GRID_ID657   0.0107152  0.0564147     0.190 0.849360    \nDESTIN_GRID_ID658  -0.7058668  0.0563114   -12.535  < 2e-16 ***\nDESTIN_GRID_ID659  -1.0164890  0.0562735   -18.063  < 2e-16 ***\nDESTIN_GRID_ID660  -0.6140699  0.0561341   -10.939  < 2e-16 ***\nDESTIN_GRID_ID662  -1.1791358  0.0573447   -20.562  < 2e-16 ***\nDESTIN_GRID_ID677   0.0748666  0.0567715     1.319 0.187258    \nDESTIN_GRID_ID678  -1.8428042  0.0577264   -31.923  < 2e-16 ***\nDESTIN_GRID_ID679  -0.4158101  0.0561992    -7.399 1.37e-13 ***\nDESTIN_GRID_ID680   1.0278618  0.0560190    18.348  < 2e-16 ***\nDESTIN_GRID_ID681  -2.8599678  0.0596472   -47.948  < 2e-16 ***\nDESTIN_GRID_ID699  -0.5090672  0.0567112    -8.976  < 2e-16 ***\nDESTIN_GRID_ID700  -1.0519602  0.0564480   -18.636  < 2e-16 ***\nDESTIN_GRID_ID701  -3.5339314  0.0605694   -58.345  < 2e-16 ***\nDESTIN_GRID_ID702  -0.8271455  0.0561888   -14.721  < 2e-16 ***\nDESTIN_GRID_ID704  -1.7034718  0.0571033   -29.831  < 2e-16 ***\nDESTIN_GRID_ID722  -1.5862609  0.0566965   -27.978  < 2e-16 ***\nDESTIN_GRID_ID725  -3.8728384  0.0624696   -61.996  < 2e-16 ***\nDESTIN_GRID_ID741   0.0392697  0.0564653     0.695 0.486763    \nDESTIN_GRID_ID743  -3.7050615  0.0612027   -60.538  < 2e-16 ***\nDESTIN_GRID_ID744  -0.7625322  0.0561966   -13.569  < 2e-16 ***\nDESTIN_GRID_ID761   0.3348697  0.0566392     5.912 3.37e-09 ***\nDESTIN_GRID_ID762  -1.7406872  0.0577587   -30.137  < 2e-16 ***\nDESTIN_GRID_ID763  -3.3305642  0.0602167   -55.310  < 2e-16 ***\nDESTIN_GRID_ID764  -0.2480610  0.0560918    -4.422 9.76e-06 ***\nDESTIN_GRID_ID765  -1.0957001  0.0568309   -19.280  < 2e-16 ***\nDESTIN_GRID_ID767  -1.3827795  0.0564507   -24.495  < 2e-16 ***\nDESTIN_GRID_ID772  -2.3042872  0.0697004   -33.060  < 2e-16 ***\nDESTIN_GRID_ID784  -3.1495557  0.0605078   -52.052  < 2e-16 ***\nDESTIN_GRID_ID785  -1.2005457  0.0562720   -21.335  < 2e-16 ***\nDESTIN_GRID_ID786  -1.0876295  0.0562036   -19.352  < 2e-16 ***\nDESTIN_GRID_ID787  -1.9154086  0.0570940   -33.548  < 2e-16 ***\nDESTIN_GRID_ID788  -3.4215223  0.0585593   -58.428  < 2e-16 ***\nDESTIN_GRID_ID789  -3.5948161  0.0590513   -60.876  < 2e-16 ***\nDESTIN_GRID_ID803  -0.8733909  0.0577475   -15.124  < 2e-16 ***\nDESTIN_GRID_ID804  -0.3487188  0.0563526    -6.188 6.09e-10 ***\nDESTIN_GRID_ID805   0.5832728  0.0560457    10.407  < 2e-16 ***\nDESTIN_GRID_ID806  -1.3031895  0.0562876   -23.152  < 2e-16 ***\nDESTIN_GRID_ID807  -1.2828651  0.0564824   -22.713  < 2e-16 ***\nDESTIN_GRID_ID808  -2.6934061  0.0588339   -45.780  < 2e-16 ***\nDESTIN_GRID_ID809  -1.5036401  0.0562607   -26.726  < 2e-16 ***\nDESTIN_GRID_ID810  -1.8304299  0.0566427   -32.315  < 2e-16 ***\nDESTIN_GRID_ID814  -1.2222994  0.0598103   -20.436  < 2e-16 ***\nDESTIN_GRID_ID819  -0.3485719  0.0584557    -5.963 2.48e-09 ***\nDESTIN_GRID_ID824  -0.6543714  0.0577081   -11.339  < 2e-16 ***\nDESTIN_GRID_ID826  -0.9557664  0.0563166   -16.971  < 2e-16 ***\nDESTIN_GRID_ID827  -1.3277900  0.0563779   -23.552  < 2e-16 ***\nDESTIN_GRID_ID828  -1.1629982  0.0562230   -20.685  < 2e-16 ***\nDESTIN_GRID_ID829  -1.6129599  0.0566044   -28.495  < 2e-16 ***\nDESTIN_GRID_ID830  -3.1434561  0.0579229   -54.270  < 2e-16 ***\nDESTIN_GRID_ID831   0.4101318  0.0560476     7.318 2.53e-13 ***\nDESTIN_GRID_ID832   0.0261656  0.0561494     0.466 0.641216    \nDESTIN_GRID_ID835  -1.6494277  0.0598979   -27.537  < 2e-16 ***\nDESTIN_GRID_ID844  -0.9329556  0.0590085   -15.811  < 2e-16 ***\nDESTIN_GRID_ID846  -0.9980386  0.0564546   -17.679  < 2e-16 ***\nDESTIN_GRID_ID847  -0.2706069  0.0561695    -4.818 1.45e-06 ***\nDESTIN_GRID_ID848  -1.5132903  0.0563795   -26.841  < 2e-16 ***\nDESTIN_GRID_ID849  -2.1637961  0.0566169   -38.218  < 2e-16 ***\nDESTIN_GRID_ID850  -1.3328719  0.0562644   -23.689  < 2e-16 ***\nDESTIN_GRID_ID851  -1.9386011  0.0563986   -34.373  < 2e-16 ***\nDESTIN_GRID_ID852  -1.9931474  0.0566391   -35.190  < 2e-16 ***\nDESTIN_GRID_ID853  -0.9987631  0.0567903   -17.587  < 2e-16 ***\nDESTIN_GRID_ID854  -0.8962046  0.0578377   -15.495  < 2e-16 ***\nDESTIN_GRID_ID855  -1.8222538  0.0595759   -30.587  < 2e-16 ***\nDESTIN_GRID_ID856  -2.4285986  0.0646505   -37.565  < 2e-16 ***\nDESTIN_GRID_ID866  -0.1568838  0.0568707    -2.759 0.005805 ** \nDESTIN_GRID_ID867   0.3590664  0.0561670     6.393 1.63e-10 ***\nDESTIN_GRID_ID868  -0.1556461  0.0562540    -2.767 0.005660 ** \nDESTIN_GRID_ID869   0.7480666  0.0562247    13.305  < 2e-16 ***\nDESTIN_GRID_ID870   0.2431448  0.0560489     4.338 1.44e-05 ***\nDESTIN_GRID_ID871   0.1493405  0.0561300     2.661 0.007800 ** \nDESTIN_GRID_ID872  -1.4795778  0.0563202   -26.271  < 2e-16 ***\nDESTIN_GRID_ID873  -1.9316118  0.0566807   -34.079  < 2e-16 ***\nDESTIN_GRID_ID874  -3.1447609  0.0577028   -54.499  < 2e-16 ***\nDESTIN_GRID_ID875  -2.3836801  0.0624070   -38.196  < 2e-16 ***\nDESTIN_GRID_ID876  -2.0261508  0.0591613   -34.248  < 2e-16 ***\nDESTIN_GRID_ID877  -1.4013240  0.0578875   -24.208  < 2e-16 ***\nDESTIN_GRID_ID887  -0.9800010  0.0567178   -17.279  < 2e-16 ***\nDESTIN_GRID_ID888  -2.2385999  0.0578990   -38.664  < 2e-16 ***\nDESTIN_GRID_ID889  -1.5132996  0.0574806   -26.327  < 2e-16 ***\nDESTIN_GRID_ID890  -0.6503022  0.0562100   -11.569  < 2e-16 ***\nDESTIN_GRID_ID891  -2.2116856  0.0580584   -38.094  < 2e-16 ***\nDESTIN_GRID_ID893  -0.9368046  0.0561606   -16.681  < 2e-16 ***\nDESTIN_GRID_ID894  -2.5144371  0.0571447   -44.001  < 2e-16 ***\nDESTIN_GRID_ID895  -1.2988405  0.0567252   -22.897  < 2e-16 ***\nDESTIN_GRID_ID896  -3.7273942  0.0653753   -57.015  < 2e-16 ***\nDESTIN_GRID_ID897  -3.7085978  0.0644011   -57.586  < 2e-16 ***\nDESTIN_GRID_ID898  -1.3942920  0.0584698   -23.846  < 2e-16 ***\nDESTIN_GRID_ID908  -0.0843897  0.0570444    -1.479 0.139042    \nDESTIN_GRID_ID909  -0.9894278  0.0563524   -17.558  < 2e-16 ***\nDESTIN_GRID_ID910  -1.9294061  0.0572018   -33.730  < 2e-16 ***\nDESTIN_GRID_ID911   0.1438955  0.0561308     2.564 0.010360 *  \nDESTIN_GRID_ID912  -1.6717073  0.0565528   -29.560  < 2e-16 ***\nDESTIN_GRID_ID915  -1.5337938  0.0563151   -27.236  < 2e-16 ***\nDESTIN_GRID_ID917  -0.0695969  0.0562638    -1.237 0.216096    \nDESTIN_GRID_ID918  -4.3382571  0.0688926   -62.971  < 2e-16 ***\nDESTIN_GRID_ID919  -2.7325354  0.0583727   -46.812  < 2e-16 ***\nDESTIN_GRID_ID928  -2.1128464  0.0591398   -35.726  < 2e-16 ***\nDESTIN_GRID_ID929  -1.2279249  0.0564996   -21.733  < 2e-16 ***\nDESTIN_GRID_ID930   0.0374656  0.0561009     0.668 0.504246    \nDESTIN_GRID_ID931  -1.4694589  0.0569965   -25.782  < 2e-16 ***\nDESTIN_GRID_ID932  -3.1800504  0.0614029   -51.790  < 2e-16 ***\nDESTIN_GRID_ID933  -1.1901952  0.0565811   -21.035  < 2e-16 ***\nDESTIN_GRID_ID934  -1.4108314  0.0565158   -24.963  < 2e-16 ***\nDESTIN_GRID_ID935   0.4289724  0.0560377     7.655 1.93e-14 ***\nDESTIN_GRID_ID938  -5.2647697  0.1535308   -34.291  < 2e-16 ***\nDESTIN_GRID_ID939   0.5399083  0.0561264     9.620  < 2e-16 ***\nDESTIN_GRID_ID940  -3.4836312  0.0597707   -58.283  < 2e-16 ***\nDESTIN_GRID_ID949  -1.7357706  0.0581119   -29.869  < 2e-16 ***\nDESTIN_GRID_ID950   0.2359275  0.0562182     4.197 2.71e-05 ***\nDESTIN_GRID_ID951   0.9593325  0.0560406    17.119  < 2e-16 ***\nDESTIN_GRID_ID952  -0.5235626  0.0565298    -9.262  < 2e-16 ***\nDESTIN_GRID_ID953  -1.0583859  0.0567089   -18.663  < 2e-16 ***\nDESTIN_GRID_ID954  -2.9818469  0.0587825   -50.727  < 2e-16 ***\nDESTIN_GRID_ID955  -0.2300760  0.0561645    -4.096 4.20e-05 ***\nDESTIN_GRID_ID956  -2.1876292  0.0568063   -38.510  < 2e-16 ***\nDESTIN_GRID_ID957  -2.1539387  0.0568226   -37.906  < 2e-16 ***\nDESTIN_GRID_ID959  -1.5009998  0.0594133   -25.264  < 2e-16 ***\nDESTIN_GRID_ID961  -1.9544241  0.0574002   -34.049  < 2e-16 ***\nDESTIN_GRID_ID962  -0.1721998  0.0563338    -3.057 0.002237 ** \nDESTIN_GRID_ID970  -0.8239264  0.0565593   -14.567  < 2e-16 ***\nDESTIN_GRID_ID971  -0.3608449  0.0561715    -6.424 1.33e-10 ***\nDESTIN_GRID_ID972  -1.2330365  0.0565073   -21.821  < 2e-16 ***\nDESTIN_GRID_ID974  -1.6309305  0.0571239   -28.551  < 2e-16 ***\nDESTIN_GRID_ID975  -2.8888583  0.0587362   -49.184  < 2e-16 ***\nDESTIN_GRID_ID976  -2.1483559  0.0570393   -37.664  < 2e-16 ***\nDESTIN_GRID_ID977  -1.8083919  0.0564149   -32.055  < 2e-16 ***\nDESTIN_GRID_ID978  -2.2011188  0.0572058   -38.477  < 2e-16 ***\nDESTIN_GRID_ID982  -2.7857811  0.0571933   -48.708  < 2e-16 ***\nDESTIN_GRID_ID983   0.0924426  0.0562763     1.643 0.100454    \nDESTIN_GRID_ID984   1.5173605  0.0564802    26.865  < 2e-16 ***\nDESTIN_GRID_ID991  -0.3412109  0.0564591    -6.044 1.51e-09 ***\nDESTIN_GRID_ID992  -0.5094272  0.0563655    -9.038  < 2e-16 ***\nDESTIN_GRID_ID993  -1.8101304  0.0568641   -31.833  < 2e-16 ***\nDESTIN_GRID_ID994  -1.8884731  0.0573417   -32.934  < 2e-16 ***\nDESTIN_GRID_ID995  -1.2602973  0.0566563   -22.245  < 2e-16 ***\nDESTIN_GRID_ID996  -1.8874875  0.0572857   -32.949  < 2e-16 ***\nDESTIN_GRID_ID997  -1.5715822  0.0575564   -27.305  < 2e-16 ***\nDESTIN_GRID_ID998  -1.2580991  0.0563654   -22.320  < 2e-16 ***\nDESTIN_GRID_ID999  -2.4246925  0.0570887   -42.472  < 2e-16 ***\nDESTIN_GRID_ID1001 -1.3202692  0.0582948   -22.648  < 2e-16 ***\nDESTIN_GRID_ID1003  0.0875909  0.0561040     1.561 0.118471    \nDESTIN_GRID_ID1004 -1.4489301  0.0562981   -25.737  < 2e-16 ***\nDESTIN_GRID_ID1011 -0.7823629  0.0573276   -13.647  < 2e-16 ***\nDESTIN_GRID_ID1012  0.1606465  0.0565317     2.842 0.004487 ** \nDESTIN_GRID_ID1013 -0.5150862  0.0564281    -9.128  < 2e-16 ***\nDESTIN_GRID_ID1014 -2.5331380  0.0588531   -43.042  < 2e-16 ***\nDESTIN_GRID_ID1015 -0.0776588  0.0562201    -1.381 0.167176    \nDESTIN_GRID_ID1016  0.2441984  0.0561217     4.351 1.35e-05 ***\nDESTIN_GRID_ID1018 -2.1174459  0.0574329   -36.868  < 2e-16 ***\nDESTIN_GRID_ID1019 -1.3335598  0.0563819   -23.652  < 2e-16 ***\nDESTIN_GRID_ID1023 -2.1665631  0.0577361   -37.525  < 2e-16 ***\nDESTIN_GRID_ID1024 -1.0995104  0.0563680   -19.506  < 2e-16 ***\nDESTIN_GRID_ID1025 -6.0809771  0.1193859   -50.935  < 2e-16 ***\nDESTIN_GRID_ID1033  0.0112310  0.0563473     0.199 0.842015    \nDESTIN_GRID_ID1034  0.2406891  0.0561864     4.284 1.84e-05 ***\nDESTIN_GRID_ID1035  0.1028650  0.0562069     1.830 0.067233 .  \nDESTIN_GRID_ID1036  0.2504604  0.0561637     4.459 8.22e-06 ***\nDESTIN_GRID_ID1037 -0.9344767  0.0563959   -16.570  < 2e-16 ***\nDESTIN_GRID_ID1043 -0.5350036  0.0571184    -9.367  < 2e-16 ***\nDESTIN_GRID_ID1045 -1.2715960  0.0563388   -22.571  < 2e-16 ***\nDESTIN_GRID_ID1046 -0.8848292  0.0563429   -15.704  < 2e-16 ***\nDESTIN_GRID_ID1053  0.6010904  0.0562068    10.694  < 2e-16 ***\nDESTIN_GRID_ID1054  0.1724255  0.0562395     3.066 0.002170 ** \nDESTIN_GRID_ID1055 -1.1397294  0.0567520   -20.083  < 2e-16 ***\nDESTIN_GRID_ID1056 -1.5004431  0.0572113   -26.226  < 2e-16 ***\nDESTIN_GRID_ID1064 -3.7210466  0.1038052   -35.846  < 2e-16 ***\nDESTIN_GRID_ID1066 -0.3765122  0.0561637    -6.704 2.03e-11 ***\nDESTIN_GRID_ID1067 -6.1181607  0.1534569   -39.869  < 2e-16 ***\nDESTIN_GRID_ID1074 -1.5496646  0.0579841   -26.726  < 2e-16 ***\nDESTIN_GRID_ID1075 -0.1061315  0.0564316    -1.881 0.060011 .  \nDESTIN_GRID_ID1076 -0.6700219  0.0564584   -11.868  < 2e-16 ***\nDESTIN_GRID_ID1077 -1.3809175  0.0569795   -24.235  < 2e-16 ***\nDESTIN_GRID_ID1079 -0.4008110  0.0563221    -7.116 1.11e-12 ***\nDESTIN_GRID_ID1085 -1.8028506  0.0755160   -23.874  < 2e-16 ***\nDESTIN_GRID_ID1087 -1.1466869  0.0563728   -20.341  < 2e-16 ***\nDESTIN_GRID_ID1088 -0.8564532  0.0563062   -15.211  < 2e-16 ***\nDESTIN_GRID_ID1094 -3.1262705  0.0791535   -39.496  < 2e-16 ***\nDESTIN_GRID_ID1095 -0.7532053  0.0581880   -12.944  < 2e-16 ***\nDESTIN_GRID_ID1096 -0.3551830  0.0584040    -6.081 1.19e-09 ***\nDESTIN_GRID_ID1097  0.3209940  0.0561534     5.716 1.09e-08 ***\nDESTIN_GRID_ID1098 -2.4166759  0.0607966   -39.750  < 2e-16 ***\nDESTIN_GRID_ID1099 -1.1200361  0.0566411   -19.774  < 2e-16 ***\nDESTIN_GRID_ID1105  0.8645824  0.0567727    15.229  < 2e-16 ***\nDESTIN_GRID_ID1106 -4.3305804  0.1159654   -37.344  < 2e-16 ***\nDESTIN_GRID_ID1107 -0.7269720  0.0565396   -12.858  < 2e-16 ***\nDESTIN_GRID_ID1108  1.3797181  0.0560444    24.618  < 2e-16 ***\nDESTIN_GRID_ID1109 -3.6416208  0.0665974   -54.681  < 2e-16 ***\nDESTIN_GRID_ID1116 -0.4983185  0.0566748    -8.793  < 2e-16 ***\nDESTIN_GRID_ID1117 -0.2036456  0.0565714    -3.600 0.000318 ***\nDESTIN_GRID_ID1118 -2.2185021  0.0594735   -37.302  < 2e-16 ***\nDESTIN_GRID_ID1119 -1.5185886  0.0571784   -26.559  < 2e-16 ***\nDESTIN_GRID_ID1120 -2.0763816  0.0591065   -35.129  < 2e-16 ***\nDESTIN_GRID_ID1129 -1.7768555  0.0566337   -31.375  < 2e-16 ***\nDESTIN_GRID_ID1130 -0.9824320  0.0562950   -17.451  < 2e-16 ***\nDESTIN_GRID_ID1131  0.1582357  0.0564281     2.804 0.005044 ** \nDESTIN_GRID_ID1136  0.6085001  0.0562296    10.822  < 2e-16 ***\nDESTIN_GRID_ID1138 -1.8534763  0.0593315   -31.239  < 2e-16 ***\nDESTIN_GRID_ID1139 -1.0276690  0.0565430   -18.175  < 2e-16 ***\nDESTIN_GRID_ID1141 -1.0062856  0.0566245   -17.771  < 2e-16 ***\nDESTIN_GRID_ID1148 -2.0408606  0.0639190   -31.929  < 2e-16 ***\nDESTIN_GRID_ID1149 -2.1288040  0.0577778   -36.845  < 2e-16 ***\nDESTIN_GRID_ID1150 -1.7696112  0.0564801   -31.332  < 2e-16 ***\nDESTIN_GRID_ID1151 -0.9475245  0.0564125   -16.796  < 2e-16 ***\nDESTIN_GRID_ID1158 -1.4116201  0.0573004   -24.635  < 2e-16 ***\nDESTIN_GRID_ID1159 -1.2908438  0.0568862   -22.692  < 2e-16 ***\nDESTIN_GRID_ID1160  0.3302352  0.0561530     5.881 4.08e-09 ***\nDESTIN_GRID_ID1171 -0.7515455  0.0563494   -13.337  < 2e-16 ***\nDESTIN_GRID_ID1172  0.5628361  0.0560920    10.034  < 2e-16 ***\nDESTIN_GRID_ID1173  0.1417609  0.0562535     2.520 0.011734 *  \nDESTIN_GRID_ID1174 -2.0868565  0.0692699   -30.126  < 2e-16 ***\nDESTIN_GRID_ID1178  0.7908148  0.0561235    14.091  < 2e-16 ***\nDESTIN_GRID_ID1179 -0.1705823  0.0562696    -3.032 0.002433 ** \nDESTIN_GRID_ID1180 -0.0609497  0.0562133    -1.084 0.278250    \nDESTIN_GRID_ID1181 -1.3064052  0.0567860   -23.006  < 2e-16 ***\nDESTIN_GRID_ID1183  0.4331267  0.0561510     7.714 1.22e-14 ***\nDESTIN_GRID_ID1190 -1.8914621  0.0623615   -30.331  < 2e-16 ***\nDESTIN_GRID_ID1192 -0.7918191  0.0562865   -14.068  < 2e-16 ***\nDESTIN_GRID_ID1193 -0.5232002  0.0562705    -9.298  < 2e-16 ***\nDESTIN_GRID_ID1194  0.0810440  0.0563442     1.438 0.150328    \nDESTIN_GRID_ID1200 -0.5231890  0.0565643    -9.249  < 2e-16 ***\nDESTIN_GRID_ID1201 -0.7987756  0.0565878   -14.116  < 2e-16 ***\nDESTIN_GRID_ID1203 -0.8823632  0.0566732   -15.569  < 2e-16 ***\nDESTIN_GRID_ID1204 -1.0295947  0.0567309   -18.149  < 2e-16 ***\nDESTIN_GRID_ID1211 -5.9137136  0.4507529   -13.120  < 2e-16 ***\nDESTIN_GRID_ID1214 -1.7201975  0.0567567   -30.308  < 2e-16 ***\nDESTIN_GRID_ID1215 -0.8778684  0.0572532   -15.333  < 2e-16 ***\nDESTIN_GRID_ID1216 -0.3742181  0.0569359    -6.573 4.94e-11 ***\nDESTIN_GRID_ID1220 -0.3160196  0.0563763    -5.606 2.08e-08 ***\nDESTIN_GRID_ID1221  0.2568795  0.0561685     4.573 4.80e-06 ***\nDESTIN_GRID_ID1222 -0.9422251  0.0575839   -16.363  < 2e-16 ***\nDESTIN_GRID_ID1223 -1.6014623  0.0575715   -27.817  < 2e-16 ***\nDESTIN_GRID_ID1224 -0.7930928  0.0565818   -14.017  < 2e-16 ***\nDESTIN_GRID_ID1231 -3.3979708  0.0847214   -40.108  < 2e-16 ***\nDESTIN_GRID_ID1232 -1.3709575  0.0609626   -22.488  < 2e-16 ***\nDESTIN_GRID_ID1235 -0.8203487  0.0563323   -14.563  < 2e-16 ***\nDESTIN_GRID_ID1236 -0.8941377  0.0566587   -15.781  < 2e-16 ***\nDESTIN_GRID_ID1241 -1.6110987  0.0574229   -28.057  < 2e-16 ***\nDESTIN_GRID_ID1242 -1.1404454  0.0568438   -20.063  < 2e-16 ***\nDESTIN_GRID_ID1243  0.0481299  0.0562362     0.856 0.392079    \nDESTIN_GRID_ID1246 -1.2905054  0.0568441   -22.703  < 2e-16 ***\nDESTIN_GRID_ID1256 -1.6026240  0.0567358   -28.247  < 2e-16 ***\nDESTIN_GRID_ID1257 -0.3957453  0.0563729    -7.020 2.22e-12 ***\nDESTIN_GRID_ID1258  0.5420228  0.0562611     9.634  < 2e-16 ***\nDESTIN_GRID_ID1262 -1.9150896  0.0579268   -33.061  < 2e-16 ***\nDESTIN_GRID_ID1263  0.4349248  0.0561091     7.751 9.09e-15 ***\nDESTIN_GRID_ID1264 -0.3608169  0.0565275    -6.383 1.74e-10 ***\nDESTIN_GRID_ID1265 -0.4517379  0.0566207    -7.978 1.48e-15 ***\nDESTIN_GRID_ID1266 -0.4246982  0.0564507    -7.523 5.34e-14 ***\nDESTIN_GRID_ID1267 -2.0650415  0.0594313   -34.747  < 2e-16 ***\nDESTIN_GRID_ID1272 -5.5920711  0.1312623   -42.602  < 2e-16 ***\nDESTIN_GRID_ID1273 -0.4486532  0.0564810    -7.943 1.97e-15 ***\nDESTIN_GRID_ID1277 -0.2986624  0.0562051    -5.314 1.07e-07 ***\nDESTIN_GRID_ID1278 -0.5955152  0.0563647   -10.565  < 2e-16 ***\nDESTIN_GRID_ID1283  0.8707453  0.0561091    15.519  < 2e-16 ***\nDESTIN_GRID_ID1284  0.4236440  0.0561502     7.545 4.53e-14 ***\nDESTIN_GRID_ID1285  0.1737583  0.0562062     3.091 0.001992 ** \nDESTIN_GRID_ID1286 -0.7043013  0.0569435   -12.368  < 2e-16 ***\nDESTIN_GRID_ID1289 -3.1034309  0.0691255   -44.896  < 2e-16 ***\nDESTIN_GRID_ID1293 -4.6578892  0.1038061   -44.871  < 2e-16 ***\nDESTIN_GRID_ID1294 -0.5967210  0.0567661   -10.512  < 2e-16 ***\nDESTIN_GRID_ID1295 -3.0918991  0.0616850   -50.124  < 2e-16 ***\nDESTIN_GRID_ID1298 -1.1745647  0.0564876   -20.793  < 2e-16 ***\nDESTIN_GRID_ID1299 -1.3947047  0.0568352   -24.539  < 2e-16 ***\nDESTIN_GRID_ID1304 -0.0841686  0.0563314    -1.494 0.135131    \nDESTIN_GRID_ID1305 -0.0760250  0.0561888    -1.353 0.176047    \nDESTIN_GRID_ID1307 -1.3162147  0.0592493   -22.215  < 2e-16 ***\nDESTIN_GRID_ID1308 -0.1765269  0.0562937    -3.136 0.001714 ** \nDESTIN_GRID_ID1310 -5.0681125  0.2305201   -21.986  < 2e-16 ***\nDESTIN_GRID_ID1316 -2.3791852  0.0582859   -40.819  < 2e-16 ***\nDESTIN_GRID_ID1317 -2.6293342  0.0578843   -45.424  < 2e-16 ***\nDESTIN_GRID_ID1318 -2.7711165  0.0588132   -47.117  < 2e-16 ***\nDESTIN_GRID_ID1319  0.1983549  0.0561380     3.533 0.000410 ***\nDESTIN_GRID_ID1320 -1.7658892  0.0575996   -30.658  < 2e-16 ***\nDESTIN_GRID_ID1324 -0.2609049  0.0594519    -4.389 1.14e-05 ***\nDESTIN_GRID_ID1325 -2.1815852  0.0584409   -37.330  < 2e-16 ***\nDESTIN_GRID_ID1326 -0.5162702  0.0563644    -9.160  < 2e-16 ***\nDESTIN_GRID_ID1327 -0.2424527  0.0562821    -4.308 1.65e-05 ***\nDESTIN_GRID_ID1328 -0.4355573  0.0564460    -7.716 1.20e-14 ***\nDESTIN_GRID_ID1329 -0.6445948  0.0568481   -11.339  < 2e-16 ***\nDESTIN_GRID_ID1330  0.7070663  0.0562368    12.573  < 2e-16 ***\nDESTIN_GRID_ID1331 -5.9036532  0.2940578   -20.077  < 2e-16 ***\nDESTIN_GRID_ID1333 -1.9800357  0.0586099   -33.783  < 2e-16 ***\nDESTIN_GRID_ID1334 -1.6180165  0.0578184   -27.984  < 2e-16 ***\nDESTIN_GRID_ID1335  0.1096276  0.0563009     1.947 0.051514 .  \nDESTIN_GRID_ID1336 -3.1339479  0.0740437   -42.326  < 2e-16 ***\nDESTIN_GRID_ID1337 -3.5413382  0.0660800   -53.592  < 2e-16 ***\nDESTIN_GRID_ID1338 -3.8164371  0.0630059   -60.573  < 2e-16 ***\nDESTIN_GRID_ID1339 -0.2347221  0.0561674    -4.179 2.93e-05 ***\nDESTIN_GRID_ID1340 -1.6688073  0.0570103   -29.272  < 2e-16 ***\nDESTIN_GRID_ID1341 -5.2811378  0.1106253   -47.739  < 2e-16 ***\nDESTIN_GRID_ID1346 -0.3835754  0.0565731    -6.780 1.20e-11 ***\nDESTIN_GRID_ID1347  0.8169439  0.0561329    14.554  < 2e-16 ***\nDESTIN_GRID_ID1348 -0.6502083  0.0564861   -11.511  < 2e-16 ***\nDESTIN_GRID_ID1349  0.3531679  0.0562835     6.275 3.50e-10 ***\nDESTIN_GRID_ID1350 -1.3152760  0.0577517   -22.775  < 2e-16 ***\nDESTIN_GRID_ID1353 -0.6955529  0.0565046   -12.310  < 2e-16 ***\nDESTIN_GRID_ID1354 -1.3425859  0.0569482   -23.576  < 2e-16 ***\nDESTIN_GRID_ID1355 -1.7272775  0.0572968   -30.146  < 2e-16 ***\nDESTIN_GRID_ID1357 -2.1914227  0.0593427   -36.928  < 2e-16 ***\nDESTIN_GRID_ID1358 -0.0729799  0.0561468    -1.300 0.193668    \nDESTIN_GRID_ID1359 -1.3593462  0.0563876   -24.107  < 2e-16 ***\nDESTIN_GRID_ID1360 -1.5594546  0.0564870   -27.607  < 2e-16 ***\nDESTIN_GRID_ID1361 -1.5513903  0.0569416   -27.245  < 2e-16 ***\nDESTIN_GRID_ID1362 -2.7119369  0.0627646   -43.208  < 2e-16 ***\nDESTIN_GRID_ID1368 -1.3218464  0.0569403   -23.215  < 2e-16 ***\nDESTIN_GRID_ID1369 -1.1276487  0.0567636   -19.866  < 2e-16 ***\nDESTIN_GRID_ID1370  0.4582732  0.0561293     8.165 3.23e-16 ***\nDESTIN_GRID_ID1371 -0.3822067  0.0564967    -6.765 1.33e-11 ***\nDESTIN_GRID_ID1372 -0.3893765  0.0564191    -6.902 5.15e-12 ***\nDESTIN_GRID_ID1373 -3.4269485  0.0669605   -51.179  < 2e-16 ***\nDESTIN_GRID_ID1374 -2.2012366  0.0582408   -37.795  < 2e-16 ***\nDESTIN_GRID_ID1375 -0.3644803  0.0565549    -6.445 1.16e-10 ***\nDESTIN_GRID_ID1376 -1.9982118  0.0585687   -34.117  < 2e-16 ***\nDESTIN_GRID_ID1379 -5.2816925  0.0957358   -55.169  < 2e-16 ***\nDESTIN_GRID_ID1380  0.5213593  0.0560769     9.297  < 2e-16 ***\nDESTIN_GRID_ID1381  0.6988865  0.0560660    12.465  < 2e-16 ***\nDESTIN_GRID_ID1382 -0.1232571  0.0562194    -2.192 0.028348 *  \nDESTIN_GRID_ID1383 -2.8345383  0.0594929   -47.645  < 2e-16 ***\nDESTIN_GRID_ID1388 -0.5482583  0.0564569    -9.711  < 2e-16 ***\nDESTIN_GRID_ID1389 -0.7904836  0.0565832   -13.970  < 2e-16 ***\nDESTIN_GRID_ID1390 -0.4480803  0.0564776    -7.934 2.13e-15 ***\nDESTIN_GRID_ID1391  0.2722109  0.0562252     4.841 1.29e-06 ***\nDESTIN_GRID_ID1392 -0.2955960  0.0571804    -5.170 2.35e-07 ***\nDESTIN_GRID_ID1393 -0.9751815  0.0566445   -17.216  < 2e-16 ***\nDESTIN_GRID_ID1394 -0.6498214  0.0563710   -11.528  < 2e-16 ***\nDESTIN_GRID_ID1395 -1.1145862  0.0565387   -19.714  < 2e-16 ***\nDESTIN_GRID_ID1396 -0.3564974  0.0562643    -6.336 2.36e-10 ***\nDESTIN_GRID_ID1397 -1.4689653  0.0566950   -25.910  < 2e-16 ***\nDESTIN_GRID_ID1398 -1.7370471  0.0580780   -29.909  < 2e-16 ***\nDESTIN_GRID_ID1400 -2.2039147  0.0571987   -38.531  < 2e-16 ***\nDESTIN_GRID_ID1401 -0.4623273  0.0561239    -8.238  < 2e-16 ***\nDESTIN_GRID_ID1402 -1.1855657  0.0563076   -21.055  < 2e-16 ***\nDESTIN_GRID_ID1404 -1.8540280  0.0619336   -29.936  < 2e-16 ***\nDESTIN_GRID_ID1410  0.0039133  0.0562401     0.070 0.944526    \nDESTIN_GRID_ID1411 -0.4197638  0.0565602    -7.422 1.16e-13 ***\nDESTIN_GRID_ID1412  0.1363592  0.0561822     2.427 0.015220 *  \nDESTIN_GRID_ID1413 -0.5302135  0.0564110    -9.399  < 2e-16 ***\nDESTIN_GRID_ID1414 -0.5835626  0.0563296   -10.360  < 2e-16 ***\nDESTIN_GRID_ID1415 -0.2978405  0.0562792    -5.292 1.21e-07 ***\nDESTIN_GRID_ID1416 -0.8384015  0.0564770   -14.845  < 2e-16 ***\nDESTIN_GRID_ID1417 -0.6693028  0.0562745   -11.894  < 2e-16 ***\nDESTIN_GRID_ID1418 -0.7630462  0.0563191   -13.549  < 2e-16 ***\nDESTIN_GRID_ID1419 -1.0972971  0.0565480   -19.405  < 2e-16 ***\nDESTIN_GRID_ID1422 -1.5698334  0.0563857   -27.841  < 2e-16 ***\nDESTIN_GRID_ID1423 -1.0852339  0.0562940   -19.278  < 2e-16 ***\nDESTIN_GRID_ID1430  0.2344551  0.0562510     4.168 3.07e-05 ***\nDESTIN_GRID_ID1431  0.5040999  0.0561454     8.978  < 2e-16 ***\nDESTIN_GRID_ID1432  0.2188150  0.0561589     3.896 9.77e-05 ***\nDESTIN_GRID_ID1433 -0.6728524  0.0568938   -11.826  < 2e-16 ***\nDESTIN_GRID_ID1434  0.3291043  0.0561597     5.860 4.62e-09 ***\nDESTIN_GRID_ID1435 -0.2213985  0.0562033    -3.939 8.17e-05 ***\nDESTIN_GRID_ID1436 -1.5380799  0.0570637   -26.954  < 2e-16 ***\nDESTIN_GRID_ID1437 -0.9240520  0.0564039   -16.383  < 2e-16 ***\nDESTIN_GRID_ID1438 -0.4225499  0.0561740    -7.522 5.39e-14 ***\nDESTIN_GRID_ID1439  0.4070856  0.0561096     7.255 4.01e-13 ***\nDESTIN_GRID_ID1440 -0.4516093  0.0564587    -7.999 1.26e-15 ***\nDESTIN_GRID_ID1442 -3.4749394  0.0594305   -58.471  < 2e-16 ***\nDESTIN_GRID_ID1443 -1.4923015  0.0563691   -26.474  < 2e-16 ***\nDESTIN_GRID_ID1444 -0.4512428  0.0563769    -8.004 1.20e-15 ***\nDESTIN_GRID_ID1452  0.9331452  0.0560860    16.638  < 2e-16 ***\nDESTIN_GRID_ID1453 -0.0482627  0.0562845    -0.857 0.391181    \nDESTIN_GRID_ID1454 -1.0615080  0.0574927   -18.463  < 2e-16 ***\nDESTIN_GRID_ID1455 -0.4411768  0.0564959    -7.809 5.76e-15 ***\nDESTIN_GRID_ID1456 -0.4821884  0.0563390    -8.559  < 2e-16 ***\nDESTIN_GRID_ID1457  0.0637614  0.0562090     1.134 0.256643    \nDESTIN_GRID_ID1458  0.9975168  0.0560544    17.796  < 2e-16 ***\nDESTIN_GRID_ID1459 -1.7897080  0.0567283   -31.549  < 2e-16 ***\nDESTIN_GRID_ID1460 -0.6006043  0.0561996   -10.687  < 2e-16 ***\nDESTIN_GRID_ID1461 -0.6782157  0.0564417   -12.016  < 2e-16 ***\nDESTIN_GRID_ID1464 -1.5961451  0.0565114   -28.245  < 2e-16 ***\nDESTIN_GRID_ID1465 -2.5207198  0.0573377   -43.963  < 2e-16 ***\nDESTIN_GRID_ID1472 -0.1356126  0.0565367    -2.399 0.016455 *  \nDESTIN_GRID_ID1473  0.7336690  0.0561236    13.072  < 2e-16 ***\nDESTIN_GRID_ID1474  0.4350107  0.0561110     7.753 9.00e-15 ***\nDESTIN_GRID_ID1475 -0.0082180  0.0562032    -0.146 0.883748    \nDESTIN_GRID_ID1476 -0.8478584  0.0565247   -15.000  < 2e-16 ***\nDESTIN_GRID_ID1477  0.8837622  0.0560469    15.768  < 2e-16 ***\nDESTIN_GRID_ID1478 -0.6956161  0.0562599   -12.364  < 2e-16 ***\nDESTIN_GRID_ID1479 -1.4629714  0.0565150   -25.886  < 2e-16 ***\nDESTIN_GRID_ID1480  0.7506112  0.0560537    13.391  < 2e-16 ***\nDESTIN_GRID_ID1481 -0.9299056  0.0564528   -16.472  < 2e-16 ***\nDESTIN_GRID_ID1482  0.2626726  0.0562346     4.671 3.00e-06 ***\nDESTIN_GRID_ID1485 -2.9231375  0.0577205   -50.643  < 2e-16 ***\nDESTIN_GRID_ID1494  0.5629575  0.0561671    10.023  < 2e-16 ***\nDESTIN_GRID_ID1495 -0.4122904  0.0563622    -7.315 2.57e-13 ***\nDESTIN_GRID_ID1496  0.3849659  0.0561218     6.859 6.91e-12 ***\nDESTIN_GRID_ID1497 -0.9085985  0.0565921   -16.055  < 2e-16 ***\nDESTIN_GRID_ID1498 -0.7672298  0.0564219   -13.598  < 2e-16 ***\nDESTIN_GRID_ID1499 -0.4961640  0.0561949    -8.829  < 2e-16 ***\nDESTIN_GRID_ID1500 -0.7943129  0.0566524   -14.021  < 2e-16 ***\nDESTIN_GRID_ID1501 -0.1663320  0.0561383    -2.963 0.003048 ** \nDESTIN_GRID_ID1502 -0.3275382  0.0561765    -5.831 5.53e-09 ***\nDESTIN_GRID_ID1506 -3.1809385  0.0885170   -35.936  < 2e-16 ***\nDESTIN_GRID_ID1515 -0.3480165  0.0579460    -6.006 1.90e-09 ***\nDESTIN_GRID_ID1516  0.4680383  0.0561180     8.340  < 2e-16 ***\nDESTIN_GRID_ID1517 -0.4372185  0.0564739    -7.742 9.79e-15 ***\nDESTIN_GRID_ID1518 -1.2495100  0.0566984   -22.038  < 2e-16 ***\nDESTIN_GRID_ID1519 -1.1022192  0.0566972   -19.440  < 2e-16 ***\nDESTIN_GRID_ID1520 -1.2670108  0.0564664   -22.438  < 2e-16 ***\nDESTIN_GRID_ID1521 -1.2114353  0.0565028   -21.440  < 2e-16 ***\nDESTIN_GRID_ID1522 -0.6242915  0.0562496   -11.099  < 2e-16 ***\nDESTIN_GRID_ID1523  0.7545810  0.0561887    13.429  < 2e-16 ***\nDESTIN_GRID_ID1524 -1.6672302  0.0574744   -29.008  < 2e-16 ***\nDESTIN_GRID_ID1527 -4.2239580  0.0668692   -63.167  < 2e-16 ***\nDESTIN_GRID_ID1535 -0.8022324  0.0907257    -8.842  < 2e-16 ***\nDESTIN_GRID_ID1536 -1.8512617  0.0634257   -29.188  < 2e-16 ***\nDESTIN_GRID_ID1537  0.0134855  0.0563753     0.239 0.810943    \nDESTIN_GRID_ID1538 -0.2582338  0.0562810    -4.588 4.47e-06 ***\nDESTIN_GRID_ID1539 -0.2979640  0.0562143    -5.301 1.15e-07 ***\nDESTIN_GRID_ID1540 -1.0047033  0.0563705   -17.823  < 2e-16 ***\nDESTIN_GRID_ID1541 -0.2445014  0.0565722    -4.322 1.55e-05 ***\nDESTIN_GRID_ID1542 -0.9957250  0.0567735   -17.539  < 2e-16 ***\nDESTIN_GRID_ID1543 -1.4578058  0.0631192   -23.096  < 2e-16 ***\nDESTIN_GRID_ID1544 -1.2423031  0.0568377   -21.857  < 2e-16 ***\nDESTIN_GRID_ID1547 -1.8841756  0.0580090   -32.481  < 2e-16 ***\nDESTIN_GRID_ID1556 -0.8247140  0.0924574    -8.920  < 2e-16 ***\nDESTIN_GRID_ID1557 -1.4821358  0.0599516   -24.722  < 2e-16 ***\nDESTIN_GRID_ID1558 -0.3728122  0.0576864    -6.463 1.03e-10 ***\nDESTIN_GRID_ID1559  0.2630976  0.0561416     4.686 2.78e-06 ***\nDESTIN_GRID_ID1560  0.2344931  0.0561306     4.178 2.95e-05 ***\nDESTIN_GRID_ID1561 -0.6409872  0.0564438   -11.356  < 2e-16 ***\nDESTIN_GRID_ID1562 -2.5859721  0.0584819   -44.218  < 2e-16 ***\nDESTIN_GRID_ID1563 -1.7764921  0.0568660   -31.240  < 2e-16 ***\nDESTIN_GRID_ID1564 -1.3835080  0.0566439   -24.425  < 2e-16 ***\nDESTIN_GRID_ID1565 -0.7906930  0.0563630   -14.029  < 2e-16 ***\nDESTIN_GRID_ID1566 -2.5908408  0.0585936   -44.217  < 2e-16 ***\nDESTIN_GRID_ID1567 -2.4264820  0.0589219   -41.181  < 2e-16 ***\nDESTIN_GRID_ID1568 -1.3776201  0.0571817   -24.092  < 2e-16 ***\nDESTIN_GRID_ID1578 -1.3263975  0.1247787   -10.630  < 2e-16 ***\nDESTIN_GRID_ID1580 -2.6259202  0.0633133   -41.475  < 2e-16 ***\nDESTIN_GRID_ID1581 -0.2000437  0.0562244    -3.558 0.000374 ***\nDESTIN_GRID_ID1582 -0.0304773  0.0561416    -0.543 0.587222    \nDESTIN_GRID_ID1583 -1.9523357  0.0602891   -32.383  < 2e-16 ***\nDESTIN_GRID_ID1584 -1.6618602  0.0574313   -28.936  < 2e-16 ***\nDESTIN_GRID_ID1585 -1.3296418  0.0567304   -23.438  < 2e-16 ***\nDESTIN_GRID_ID1586 -0.5149105  0.0562648    -9.152  < 2e-16 ***\nDESTIN_GRID_ID1589 -2.7906326  0.0603243   -46.261  < 2e-16 ***\nDESTIN_GRID_ID1590 -1.5691759  0.0576688   -27.210  < 2e-16 ***\nDESTIN_GRID_ID1600 -0.7660935  0.0583739   -13.124  < 2e-16 ***\nDESTIN_GRID_ID1601 -1.1283463  0.0565251   -19.962  < 2e-16 ***\nDESTIN_GRID_ID1602 -0.7954952  0.0564658   -14.088  < 2e-16 ***\nDESTIN_GRID_ID1603  0.3316002  0.0561398     5.907 3.49e-09 ***\nDESTIN_GRID_ID1604 -1.9514903  0.0571337   -34.157  < 2e-16 ***\nDESTIN_GRID_ID1605 -0.9100869  0.0563235   -16.158  < 2e-16 ***\nDESTIN_GRID_ID1606 -1.7628217  0.0580693   -30.357  < 2e-16 ***\nDESTIN_GRID_ID1607 -0.3333758  0.0561631    -5.936 2.92e-09 ***\nDESTIN_GRID_ID1608 -1.1883975  0.0564177   -21.064  < 2e-16 ***\nDESTIN_GRID_ID1609 -0.3918562  0.0562437    -6.967 3.24e-12 ***\nDESTIN_GRID_ID1610 -2.5479785  0.0625846   -40.713  < 2e-16 ***\nDESTIN_GRID_ID1622 -0.5266313  0.0574531    -9.166  < 2e-16 ***\nDESTIN_GRID_ID1623 -0.0876395  0.0561638    -1.560 0.118659    \nDESTIN_GRID_ID1624  0.4689155  0.0561307     8.354  < 2e-16 ***\nDESTIN_GRID_ID1625 -0.4500448  0.0563075    -7.993 1.32e-15 ***\nDESTIN_GRID_ID1626  1.2257979  0.0560381    21.874  < 2e-16 ***\nDESTIN_GRID_ID1627 -1.8723213  0.0567655   -32.983  < 2e-16 ***\nDESTIN_GRID_ID1628  0.1505800  0.0561156     2.683 0.007288 ** \nDESTIN_GRID_ID1629 -2.9369964  0.0582791   -50.395  < 2e-16 ***\nDESTIN_GRID_ID1630 -2.5332098  0.0574018   -44.131  < 2e-16 ***\nDESTIN_GRID_ID1631 -2.6914342  0.0588248   -45.753  < 2e-16 ***\nDESTIN_GRID_ID1642 -2.8370835  0.0654123   -43.372  < 2e-16 ***\nDESTIN_GRID_ID1643 -0.5784856  0.0563287   -10.270  < 2e-16 ***\nDESTIN_GRID_ID1644 -0.5731221  0.0565948   -10.127  < 2e-16 ***\nDESTIN_GRID_ID1645 -0.7455972  0.0563934   -13.221  < 2e-16 ***\nDESTIN_GRID_ID1646 -0.4560806  0.0565864    -8.060 7.64e-16 ***\nDESTIN_GRID_ID1647 -1.2280563  0.0563772   -21.783  < 2e-16 ***\nDESTIN_GRID_ID1648 -1.0947111  0.0563015   -19.444  < 2e-16 ***\nDESTIN_GRID_ID1649 -0.5720565  0.0561642   -10.185  < 2e-16 ***\nDESTIN_GRID_ID1650 -1.5018495  0.0565590   -26.554  < 2e-16 ***\nDESTIN_GRID_ID1664 -5.0460389  0.1428160   -35.332  < 2e-16 ***\nDESTIN_GRID_ID1665  0.0223170  0.0561504     0.397 0.691036    \nDESTIN_GRID_ID1666  0.0642889  0.0561444     1.145 0.252183    \nDESTIN_GRID_ID1667 -0.6477618  0.0578917   -11.189  < 2e-16 ***\nDESTIN_GRID_ID1668 -1.2156570  0.0564659   -21.529  < 2e-16 ***\nDESTIN_GRID_ID1670 -0.7239558  0.0561844   -12.885  < 2e-16 ***\nDESTIN_GRID_ID1671 -1.3046524  0.0573100   -22.765  < 2e-16 ***\nDESTIN_GRID_ID1672 -2.3017657  0.0575294   -40.010  < 2e-16 ***\nDESTIN_GRID_ID1684 -0.2467424  0.0567528    -4.348 1.38e-05 ***\nDESTIN_GRID_ID1685 -1.4878445  0.0568485   -26.172  < 2e-16 ***\nDESTIN_GRID_ID1686 -0.5976035  0.0563031   -10.614  < 2e-16 ***\nDESTIN_GRID_ID1687 -0.3391322  0.0564341    -6.009 1.86e-09 ***\nDESTIN_GRID_ID1688 -1.1460057  0.0564648   -20.296  < 2e-16 ***\nDESTIN_GRID_ID1689 -1.9084238  0.0569741   -33.496  < 2e-16 ***\nDESTIN_GRID_ID1690 -2.6182911  0.0577368   -45.349  < 2e-16 ***\nDESTIN_GRID_ID1691 -0.6290514  0.0561748   -11.198  < 2e-16 ***\nDESTIN_GRID_ID1692 -2.7205292  0.0580748   -46.845  < 2e-16 ***\nDESTIN_GRID_ID1706 -0.7153830  0.0565877   -12.642  < 2e-16 ***\nDESTIN_GRID_ID1707 -1.5098886  0.0566956   -26.632  < 2e-16 ***\nDESTIN_GRID_ID1708 -0.9125713  0.0564063   -16.179  < 2e-16 ***\nDESTIN_GRID_ID1709 -0.1539442  0.0561937    -2.740 0.006153 ** \nDESTIN_GRID_ID1710 -0.3365301  0.0562252    -5.985 2.16e-09 ***\nDESTIN_GRID_ID1711  0.1229632  0.0561156     2.191 0.028434 *  \nDESTIN_GRID_ID1712 -0.7931185  0.0561877   -14.116  < 2e-16 ***\nDESTIN_GRID_ID1713 -3.1686569  0.0584391   -54.221  < 2e-16 ***\nDESTIN_GRID_ID1714 -1.8579726  0.0567287   -32.752  < 2e-16 ***\nDESTIN_GRID_ID1727 -0.2332984  0.0562936    -4.144 3.41e-05 ***\nDESTIN_GRID_ID1728 -0.2112223  0.0561920    -3.759 0.000171 ***\nDESTIN_GRID_ID1729 -0.1001253  0.0561685    -1.783 0.074653 .  \nDESTIN_GRID_ID1730 -1.0906047  0.0566335   -19.257  < 2e-16 ***\nDESTIN_GRID_ID1731 -0.2683686  0.0561838    -4.777 1.78e-06 ***\nDESTIN_GRID_ID1732 -0.9494560  0.0562252   -16.887  < 2e-16 ***\nDESTIN_GRID_ID1733 -2.1172308  0.0566995   -37.341  < 2e-16 ***\nDESTIN_GRID_ID1734 -0.9081685  0.0562209   -16.154  < 2e-16 ***\nDESTIN_GRID_ID1735 -1.7545412  0.0583529   -30.068  < 2e-16 ***\nDESTIN_GRID_ID1748 -1.2750831  0.0568310   -22.436  < 2e-16 ***\nDESTIN_GRID_ID1749 -0.0776797  0.0561533    -1.383 0.166557    \nDESTIN_GRID_ID1750 -0.0941820  0.0561650    -1.677 0.093566 .  \nDESTIN_GRID_ID1751 -0.5409649  0.0563602    -9.598  < 2e-16 ***\nDESTIN_GRID_ID1753 -0.3756315  0.0561827    -6.686 2.30e-11 ***\nDESTIN_GRID_ID1754  0.4667613  0.0560579     8.326  < 2e-16 ***\nDESTIN_GRID_ID1755 -0.3284496  0.0561130    -5.853 4.82e-09 ***\nDESTIN_GRID_ID1756 -1.4048190  0.0563144   -24.946  < 2e-16 ***\nDESTIN_GRID_ID1757 -3.7015103  0.0606583   -61.022  < 2e-16 ***\nDESTIN_GRID_ID1769 -0.5417919  0.0563455    -9.616  < 2e-16 ***\nDESTIN_GRID_ID1770 -0.8078615  0.0566430   -14.262  < 2e-16 ***\nDESTIN_GRID_ID1771 -0.0077434  0.0562428    -0.138 0.890495    \nDESTIN_GRID_ID1772  1.0966498  0.0564632    19.422  < 2e-16 ***\nDESTIN_GRID_ID1774 -1.5267601  0.0564653   -27.039  < 2e-16 ***\nDESTIN_GRID_ID1775 -1.9485151  0.0565807   -34.438  < 2e-16 ***\nDESTIN_GRID_ID1776  0.2437395  0.0560672     4.347 1.38e-05 ***\nDESTIN_GRID_ID1777 -1.9301153  0.0565589   -34.126  < 2e-16 ***\nDESTIN_GRID_ID1778 -2.8594198  0.0605519   -47.223  < 2e-16 ***\nDESTIN_GRID_ID1790 -0.0060642  0.0562621    -0.108 0.914166    \nDESTIN_GRID_ID1791 -0.6689403  0.0564005   -11.861  < 2e-16 ***\nDESTIN_GRID_ID1792 -0.3852140  0.0564891    -6.819 9.15e-12 ***\nDESTIN_GRID_ID1793 -0.4019609  0.0563113    -7.138 9.46e-13 ***\nDESTIN_GRID_ID1794  1.4096108  0.0565025    24.948  < 2e-16 ***\nDESTIN_GRID_ID1795 -2.8509679  0.0599626   -47.546  < 2e-16 ***\nDESTIN_GRID_ID1796 -0.8581862  0.0562601   -15.254  < 2e-16 ***\nDESTIN_GRID_ID1797 -1.2846326  0.0562883   -22.822  < 2e-16 ***\nDESTIN_GRID_ID1798 -1.2054336  0.0562595   -21.426  < 2e-16 ***\nDESTIN_GRID_ID1799 -2.1549309  0.0568104   -37.932  < 2e-16 ***\nDESTIN_GRID_ID1800 -4.2746295  0.0860412   -49.681  < 2e-16 ***\nDESTIN_GRID_ID1811 -1.0475386  0.0566801   -18.482  < 2e-16 ***\nDESTIN_GRID_ID1812  0.3922897  0.0560973     6.993 2.69e-12 ***\nDESTIN_GRID_ID1813  0.6243079  0.0560853    11.131  < 2e-16 ***\nDESTIN_GRID_ID1817 -2.6948241  0.0577279   -46.682  < 2e-16 ***\nDESTIN_GRID_ID1818 -1.5981506  0.0563241   -28.374  < 2e-16 ***\nDESTIN_GRID_ID1819  0.0718732  0.0560818     1.282 0.199991    \nDESTIN_GRID_ID1820 -4.6197072  0.0758115   -60.937  < 2e-16 ***\nDESTIN_GRID_ID1832  0.1675440  0.0561951     2.981 0.002869 ** \nDESTIN_GRID_ID1833 -1.0867842  0.0565082   -19.232  < 2e-16 ***\nDESTIN_GRID_ID1834 -1.0689217  0.0564308   -18.942  < 2e-16 ***\nDESTIN_GRID_ID1835 -0.9778157  0.0565358   -17.296  < 2e-16 ***\nDESTIN_GRID_ID1837 -1.1163099  0.0577606   -19.326  < 2e-16 ***\nDESTIN_GRID_ID1839 -2.7673061  0.0576565   -47.996  < 2e-16 ***\nDESTIN_GRID_ID1840  0.1471406  0.0560921     2.623 0.008711 ** \nDESTIN_GRID_ID1841 -3.7587706  0.0627645   -59.887  < 2e-16 ***\nDESTIN_GRID_ID1842 -1.2432046  0.0589115   -21.103  < 2e-16 ***\nDESTIN_GRID_ID1853 -0.5717510  0.0563132   -10.153  < 2e-16 ***\nDESTIN_GRID_ID1854 -0.4088075  0.0562607    -7.266 3.69e-13 ***\nDESTIN_GRID_ID1855 -0.0113741  0.0561901    -0.202 0.839587    \nDESTIN_GRID_ID1858  0.0502997  0.0566260     0.888 0.374390    \nDESTIN_GRID_ID1860 -2.1217277  0.0602295   -35.227  < 2e-16 ***\nDESTIN_GRID_ID1861 -1.3858610  0.0563437   -24.597  < 2e-16 ***\nDESTIN_GRID_ID1874 -1.0793397  0.0569939   -18.938  < 2e-16 ***\nDESTIN_GRID_ID1875 -2.8509106  0.0608781   -46.830  < 2e-16 ***\nDESTIN_GRID_ID1876 -1.5256142  0.0612445   -24.910  < 2e-16 ***\nDESTIN_GRID_ID1877 -0.2232308  0.0562275    -3.970 7.18e-05 ***\nDESTIN_GRID_ID1880 -0.8757156  0.0577693   -15.159  < 2e-16 ***\nDESTIN_GRID_ID1882 -1.4785871  0.0563973   -26.217  < 2e-16 ***\nDESTIN_GRID_ID1883 -2.5932751  0.0600904   -43.156  < 2e-16 ***\nDESTIN_GRID_ID1895 -0.1066315  0.0562327    -1.896 0.057927 .  \nDESTIN_GRID_ID1896 -1.2392651  0.0565836   -21.901  < 2e-16 ***\nDESTIN_GRID_ID1897 -2.0756001  0.0575081   -36.092  < 2e-16 ***\nDESTIN_GRID_ID1898 -2.4207353  0.0615845   -39.308  < 2e-16 ***\nDESTIN_GRID_ID1901 -1.3999493  0.0596244   -23.479  < 2e-16 ***\nDESTIN_GRID_ID1903 -3.0290635  0.0592728   -51.104  < 2e-16 ***\nDESTIN_GRID_ID1917 -1.4512488  0.0568569   -25.525  < 2e-16 ***\nDESTIN_GRID_ID1918 -0.2346805  0.0564188    -4.160 3.19e-05 ***\nDESTIN_GRID_ID1919 -0.1072727  0.0562055    -1.909 0.056316 .  \nDESTIN_GRID_ID1922 -0.1693550  0.0570044    -2.971 0.002969 ** \nDESTIN_GRID_ID1924 -3.2691626  0.0608952   -53.685  < 2e-16 ***\nDESTIN_GRID_ID1937 -0.7622392  0.0565472   -13.480  < 2e-16 ***\nDESTIN_GRID_ID1938 -0.0119748  0.0561889    -0.213 0.831235    \nDESTIN_GRID_ID1939 -1.2954584  0.0567809   -22.815  < 2e-16 ***\nDESTIN_GRID_ID1942 -1.5250117  0.0591855   -25.767  < 2e-16 ***\nDESTIN_GRID_ID1959 -1.2594006  0.0569348   -22.120  < 2e-16 ***\nDESTIN_GRID_ID1960  1.0937212  0.0560467    19.514  < 2e-16 ***\nDESTIN_GRID_ID1961 -1.4157914  0.0569178   -24.874  < 2e-16 ***\nDESTIN_GRID_ID1962 -0.5984494  0.0563450   -10.621  < 2e-16 ***\nDESTIN_GRID_ID1964  0.1134006  0.0571542     1.984 0.047243 *  \nDESTIN_GRID_ID1979 -0.7288324  0.0566397   -12.868  < 2e-16 ***\nDESTIN_GRID_ID1980 -1.0381197  0.0564475   -18.391  < 2e-16 ***\nDESTIN_GRID_ID1981 -1.0879885  0.0565038   -19.255  < 2e-16 ***\nDESTIN_GRID_ID1982 -0.5936218  0.0565709   -10.493  < 2e-16 ***\nDESTIN_GRID_ID1983 -0.7389921  0.0563621   -13.112  < 2e-16 ***\nDESTIN_GRID_ID1984 -0.5623766  0.0563458    -9.981  < 2e-16 ***\nDESTIN_GRID_ID1985 -0.4389630  0.0563042    -7.796 6.38e-15 ***\nDESTIN_GRID_ID2001 -0.7481273  0.0564258   -13.259  < 2e-16 ***\nDESTIN_GRID_ID2002 -0.7492732  0.0562721   -13.315  < 2e-16 ***\nDESTIN_GRID_ID2003 -0.0873263  0.0561801    -1.554 0.120089    \nDESTIN_GRID_ID2004  0.0697541  0.0561713     1.242 0.214306    \nDESTIN_GRID_ID2005 -0.9197202  0.0564123   -16.304  < 2e-16 ***\nDESTIN_GRID_ID2006 -0.0104534  0.0562035    -0.186 0.852451    \nDESTIN_GRID_ID2007 -3.4441174  0.0650397   -52.954  < 2e-16 ***\nDESTIN_GRID_ID2022 -0.2338603  0.0564259    -4.145 3.40e-05 ***\nDESTIN_GRID_ID2023 -0.2304211  0.0562072    -4.099 4.14e-05 ***\nDESTIN_GRID_ID2024  0.0976138  0.0561372     1.739 0.082063 .  \nDESTIN_GRID_ID2025 -1.3101090  0.0564568   -23.206  < 2e-16 ***\nDESTIN_GRID_ID2026 -1.9749643  0.0574442   -34.381  < 2e-16 ***\nDESTIN_GRID_ID2027  0.0891515  0.0561739     1.587 0.112499    \nDESTIN_GRID_ID2043 -1.6861358  0.0573793   -29.386  < 2e-16 ***\nDESTIN_GRID_ID2044 -0.7337338  0.0563425   -13.023  < 2e-16 ***\nDESTIN_GRID_ID2045 -1.3408030  0.0573684   -23.372  < 2e-16 ***\nDESTIN_GRID_ID2046  0.0187825  0.0561231     0.335 0.737877    \nDESTIN_GRID_ID2047 -1.9039512  0.0569349   -33.441  < 2e-16 ***\nDESTIN_GRID_ID2048 -1.6254961  0.0567828   -28.627  < 2e-16 ***\nDESTIN_GRID_ID2049 -3.3582945  0.0637018   -52.719  < 2e-16 ***\nDESTIN_GRID_ID2064 -0.8480949  0.0564989   -15.011  < 2e-16 ***\nDESTIN_GRID_ID2065 -0.9750861  0.0564902   -17.261  < 2e-16 ***\nDESTIN_GRID_ID2066 -3.3185294  0.0676848   -49.029  < 2e-16 ***\nDESTIN_GRID_ID2067  1.5667043  0.0560356    27.959  < 2e-16 ***\nDESTIN_GRID_ID2068 -1.9963597  0.0580703   -34.378  < 2e-16 ***\nDESTIN_GRID_ID2069 -1.4346733  0.0567772   -25.268  < 2e-16 ***\nDESTIN_GRID_ID2085 -0.6534281  0.0565111   -11.563  < 2e-16 ***\nDESTIN_GRID_ID2086  0.6584904  0.0561273    11.732  < 2e-16 ***\nDESTIN_GRID_ID2087  0.3506632  0.0561446     6.246 4.22e-10 ***\nDESTIN_GRID_ID2088 -0.9065527  0.0563219   -16.096  < 2e-16 ***\nDESTIN_GRID_ID2089 -1.3845116  0.0567876   -24.381  < 2e-16 ***\nDESTIN_GRID_ID2090  1.2607964  0.0560553    22.492  < 2e-16 ***\nDESTIN_GRID_ID2091 -4.1374206  0.0905432   -45.696  < 2e-16 ***\nDESTIN_GRID_ID2105 -1.5124362  0.0870273   -17.379  < 2e-16 ***\nDESTIN_GRID_ID2106 -2.1951697  0.0581592   -37.744  < 2e-16 ***\nDESTIN_GRID_ID2107  0.5294521  0.0561292     9.433  < 2e-16 ***\nDESTIN_GRID_ID2108  0.1263070  0.0562117     2.247 0.024641 *  \nDESTIN_GRID_ID2109 -1.3483624  0.0564675   -23.879  < 2e-16 ***\nDESTIN_GRID_ID2110 -2.0081654  0.0573911   -34.991  < 2e-16 ***\nDESTIN_GRID_ID2111 -3.1822936  0.0667288   -47.690  < 2e-16 ***\nDESTIN_GRID_ID2128 -0.4529754  0.0566547    -7.995 1.29e-15 ***\nDESTIN_GRID_ID2129 -0.7835643  0.0570909   -13.725  < 2e-16 ***\nDESTIN_GRID_ID2130 -0.7456411  0.0563012   -13.244  < 2e-16 ***\nDESTIN_GRID_ID2131 -0.7802824  0.0565358   -13.802  < 2e-16 ***\nDESTIN_GRID_ID2132 -1.3589117  0.0566327   -23.995  < 2e-16 ***\nDESTIN_GRID_ID2148 -1.3839798  0.0584887   -23.662  < 2e-16 ***\nDESTIN_GRID_ID2149 -1.3379985  0.0571894   -23.396  < 2e-16 ***\nDESTIN_GRID_ID2150 -1.1433086  0.0567871   -20.133  < 2e-16 ***\nDESTIN_GRID_ID2151  0.6902199  0.0560843    12.307  < 2e-16 ***\nDESTIN_GRID_ID2152 -0.3675627  0.0562763    -6.531 6.52e-11 ***\nDESTIN_GRID_ID2153 -1.6478408  0.0573804   -28.718  < 2e-16 ***\nDESTIN_GRID_ID2171 -0.1523148  0.0563143    -2.705 0.006836 ** \nDESTIN_GRID_ID2172 -1.8052824  0.0573168   -31.497  < 2e-16 ***\nDESTIN_GRID_ID2173 -1.3511743  0.0565438   -23.896  < 2e-16 ***\nDESTIN_GRID_ID2174 -0.6509008  0.0564181   -11.537  < 2e-16 ***\nDESTIN_GRID_ID2191  0.0437550  0.0566422     0.772 0.439830    \nDESTIN_GRID_ID2192 -1.1665321  0.0571783   -20.402  < 2e-16 ***\nDESTIN_GRID_ID2193 -0.4768154  0.0563891    -8.456  < 2e-16 ***\nDESTIN_GRID_ID2194 -0.5680463  0.0563224   -10.086  < 2e-16 ***\nDESTIN_GRID_ID2195 -2.6276727  0.0695591   -37.776  < 2e-16 ***\nDESTIN_GRID_ID2212  0.4014930  0.0577915     6.947 3.72e-12 ***\nDESTIN_GRID_ID2213 -0.2647703  0.0567494    -4.666 3.08e-06 ***\nDESTIN_GRID_ID2214  0.6348489  0.0565161    11.233  < 2e-16 ***\nDESTIN_GRID_ID2215 -1.1729227  0.0569530   -20.595  < 2e-16 ***\nDESTIN_GRID_ID2216 -0.2255636  0.0563394    -4.004 6.24e-05 ***\nDESTIN_GRID_ID2233  0.5512739  0.0569704     9.676  < 2e-16 ***\nDESTIN_GRID_ID2234  1.1621395  0.0566632    20.510  < 2e-16 ***\nDESTIN_GRID_ID2235 -0.2252947  0.0568113    -3.966 7.32e-05 ***\nDESTIN_GRID_ID2236 -1.6739852  0.0577475   -28.988  < 2e-16 ***\nDESTIN_GRID_ID2237 -0.1495642  0.0572526    -2.612 0.008992 ** \nDESTIN_GRID_ID2256  0.0212296  0.0574726     0.369 0.711840    \nDESTIN_GRID_ID2257 -2.5416784  0.0633055   -40.149  < 2e-16 ***\nDESTIN_GRID_ID2258 -0.4015255  0.0564958    -7.107 1.18e-12 ***\nDESTIN_GRID_ID2259  0.6374950  0.0570198    11.180  < 2e-16 ***\nDESTIN_GRID_ID2277 -1.2082516  0.0620227   -19.481  < 2e-16 ***\nDESTIN_GRID_ID2278 -1.0360868  0.0586796   -17.657  < 2e-16 ***\nDESTIN_GRID_ID2279 -0.2085146  0.0565187    -3.689 0.000225 ***\nDESTIN_GRID_ID2280 -1.5563420  0.0658196   -23.646  < 2e-16 ***\nDESTIN_GRID_ID2297 -1.5061469  0.0597708   -25.199  < 2e-16 ***\nDESTIN_GRID_ID2300 -1.1987914  0.0598418   -20.033  < 2e-16 ***\nDESTIN_GRID_ID2301 -0.5071311  0.0569148    -8.910  < 2e-16 ***\nDESTIN_GRID_ID2318  0.8686788  0.0562938    15.431  < 2e-16 ***\nDESTIN_GRID_ID2319  0.7954837  0.0562803    14.134  < 2e-16 ***\nDESTIN_GRID_ID2322 -0.2244376  0.0569076    -3.944 8.02e-05 ***\nDESTIN_GRID_ID2337  0.1722194  0.0597643     2.882 0.003956 ** \nDESTIN_GRID_ID2341  1.0199551  0.0562668    18.127  < 2e-16 ***\nDESTIN_GRID_ID2343 -1.0868948  0.0577983   -18.805  < 2e-16 ***\nDESTIN_GRID_ID2361 -0.2378373  0.0568768    -4.182 2.89e-05 ***\nDESTIN_GRID_ID2364 -2.3162596  0.0667992   -34.675  < 2e-16 ***\nDESTIN_GRID_ID2379 -1.0532866  0.0631078   -16.690  < 2e-16 ***\nDESTIN_GRID_ID2384  0.8531988  0.0564276    15.120  < 2e-16 ***\nDESTIN_GRID_ID2405  1.6260788  0.0562223    28.922  < 2e-16 ***\nDESTIN_GRID_ID2406 -1.4069536  0.0610479   -23.047  < 2e-16 ***\nDESTIN_GRID_ID2426  1.0528202  0.0571502    18.422  < 2e-16 ***\nDESTIN_GRID_ID2427  1.3156822  0.0564320    23.314  < 2e-16 ***\nDESTIN_GRID_ID2505  0.7690332  0.0596973    12.882  < 2e-16 ***\nlog(dist)          -1.5884907  0.0003226 -4924.472  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 81514190  on 62119  degrees of freedom\nResidual deviance: 20866989  on 60485  degrees of freedom\nAIC: 21205631\n\nNumber of Fisher Scoring iterations: 10\n\n\n\n\n\n\n\nModel Comparison\nIn this section we will use the compare_performance() of performance package to compare the root mean square error of the four SIMs. The smaller the values of RMSE , the better the model.\nFirst of all, let us create a list called model_list by using the code chunk below. It contains all our fitted models for all four variations of gravity model.\n\nmodel_list <- list(unconstrained=uncSIM,\n                   originConstrained=orcSIM,\n                   destinationConstrained=decSIM,\n                   doublyConstrained=dbcSIM)\n\nThe output below reveals that doubly constrained SIM is the best model among all the four SIMs because it has the smallest RMSE value of 1026.\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName                   | Model |     RMSE\n-----------------------------------------\nunconstrained          |   glm | 1393.543\noriginConstrained      |   glm | 1263.861\ndestinationConstrained |   glm | 1271.507\ndoublyConstrained      |   glm | 1026.398\n\n\n\n\nVisualising the fitted values\nThe function below will save the fitted values as a dataframe and append that column of fitted values to the flow_data1 df. We will append all the fitted values of all the four SIMs.\n\nprocess_fitted_values <- function(data, fitted_values, new_column_name) {\n  df <- as.data.frame(fitted_values) %>%\n    round(digits = 0)\n\n  data <- data %>%\n    cbind(df) %>%\n    rename({{ new_column_name }} := fitted_values)\n\n  return(data)\n}\n\n\nflow_data1 <- process_fitted_values(flow_data1, uncSIM$fitted.values, \"uncTRIPS\")\nflow_data1 <- process_fitted_values(flow_data1, orcSIM$fitted.values, \"orcTRIPS\")\nflow_data1 <- process_fitted_values(flow_data1, decSIM$fitted.values, \"decTRIPS\")\nflow_data1 <- process_fitted_values(flow_data1, dbcSIM$fitted.values, \"dbcTRIPS\")\n\nUsing the ggarragne() function of the ggpurpackage, we will now print the ‘actual vs predicted’ plots side-by-side.\n\n\nShow the code\nunc_p <- ggplot(data = flow_data1,\n                aes(x = uncTRIPS,\n                    y = TRIPS)) +\n  geom_point(size = 0.5) +\n  geom_smooth(method = lm)\n\norc_p <- ggplot(data = flow_data1,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point(size = 0.5) +\n  geom_smooth(method = lm)\n\ndec_p <- ggplot(data = flow_data1,\n                aes(x = decTRIPS,\n                    y = TRIPS)) +\n  geom_point(size = 0.5) +\n  geom_smooth(method = lm)\n\ndbc_p <- ggplot(data = flow_data1,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point(size = 0.5) +\n  geom_smooth(method = lm)\n\n\n\nggarrange(unc_p, orc_p, dec_p, dbc_p,\n          ncol = 2,\n          nrow = 2)\n\n\n\n\n\nDiscussion:\nWe can see that the points ‘hug’ more closely to the diagonal blue line, which indicates that doubly constrained model is indeed the best model.\n\n\nVisualising the residual errors\nThere are many types of residuals in glm() models like Response, Working, Pearson, Deviance residuals for instance. For simplicity, we will work with Response type, which is derived from ‘actual’ - ‘predicted’ values. In this exercise, I would like to calculate ‘Predicted - Actual’ values instead; so that any over-prediction has positive values and under-predicted values will have a negative residual.\nWe will use the same function written previously to save the residual values as a dataframe and append that column of residual values to the flow_data1 df. We will append all the residual values of all the four SIMs. (If you are confused, the function name should have been changed to process_residual_values instead)\n\nflow_data1 <- process_fitted_values(flow_data1, -resid(uncSIM, type='response'), \"uncRES\")\nflow_data1 <- process_fitted_values(flow_data1, -resid(orcSIM, type='response'), \"orcRES\")\nflow_data1 <- process_fitted_values(flow_data1, -resid(decSIM, type='response'), \"decRES\")\nflow_data1 <- process_fitted_values(flow_data1, -resid(dbcSIM, type='response'), \"dbcRES\")\n\nSave flow_data1 to local.\n\nwrite_rds(flow_data1,\n          \"data/rds/flow_data1.rds\")\n\nConvert flow_data1 to a sf Linestring object.\n\nflowLine2 <- od2line(flow=flow_data1,\n                    zones= bs_count,\n                    zone_code= 'grid_id')\n\nflowLine2 to get a left join with od_data1 in order to append the origin and destination bus stop descriptions for our map’s tooltip function later.\n\nod_data1$ORIGIN_GRID_ID <- as.factor(od_data1$ORIGIN_GRID_ID)\nod_data1$DESTIN_GRID_ID <- as.factor(od_data1$DESTIN_GRID_ID)\n\nflowLine2 <- left_join(flowLine2, od_data1,\n                      by = c('ORIGIN_GRID_ID' = 'ORIGIN_GRID_ID',\n                             'DESTIN_GRID_ID' = 'DESTIN_GRID_ID')) %>% \n  select(-c(MORNING_PEAK))\n\nSave flowLine2 to local\n\nwrite_rds(flowLine2,\n          \"data/rds/flowLine2.rds\")\n\nReload flowLine2 into R\n\nflowLine2 <- read_rds('data/rds/flowLine2.rds')\n\nPlot of Residuals against Fitted Values\nThe charts below allow us to compare the residuals of the four models.\n\n\nShow the code\nunc_rf <- ggplot(data = flow_data1,\n                aes(x = uncTRIPS,\n                    y = uncRES)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\n\norc_rf <- ggplot(data = flow_data1,\n                aes(x = orcTRIPS,\n                    y = orcRES)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\ndec_rf <- ggplot(data = flow_data1,\n                aes(x = decTRIPS,\n                    y = decRES)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\ndbc_rf <- ggplot(data = flow_data1,\n                aes(x = dbcTRIPS,\n                    y = dbcRES)) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\n\nggarrange(unc_rf, orc_rf, dec_rf, dbc_rf,\n          ncol = 2,\n          nrow = 2)\n\n\n\n\n\nAll four models produces under-predicted (below X-axis) and over-predicted above X-axis) values. The unconstrained and origin-constrained model (top left) produces greater magnitude of under-predicted errors . The maximum number of actual trips is 75,364 and yet the unconstrained model produces only a maximum of about 15k trips.\nCoordinated Plot: Residuals against Fitted Values\nUsing the highlight() and subplot() functions of the plotly package, we print the ‘residual vs predicted’ coordinated plots side-by-side. Clicking on any point in one of the chart will highlight the same point in the other three maps.\nSince the best model is doubly-constrained, we filter to retain only the data points with over-predicted trips of above 20,00 and under-predicted trips of -20,000.\nWe will use these coordinated charts to identify flows that are consistently radically over and under predicted.\nMap Tips: Hover mouse over any points to reveal tool tip that contains predicted value, residuals (predicted - actual) and origin / destination bus-stop descriptions.\n\n\nShow the code\nlibrary(plotly)\n\nd <- highlight_key(flowLine2 %>% \n                     filter(dbcRES<= -20000 | dbcRES >= 20000))\n\nunc_rf <- ggplot(data = d,\n                aes(x = uncTRIPS,\n                    y = uncRES,\n                    text = paste(\"Origin: \", ORIGIN_DESC, \"<br>Destin: \", DESTIN_DESC))) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\n\n\norc_rf <- ggplot(data = d,\n                aes(x = orcTRIPS,\n                    y = orcRES,\n                    text = paste(\"Origin: \", ORIGIN_DESC, \"<br>Destin: \", DESTIN_DESC))) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\n\n\ndec_rf <- ggplot(data = d,\n                aes(x = decTRIPS,\n                    y = decRES,\n                    text = paste(\"Origin: \", ORIGIN_DESC, \"<br>Destin: \", DESTIN_DESC))) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\n\n\ndbc_rf <- ggplot(data = d,\n                aes(x = dbcTRIPS,\n                    y = dbcRES,\n                    text = paste(\"Origin: \", ORIGIN_DESC, \"<br>Destin: \", DESTIN_DESC))) +\n  geom_point(size = 0.5) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"blue\")\n\n\nsubplot(ggplotly(unc_rf),\n        ggplotly(orc_rf),\n        ggplotly(dec_rf),\n        ggplotly(dbc_rf),\n        nrows = 2,\n        titleY = TRUE, \n        titleX = TRUE, \n        margin = 0.1)\n\n\n\n\n\n\nFlows that are consistently largely under-predicted in all four models:\nWoodlands checkpoint to Woodlands Bus interchange\nWoodlands checkpoint to Kranji MRT station\n*It appears that trips related to bus stops near the Woodlands Checkpoint tend to be poorly predicted.\nFlows that are consistently largely over-predicted in DEC and DBC models:\nWoodlands Train to Woodlands Checkpoint\nOther interesting Observations:\nFlow from Boon Lay MRT to Pioneer MRT station is badly over-predicted in our best model but predicted rather well in all the other 3 models.\nFlows from residential Woodlands/ Punggol to Woodlands Bus interchange. Punggol station are also badly over-predicted in our best model but predicted rather well in all the other 3 models.\n\n\nVisualising the predicted errors flows\nOnly flows with under-predicted values of more than 30,000 and over-predicted values of above 10,000 are visualised on the maps.\nRed-yellowish lines represents under-predicted flows while blue lines represents over-predicted flows.\nMap Tips: Clicking on a flow line will reveal tooltip containing predicted trips, residuals, origin/destination bus stop descriptions and the distance of the route.\nNote: Static trellis plots are available after all the interactive maps below.\nUnconstrained Model\n\n\nShow the code\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\nfiltered_flowLine <- flowLine2 %>%\n  filter(uncRES >=10000 | uncRES <= -30000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\nunc <- tm_shape(mpsz) +\n  tm_polygons(alpha=0.3,\n              col='black') +\ntm_shape(bs_count_filtered) +\n  tm_polygons(alpha=0.3) +\n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(col = 'uncRES',\n           lwd = 5,\n           style = 'fixed',\n           breaks = c(-68000,-40000,-20000,0,20000,40000, 60000, 76000),\n           #scale= c(0.3, 3, 9, 15, 21, 30),\n           palette = 'RdYlBu',\n           n = 6,\n           alpha= 0.9,\n           popup.vars=c(\"# Actual Trips:\"=\"TRIPS\",\n                        \"# Predicted Trips:\" = \"uncTRIPS\",\n                        \"Error:\" = \"uncRES\",\n                        \"Orig Desc:\"=\"ORIGIN_DESC\",\n                        \"Destin Desc:\" = \"DESTIN_DESC\",\n                        \"Distance:\" = 'dist')) +\n           #col='blue') +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'Residuals of O-D Flow for Unconstrained SIM' ,\n            main.title.size = 1.0,\n            main.title.fontface = 'bold')\nunc\n\n\n\n\n\n\n\nShow the code\ntmap_mode('plot')\n\n\nOrigin-Constrained Model\n\n\nShow the code\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\nfiltered_flowLine <- flowLine2 %>%\n  filter(orcRES >=10000 | orcRES <= -30000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\norc<- tm_shape(mpsz) +\n  tm_polygons(alpha=0.3,\n              col='black') +\ntm_shape(bs_count_filtered) +\n  tm_polygons(alpha=0.3) +\n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(col = 'orcRES',\n           lwd = 5,\n           style = 'fixed',\n           breaks = c(-68000,-40000,-20000,0,20000,40000, 60000, 76000),\n           #scale= c(0.3, 3, 9, 15, 21, 30),\n           palette = 'RdYlBu',\n           n = 6,\n           alpha= 0.9,\n           popup.vars=c(\"# Actual Trips:\"=\"TRIPS\",\n                        \"# Predicted Trips:\" = \"orcTRIPS\",\n                        \"Error:\" = \"orcRES\",\n                        \"Orig Desc:\"=\"ORIGIN_DESC\",\n                        \"Destin Desc:\" = \"DESTIN_DESC\",\n                        \"Distance:\" = 'dist')) +\n           \n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'Residuals of O-D Flow for Origin Constrained SIM',\n            main.title.size = 1.0,\n            main.title.fontface = 'bold')\n\n\norc\n\n\n\n\n\n\n\nShow the code\ntmap_mode('plot')\n\n\nDestination-Constrained Model\n\n\nShow the code\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\nfiltered_flowLine <- flowLine2 %>%\n  filter(decRES >=10000 | decRES <= -30000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\ndec <- tm_shape(mpsz) +\n  tm_polygons(alpha=0.3,\n              col='black') +\ntm_shape(bs_count_filtered) +\n  tm_polygons(alpha=0.3,) +\n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(col = 'decRES',\n           lwd = 5,\n           style = 'fixed',\n           breaks = c(-68000,-40000,-20000,0,20000,40000, 60000, 76000),\n           #scale= c(0.3, 3, 9, 15, 21, 30),\n           palette = 'RdYlBu',\n           n = 6,\n           alpha= 0.9,\n           popup.vars=c(\"# Actual Trips:\"=\"TRIPS\",\n                        \"# Predicted Trips:\" = \"decTRIPS\",\n                        \"Error:\" = \"decRES\",\n                        \"Orig Desc:\"=\"ORIGIN_DESC\",\n                        \"Destin Desc:\" = \"DESTIN_DESC\",\n                        \"Distance:\" = 'dist')) +\n           \n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'Residuals of O-D Flow for Destination Constrained SIM' ,\n            main.title.size = 1.0,\n            main.title.fontface = 'bold')\ndec\n\n\n\n\n\n\n\nShow the code\ntmap_mode('plot')\n\n\nDoubly-Constrained Model\n\n\nShow the code\ntmap_mode('view')\ntmap_options(check.and.fix = TRUE)\n\nfiltered_flowLine <- flowLine2 %>%\n  filter(dbcRES >=10000 | dbcRES <= -30000)\n\nbs_count_filtered <- bs_count %>%\n  filter(grid_id %in% c(filtered_flowLine$ORIGIN_GRID_ID, filtered_flowLine$DESTIN_GRID_ID))\n\ndbc<- tm_shape(mpsz) +\n  tm_polygons(alpha=0.3,\n              col='black') +\ntm_shape(bs_count_filtered) +\n  tm_polygons(alpha=0.3) +\n  filtered_flowLine %>%\n  tm_shape() +\n  tm_lines(col = 'dbcRES',\n           lwd = 5,\n           style = 'fixed',\n           breaks = c(-68000,-40000,-20000,0,20000,40000, 60000, 76000),\n           #scale= c(0.3, 3, 9, 15, 21, 30),\n           palette = 'RdYlBu',\n           n = 6,\n           alpha= 0.9,\n           popup.vars=c(\"# Actual Trips:\"=\"TRIPS\",\n                        \"# Predicted Trips:\" = \"dbcTRIPS\",\n                        \"Error:\" = \"dbcRES\",\n                        \"Orig Desc:\"=\"ORIGIN_DESC\",\n                        \"Destin Desc:\" = \"DESTIN_DESC\",\n                        \"Distance:\" = 'dist')) +\n           \n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_layout(main.title = 'Residuals of O-D Flow for Doubly Constrained SIM',\n            main.title.size = 1.0,\n            main.title.fontface = 'bold')\ndbc\n\n\n\n\n\n\n\nShow the code\ntmap_mode('plot')\n\n\nWe will plot the residual maps side by side for easy comparison.\n\n\nShow the code\ntmap_mode('plot')\n\ntmap_arrange(unc,\n             orc,\n             dec,\n             dbc,\n             asp=2,\n             nrow=2,\n             ncol=2)\n\n\n\n\n\nDiscussion:\nAt one glance, the unconstrained model tend to under-predict the number of trips than over-predict. The doubly constrained model tend to over-predict the number of trips than to under-predict.\nAcross all the four models, common regions with high errors in predictions were Woodlands Check Point area, Yishun/Khatib interchange area, Chua Chu Kang interchange area and Boon Lay interchange area."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#removing-the-outliers",
    "href": "Take-home_Ex2/Take-home_Ex2.html#removing-the-outliers",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Removing the Outliers",
    "text": "Removing the Outliers\nIn our best performing model (Doubly-Constrained), the flow trips that had the highest error in prediction were associated with areas near the Woodlands Checkpoint.\nWhat if we remove the observations that are close to the Woodlands Checkpoint? Will our model improve?\nTwo observations to remove:\n\nOrigin_grid_id: 1004 to destin_grid_id: 1108\nOrigin_grid_id: 983 to destin_grid_id: 939\n\n\ndbcSIM_remove <- glm(formula = TRIPS ~ \n                ORIGIN_GRID_ID + \n                DESTIN_GRID_ID + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = flow_data1 %>% \n                filter(!(ORIGIN_GRID_ID == 1004 & DESTIN_GRID_ID == 1108) &\n         !(ORIGIN_GRID_ID == 983 & DESTIN_GRID_ID == 939)),\n              na.action = na.exclude)\n\nWrite dbcSM_remove to local\n\nwrite_rds(dbcSIM_remove,\n          \"data/rds/dbcSIM_remove.rds\")\n\nRead dbcSIM_remove back to R\n\ndbcSIM_remove <- read_rds('data/rds/dbcSIM_remove.rds')\n\n\nNew DBC R-squaredNew DBC CoefficientsNew DBC Summary\n\n\nAs compared to the original model, removing the outliers improved the model R-squared value from 0.59 to 0.61.\n\nCalcRSquared(dbcSIM_remove$data$TRIPS, dbcSIM_remove$fitted.values)\n\n[1] 0.6069049\n\n\n\n\nThe coefficient of the distance variable is -1.59\n\ndbcSIM_remove$coefficients[1635]\n\nlog(dist) \n-1.586743 \n\n\n\n\n\nsummary(dbcSIM_remove)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_GRID_ID + DESTIN_GRID_ID + log(dist), \n    family = poisson(link = \"log\"), data = flow_data1 %>% filter(!(ORIGIN_GRID_ID == \n        1004 & DESTIN_GRID_ID == 1108) & !(ORIGIN_GRID_ID == \n        983 & DESTIN_GRID_ID == 939)), na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-180.66    -8.93    -3.07     2.56   376.05  \n\nCoefficients:\n                     Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)        14.4851688  0.1405216   103.081  < 2e-16 ***\nORIGIN_GRID_ID44    1.7042690  0.2004169     8.504  < 2e-16 ***\nORIGIN_GRID_ID46   -0.1462804  0.1618165    -0.904 0.366001    \nORIGIN_GRID_ID66    1.4068935  0.1872662     7.513 5.79e-14 ***\nORIGIN_GRID_ID67    1.7862933  0.1317501    13.558  < 2e-16 ***\nORIGIN_GRID_ID68   -0.6449665  0.1733046    -3.722 0.000198 ***\nORIGIN_GRID_ID86   -0.4793448  0.1543778    -3.105 0.001903 ** \nORIGIN_GRID_ID87    3.3450057  0.1505741    22.215  < 2e-16 ***\nORIGIN_GRID_ID88    2.3747505  0.1304746    18.201  < 2e-16 ***\nORIGIN_GRID_ID89    0.2012068  0.1389288     1.448 0.147541    \nORIGIN_GRID_ID90    0.9105632  0.1837073     4.957 7.17e-07 ***\nORIGIN_GRID_ID109   0.3375324  0.1681129     2.008 0.044667 *  \nORIGIN_GRID_ID110   0.5219570  0.1528279     3.415 0.000637 ***\nORIGIN_GRID_ID111   3.9126524  0.1300236    30.092  < 2e-16 ***\nORIGIN_GRID_ID112   0.1038876  0.1479771     0.702 0.482647    \nORIGIN_GRID_ID128   3.0502214  0.1328288    22.964  < 2e-16 ***\nORIGIN_GRID_ID129   0.3431695  0.2294032     1.496 0.134674    \nORIGIN_GRID_ID130   1.2642173  0.1413170     8.946  < 2e-16 ***\nORIGIN_GRID_ID131   1.8831640  0.1337198    14.083  < 2e-16 ***\nORIGIN_GRID_ID132   0.1685481  0.1412602     1.193 0.232801    \nORIGIN_GRID_ID133   1.0800741  0.1360612     7.938 2.05e-15 ***\nORIGIN_GRID_ID134   4.1178521  0.1328192    31.003  < 2e-16 ***\nORIGIN_GRID_ID150   4.1713164  0.1311405    31.808  < 2e-16 ***\nORIGIN_GRID_ID151   0.4327168  0.1535196     2.819 0.004823 ** \nORIGIN_GRID_ID152   0.2181208  0.1561837     1.397 0.162544    \nORIGIN_GRID_ID153   1.4518070  0.1371663    10.584  < 2e-16 ***\nORIGIN_GRID_ID154   4.1298155  0.1295130    31.887  < 2e-16 ***\nORIGIN_GRID_ID155   0.9748594  0.1351603     7.213 5.49e-13 ***\nORIGIN_GRID_ID156   1.6910707  0.1406765    12.021  < 2e-16 ***\nORIGIN_GRID_ID172   2.3071599  0.1458947    15.814  < 2e-16 ***\nORIGIN_GRID_ID174   1.1013765  0.1381923     7.970 1.59e-15 ***\nORIGIN_GRID_ID175   3.8098295  0.1298065    29.350  < 2e-16 ***\nORIGIN_GRID_ID176   4.8283574  0.1293887    37.317  < 2e-16 ***\nORIGIN_GRID_ID195  -0.0893865  0.1564885    -0.571 0.567863    \nORIGIN_GRID_ID196   0.9031450  0.1363298     6.625 3.48e-11 ***\nORIGIN_GRID_ID197   0.0761665  0.1861093     0.409 0.682351    \nORIGIN_GRID_ID215   1.4484262  0.1628878     8.892  < 2e-16 ***\nORIGIN_GRID_ID216   5.2406306  0.1295160    40.463  < 2e-16 ***\nORIGIN_GRID_ID217   2.3675510  0.1312747    18.035  < 2e-16 ***\nORIGIN_GRID_ID237   0.4354765  0.3281537     1.327 0.184492    \nORIGIN_GRID_ID238   0.8396669  0.1502045     5.590 2.27e-08 ***\nORIGIN_GRID_ID239   1.1049924  0.1939422     5.698 1.22e-08 ***\nORIGIN_GRID_ID257   0.2022865  0.1438869     1.406 0.159762    \nORIGIN_GRID_ID258   2.2490149  0.1326431    16.955  < 2e-16 ***\nORIGIN_GRID_ID259   1.4801500  0.1358433    10.896  < 2e-16 ***\nORIGIN_GRID_ID278   1.6235026  0.1350935    12.018  < 2e-16 ***\nORIGIN_GRID_ID279   0.4196415  0.1383956     3.032 0.002428 ** \nORIGIN_GRID_ID280   0.9458034  0.1389417     6.807 9.95e-12 ***\nORIGIN_GRID_ID298  -3.1158855  0.3996755    -7.796 6.39e-15 ***\nORIGIN_GRID_ID299   0.1406697  0.1426886     0.986 0.324206    \nORIGIN_GRID_ID300   4.1776917  0.1297131    32.207  < 2e-16 ***\nORIGIN_GRID_ID320  -0.2674464  0.1396198    -1.916 0.055424 .  \nORIGIN_GRID_ID321   0.8241703  0.1524896     5.405 6.49e-08 ***\nORIGIN_GRID_ID322   2.5808389  0.1357701    19.009  < 2e-16 ***\nORIGIN_GRID_ID340   1.9851739  0.1332481    14.898  < 2e-16 ***\nORIGIN_GRID_ID341  -0.1172620  0.1389908    -0.844 0.398855    \nORIGIN_GRID_ID342   2.0000073  0.1363825    14.665  < 2e-16 ***\nORIGIN_GRID_ID363   1.5851687  0.1356107    11.689  < 2e-16 ***\nORIGIN_GRID_ID364   2.1529743  0.1323656    16.265  < 2e-16 ***\nORIGIN_GRID_ID383   1.0470217  0.1338321     7.823 5.14e-15 ***\nORIGIN_GRID_ID384   0.5093183  0.1397405     3.645 0.000268 ***\nORIGIN_GRID_ID385   0.8800890  0.1471796     5.980 2.24e-09 ***\nORIGIN_GRID_ID404   2.1435420  0.1331731    16.096  < 2e-16 ***\nORIGIN_GRID_ID405   0.5432050  0.1412116     3.847 0.000120 ***\nORIGIN_GRID_ID406   5.9897364  0.1294235    46.280  < 2e-16 ***\nORIGIN_GRID_ID407   1.9633825  0.1387013    14.155  < 2e-16 ***\nORIGIN_GRID_ID408   2.7033241  0.1319538    20.487  < 2e-16 ***\nORIGIN_GRID_ID425  -0.6399213  0.1660369    -3.854 0.000116 ***\nORIGIN_GRID_ID426   1.4875662  0.1331494    11.172  < 2e-16 ***\nORIGIN_GRID_ID427   0.6572721  0.1382622     4.754 2.00e-06 ***\nORIGIN_GRID_ID428   0.1281629  0.1799589     0.712 0.476354    \nORIGIN_GRID_ID429   2.3300062  0.1312831    17.748  < 2e-16 ***\nORIGIN_GRID_ID446   0.9475340  0.1481068     6.398 1.58e-10 ***\nORIGIN_GRID_ID447   0.9099612  0.1358647     6.698 2.12e-11 ***\nORIGIN_GRID_ID448   1.9578928  0.1324686    14.780  < 2e-16 ***\nORIGIN_GRID_ID449   5.1761170  0.1296025    39.938  < 2e-16 ***\nORIGIN_GRID_ID450   2.1369124  0.1311199    16.297  < 2e-16 ***\nORIGIN_GRID_ID468   1.8100091  0.1335909    13.549  < 2e-16 ***\nORIGIN_GRID_ID469   3.1359641  0.1303693    24.054  < 2e-16 ***\nORIGIN_GRID_ID470   5.2251456  0.1295369    40.337  < 2e-16 ***\nORIGIN_GRID_ID471   3.0044294  0.1306834    22.990  < 2e-16 ***\nORIGIN_GRID_ID488   0.6480648  0.1425120     4.547 5.43e-06 ***\nORIGIN_GRID_ID489  -1.0684302  0.2130475    -5.015 5.30e-07 ***\nORIGIN_GRID_ID490   3.6266973  0.1300427    27.889  < 2e-16 ***\nORIGIN_GRID_ID491   4.1323310  0.1296861    31.864  < 2e-16 ***\nORIGIN_GRID_ID493  -1.6322021  0.2537613    -6.432 1.26e-10 ***\nORIGIN_GRID_ID494   0.7416704  0.1520352     4.878 1.07e-06 ***\nORIGIN_GRID_ID509   0.6662404  0.1352715     4.925 8.43e-07 ***\nORIGIN_GRID_ID510   1.4545165  0.1322838    10.995  < 2e-16 ***\nORIGIN_GRID_ID511   3.0352610  0.1299473    23.358  < 2e-16 ***\nORIGIN_GRID_ID512   5.7557255  0.1294768    44.454  < 2e-16 ***\nORIGIN_GRID_ID513   2.1626273  0.1324006    16.334  < 2e-16 ***\nORIGIN_GRID_ID514   1.4054005  0.1410063     9.967  < 2e-16 ***\nORIGIN_GRID_ID515   0.0044531  0.2585998     0.017 0.986261    \nORIGIN_GRID_ID530  -0.2664372  0.1580700    -1.686 0.091880 .  \nORIGIN_GRID_ID531   1.9443853  0.1311488    14.826  < 2e-16 ***\nORIGIN_GRID_ID532   1.3532474  0.1322661    10.231  < 2e-16 ***\nORIGIN_GRID_ID533   5.4233587  0.1294776    41.886  < 2e-16 ***\nORIGIN_GRID_ID534   6.0452672  0.1294907    46.685  < 2e-16 ***\nORIGIN_GRID_ID536   2.7686225  0.1323674    20.916  < 2e-16 ***\nORIGIN_GRID_ID537   0.4137729  0.2322740     1.781 0.074847 .  \nORIGIN_GRID_ID538   0.3389666  0.2888666     1.173 0.240621    \nORIGIN_GRID_ID539   0.1664552  1.0089948     0.165 0.868967    \nORIGIN_GRID_ID551  -0.2247226  0.1415154    -1.588 0.112292    \nORIGIN_GRID_ID552   2.2504435  0.1349746    16.673  < 2e-16 ***\nORIGIN_GRID_ID553   1.8139980  0.1308029    13.868  < 2e-16 ***\nORIGIN_GRID_ID554   5.3590459  0.1294853    41.387  < 2e-16 ***\nORIGIN_GRID_ID555   4.6237852  0.1296842    35.654  < 2e-16 ***\nORIGIN_GRID_ID559   1.1629843  0.1680255     6.921 4.47e-12 ***\nORIGIN_GRID_ID560   3.2805615  0.1414605    23.191  < 2e-16 ***\nORIGIN_GRID_ID561  -1.3513588  1.0097288    -1.338 0.180786    \nORIGIN_GRID_ID572  -2.5364914  0.5919853    -4.285 1.83e-05 ***\nORIGIN_GRID_ID573   0.1285241  0.1380193     0.931 0.351748    \nORIGIN_GRID_ID574   1.7564878  0.1349869    13.012  < 2e-16 ***\nORIGIN_GRID_ID575   6.3859867  0.1294556    49.330  < 2e-16 ***\nORIGIN_GRID_ID576   4.9786003  0.1295429    38.432  < 2e-16 ***\nORIGIN_GRID_ID578   0.3752838  0.1662880     2.257 0.024019 *  \nORIGIN_GRID_ID582   0.6240974  0.1702576     3.666 0.000247 ***\nORIGIN_GRID_ID583   1.5799442  0.5919014     2.669 0.007602 ** \nORIGIN_GRID_ID584   3.9786995  0.1421284    27.994  < 2e-16 ***\nORIGIN_GRID_ID593   1.3287281  0.1396774     9.513  < 2e-16 ***\nORIGIN_GRID_ID594   1.4016125  0.1322004    10.602  < 2e-16 ***\nORIGIN_GRID_ID595   1.6668730  0.1309918    12.725  < 2e-16 ***\nORIGIN_GRID_ID596   4.7191270  0.1295152    36.437  < 2e-16 ***\nORIGIN_GRID_ID597   2.0049843  0.1432580    13.996  < 2e-16 ***\nORIGIN_GRID_ID603   1.1765515  0.1754624     6.705 2.01e-11 ***\nORIGIN_GRID_ID604   1.6321084  0.2319551     7.036 1.97e-12 ***\nORIGIN_GRID_ID615  -0.0628564  0.1391125    -0.452 0.651385    \nORIGIN_GRID_ID616   1.1269988  0.1336113     8.435  < 2e-16 ***\nORIGIN_GRID_ID617   2.0238620  0.1308870    15.463  < 2e-16 ***\nORIGIN_GRID_ID618   5.4080119  0.1294985    41.761  < 2e-16 ***\nORIGIN_GRID_ID620   2.7656089  0.1334331    20.727  < 2e-16 ***\nORIGIN_GRID_ID637   0.8359611  0.1372363     6.091 1.12e-09 ***\nORIGIN_GRID_ID638   4.8213101  0.1295145    37.226  < 2e-16 ***\nORIGIN_GRID_ID657   2.6618843  0.1306457    20.375  < 2e-16 ***\nORIGIN_GRID_ID658   4.1675648  0.1296165    32.153  < 2e-16 ***\nORIGIN_GRID_ID659   4.3804392  0.1295669    33.808  < 2e-16 ***\nORIGIN_GRID_ID660   5.4588545  0.1294911    42.156  < 2e-16 ***\nORIGIN_GRID_ID662   5.5896333  0.1296745    43.105  < 2e-16 ***\nORIGIN_GRID_ID677   2.5554172  0.1316740    19.407  < 2e-16 ***\nORIGIN_GRID_ID678   0.3585136  0.1388122     2.583 0.009802 ** \nORIGIN_GRID_ID679   5.3857949  0.1294991    41.589  < 2e-16 ***\nORIGIN_GRID_ID680   5.6443456  0.1294980    43.586  < 2e-16 ***\nORIGIN_GRID_ID681   4.3851455  0.1297494    33.797  < 2e-16 ***\nORIGIN_GRID_ID699   2.0720631  0.1316520    15.739  < 2e-16 ***\nORIGIN_GRID_ID700   4.3733758  0.1296022    33.745  < 2e-16 ***\nORIGIN_GRID_ID701   4.2548348  0.1296051    32.829  < 2e-16 ***\nORIGIN_GRID_ID702   5.3054592  0.1294969    40.970  < 2e-16 ***\nORIGIN_GRID_ID704   2.4183472  0.1339768    18.050  < 2e-16 ***\nORIGIN_GRID_ID722   2.0257863  0.1310918    15.453  < 2e-16 ***\nORIGIN_GRID_ID725   1.9789263  0.1360956    14.541  < 2e-16 ***\nORIGIN_GRID_ID741   2.6340336  0.1305806    20.172  < 2e-16 ***\nORIGIN_GRID_ID743   2.8136057  0.1301539    21.618  < 2e-16 ***\nORIGIN_GRID_ID744   4.8444449  0.1295366    37.398  < 2e-16 ***\nORIGIN_GRID_ID761   2.0727207  0.1330364    15.580  < 2e-16 ***\nORIGIN_GRID_ID762   4.1401003  0.1296723    31.927  < 2e-16 ***\nORIGIN_GRID_ID763   1.2945030  0.1329916     9.734  < 2e-16 ***\nORIGIN_GRID_ID764   5.3636367  0.1294965    41.419  < 2e-16 ***\nORIGIN_GRID_ID765   4.6427605  0.1297427    35.784  < 2e-16 ***\nORIGIN_GRID_ID767   6.4859975  0.1295112    50.081  < 2e-16 ***\nORIGIN_GRID_ID772   1.2299332  0.1532828     8.024 1.02e-15 ***\nORIGIN_GRID_ID784   1.2222998  0.1326000     9.218  < 2e-16 ***\nORIGIN_GRID_ID785   4.5263746  0.1295270    34.945  < 2e-16 ***\nORIGIN_GRID_ID786   4.2351868  0.1296057    32.677  < 2e-16 ***\nORIGIN_GRID_ID787   4.8177140  0.1296767    37.152  < 2e-16 ***\nORIGIN_GRID_ID788   5.6979278  0.1295769    43.973  < 2e-16 ***\nORIGIN_GRID_ID789   4.1359944  0.1299438    31.829  < 2e-16 ***\nORIGIN_GRID_ID803   0.1088503  0.1447709     0.752 0.452123    \nORIGIN_GRID_ID804   5.1630532  0.1295228    39.862  < 2e-16 ***\nORIGIN_GRID_ID805   5.1789070  0.1294963    39.993  < 2e-16 ***\nORIGIN_GRID_ID806   4.8556786  0.1295260    37.488  < 2e-16 ***\nORIGIN_GRID_ID807   5.9000733  0.1295287    45.550  < 2e-16 ***\nORIGIN_GRID_ID808   4.1210651  0.1299677    31.708  < 2e-16 ***\nORIGIN_GRID_ID809   5.8708146  0.1295026    45.334  < 2e-16 ***\nORIGIN_GRID_ID810   5.1117294  0.1296030    39.441  < 2e-16 ***\nORIGIN_GRID_ID814   3.1603081  0.1325869    23.836  < 2e-16 ***\nORIGIN_GRID_ID819   5.0787067  0.1310086    38.766  < 2e-16 ***\nORIGIN_GRID_ID824   1.2190282  0.1361885     8.951  < 2e-16 ***\nORIGIN_GRID_ID826   2.8006823  0.1298986    21.561  < 2e-16 ***\nORIGIN_GRID_ID827   4.8006739  0.1295141    37.067  < 2e-16 ***\nORIGIN_GRID_ID828   5.2133674  0.1295066    40.256  < 2e-16 ***\nORIGIN_GRID_ID829   5.2690361  0.1295391    40.675  < 2e-16 ***\nORIGIN_GRID_ID830   5.5571103  0.1295628    42.891  < 2e-16 ***\nORIGIN_GRID_ID831   6.4120402  0.1294868    49.519  < 2e-16 ***\nORIGIN_GRID_ID832   5.4906985  0.1296488    42.351  < 2e-16 ***\nORIGIN_GRID_ID835   3.1271377  0.1329327    23.524  < 2e-16 ***\nORIGIN_GRID_ID844   0.3063797  0.1512423     2.026 0.042790 *  \nORIGIN_GRID_ID846   4.2129872  0.1295727    32.514  < 2e-16 ***\nORIGIN_GRID_ID847   3.2193608  0.1298728    24.789  < 2e-16 ***\nORIGIN_GRID_ID848   4.5803112  0.1295478    35.356  < 2e-16 ***\nORIGIN_GRID_ID849   3.8340702  0.1297064    29.560  < 2e-16 ***\nORIGIN_GRID_ID850   4.6871562  0.1295853    36.170  < 2e-16 ***\nORIGIN_GRID_ID851   5.2915201  0.1295246    40.853  < 2e-16 ***\nORIGIN_GRID_ID852   4.8278077  0.1296248    37.244  < 2e-16 ***\nORIGIN_GRID_ID853   6.8194009  0.1295344    52.645  < 2e-16 ***\nORIGIN_GRID_ID854   3.4090777  0.1321856    25.790  < 2e-16 ***\nORIGIN_GRID_ID855   1.9750770  0.1373399    14.381  < 2e-16 ***\nORIGIN_GRID_ID856   3.5403417  0.1309488    27.036  < 2e-16 ***\nORIGIN_GRID_ID866   2.1393559  0.1326393    16.129  < 2e-16 ***\nORIGIN_GRID_ID867   3.0548025  0.1300633    23.487  < 2e-16 ***\nORIGIN_GRID_ID868   2.0974047  0.1313001    15.974  < 2e-16 ***\nORIGIN_GRID_ID869   4.9964892  0.1295986    38.554  < 2e-16 ***\nORIGIN_GRID_ID870   5.7588622  0.1294848    44.475  < 2e-16 ***\nORIGIN_GRID_ID871   5.5624375  0.1296062    42.918  < 2e-16 ***\nORIGIN_GRID_ID872   3.4789128  0.1299961    26.762  < 2e-16 ***\nORIGIN_GRID_ID873   3.6944907  0.1299113    28.439  < 2e-16 ***\nORIGIN_GRID_ID874   4.0511601  0.1297293    31.228  < 2e-16 ***\nORIGIN_GRID_ID875   1.0469868  0.1471063     7.117 1.10e-12 ***\nORIGIN_GRID_ID876   2.3582407  0.1333099    17.690  < 2e-16 ***\nORIGIN_GRID_ID877   1.8384423  0.1364880    13.470  < 2e-16 ***\nORIGIN_GRID_ID887   2.4459277  0.1302446    18.779  < 2e-16 ***\nORIGIN_GRID_ID888   3.9106686  0.1296723    30.158  < 2e-16 ***\nORIGIN_GRID_ID889   0.8270070  0.1340917     6.167 6.94e-10 ***\nORIGIN_GRID_ID890   5.2019796  0.1295059    40.168  < 2e-16 ***\nORIGIN_GRID_ID891   3.9257520  0.1299946    30.199  < 2e-16 ***\nORIGIN_GRID_ID893   5.3488335  0.1295173    41.298  < 2e-16 ***\nORIGIN_GRID_ID894   3.5986113  0.1299094    27.701  < 2e-16 ***\nORIGIN_GRID_ID895   3.0998931  0.1304272    23.767  < 2e-16 ***\nORIGIN_GRID_ID896   1.9343061  0.1331909    14.523  < 2e-16 ***\nORIGIN_GRID_ID897   0.4774230  0.1496444     3.190 0.001421 ** \nORIGIN_GRID_ID898   2.6098283  0.1337418    19.514  < 2e-16 ***\nORIGIN_GRID_ID908   3.9091202  0.1301046    30.046  < 2e-16 ***\nORIGIN_GRID_ID909   3.9174535  0.1295957    30.228  < 2e-16 ***\nORIGIN_GRID_ID910   2.0577157  0.1306055    15.755  < 2e-16 ***\nORIGIN_GRID_ID911   3.3488100  0.1298002    25.800  < 2e-16 ***\nORIGIN_GRID_ID912   4.9284128  0.1295253    38.050  < 2e-16 ***\nORIGIN_GRID_ID915   5.2441385  0.1295293    40.486  < 2e-16 ***\nORIGIN_GRID_ID917   4.8618197  0.1296764    37.492  < 2e-16 ***\nORIGIN_GRID_ID918   1.3902395  0.1360640    10.218  < 2e-16 ***\nORIGIN_GRID_ID919   4.5854532  0.1298136    35.323  < 2e-16 ***\nORIGIN_GRID_ID928   2.7530432  0.1303501    21.120  < 2e-16 ***\nORIGIN_GRID_ID929   4.3481757  0.1295367    33.567  < 2e-16 ***\nORIGIN_GRID_ID930   5.1950357  0.1294879    40.120  < 2e-16 ***\nORIGIN_GRID_ID931   2.1565936  0.1307432    16.495  < 2e-16 ***\nORIGIN_GRID_ID932   2.6809723  0.1307666    20.502  < 2e-16 ***\nORIGIN_GRID_ID933   4.7902806  0.1295861    36.966  < 2e-16 ***\nORIGIN_GRID_ID934   2.2528615  0.1310353    17.193  < 2e-16 ***\nORIGIN_GRID_ID935   6.1154273  0.1294860    47.228  < 2e-16 ***\nORIGIN_GRID_ID938  -1.8821676  0.3061130    -6.149 7.82e-10 ***\nORIGIN_GRID_ID939   5.9605868  0.1295298    46.017  < 2e-16 ***\nORIGIN_GRID_ID940   0.1288967  0.1603344     0.804 0.421441    \nORIGIN_GRID_ID949   2.6098011  0.1302975    20.030  < 2e-16 ***\nORIGIN_GRID_ID950   4.7676115  0.1295574    36.799  < 2e-16 ***\nORIGIN_GRID_ID951   5.6275625  0.1294792    43.463  < 2e-16 ***\nORIGIN_GRID_ID952   2.3365000  0.1313980    17.782  < 2e-16 ***\nORIGIN_GRID_ID953   3.5054548  0.1298611    26.994  < 2e-16 ***\nORIGIN_GRID_ID954   2.3977184  0.1307540    18.338  < 2e-16 ***\nORIGIN_GRID_ID955   4.6630752  0.1295871    35.984  < 2e-16 ***\nORIGIN_GRID_ID956   3.0678892  0.1300363    23.593  < 2e-16 ***\nORIGIN_GRID_ID957   5.2433368  0.1295932    40.460  < 2e-16 ***\nORIGIN_GRID_ID959   1.2035783  0.1401509     8.588  < 2e-16 ***\nORIGIN_GRID_ID961   1.3619896  0.1343235    10.140  < 2e-16 ***\nORIGIN_GRID_ID962   6.2838464  0.1296677    48.461  < 2e-16 ***\nORIGIN_GRID_ID970   3.1724112  0.1297396    24.452  < 2e-16 ***\nORIGIN_GRID_ID971   4.5053460  0.1295122    34.787  < 2e-16 ***\nORIGIN_GRID_ID972   4.4471628  0.1295414    34.330  < 2e-16 ***\nORIGIN_GRID_ID974   4.0490280  0.1296875    31.221  < 2e-16 ***\nORIGIN_GRID_ID975   3.7080718  0.1297934    28.569  < 2e-16 ***\nORIGIN_GRID_ID976   2.4522316  0.1306273    18.773  < 2e-16 ***\nORIGIN_GRID_ID977   5.6219181  0.1295075    43.410  < 2e-16 ***\nORIGIN_GRID_ID978   5.5323372  0.1296544    42.670  < 2e-16 ***\nORIGIN_GRID_ID982   2.3647030  0.1305589    18.112  < 2e-16 ***\nORIGIN_GRID_ID983   5.9947291  0.1296498    46.238  < 2e-16 ***\nORIGIN_GRID_ID984   7.4835486  0.1296271    57.731  < 2e-16 ***\nORIGIN_GRID_ID991   3.1530240  0.1298266    24.286  < 2e-16 ***\nORIGIN_GRID_ID992   3.5226254  0.1296557    27.169  < 2e-16 ***\nORIGIN_GRID_ID993   3.2081875  0.1297052    24.734  < 2e-16 ***\nORIGIN_GRID_ID994   2.7597564  0.1299994    21.229  < 2e-16 ***\nORIGIN_GRID_ID995   4.2447409  0.1295870    32.756  < 2e-16 ***\nORIGIN_GRID_ID996   3.9438149  0.1297109    30.405  < 2e-16 ***\nORIGIN_GRID_ID997   2.6945140  0.1328951    20.275  < 2e-16 ***\nORIGIN_GRID_ID998   5.7343459  0.1295125    44.276  < 2e-16 ***\nORIGIN_GRID_ID999   5.7129901  0.1295902    44.085  < 2e-16 ***\nORIGIN_GRID_ID1001  2.5989801  0.1320699    19.679  < 2e-16 ***\nORIGIN_GRID_ID1003  5.2878687  0.1295367    40.821  < 2e-16 ***\nORIGIN_GRID_ID1004  5.3343842  0.1295416    41.179  < 2e-16 ***\nORIGIN_GRID_ID1011  1.3692100  0.1339558    10.221  < 2e-16 ***\nORIGIN_GRID_ID1012  0.9496278  0.1360473     6.980 2.95e-12 ***\nORIGIN_GRID_ID1013  1.8422298  0.1308414    14.080  < 2e-16 ***\nORIGIN_GRID_ID1014  2.7426746  0.1299994    21.098  < 2e-16 ***\nORIGIN_GRID_ID1015  2.0425554  0.1308071    15.615  < 2e-16 ***\nORIGIN_GRID_ID1016  3.8792332  0.1297001    29.909  < 2e-16 ***\nORIGIN_GRID_ID1018  4.6205668  0.1298574    35.582  < 2e-16 ***\nORIGIN_GRID_ID1019  6.1440182  0.1295518    47.425  < 2e-16 ***\nORIGIN_GRID_ID1023  4.1822830  0.1298239    32.215  < 2e-16 ***\nORIGIN_GRID_ID1024  5.2528556  0.1295474    40.548  < 2e-16 ***\nORIGIN_GRID_ID1025  0.4221625  0.1461982     2.888 0.003882 ** \nORIGIN_GRID_ID1033  2.4843122  0.1301206    19.092  < 2e-16 ***\nORIGIN_GRID_ID1034  3.5073211  0.1296952    27.043  < 2e-16 ***\nORIGIN_GRID_ID1035  4.2837576  0.1295764    33.060  < 2e-16 ***\nORIGIN_GRID_ID1036  2.0755191  0.1307386    15.875  < 2e-16 ***\nORIGIN_GRID_ID1037  3.4897111  0.1296871    26.909  < 2e-16 ***\nORIGIN_GRID_ID1043  2.5566669  0.1322212    19.336  < 2e-16 ***\nORIGIN_GRID_ID1045  4.9307555  0.1295429    38.063  < 2e-16 ***\nORIGIN_GRID_ID1046  4.8905827  0.1295733    37.744  < 2e-16 ***\nORIGIN_GRID_ID1053  4.0854320  0.1296047    31.522  < 2e-16 ***\nORIGIN_GRID_ID1054  2.9605318  0.1297939    22.809  < 2e-16 ***\nORIGIN_GRID_ID1055  4.1429096  0.1295702    31.974  < 2e-16 ***\nORIGIN_GRID_ID1056  3.1454460  0.1298445    24.225  < 2e-16 ***\nORIGIN_GRID_ID1064  0.2131839  0.2889233     0.738 0.460602    \nORIGIN_GRID_ID1066  4.6862731  0.1295716    36.167  < 2e-16 ***\nORIGIN_GRID_ID1067 -0.9904251  0.2417456    -4.097 4.19e-05 ***\nORIGIN_GRID_ID1074  3.3702393  0.1297325    25.978  < 2e-16 ***\nORIGIN_GRID_ID1075  2.5552420  0.1300269    19.652  < 2e-16 ***\nORIGIN_GRID_ID1076  2.8463568  0.1297986    21.929  < 2e-16 ***\nORIGIN_GRID_ID1077  3.0066988  0.1299451    23.138  < 2e-16 ***\nORIGIN_GRID_ID1079  4.4131543  0.1295796    34.057  < 2e-16 ***\nORIGIN_GRID_ID1085 -1.4790825  0.2215684    -6.676 2.46e-11 ***\nORIGIN_GRID_ID1087  4.7268319  0.1296032    36.472  < 2e-16 ***\nORIGIN_GRID_ID1088  2.9844708  0.1300714    22.945  < 2e-16 ***\nORIGIN_GRID_ID1094  1.3973136  0.1386685    10.077  < 2e-16 ***\nORIGIN_GRID_ID1095  0.7933646  0.1368234     5.798 6.69e-09 ***\nORIGIN_GRID_ID1096  2.8296938  0.1314608    21.525  < 2e-16 ***\nORIGIN_GRID_ID1097  4.8064529  0.1295123    37.112  < 2e-16 ***\nORIGIN_GRID_ID1098  2.4044239  0.1309934    18.355  < 2e-16 ***\nORIGIN_GRID_ID1099  3.8256068  0.1296599    29.505  < 2e-16 ***\nORIGIN_GRID_ID1105  1.3079775  0.1520134     8.604  < 2e-16 ***\nORIGIN_GRID_ID1106 -0.2276979  0.1736389    -1.311 0.189746    \nORIGIN_GRID_ID1107  2.3598355  0.1331096    17.729  < 2e-16 ***\nORIGIN_GRID_ID1108  6.5407755  0.1294866    50.513  < 2e-16 ***\nORIGIN_GRID_ID1109  1.6971775  0.1324761    12.811  < 2e-16 ***\nORIGIN_GRID_ID1116  3.1861706  0.1297970    24.547  < 2e-16 ***\nORIGIN_GRID_ID1117  1.5176749  0.1314870    11.542  < 2e-16 ***\nORIGIN_GRID_ID1118  2.0068808  0.1311075    15.307  < 2e-16 ***\nORIGIN_GRID_ID1119  2.9944241  0.1299506    23.043  < 2e-16 ***\nORIGIN_GRID_ID1120  2.9541060  0.1302886    22.674  < 2e-16 ***\nORIGIN_GRID_ID1129  5.0543710  0.1295598    39.012  < 2e-16 ***\nORIGIN_GRID_ID1130  5.0501125  0.1295277    38.989  < 2e-16 ***\nORIGIN_GRID_ID1131  2.8945987  0.1306686    22.152  < 2e-16 ***\nORIGIN_GRID_ID1136  2.2264765  0.1304067    17.073  < 2e-16 ***\nORIGIN_GRID_ID1138  1.0282958  0.1357144     7.577 3.54e-14 ***\nORIGIN_GRID_ID1139  3.9805773  0.1295749    30.720  < 2e-16 ***\nORIGIN_GRID_ID1141  3.9503843  0.1296301    30.474  < 2e-16 ***\nORIGIN_GRID_ID1148  1.3408943  0.1408300     9.521  < 2e-16 ***\nORIGIN_GRID_ID1149  2.8024154  0.1310217    21.389  < 2e-16 ***\nORIGIN_GRID_ID1150  5.2858207  0.1295177    40.812  < 2e-16 ***\nORIGIN_GRID_ID1151  4.1203694  0.1296415    31.783  < 2e-16 ***\nORIGIN_GRID_ID1158  2.2701398  0.1300766    17.452  < 2e-16 ***\nORIGIN_GRID_ID1159  3.7611681  0.1295994    29.022  < 2e-16 ***\nORIGIN_GRID_ID1160  4.8071515  0.1295149    37.117  < 2e-16 ***\nORIGIN_GRID_ID1171  5.8557063  0.1295288    45.208  < 2e-16 ***\nORIGIN_GRID_ID1172  5.6489420  0.1295260    43.612  < 2e-16 ***\nORIGIN_GRID_ID1173  2.8766934  0.1301920    22.096  < 2e-16 ***\nORIGIN_GRID_ID1174 -1.3483478  0.2889053    -4.667 3.05e-06 ***\nORIGIN_GRID_ID1178  2.5122230  0.1300060    19.324  < 2e-16 ***\nORIGIN_GRID_ID1179  3.1854328  0.1296935    24.561  < 2e-16 ***\nORIGIN_GRID_ID1180  4.2861365  0.1295393    33.088  < 2e-16 ***\nORIGIN_GRID_ID1181  3.5697530  0.1296571    27.532  < 2e-16 ***\nORIGIN_GRID_ID1183  2.6719491  0.1302616    20.512  < 2e-16 ***\nORIGIN_GRID_ID1190  1.6462335  0.1391259    11.833  < 2e-16 ***\nORIGIN_GRID_ID1192  4.5256804  0.1296380    34.910  < 2e-16 ***\nORIGIN_GRID_ID1193  4.4831197  0.1295853    34.596  < 2e-16 ***\nORIGIN_GRID_ID1194  2.6592846  0.1304248    20.389  < 2e-16 ***\nORIGIN_GRID_ID1200  3.3510384  0.1296636    25.844  < 2e-16 ***\nORIGIN_GRID_ID1201  3.1314059  0.1297033    24.143  < 2e-16 ***\nORIGIN_GRID_ID1203  4.0408206  0.1296138    31.176  < 2e-16 ***\nORIGIN_GRID_ID1204  3.8857146  0.1296366    29.974  < 2e-16 ***\nORIGIN_GRID_ID1211  0.3813337  0.2538849     1.502 0.133099    \nORIGIN_GRID_ID1214  5.3089387  0.1295355    40.984  < 2e-16 ***\nORIGIN_GRID_ID1215  1.7147503  0.1368669    12.529  < 2e-16 ***\nORIGIN_GRID_ID1216  0.7334072  0.1369348     5.356 8.51e-08 ***\nORIGIN_GRID_ID1220  4.3057999  0.1295378    33.240  < 2e-16 ***\nORIGIN_GRID_ID1221  3.9976542  0.1295511    30.858  < 2e-16 ***\nORIGIN_GRID_ID1222  3.6611952  0.1299040    28.184  < 2e-16 ***\nORIGIN_GRID_ID1223  1.9502490  0.1308714    14.902  < 2e-16 ***\nORIGIN_GRID_ID1224  2.8226096  0.1299990    21.713  < 2e-16 ***\nORIGIN_GRID_ID1231 -1.1273352  0.2382868    -4.731 2.23e-06 ***\nORIGIN_GRID_ID1232  1.3665761  0.1677196     8.148 3.70e-16 ***\nORIGIN_GRID_ID1235  2.8084184  0.1302634    21.560  < 2e-16 ***\nORIGIN_GRID_ID1236  2.5693942  0.1303759    19.708  < 2e-16 ***\nORIGIN_GRID_ID1241  2.5283114  0.1299796    19.452  < 2e-16 ***\nORIGIN_GRID_ID1242  3.2004247  0.1296720    24.681  < 2e-16 ***\nORIGIN_GRID_ID1243  3.8121117  0.1295703    29.421  < 2e-16 ***\nORIGIN_GRID_ID1246  3.0005728  0.1298762    23.103  < 2e-16 ***\nORIGIN_GRID_ID1256  4.2438397  0.1296949    32.722  < 2e-16 ***\nORIGIN_GRID_ID1257  5.1461622  0.1295877    39.712  < 2e-16 ***\nORIGIN_GRID_ID1258  3.0360731  0.1303612    23.290  < 2e-16 ***\nORIGIN_GRID_ID1262  2.9699637  0.1297783    22.885  < 2e-16 ***\nORIGIN_GRID_ID1263  3.4073304  0.1296014    26.291  < 2e-16 ***\nORIGIN_GRID_ID1264  2.3915412  0.1302408    18.362  < 2e-16 ***\nORIGIN_GRID_ID1265  2.0711362  0.1307202    15.844  < 2e-16 ***\nORIGIN_GRID_ID1266  3.7101394  0.1297145    28.602  < 2e-16 ***\nORIGIN_GRID_ID1267  1.6027063  0.1336474    11.992  < 2e-16 ***\nORIGIN_GRID_ID1272 -0.8310326  0.1962432    -4.235 2.29e-05 ***\nORIGIN_GRID_ID1273  3.5417834  0.1301445    27.214  < 2e-16 ***\nORIGIN_GRID_ID1277  5.1943425  0.1295379    40.099  < 2e-16 ***\nORIGIN_GRID_ID1278  2.5638278  0.1303311    19.672  < 2e-16 ***\nORIGIN_GRID_ID1283  4.6839572  0.1295278    36.162  < 2e-16 ***\nORIGIN_GRID_ID1284  3.9509376  0.1295638    30.494  < 2e-16 ***\nORIGIN_GRID_ID1285  4.5836858  0.1295114    35.392  < 2e-16 ***\nORIGIN_GRID_ID1286  2.7687043  0.1300197    21.295  < 2e-16 ***\nORIGIN_GRID_ID1289  1.1288935  0.1404000     8.041 8.94e-16 ***\nORIGIN_GRID_ID1293  0.2353335  0.1533901     1.534 0.124977    \nORIGIN_GRID_ID1294  5.0376714  0.1296233    38.864  < 2e-16 ***\nORIGIN_GRID_ID1295  2.4729266  0.1314395    18.814  < 2e-16 ***\nORIGIN_GRID_ID1298  4.2530040  0.1296663    32.800  < 2e-16 ***\nORIGIN_GRID_ID1299  4.5902004  0.1296315    35.410  < 2e-16 ***\nORIGIN_GRID_ID1304  4.5856849  0.1295264    35.403  < 2e-16 ***\nORIGIN_GRID_ID1305  3.9455330  0.1295375    30.459  < 2e-16 ***\nORIGIN_GRID_ID1307  0.1619759  0.1400441     1.157 0.247433    \nORIGIN_GRID_ID1308  3.7704783  0.1296399    29.084  < 2e-16 ***\nORIGIN_GRID_ID1310 -1.0702116  0.2689222    -3.980 6.90e-05 ***\nORIGIN_GRID_ID1316  1.5173112  0.1348056    11.256  < 2e-16 ***\nORIGIN_GRID_ID1317  3.2308626  0.1300400    24.845  < 2e-16 ***\nORIGIN_GRID_ID1318  2.4603808  0.1306437    18.833  < 2e-16 ***\nORIGIN_GRID_ID1319  5.4956384  0.1295298    42.428  < 2e-16 ***\nORIGIN_GRID_ID1320  4.0425238  0.1297962    31.145  < 2e-16 ***\nORIGIN_GRID_ID1325  2.1886916  0.1301735    16.814  < 2e-16 ***\nORIGIN_GRID_ID1326  4.1536199  0.1295329    32.066  < 2e-16 ***\nORIGIN_GRID_ID1327  3.8891636  0.1295574    30.019  < 2e-16 ***\nORIGIN_GRID_ID1328  2.5063137  0.1299361    19.289  < 2e-16 ***\nORIGIN_GRID_ID1329  2.8013237  0.1301209    21.529  < 2e-16 ***\nORIGIN_GRID_ID1330  3.6813711  0.1297718    28.368  < 2e-16 ***\nORIGIN_GRID_ID1331 -1.3107561  0.3576138    -3.665 0.000247 ***\nORIGIN_GRID_ID1333  3.0975575  0.1301471    23.800  < 2e-16 ***\nORIGIN_GRID_ID1334  3.3515174  0.1300529    25.770  < 2e-16 ***\nORIGIN_GRID_ID1335  2.9605826  0.1307171    22.649  < 2e-16 ***\nORIGIN_GRID_ID1336  0.1347099  0.1897237     0.710 0.477684    \nORIGIN_GRID_ID1337  0.5045431  0.1420038     3.553 0.000381 ***\nORIGIN_GRID_ID1338 -0.9328320  0.1745382    -5.345 9.06e-08 ***\nORIGIN_GRID_ID1339  5.3084605  0.1295271    40.983  < 2e-16 ***\nORIGIN_GRID_ID1340  3.6949941  0.1298170    28.463  < 2e-16 ***\nORIGIN_GRID_ID1341  0.8719325  0.2584382     3.374 0.000741 ***\nORIGIN_GRID_ID1346  3.7738585  0.1296435    29.110  < 2e-16 ***\nORIGIN_GRID_ID1347  4.7726805  0.1295129    36.851  < 2e-16 ***\nORIGIN_GRID_ID1348  3.1212890  0.1296610    24.073  < 2e-16 ***\nORIGIN_GRID_ID1349  2.9454666  0.1298115    22.690  < 2e-16 ***\nORIGIN_GRID_ID1350  3.2838802  0.1299983    25.261  < 2e-16 ***\nORIGIN_GRID_ID1353  3.1027954  0.1299061    23.885  < 2e-16 ***\nORIGIN_GRID_ID1354  2.8635185  0.1301961    21.994  < 2e-16 ***\nORIGIN_GRID_ID1355  3.6802298  0.1297815    28.357  < 2e-16 ***\nORIGIN_GRID_ID1357  2.7251322  0.1310941    20.788  < 2e-16 ***\nORIGIN_GRID_ID1358  4.0680191  0.1297057    31.363  < 2e-16 ***\nORIGIN_GRID_ID1359  4.4009234  0.1295848    33.962  < 2e-16 ***\nORIGIN_GRID_ID1360  4.4682224  0.1295908    34.479  < 2e-16 ***\nORIGIN_GRID_ID1361  5.6129332  0.1295380    43.330  < 2e-16 ***\nORIGIN_GRID_ID1362  1.7447878  0.1359707    12.832  < 2e-16 ***\nORIGIN_GRID_ID1368  2.6386385  0.1298119    20.327  < 2e-16 ***\nORIGIN_GRID_ID1369  2.3441814  0.1298742    18.050  < 2e-16 ***\nORIGIN_GRID_ID1370  3.5797559  0.1295808    27.626  < 2e-16 ***\nORIGIN_GRID_ID1371  2.9637704  0.1299390    22.809  < 2e-16 ***\nORIGIN_GRID_ID1372  2.2818885  0.1302032    17.526  < 2e-16 ***\nORIGIN_GRID_ID1373  0.6721981  0.1397845     4.809 1.52e-06 ***\nORIGIN_GRID_ID1374  2.5921803  0.1301010    19.924  < 2e-16 ***\nORIGIN_GRID_ID1375  4.1348606  0.1297283    31.873  < 2e-16 ***\nORIGIN_GRID_ID1376  3.4215188  0.1302059    26.278  < 2e-16 ***\nORIGIN_GRID_ID1379  1.7301396  0.1344608    12.867  < 2e-16 ***\nORIGIN_GRID_ID1380  5.7885037  0.1295021    44.698  < 2e-16 ***\nORIGIN_GRID_ID1381  5.3808817  0.1295254    41.543  < 2e-16 ***\nORIGIN_GRID_ID1382  4.8304231  0.1296301    37.263  < 2e-16 ***\nORIGIN_GRID_ID1383  2.4472831  0.1320124    18.538  < 2e-16 ***\nORIGIN_GRID_ID1388  3.1755493  0.1296739    24.489  < 2e-16 ***\nORIGIN_GRID_ID1389  1.9162081  0.1300810    14.731  < 2e-16 ***\nORIGIN_GRID_ID1390  3.0639074  0.1296886    23.625  < 2e-16 ***\nORIGIN_GRID_ID1391  3.1532055  0.1297394    24.304  < 2e-16 ***\nORIGIN_GRID_ID1392  2.6573413  0.1308423    20.309  < 2e-16 ***\nORIGIN_GRID_ID1393  1.8312250  0.1304911    14.033  < 2e-16 ***\nORIGIN_GRID_ID1394  3.2860448  0.1297214    25.332  < 2e-16 ***\nORIGIN_GRID_ID1395  3.3657827  0.1297195    25.947  < 2e-16 ***\nORIGIN_GRID_ID1396  4.4800140  0.1295695    34.576  < 2e-16 ***\nORIGIN_GRID_ID1397  4.5522432  0.1295789    35.131  < 2e-16 ***\nORIGIN_GRID_ID1398  3.4846263  0.1300083    26.803  < 2e-16 ***\nORIGIN_GRID_ID1400  4.5912895  0.1296505    35.413  < 2e-16 ***\nORIGIN_GRID_ID1401  4.9536350  0.1295292    38.243  < 2e-16 ***\nORIGIN_GRID_ID1402  4.9646178  0.1295495    38.322  < 2e-16 ***\nORIGIN_GRID_ID1404  5.0852329  0.1304587    38.980  < 2e-16 ***\nORIGIN_GRID_ID1410  2.6886491  0.1297482    20.722  < 2e-16 ***\nORIGIN_GRID_ID1411  2.7305697  0.1297701    21.042  < 2e-16 ***\nORIGIN_GRID_ID1412  3.0000633  0.1296607    23.138  < 2e-16 ***\nORIGIN_GRID_ID1413  3.8938574  0.1295767    30.051  < 2e-16 ***\nORIGIN_GRID_ID1414  3.2709135  0.1296447    25.230  < 2e-16 ***\nORIGIN_GRID_ID1415  2.8149099  0.1298560    21.677  < 2e-16 ***\nORIGIN_GRID_ID1416  3.4907791  0.1296712    26.920  < 2e-16 ***\nORIGIN_GRID_ID1417  3.6303776  0.1296533    28.001  < 2e-16 ***\nORIGIN_GRID_ID1418  4.4498804  0.1295605    34.346  < 2e-16 ***\nORIGIN_GRID_ID1419  3.9245788  0.1296549    30.269  < 2e-16 ***\nORIGIN_GRID_ID1422  5.0268839  0.1295733    38.796  < 2e-16 ***\nORIGIN_GRID_ID1423  5.9376558  0.1295168    45.845  < 2e-16 ***\nORIGIN_GRID_ID1430  3.4869822  0.1296319    26.899  < 2e-16 ***\nORIGIN_GRID_ID1431  3.4558025  0.1295817    26.669  < 2e-16 ***\nORIGIN_GRID_ID1432  3.5826204  0.1295708    27.650  < 2e-16 ***\nORIGIN_GRID_ID1433  2.3260830  0.1307391    17.792  < 2e-16 ***\nORIGIN_GRID_ID1434  3.8657819  0.1295909    29.831  < 2e-16 ***\nORIGIN_GRID_ID1435  4.2696516  0.1295279    32.963  < 2e-16 ***\nORIGIN_GRID_ID1436  1.1364408  0.1320617     8.605  < 2e-16 ***\nORIGIN_GRID_ID1437  4.4487288  0.1295427    34.342  < 2e-16 ***\nORIGIN_GRID_ID1438  4.9347212  0.1295055    38.104  < 2e-16 ***\nORIGIN_GRID_ID1439  5.5373604  0.1294958    42.761  < 2e-16 ***\nORIGIN_GRID_ID1440  1.9797068  0.1312519    15.083  < 2e-16 ***\nORIGIN_GRID_ID1442  4.8508212  0.1296526    37.414  < 2e-16 ***\nORIGIN_GRID_ID1443  5.9140932  0.1295228    45.661  < 2e-16 ***\nORIGIN_GRID_ID1444  4.9594165  0.1297056    38.236  < 2e-16 ***\nORIGIN_GRID_ID1452  2.5677162  0.1297855    19.784  < 2e-16 ***\nORIGIN_GRID_ID1453  2.6997130  0.1297588    20.806  < 2e-16 ***\nORIGIN_GRID_ID1454  1.7879800  0.1311959    13.628  < 2e-16 ***\nORIGIN_GRID_ID1455  3.2249028  0.1297815    24.849  < 2e-16 ***\nORIGIN_GRID_ID1456  3.6335206  0.1296198    28.032  < 2e-16 ***\nORIGIN_GRID_ID1457  4.5049801  0.1295294    34.780  < 2e-16 ***\nORIGIN_GRID_ID1458  4.8437678  0.1295141    37.400  < 2e-16 ***\nORIGIN_GRID_ID1459  4.2834906  0.1295499    33.064  < 2e-16 ***\nORIGIN_GRID_ID1460  3.4611068  0.1296497    26.696  < 2e-16 ***\nORIGIN_GRID_ID1461  2.1402741  0.1307063    16.375  < 2e-16 ***\nORIGIN_GRID_ID1464  6.3077255  0.1295136    48.703  < 2e-16 ***\nORIGIN_GRID_ID1465  5.7870724  0.1295592    44.667  < 2e-16 ***\nORIGIN_GRID_ID1472  1.1349436  0.1315681     8.626  < 2e-16 ***\nORIGIN_GRID_ID1473  2.1013975  0.1299865    16.166  < 2e-16 ***\nORIGIN_GRID_ID1474  3.2753891  0.1296002    25.273  < 2e-16 ***\nORIGIN_GRID_ID1475  4.2457548  0.1295398    32.776  < 2e-16 ***\nORIGIN_GRID_ID1476  3.6026606  0.1296395    27.790  < 2e-16 ***\nORIGIN_GRID_ID1477  5.1544687  0.1294884    39.806  < 2e-16 ***\nORIGIN_GRID_ID1478  3.4707899  0.1296403    26.772  < 2e-16 ***\nORIGIN_GRID_ID1479  3.6993061  0.1296030    28.543  < 2e-16 ***\nORIGIN_GRID_ID1480  5.5255849  0.1294869    42.673  < 2e-16 ***\nORIGIN_GRID_ID1481  2.8593405  0.1298998    22.012  < 2e-16 ***\nORIGIN_GRID_ID1482  3.0504004  0.1302587    23.418  < 2e-16 ***\nORIGIN_GRID_ID1485  5.7568019  0.1295630    44.432  < 2e-16 ***\nORIGIN_GRID_ID1494  2.3374786  0.1302532    17.946  < 2e-16 ***\nORIGIN_GRID_ID1495  2.5803184  0.1297739    19.883  < 2e-16 ***\nORIGIN_GRID_ID1496  3.7282683  0.1295560    28.777  < 2e-16 ***\nORIGIN_GRID_ID1497  4.0804886  0.1295732    31.492  < 2e-16 ***\nORIGIN_GRID_ID1498  4.4406133  0.1295271    34.283  < 2e-16 ***\nORIGIN_GRID_ID1499  4.6788834  0.1295119    36.127  < 2e-16 ***\nORIGIN_GRID_ID1500  4.5772025  0.1295801    35.323  < 2e-16 ***\nORIGIN_GRID_ID1501  4.8195857  0.1295135    37.213  < 2e-16 ***\nORIGIN_GRID_ID1502  4.2643828  0.1295537    32.916  < 2e-16 ***\nORIGIN_GRID_ID1506  0.2970822  0.1762190     1.686 0.091821 .  \nORIGIN_GRID_ID1515  1.5189243  0.1320530    11.502  < 2e-16 ***\nORIGIN_GRID_ID1516  2.9705417  0.1296972    22.904  < 2e-16 ***\nORIGIN_GRID_ID1517  3.4592978  0.1296628    26.679  < 2e-16 ***\nORIGIN_GRID_ID1518  3.3675364  0.1296951    25.965  < 2e-16 ***\nORIGIN_GRID_ID1519  4.7090775  0.1295591    36.347  < 2e-16 ***\nORIGIN_GRID_ID1520  3.4147334  0.1296595    26.336  < 2e-16 ***\nORIGIN_GRID_ID1521  2.7563326  0.1299338    21.213  < 2e-16 ***\nORIGIN_GRID_ID1522  5.0242896  0.1295061    38.796  < 2e-16 ***\nORIGIN_GRID_ID1523  3.5220708  0.1304804    26.993  < 2e-16 ***\nORIGIN_GRID_ID1524  3.6961981  0.1298554    28.464  < 2e-16 ***\nORIGIN_GRID_ID1527  3.7040772  0.1305442    28.374  < 2e-16 ***\nORIGIN_GRID_ID1535 -0.0171423  0.1641542    -0.104 0.916830    \nORIGIN_GRID_ID1536  0.8663502  0.1342116     6.455 1.08e-10 ***\nORIGIN_GRID_ID1537  1.5548327  0.1310689    11.863  < 2e-16 ***\nORIGIN_GRID_ID1538  3.2032762  0.1296375    24.709  < 2e-16 ***\nORIGIN_GRID_ID1539  3.7373038  0.1295703    28.844  < 2e-16 ***\nORIGIN_GRID_ID1540  4.3407636  0.1295332    33.511  < 2e-16 ***\nORIGIN_GRID_ID1541  5.5259021  0.1295773    42.646  < 2e-16 ***\nORIGIN_GRID_ID1542  2.4743301  0.1304626    18.966  < 2e-16 ***\nORIGIN_GRID_ID1543  3.3002503  0.1314529    25.106  < 2e-16 ***\nORIGIN_GRID_ID1544  4.2735246  0.1296349    32.966  < 2e-16 ***\nORIGIN_GRID_ID1547  1.4182427  0.1441620     9.838  < 2e-16 ***\nORIGIN_GRID_ID1556  1.1242212  0.1488414     7.553 4.25e-14 ***\nORIGIN_GRID_ID1557  0.8823117  0.1348011     6.545 5.94e-11 ***\nORIGIN_GRID_ID1558  2.1185187  0.1311146    16.158  < 2e-16 ***\nORIGIN_GRID_ID1559  3.8656696  0.1295572    29.838  < 2e-16 ***\nORIGIN_GRID_ID1560  4.7090886  0.1295101    36.361  < 2e-16 ***\nORIGIN_GRID_ID1561  4.5843521  0.1295415    35.389  < 2e-16 ***\nORIGIN_GRID_ID1562  1.6418245  0.1312344    12.511  < 2e-16 ***\nORIGIN_GRID_ID1563  3.4575761  0.1296800    26.662  < 2e-16 ***\nORIGIN_GRID_ID1564  2.6177327  0.1302216    20.102  < 2e-16 ***\nORIGIN_GRID_ID1565  2.6814118  0.1302687    20.584  < 2e-16 ***\nORIGIN_GRID_ID1566  2.4310355  0.1311209    18.540  < 2e-16 ***\nORIGIN_GRID_ID1567  0.3787053  0.1608184     2.355 0.018530 *  \nORIGIN_GRID_ID1568  1.3839745  0.1461692     9.468  < 2e-16 ***\nORIGIN_GRID_ID1578 -1.5728190  0.2899388    -5.425 5.81e-08 ***\nORIGIN_GRID_ID1580  2.3309895  0.1306549    17.841  < 2e-16 ***\nORIGIN_GRID_ID1581  1.1788586  0.1313066     8.978  < 2e-16 ***\nORIGIN_GRID_ID1582  4.3993498  0.1295175    33.967  < 2e-16 ***\nORIGIN_GRID_ID1583  2.6686447  0.1312439    20.333  < 2e-16 ***\nORIGIN_GRID_ID1584  2.9369434  0.1299191    22.606  < 2e-16 ***\nORIGIN_GRID_ID1585  3.5662654  0.1298352    27.468  < 2e-16 ***\nORIGIN_GRID_ID1586  2.5582113  0.1302014    19.648  < 2e-16 ***\nORIGIN_GRID_ID1589  0.3678526  0.1633161     2.252 0.024297 *  \nORIGIN_GRID_ID1590  1.1042949  0.1473755     7.493 6.73e-14 ***\nORIGIN_GRID_ID1600  4.4547504  0.1299074    34.292  < 2e-16 ***\nORIGIN_GRID_ID1601  2.9997961  0.1297039    23.128  < 2e-16 ***\nORIGIN_GRID_ID1602  3.6845917  0.1296126    28.428  < 2e-16 ***\nORIGIN_GRID_ID1603  4.5949833  0.1295212    35.477  < 2e-16 ***\nORIGIN_GRID_ID1604  3.1076315  0.1297212    23.956  < 2e-16 ***\nORIGIN_GRID_ID1605  4.5184538  0.1295292    34.884  < 2e-16 ***\nORIGIN_GRID_ID1606  3.9910284  0.1298392    30.738  < 2e-16 ***\nORIGIN_GRID_ID1607  3.3215897  0.1298243    25.585  < 2e-16 ***\nORIGIN_GRID_ID1608  5.3320204  0.1295373    41.162  < 2e-16 ***\nORIGIN_GRID_ID1609  5.2199631  0.1295866    40.282  < 2e-16 ***\nORIGIN_GRID_ID1610  1.8077475  0.1457203    12.406  < 2e-16 ***\nORIGIN_GRID_ID1622  3.0573653  0.1314505    23.259  < 2e-16 ***\nORIGIN_GRID_ID1623  4.3838851  0.1295231    33.846  < 2e-16 ***\nORIGIN_GRID_ID1624  3.1616341  0.1297366    24.370  < 2e-16 ***\nORIGIN_GRID_ID1625  4.5523132  0.1295434    35.141  < 2e-16 ***\nORIGIN_GRID_ID1626  5.2264188  0.1294994    40.359  < 2e-16 ***\nORIGIN_GRID_ID1627  3.6158754  0.1296690    27.885  < 2e-16 ***\nORIGIN_GRID_ID1628  5.3592356  0.1295024    41.383  < 2e-16 ***\nORIGIN_GRID_ID1629  4.3638788  0.1296412    33.661  < 2e-16 ***\nORIGIN_GRID_ID1630  4.4762527  0.1297017    34.512  < 2e-16 ***\nORIGIN_GRID_ID1631  0.8368900  0.1472906     5.682 1.33e-08 ***\nORIGIN_GRID_ID1642  1.8718460  0.1330383    14.070  < 2e-16 ***\nORIGIN_GRID_ID1643  4.3398808  0.1295340    33.504  < 2e-16 ***\nORIGIN_GRID_ID1644  2.1211876  0.1306050    16.241  < 2e-16 ***\nORIGIN_GRID_ID1645  3.5844905  0.1296118    27.656  < 2e-16 ***\nORIGIN_GRID_ID1646  3.4214648  0.1297941    26.361  < 2e-16 ***\nORIGIN_GRID_ID1647  3.8054906  0.1295962    29.364  < 2e-16 ***\nORIGIN_GRID_ID1648  4.4539396  0.1295494    34.380  < 2e-16 ***\nORIGIN_GRID_ID1649  5.2336781  0.1295096    40.412  < 2e-16 ***\nORIGIN_GRID_ID1650  5.3640071  0.1295696    41.399  < 2e-16 ***\nORIGIN_GRID_ID1664 -0.7588693  0.1962825    -3.866 0.000111 ***\nORIGIN_GRID_ID1665  4.5151426  0.1295191    34.861  < 2e-16 ***\nORIGIN_GRID_ID1666  3.2031102  0.1296688    24.702  < 2e-16 ***\nORIGIN_GRID_ID1667  4.2002248  0.1299141    32.331  < 2e-16 ***\nORIGIN_GRID_ID1668  4.3551117  0.1295452    33.618  < 2e-16 ***\nORIGIN_GRID_ID1670  5.2550173  0.1295025    40.579  < 2e-16 ***\nORIGIN_GRID_ID1671  5.9739624  0.1295651    46.108  < 2e-16 ***\nORIGIN_GRID_ID1672  5.6274831  0.1295951    43.424  < 2e-16 ***\nORIGIN_GRID_ID1684  3.4811860  0.1301789    26.742  < 2e-16 ***\nORIGIN_GRID_ID1685  4.0817590  0.1295723    31.502  < 2e-16 ***\nORIGIN_GRID_ID1686  3.9410250  0.1295759    30.415  < 2e-16 ***\nORIGIN_GRID_ID1687  3.5241273  0.1296877    27.174  < 2e-16 ***\nORIGIN_GRID_ID1688  3.0621331  0.1297655    23.597  < 2e-16 ***\nORIGIN_GRID_ID1689  2.6629160  0.1301575    20.459  < 2e-16 ***\nORIGIN_GRID_ID1690  4.1813693  0.1296304    32.256  < 2e-16 ***\nORIGIN_GRID_ID1691  4.9733856  0.1295341    38.394  < 2e-16 ***\nORIGIN_GRID_ID1692  4.5694743  0.1297306    35.223  < 2e-16 ***\nORIGIN_GRID_ID1706  4.0150698  0.1296258    30.974  < 2e-16 ***\nORIGIN_GRID_ID1707  3.9710838  0.1295597    30.651  < 2e-16 ***\nORIGIN_GRID_ID1708  4.4753622  0.1295235    34.552  < 2e-16 ***\nORIGIN_GRID_ID1709  3.6253300  0.1296334    27.966  < 2e-16 ***\nORIGIN_GRID_ID1710  4.7993412  0.1295276    37.053  < 2e-16 ***\nORIGIN_GRID_ID1711  4.5447617  0.1295650    35.077  < 2e-16 ***\nORIGIN_GRID_ID1712  5.2317700  0.1295031    40.399  < 2e-16 ***\nORIGIN_GRID_ID1713  2.8597395  0.1301685    21.970  < 2e-16 ***\nORIGIN_GRID_ID1714  5.5324772  0.1295475    42.706  < 2e-16 ***\nORIGIN_GRID_ID1727  4.2747724  0.1295718    32.992  < 2e-16 ***\nORIGIN_GRID_ID1728  4.0874157  0.1295563    31.549  < 2e-16 ***\nORIGIN_GRID_ID1729  3.5536368  0.1295979    27.420  < 2e-16 ***\nORIGIN_GRID_ID1730  1.5981423  0.1315329    12.150  < 2e-16 ***\nORIGIN_GRID_ID1731  4.3960343  0.1295648    33.929  < 2e-16 ***\nORIGIN_GRID_ID1732  4.9167829  0.1295129    37.964  < 2e-16 ***\nORIGIN_GRID_ID1733  4.7171409  0.1295384    36.415  < 2e-16 ***\nORIGIN_GRID_ID1734  5.1395119  0.1295325    39.677  < 2e-16 ***\nORIGIN_GRID_ID1735  6.8919760  0.1296325    53.166  < 2e-16 ***\nORIGIN_GRID_ID1748  2.9435313  0.1298841    22.663  < 2e-16 ***\nORIGIN_GRID_ID1749  3.9128125  0.1295667    30.199  < 2e-16 ***\nORIGIN_GRID_ID1750  3.0646088  0.1296972    23.629  < 2e-16 ***\nORIGIN_GRID_ID1751  2.4513459  0.1299531    18.863  < 2e-16 ***\nORIGIN_GRID_ID1753  4.9802612  0.1295174    38.452  < 2e-16 ***\nORIGIN_GRID_ID1754  5.3431159  0.1295005    41.259  < 2e-16 ***\nORIGIN_GRID_ID1755  4.9029617  0.1295344    37.851  < 2e-16 ***\nORIGIN_GRID_ID1756  4.8502328  0.1295757    37.432  < 2e-16 ***\nORIGIN_GRID_ID1757  2.8651416  0.1338356    21.408  < 2e-16 ***\nORIGIN_GRID_ID1769  3.7916180  0.1296126    29.253  < 2e-16 ***\nORIGIN_GRID_ID1770  3.3886222  0.1298998    26.086  < 2e-16 ***\nORIGIN_GRID_ID1771  2.5194287  0.1299723    19.384  < 2e-16 ***\nORIGIN_GRID_ID1772  1.3000255  0.1322749     9.828  < 2e-16 ***\nORIGIN_GRID_ID1774  4.6941065  0.1295321    36.239  < 2e-16 ***\nORIGIN_GRID_ID1775  4.3646422  0.1295831    33.682  < 2e-16 ***\nORIGIN_GRID_ID1776  5.5518488  0.1295046    42.870  < 2e-16 ***\nORIGIN_GRID_ID1777  5.6260822  0.1295205    43.438  < 2e-16 ***\nORIGIN_GRID_ID1778  5.4350898  0.1300746    41.784  < 2e-16 ***\nORIGIN_GRID_ID1790  4.4547999  0.1295620    34.384  < 2e-16 ***\nORIGIN_GRID_ID1791  3.7973439  0.1296385    29.292  < 2e-16 ***\nORIGIN_GRID_ID1792  3.7902703  0.1296554    29.233  < 2e-16 ***\nORIGIN_GRID_ID1793  1.6270087  0.1304350    12.474  < 2e-16 ***\nORIGIN_GRID_ID1794  1.5958109  0.1326563    12.030  < 2e-16 ***\nORIGIN_GRID_ID1795  1.1802742  0.1339618     8.811  < 2e-16 ***\nORIGIN_GRID_ID1796  5.2106523  0.1295332    40.226  < 2e-16 ***\nORIGIN_GRID_ID1797  5.2110788  0.1295193    40.234  < 2e-16 ***\nORIGIN_GRID_ID1798  5.2693316  0.1295198    40.684  < 2e-16 ***\nORIGIN_GRID_ID1799  4.5198451  0.1296966    34.849  < 2e-16 ***\nORIGIN_GRID_ID1800  3.8629025  0.1324866    29.157  < 2e-16 ***\nORIGIN_GRID_ID1811  3.5444183  0.1296964    27.329  < 2e-16 ***\nORIGIN_GRID_ID1812  4.6966749  0.1295110    36.265  < 2e-16 ***\nORIGIN_GRID_ID1813  4.4946114  0.1295208    34.702  < 2e-16 ***\nORIGIN_GRID_ID1817  5.1124271  0.1295726    39.456  < 2e-16 ***\nORIGIN_GRID_ID1818  5.0618269  0.1295402    39.075  < 2e-16 ***\nORIGIN_GRID_ID1819  5.5667370  0.1295141    42.982  < 2e-16 ***\nORIGIN_GRID_ID1820  2.7908731  0.1346283    20.730  < 2e-16 ***\nORIGIN_GRID_ID1832  4.2311977  0.1295859    32.652  < 2e-16 ***\nORIGIN_GRID_ID1833  3.7774629  0.1296105    29.145  < 2e-16 ***\nORIGIN_GRID_ID1834  4.1247790  0.1295435    31.841  < 2e-16 ***\nORIGIN_GRID_ID1835  3.4121535  0.1296914    26.310  < 2e-16 ***\nORIGIN_GRID_ID1837  0.6594326  0.1440835     4.577 4.72e-06 ***\nORIGIN_GRID_ID1839  4.5228427  0.1296753    34.878  < 2e-16 ***\nORIGIN_GRID_ID1840  6.3276194  0.1294887    48.866  < 2e-16 ***\nORIGIN_GRID_ID1841  1.8349592  0.1374079    13.354  < 2e-16 ***\nORIGIN_GRID_ID1842  6.3012911  0.1299780    48.480  < 2e-16 ***\nORIGIN_GRID_ID1853  4.1914152  0.1295606    32.351  < 2e-16 ***\nORIGIN_GRID_ID1854  4.3863215  0.1295508    33.858  < 2e-16 ***\nORIGIN_GRID_ID1855  4.6954572  0.1295293    36.250  < 2e-16 ***\nORIGIN_GRID_ID1858  2.4804322  0.1322807    18.751  < 2e-16 ***\nORIGIN_GRID_ID1860  5.8539094  0.1297670    45.111  < 2e-16 ***\nORIGIN_GRID_ID1861  5.3117542  0.1295460    41.003  < 2e-16 ***\nORIGIN_GRID_ID1874  4.3431282  0.1296187    33.507  < 2e-16 ***\nORIGIN_GRID_ID1875  2.7010206  0.1301909    20.747  < 2e-16 ***\nORIGIN_GRID_ID1876  4.7631369  0.1299376    36.657  < 2e-16 ***\nORIGIN_GRID_ID1877  4.4145884  0.1295525    34.076  < 2e-16 ***\nORIGIN_GRID_ID1880  0.8526207  0.1385220     6.155 7.50e-10 ***\nORIGIN_GRID_ID1882  5.1571335  0.1295583    39.806  < 2e-16 ***\nORIGIN_GRID_ID1883  5.6785705  0.1297945    43.750  < 2e-16 ***\nORIGIN_GRID_ID1895  4.4789153  0.1295522    34.572  < 2e-16 ***\nORIGIN_GRID_ID1896  2.8574487  0.1298518    22.005  < 2e-16 ***\nORIGIN_GRID_ID1897  3.4892852  0.1298018    26.882  < 2e-16 ***\nORIGIN_GRID_ID1898 -0.8912000  0.1987312    -4.484 7.31e-06 ***\nORIGIN_GRID_ID1901  0.7269809  0.1483645     4.900 9.59e-07 ***\nORIGIN_GRID_ID1903  5.0779284  0.1297809    39.127  < 2e-16 ***\nORIGIN_GRID_ID1917  2.9993956  0.1298518    23.099  < 2e-16 ***\nORIGIN_GRID_ID1918  4.5163529  0.1296007    34.848  < 2e-16 ***\nORIGIN_GRID_ID1919  4.3830214  0.1295698    33.827  < 2e-16 ***\nORIGIN_GRID_ID1922  2.2254180  0.1325101    16.794  < 2e-16 ***\nORIGIN_GRID_ID1924  4.8880095  0.1298217    37.652  < 2e-16 ***\nORIGIN_GRID_ID1937  3.8285679  0.1296628    29.527  < 2e-16 ***\nORIGIN_GRID_ID1938  4.5232315  0.1295383    34.918  < 2e-16 ***\nORIGIN_GRID_ID1939  5.1098902  0.1295264    39.451  < 2e-16 ***\nORIGIN_GRID_ID1942  1.0435950  0.1374788     7.591 3.18e-14 ***\nORIGIN_GRID_ID1959  3.4287112  0.1297791    26.420  < 2e-16 ***\nORIGIN_GRID_ID1960  5.4043068  0.1294907    41.735  < 2e-16 ***\nORIGIN_GRID_ID1961  3.8390946  0.1296598    29.609  < 2e-16 ***\nORIGIN_GRID_ID1962  4.8839851  0.1295336    37.704  < 2e-16 ***\nORIGIN_GRID_ID1964  0.1981314  0.1555335     1.274 0.202705    \nORIGIN_GRID_ID1979  3.7260387  0.1297299    28.722  < 2e-16 ***\nORIGIN_GRID_ID1980  2.0459585  0.1303142    15.700  < 2e-16 ***\nORIGIN_GRID_ID1981  4.5160778  0.1295352    34.864  < 2e-16 ***\nORIGIN_GRID_ID1982  3.5267360  0.1299850    27.132  < 2e-16 ***\nORIGIN_GRID_ID1983  4.7918877  0.1295369    36.992  < 2e-16 ***\nORIGIN_GRID_ID1984  3.4893806  0.1297114    26.901  < 2e-16 ***\nORIGIN_GRID_ID1985  4.2846688  0.1296196    33.056  < 2e-16 ***\nORIGIN_GRID_ID2001  4.0329986  0.1296050    31.118  < 2e-16 ***\nORIGIN_GRID_ID2002  4.6034555  0.1295175    35.543  < 2e-16 ***\nORIGIN_GRID_ID2003  4.2581191  0.1295642    32.865  < 2e-16 ***\nORIGIN_GRID_ID2004  4.8556981  0.1295330    37.486  < 2e-16 ***\nORIGIN_GRID_ID2005  4.7636946  0.1295281    36.777  < 2e-16 ***\nORIGIN_GRID_ID2006  3.2979584  0.1298281    25.402  < 2e-16 ***\nORIGIN_GRID_ID2007  2.7546844  0.1305436    21.102  < 2e-16 ***\nORIGIN_GRID_ID2022  4.3877787  0.1296083    33.854  < 2e-16 ***\nORIGIN_GRID_ID2023  4.8658289  0.1295142    37.570  < 2e-16 ***\nORIGIN_GRID_ID2024  4.1643775  0.1295542    32.144  < 2e-16 ***\nORIGIN_GRID_ID2025  4.2285190  0.1295468    32.641  < 2e-16 ***\nORIGIN_GRID_ID2026  2.9315762  0.1300204    22.547  < 2e-16 ***\nORIGIN_GRID_ID2027  5.1711253  0.1295230    39.924  < 2e-16 ***\nORIGIN_GRID_ID2043  3.7461616  0.1297077    28.882  < 2e-16 ***\nORIGIN_GRID_ID2044  4.4731771  0.1295324    34.533  < 2e-16 ***\nORIGIN_GRID_ID2045 -0.0104567  0.1514570    -0.069 0.944957    \nORIGIN_GRID_ID2046  4.4104016  0.1295220    34.051  < 2e-16 ***\nORIGIN_GRID_ID2047  4.2442830  0.1295712    32.756  < 2e-16 ***\nORIGIN_GRID_ID2048  4.4895082  0.1295464    34.656  < 2e-16 ***\nORIGIN_GRID_ID2049  3.5708278  0.1302123    27.423  < 2e-16 ***\nORIGIN_GRID_ID2064  4.4426221  0.1295612    34.290  < 2e-16 ***\nORIGIN_GRID_ID2065  2.8871187  0.1297734    22.247  < 2e-16 ***\nORIGIN_GRID_ID2066  2.2513245  0.1319877    17.057  < 2e-16 ***\nORIGIN_GRID_ID2067  5.6664927  0.1294869    43.761  < 2e-16 ***\nORIGIN_GRID_ID2068  4.0468610  0.1296589    31.212  < 2e-16 ***\nORIGIN_GRID_ID2069  4.3706733  0.1295837    33.729  < 2e-16 ***\nORIGIN_GRID_ID2085  3.3136417  0.1298500    25.519  < 2e-16 ***\nORIGIN_GRID_ID2086  4.7408917  0.1295271    36.602  < 2e-16 ***\nORIGIN_GRID_ID2087  3.3534521  0.1296879    25.858  < 2e-16 ***\nORIGIN_GRID_ID2088  4.0789735  0.1295479    31.486  < 2e-16 ***\nORIGIN_GRID_ID2089  3.8577915  0.1296340    29.759  < 2e-16 ***\nORIGIN_GRID_ID2090  5.3627676  0.1295062    41.409  < 2e-16 ***\nORIGIN_GRID_ID2091  0.6387225  0.1491045     4.284 1.84e-05 ***\nORIGIN_GRID_ID2105  1.3828244  0.1729913     7.994 1.31e-15 ***\nORIGIN_GRID_ID2106  1.6511102  0.1310538    12.599  < 2e-16 ***\nORIGIN_GRID_ID2107  2.7580094  0.1298289    21.243  < 2e-16 ***\nORIGIN_GRID_ID2108  4.0367357  0.1295895    31.150  < 2e-16 ***\nORIGIN_GRID_ID2109  4.1477480  0.1295436    32.018  < 2e-16 ***\nORIGIN_GRID_ID2110  3.5937877  0.1296824    27.712  < 2e-16 ***\nORIGIN_GRID_ID2111  0.6823990  0.1387149     4.919 8.68e-07 ***\nORIGIN_GRID_ID2128  2.4460281  0.1303520    18.765  < 2e-16 ***\nORIGIN_GRID_ID2129  1.8939694  0.1304859    14.515  < 2e-16 ***\nORIGIN_GRID_ID2130  4.6050632  0.1295200    35.555  < 2e-16 ***\nORIGIN_GRID_ID2131  4.9389681  0.1295425    38.126  < 2e-16 ***\nORIGIN_GRID_ID2132  3.8663117  0.1296126    29.830  < 2e-16 ***\nORIGIN_GRID_ID2148  3.3672892  0.1300277    25.897  < 2e-16 ***\nORIGIN_GRID_ID2149  1.9247590  0.1305509    14.743  < 2e-16 ***\nORIGIN_GRID_ID2150  4.4806953  0.1295475    34.587  < 2e-16 ***\nORIGIN_GRID_ID2151  4.9590524  0.1295084    38.291  < 2e-16 ***\nORIGIN_GRID_ID2152  5.1301416  0.1295166    39.610  < 2e-16 ***\nORIGIN_GRID_ID2153  4.4852319  0.1295847    34.612  < 2e-16 ***\nORIGIN_GRID_ID2171  3.4669628  0.1296841    26.734  < 2e-16 ***\nORIGIN_GRID_ID2172  3.5960189  0.1297172    27.722  < 2e-16 ***\nORIGIN_GRID_ID2173  4.1331933  0.1295664    31.900  < 2e-16 ***\nORIGIN_GRID_ID2174  4.4111212  0.1295746    34.043  < 2e-16 ***\nORIGIN_GRID_ID2191  3.1123881  0.1299286    23.955  < 2e-16 ***\nORIGIN_GRID_ID2192  2.8569855  0.1299943    21.978  < 2e-16 ***\nORIGIN_GRID_ID2193  3.7862644  0.1296203    29.210  < 2e-16 ***\nORIGIN_GRID_ID2194  4.2317583  0.1295685    32.660  < 2e-16 ***\nORIGIN_GRID_ID2195  3.6021615  0.1313715    27.420  < 2e-16 ***\nORIGIN_GRID_ID2212  0.3606119  0.1659223     2.173 0.029752 *  \nORIGIN_GRID_ID2213  0.7299266  0.1369975     5.328 9.93e-08 ***\nORIGIN_GRID_ID2214  1.2991426  0.1325124     9.804  < 2e-16 ***\nORIGIN_GRID_ID2215  3.8639217  0.1296627    29.800  < 2e-16 ***\nORIGIN_GRID_ID2216  2.8848107  0.1299647    22.197  < 2e-16 ***\nORIGIN_GRID_ID2233  0.9749715  0.1386261     7.033 2.02e-12 ***\nORIGIN_GRID_ID2234  2.7037537  0.1311590    20.614  < 2e-16 ***\nORIGIN_GRID_ID2235  2.6566383  0.1302369    20.399  < 2e-16 ***\nORIGIN_GRID_ID2236  2.6746701  0.1301318    20.554  < 2e-16 ***\nORIGIN_GRID_ID2237  0.3899994  0.1434832     2.718 0.006566 ** \nORIGIN_GRID_ID2256  0.4075715  0.1369512     2.976 0.002920 ** \nORIGIN_GRID_ID2257  2.4157297  0.1310802    18.429  < 2e-16 ***\nORIGIN_GRID_ID2258  1.9455386  0.1305447    14.903  < 2e-16 ***\nORIGIN_GRID_ID2259  1.4236995  0.1354743    10.509  < 2e-16 ***\nORIGIN_GRID_ID2277  2.6000998  0.1350242    19.257  < 2e-16 ***\nORIGIN_GRID_ID2278  2.9894046  0.1305044    22.907  < 2e-16 ***\nORIGIN_GRID_ID2279  1.5605342  0.1311216    11.901  < 2e-16 ***\nORIGIN_GRID_ID2280 -0.6702487  0.1861311    -3.601 0.000317 ***\nORIGIN_GRID_ID2297  4.4146447  0.1298322    34.003  < 2e-16 ***\nORIGIN_GRID_ID2300  0.2853511  0.1471357     1.939 0.052456 .  \nORIGIN_GRID_ID2301  1.8902615  0.1310322    14.426  < 2e-16 ***\nORIGIN_GRID_ID2318  2.4886960  0.1309797    19.001  < 2e-16 ***\nORIGIN_GRID_ID2319  3.0851707  0.1299788    23.736  < 2e-16 ***\nORIGIN_GRID_ID2322  2.9921760  0.1301228    22.995  < 2e-16 ***\nORIGIN_GRID_ID2337  4.0412783  0.1307146    30.917  < 2e-16 ***\nORIGIN_GRID_ID2341  3.4571357  0.1299062    26.613  < 2e-16 ***\nORIGIN_GRID_ID2343  2.3044960  0.1303157    17.684  < 2e-16 ***\nORIGIN_GRID_ID2361  3.1784077  0.1301125    24.428  < 2e-16 ***\nORIGIN_GRID_ID2364 -0.9475660  0.1610756    -5.883 4.04e-09 ***\nORIGIN_GRID_ID2379  3.4138609  0.1311151    26.037  < 2e-16 ***\nORIGIN_GRID_ID2384  2.0448982  0.1306680    15.650  < 2e-16 ***\nORIGIN_GRID_ID2405  1.6733562  0.1308150    12.792  < 2e-16 ***\nORIGIN_GRID_ID2406  0.4291838  0.1355201     3.167 0.001541 ** \nORIGIN_GRID_ID2426  1.1511000  0.1337426     8.607  < 2e-16 ***\nORIGIN_GRID_ID2427  2.9829060  0.1300200    22.942  < 2e-16 ***\nORIGIN_GRID_ID2505  3.2593878  0.1375626    23.694  < 2e-16 ***\nDESTIN_GRID_ID44    1.4613445  0.0599516    24.375  < 2e-16 ***\nDESTIN_GRID_ID46    0.5281001  0.0595122     8.874  < 2e-16 ***\nDESTIN_GRID_ID66   -0.3349358  0.0737221    -4.543 5.54e-06 ***\nDESTIN_GRID_ID67    0.4631171  0.0576901     8.028 9.93e-16 ***\nDESTIN_GRID_ID68    0.1715713  0.0596445     2.877 0.004020 ** \nDESTIN_GRID_ID86    0.5428844  0.0661282     8.210  < 2e-16 ***\nDESTIN_GRID_ID87   -2.8407018  0.1051608   -27.013  < 2e-16 ***\nDESTIN_GRID_ID88   -0.0372253  0.0586938    -0.634 0.525932    \nDESTIN_GRID_ID89   -0.5724767  0.0601910    -9.511  < 2e-16 ***\nDESTIN_GRID_ID90   -3.6909671  0.7095101    -5.202 1.97e-07 ***\nDESTIN_GRID_ID109  -0.3555287  0.0610853    -5.820 5.88e-09 ***\nDESTIN_GRID_ID110  -3.3096313  0.1302722   -25.406  < 2e-16 ***\nDESTIN_GRID_ID111   1.1106456  0.0570277    19.476  < 2e-16 ***\nDESTIN_GRID_ID112  -2.3654729  0.0649368   -36.427  < 2e-16 ***\nDESTIN_GRID_ID128   1.1988050  0.0610728    19.629  < 2e-16 ***\nDESTIN_GRID_ID129  -4.2937018  0.1496874   -28.684  < 2e-16 ***\nDESTIN_GRID_ID130  -0.5693757  0.0605592    -9.402  < 2e-16 ***\nDESTIN_GRID_ID131  -1.2903992  0.0602779   -21.408  < 2e-16 ***\nDESTIN_GRID_ID132  -0.7739430  0.0576407   -13.427  < 2e-16 ***\nDESTIN_GRID_ID133  -0.6712346  0.0570094   -11.774  < 2e-16 ***\nDESTIN_GRID_ID134  -0.5379251  0.0568435    -9.463  < 2e-16 ***\nDESTIN_GRID_ID150  -0.1496041  0.0654600    -2.285 0.022288 *  \nDESTIN_GRID_ID151  -0.4644211  0.0603674    -7.693 1.43e-14 ***\nDESTIN_GRID_ID152   0.4829987  0.0578588     8.348  < 2e-16 ***\nDESTIN_GRID_ID153   0.0307320  0.0575513     0.534 0.593346    \nDESTIN_GRID_ID154  -2.1242707  0.0625229   -33.976  < 2e-16 ***\nDESTIN_GRID_ID155  -1.7342324  0.0590420   -29.373  < 2e-16 ***\nDESTIN_GRID_ID156  -1.6070550  0.0601237   -26.729  < 2e-16 ***\nDESTIN_GRID_ID172  -1.5307473  0.0719048   -21.289  < 2e-16 ***\nDESTIN_GRID_ID174  -1.0403871  0.0579113   -17.965  < 2e-16 ***\nDESTIN_GRID_ID175  -0.6277443  0.0566494   -11.081  < 2e-16 ***\nDESTIN_GRID_ID176  -1.9784681  0.0631736   -31.318  < 2e-16 ***\nDESTIN_GRID_ID195  -2.3387640  0.0638235   -36.644  < 2e-16 ***\nDESTIN_GRID_ID196  -0.8952138  0.0566382   -15.806  < 2e-16 ***\nDESTIN_GRID_ID197  -4.1036842  0.0951996   -43.106  < 2e-16 ***\nDESTIN_GRID_ID215  -0.3826270  0.0633989    -6.035 1.59e-09 ***\nDESTIN_GRID_ID216  -0.5181441  0.0579497    -8.941  < 2e-16 ***\nDESTIN_GRID_ID217  -0.1887059  0.0565090    -3.339 0.000840 ***\nDESTIN_GRID_ID237  -2.4922907  0.0637308   -39.107  < 2e-16 ***\nDESTIN_GRID_ID238  -1.4988722  0.0578236   -25.921  < 2e-16 ***\nDESTIN_GRID_ID239  -1.7792958  0.0639682   -27.815  < 2e-16 ***\nDESTIN_GRID_ID257   0.4651127  0.0582242     7.988 1.37e-15 ***\nDESTIN_GRID_ID258  -1.4108551  0.0590899   -23.876  < 2e-16 ***\nDESTIN_GRID_ID259  -0.3035461  0.0570389    -5.322 1.03e-07 ***\nDESTIN_GRID_ID278   0.8375133  0.0576999    14.515  < 2e-16 ***\nDESTIN_GRID_ID279  -0.8889400  0.0574075   -15.485  < 2e-16 ***\nDESTIN_GRID_ID280  -0.6287251  0.0572370   -10.985  < 2e-16 ***\nDESTIN_GRID_ID298  -3.8431716  0.1609017   -23.885  < 2e-16 ***\nDESTIN_GRID_ID299  -0.6012429  0.0581480   -10.340  < 2e-16 ***\nDESTIN_GRID_ID300  -1.1741222  0.0584305   -20.094  < 2e-16 ***\nDESTIN_GRID_ID320   0.7228598  0.0576184    12.546  < 2e-16 ***\nDESTIN_GRID_ID321  -1.5426631  0.0608594   -25.348  < 2e-16 ***\nDESTIN_GRID_ID322  -0.2908618  0.0571103    -5.093 3.52e-07 ***\nDESTIN_GRID_ID340   1.4361887  0.0569568    25.215  < 2e-16 ***\nDESTIN_GRID_ID341  -0.0599000  0.0571586    -1.048 0.294657    \nDESTIN_GRID_ID342  -0.4159798  0.0568463    -7.318 2.52e-13 ***\nDESTIN_GRID_ID363  -0.4321037  0.0574609    -7.520 5.48e-14 ***\nDESTIN_GRID_ID364  -0.4306508  0.0564067    -7.635 2.26e-14 ***\nDESTIN_GRID_ID383   0.5850398  0.0566167    10.333  < 2e-16 ***\nDESTIN_GRID_ID384  -0.6189119  0.0564969   -10.955  < 2e-16 ***\nDESTIN_GRID_ID385  -1.6021038  0.0579210   -27.660  < 2e-16 ***\nDESTIN_GRID_ID404   0.7163941  0.0572973    12.503  < 2e-16 ***\nDESTIN_GRID_ID405  -0.0188196  0.0568775    -0.331 0.740735    \nDESTIN_GRID_ID406   0.3176348  0.0561292     5.659 1.52e-08 ***\nDESTIN_GRID_ID407  -0.1984916  0.0567603    -3.497 0.000470 ***\nDESTIN_GRID_ID408   0.9772047  0.0561938    17.390  < 2e-16 ***\nDESTIN_GRID_ID425  -1.6565554  0.0611860   -27.074  < 2e-16 ***\nDESTIN_GRID_ID426  -1.0768118  0.0568126   -18.954  < 2e-16 ***\nDESTIN_GRID_ID427  -3.7414621  0.0618384   -60.504  < 2e-16 ***\nDESTIN_GRID_ID428  -1.1636055  0.0571918   -20.346  < 2e-16 ***\nDESTIN_GRID_ID429  -1.3521633  0.0608746   -22.212  < 2e-16 ***\nDESTIN_GRID_ID446  -0.4409843  0.0605240    -7.286 3.19e-13 ***\nDESTIN_GRID_ID447  -1.2739874  0.0584567   -21.794  < 2e-16 ***\nDESTIN_GRID_ID448  -1.5881326  0.0570792   -27.823  < 2e-16 ***\nDESTIN_GRID_ID449  -0.9490694  0.0563943   -16.829  < 2e-16 ***\nDESTIN_GRID_ID450  -1.5529181  0.0573863   -27.061  < 2e-16 ***\nDESTIN_GRID_ID468  -0.9213683  0.0569325   -16.184  < 2e-16 ***\nDESTIN_GRID_ID469  -1.4670322  0.0565721   -25.932  < 2e-16 ***\nDESTIN_GRID_ID470  -1.2754863  0.0564330   -22.602  < 2e-16 ***\nDESTIN_GRID_ID471  -1.1039579  0.0585910   -18.842  < 2e-16 ***\nDESTIN_GRID_ID488  -0.5162421  0.0602401    -8.570  < 2e-16 ***\nDESTIN_GRID_ID489  -2.6008778  0.0737453   -35.268  < 2e-16 ***\nDESTIN_GRID_ID490  -0.6873346  0.0565749   -12.149  < 2e-16 ***\nDESTIN_GRID_ID491  -3.1738785  0.0584074   -54.340  < 2e-16 ***\nDESTIN_GRID_ID493  -3.5089817  0.0743170   -47.216  < 2e-16 ***\nDESTIN_GRID_ID494  -1.7140959  0.0605727   -28.298  < 2e-16 ***\nDESTIN_GRID_ID509  -0.1578291  0.0580360    -2.720 0.006538 ** \nDESTIN_GRID_ID510  -0.4323293  0.0568436    -7.606 2.84e-14 ***\nDESTIN_GRID_ID511  -1.2131823  0.0563560   -21.527  < 2e-16 ***\nDESTIN_GRID_ID512  -1.5303333  0.0563855   -27.141  < 2e-16 ***\nDESTIN_GRID_ID513  -0.3708491  0.0565794    -6.554 5.58e-11 ***\nDESTIN_GRID_ID514  -0.6736440  0.0572329   -11.770  < 2e-16 ***\nDESTIN_GRID_ID515  -2.1720656  0.0645568   -33.646  < 2e-16 ***\nDESTIN_GRID_ID530  -0.7769814  0.0630739   -12.319  < 2e-16 ***\nDESTIN_GRID_ID531   1.4326456  0.0562894    25.451  < 2e-16 ***\nDESTIN_GRID_ID532  -0.9714404  0.0566318   -17.154  < 2e-16 ***\nDESTIN_GRID_ID533   0.1854129  0.0560240     3.310 0.000935 ***\nDESTIN_GRID_ID534  -1.3041925  0.0563867   -23.129  < 2e-16 ***\nDESTIN_GRID_ID536  -1.5870691  0.0589090   -26.941  < 2e-16 ***\nDESTIN_GRID_ID537  -2.3734877  0.0658888   -36.023  < 2e-16 ***\nDESTIN_GRID_ID538  -2.7080702  0.0714079   -37.924  < 2e-16 ***\nDESTIN_GRID_ID539  -5.0332665  0.2730831   -18.431  < 2e-16 ***\nDESTIN_GRID_ID551  -0.1696208  0.0587451    -2.887 0.003884 ** \nDESTIN_GRID_ID552   0.2311646  0.0569904     4.056 4.99e-05 ***\nDESTIN_GRID_ID553  -1.7385572  0.0566209   -30.705  < 2e-16 ***\nDESTIN_GRID_ID554  -1.8118068  0.0564047   -32.122  < 2e-16 ***\nDESTIN_GRID_ID555  -0.5584102  0.0564856    -9.886  < 2e-16 ***\nDESTIN_GRID_ID559  -2.8246486  0.0775968   -36.402  < 2e-16 ***\nDESTIN_GRID_ID560  -0.4870838  0.0585010    -8.326  < 2e-16 ***\nDESTIN_GRID_ID561  -2.8694961  0.0877728   -32.692  < 2e-16 ***\nDESTIN_GRID_ID572  -1.0856268  0.0657346   -16.515  < 2e-16 ***\nDESTIN_GRID_ID573   0.5961690  0.0569387    10.470  < 2e-16 ***\nDESTIN_GRID_ID574  -1.2290623  0.0581384   -21.140  < 2e-16 ***\nDESTIN_GRID_ID575   1.2201865  0.0559806    21.797  < 2e-16 ***\nDESTIN_GRID_ID576  -1.4166921  0.0563268   -25.151  < 2e-16 ***\nDESTIN_GRID_ID578  -4.7797533  0.1209525   -39.518  < 2e-16 ***\nDESTIN_GRID_ID582  -3.0771947  0.0844714   -36.429  < 2e-16 ***\nDESTIN_GRID_ID583  -4.9595957  0.3820980   -12.980  < 2e-16 ***\nDESTIN_GRID_ID584  -1.5035972  0.0666749   -22.551  < 2e-16 ***\nDESTIN_GRID_ID593  -1.7178591  0.0615433   -27.913  < 2e-16 ***\nDESTIN_GRID_ID594  -0.4077089  0.0577048    -7.065 1.60e-12 ***\nDESTIN_GRID_ID595  -0.6220572  0.0562642   -11.056  < 2e-16 ***\nDESTIN_GRID_ID596  -1.2088233  0.0561865   -21.514  < 2e-16 ***\nDESTIN_GRID_ID597  -1.6811754  0.0580998   -28.936  < 2e-16 ***\nDESTIN_GRID_ID603  -2.6294584  0.0769895   -34.153  < 2e-16 ***\nDESTIN_GRID_ID604  -2.1679395  0.0755910   -28.680  < 2e-16 ***\nDESTIN_GRID_ID615  -1.3225575  0.0578834   -22.849  < 2e-16 ***\nDESTIN_GRID_ID616  -0.8434857  0.0566999   -14.876  < 2e-16 ***\nDESTIN_GRID_ID617  -1.9351043  0.0567122   -34.122  < 2e-16 ***\nDESTIN_GRID_ID618  -1.4309242  0.0563677   -25.386  < 2e-16 ***\nDESTIN_GRID_ID620  -1.2811155  0.0571308   -22.424  < 2e-16 ***\nDESTIN_GRID_ID637  -1.3483049  0.0570343   -23.640  < 2e-16 ***\nDESTIN_GRID_ID638  -1.4103309  0.0563059   -25.048  < 2e-16 ***\nDESTIN_GRID_ID657   0.0128136  0.0564141     0.227 0.820319    \nDESTIN_GRID_ID658  -0.7036229  0.0563109   -12.495  < 2e-16 ***\nDESTIN_GRID_ID659  -1.0120514  0.0562730   -17.985  < 2e-16 ***\nDESTIN_GRID_ID660  -0.6107387  0.0561336   -10.880  < 2e-16 ***\nDESTIN_GRID_ID662  -1.1760574  0.0573441   -20.509  < 2e-16 ***\nDESTIN_GRID_ID677   0.0764958  0.0567709     1.347 0.177837    \nDESTIN_GRID_ID678  -1.8403297  0.0577259   -31.880  < 2e-16 ***\nDESTIN_GRID_ID679  -0.4130381  0.0561987    -7.350 1.99e-13 ***\nDESTIN_GRID_ID680   1.0310495  0.0560185    18.406  < 2e-16 ***\nDESTIN_GRID_ID681  -2.8561271  0.0596467   -47.884  < 2e-16 ***\nDESTIN_GRID_ID699  -0.5067704  0.0567107    -8.936  < 2e-16 ***\nDESTIN_GRID_ID700  -1.0499604  0.0564475   -18.601  < 2e-16 ***\nDESTIN_GRID_ID701  -3.5305868  0.0605689   -58.290  < 2e-16 ***\nDESTIN_GRID_ID702  -0.8240083  0.0561882   -14.665  < 2e-16 ***\nDESTIN_GRID_ID704  -1.6987352  0.0571026   -29.749  < 2e-16 ***\nDESTIN_GRID_ID722  -1.5820460  0.0566960   -27.904  < 2e-16 ***\nDESTIN_GRID_ID725  -3.8675071  0.0624690   -61.911  < 2e-16 ***\nDESTIN_GRID_ID741   0.0416807  0.0564646     0.738 0.460409    \nDESTIN_GRID_ID743  -3.7016391  0.0612022   -60.482  < 2e-16 ***\nDESTIN_GRID_ID744  -0.7597437  0.0561961   -13.520  < 2e-16 ***\nDESTIN_GRID_ID761   0.3369798  0.0566385     5.950 2.69e-09 ***\nDESTIN_GRID_ID762  -1.7383678  0.0577581   -30.097  < 2e-16 ***\nDESTIN_GRID_ID763  -3.3275067  0.0602162   -55.259  < 2e-16 ***\nDESTIN_GRID_ID764  -0.2369771  0.0560913    -4.225 2.39e-05 ***\nDESTIN_GRID_ID765  -1.0677742  0.0568317   -18.788  < 2e-16 ***\nDESTIN_GRID_ID767  -1.3779744  0.0564502   -24.410  < 2e-16 ***\nDESTIN_GRID_ID772  -2.3326346  0.0697549   -33.440  < 2e-16 ***\nDESTIN_GRID_ID784  -3.1469140  0.0605073   -52.009  < 2e-16 ***\nDESTIN_GRID_ID785  -1.1911851  0.0562715   -21.169  < 2e-16 ***\nDESTIN_GRID_ID786  -1.0762369  0.0562032   -19.149  < 2e-16 ***\nDESTIN_GRID_ID787  -1.8952837  0.0570945   -33.196  < 2e-16 ***\nDESTIN_GRID_ID788  -3.4158020  0.0585588   -58.331  < 2e-16 ***\nDESTIN_GRID_ID789  -3.5903616  0.0590508   -60.801  < 2e-16 ***\nDESTIN_GRID_ID803  -0.8712943  0.0577469   -15.088  < 2e-16 ***\nDESTIN_GRID_ID804  -0.3470019  0.0563521    -6.158 7.38e-10 ***\nDESTIN_GRID_ID805   0.5932965  0.0560452    10.586  < 2e-16 ***\nDESTIN_GRID_ID806  -1.2998223  0.0562870   -23.093  < 2e-16 ***\nDESTIN_GRID_ID807  -1.2785669  0.0564819   -22.637  < 2e-16 ***\nDESTIN_GRID_ID808  -2.6676282  0.0588346   -45.341  < 2e-16 ***\nDESTIN_GRID_ID809  -1.4990496  0.0562602   -26.645  < 2e-16 ***\nDESTIN_GRID_ID810  -1.8271820  0.0566421   -32.258  < 2e-16 ***\nDESTIN_GRID_ID814  -1.2571006  0.0598560   -21.002  < 2e-16 ***\nDESTIN_GRID_ID819  -0.1918033  0.0585618    -3.275 0.001056 ** \nDESTIN_GRID_ID824  -0.6529683  0.0577075   -11.315  < 2e-16 ***\nDESTIN_GRID_ID826  -0.9534098  0.0563160   -16.930  < 2e-16 ***\nDESTIN_GRID_ID827  -1.3245195  0.0563773   -23.494  < 2e-16 ***\nDESTIN_GRID_ID828  -1.1575628  0.0562225   -20.589  < 2e-16 ***\nDESTIN_GRID_ID829  -1.6104599  0.0566038   -28.451  < 2e-16 ***\nDESTIN_GRID_ID830  -3.1384040  0.0579224   -54.183  < 2e-16 ***\nDESTIN_GRID_ID831   0.4145913  0.0560471     7.397 1.39e-13 ***\nDESTIN_GRID_ID832   0.0310257  0.0561487     0.553 0.580563    \nDESTIN_GRID_ID835  -1.6887493  0.0599418   -28.173  < 2e-16 ***\nDESTIN_GRID_ID844  -0.9319013  0.0590079   -15.793  < 2e-16 ***\nDESTIN_GRID_ID846  -0.9963173  0.0564540   -17.648  < 2e-16 ***\nDESTIN_GRID_ID847  -0.2682344  0.0561690    -4.775 1.79e-06 ***\nDESTIN_GRID_ID848  -1.5100888  0.0563789   -26.785  < 2e-16 ***\nDESTIN_GRID_ID849  -2.1596252  0.0566163   -38.145  < 2e-16 ***\nDESTIN_GRID_ID850  -1.3206611  0.0562640   -23.473  < 2e-16 ***\nDESTIN_GRID_ID851  -1.9348952  0.0563981   -34.308  < 2e-16 ***\nDESTIN_GRID_ID852  -1.9898968  0.0566386   -35.133  < 2e-16 ***\nDESTIN_GRID_ID853  -0.9961050  0.0567893   -17.540  < 2e-16 ***\nDESTIN_GRID_ID854  -0.9061584  0.0578485   -15.664  < 2e-16 ***\nDESTIN_GRID_ID855  -1.8520831  0.0596041   -31.073  < 2e-16 ***\nDESTIN_GRID_ID856  -2.4698549  0.0647056   -38.171  < 2e-16 ***\nDESTIN_GRID_ID866  -0.1555507  0.0568702    -2.735 0.006234 ** \nDESTIN_GRID_ID867   0.3602993  0.0561664     6.415 1.41e-10 ***\nDESTIN_GRID_ID868  -0.1540428  0.0562535    -2.738 0.006174 ** \nDESTIN_GRID_ID869   0.7517731  0.0562241    13.371  < 2e-16 ***\nDESTIN_GRID_ID870   0.2474620  0.0560483     4.415 1.01e-05 ***\nDESTIN_GRID_ID871   0.1537168  0.0561295     2.739 0.006170 ** \nDESTIN_GRID_ID872  -1.4665389  0.0563199   -26.039  < 2e-16 ***\nDESTIN_GRID_ID873  -1.9281371  0.0566803   -34.018  < 2e-16 ***\nDESTIN_GRID_ID874  -3.1231058  0.0577038   -54.123  < 2e-16 ***\nDESTIN_GRID_ID875  -2.4072672  0.0624294   -38.560  < 2e-16 ***\nDESTIN_GRID_ID876  -2.0395547  0.0591755   -34.466  < 2e-16 ***\nDESTIN_GRID_ID877  -1.4746559  0.0579124   -25.464  < 2e-16 ***\nDESTIN_GRID_ID887  -0.9788959  0.0567172   -17.259  < 2e-16 ***\nDESTIN_GRID_ID888  -2.2368867  0.0578984   -38.635  < 2e-16 ***\nDESTIN_GRID_ID889  -1.5101365  0.0574799   -26.272  < 2e-16 ***\nDESTIN_GRID_ID890  -0.6462163  0.0562094   -11.497  < 2e-16 ***\nDESTIN_GRID_ID891  -2.2073141  0.0580577   -38.019  < 2e-16 ***\nDESTIN_GRID_ID893  -0.9244803  0.0561603   -16.461  < 2e-16 ***\nDESTIN_GRID_ID894  -2.4925492  0.0571450   -43.618  < 2e-16 ***\nDESTIN_GRID_ID895  -1.2487944  0.0567282   -22.014  < 2e-16 ***\nDESTIN_GRID_ID896  -3.6117316  0.0653811   -55.241  < 2e-16 ***\nDESTIN_GRID_ID897  -3.7343065  0.0644059   -57.981  < 2e-16 ***\nDESTIN_GRID_ID898  -1.4138578  0.0584902   -24.173  < 2e-16 ***\nDESTIN_GRID_ID908  -0.0837106  0.0570438    -1.467 0.142246    \nDESTIN_GRID_ID909  -0.9880728  0.0563519   -17.534  < 2e-16 ***\nDESTIN_GRID_ID910  -1.9278477  0.0572012   -33.703  < 2e-16 ***\nDESTIN_GRID_ID911   0.1462529  0.0561302     2.606 0.009171 ** \nDESTIN_GRID_ID912  -1.6697012  0.0565523   -29.525  < 2e-16 ***\nDESTIN_GRID_ID915  -1.5149865  0.0563150   -26.902  < 2e-16 ***\nDESTIN_GRID_ID917   0.0353549  0.0562636     0.628 0.529755    \nDESTIN_GRID_ID918  -4.1906163  0.0688995   -60.822  < 2e-16 ***\nDESTIN_GRID_ID919  -2.4841110  0.0583838   -42.548  < 2e-16 ***\nDESTIN_GRID_ID928  -2.1119770  0.0591392   -35.712  < 2e-16 ***\nDESTIN_GRID_ID929  -1.2269824  0.0564990   -21.717  < 2e-16 ***\nDESTIN_GRID_ID930   0.0383476  0.0561004     0.684 0.494257    \nDESTIN_GRID_ID931  -1.4677530  0.0569959   -25.752  < 2e-16 ***\nDESTIN_GRID_ID932  -3.1779673  0.0614024   -51.756  < 2e-16 ***\nDESTIN_GRID_ID933  -1.1885193  0.0565805   -21.006  < 2e-16 ***\nDESTIN_GRID_ID934  -1.3913994  0.0565156   -24.620  < 2e-16 ***\nDESTIN_GRID_ID935   0.4443392  0.0560375     7.929 2.20e-15 ***\nDESTIN_GRID_ID938  -5.3094721  0.1535341   -34.582  < 2e-16 ***\nDESTIN_GRID_ID939  -0.4375241  0.0563749    -7.761 8.43e-15 ***\nDESTIN_GRID_ID940  -3.0931600  0.0597890   -51.735  < 2e-16 ***\nDESTIN_GRID_ID949  -1.7364126  0.0581113   -29.881  < 2e-16 ***\nDESTIN_GRID_ID950   0.2363461  0.0562177     4.204 2.62e-05 ***\nDESTIN_GRID_ID951   0.9598964  0.0560401    17.129  < 2e-16 ***\nDESTIN_GRID_ID952  -0.5218477  0.0565293    -9.231  < 2e-16 ***\nDESTIN_GRID_ID953  -1.0549736  0.0567083   -18.603  < 2e-16 ***\nDESTIN_GRID_ID954  -2.9769674  0.0587820   -50.644  < 2e-16 ***\nDESTIN_GRID_ID955  -0.2116506  0.0561642    -3.768 0.000164 ***\nDESTIN_GRID_ID956  -2.1728800  0.0568062   -38.251  < 2e-16 ***\nDESTIN_GRID_ID957  -2.1511697  0.0568220   -37.858  < 2e-16 ***\nDESTIN_GRID_ID959  -1.5378313  0.0594190   -25.881  < 2e-16 ***\nDESTIN_GRID_ID961  -1.9464937  0.0574001   -33.911  < 2e-16 ***\nDESTIN_GRID_ID962   0.1482172  0.0563417     2.631 0.008521 ** \nDESTIN_GRID_ID970  -0.8241167  0.0565588   -14.571  < 2e-16 ***\nDESTIN_GRID_ID971  -0.3604223  0.0561710    -6.417 1.39e-10 ***\nDESTIN_GRID_ID972  -1.2318410  0.0565068   -21.800  < 2e-16 ***\nDESTIN_GRID_ID974  -1.6289433  0.0571234   -28.516  < 2e-16 ***\nDESTIN_GRID_ID975  -2.8687534  0.0587360   -48.841  < 2e-16 ***\nDESTIN_GRID_ID976  -2.1307348  0.0570392   -37.356  < 2e-16 ***\nDESTIN_GRID_ID977  -1.8067564  0.0564145   -32.026  < 2e-16 ***\nDESTIN_GRID_ID978  -2.1979616  0.0572052   -38.422  < 2e-16 ***\nDESTIN_GRID_ID982  -2.4521675  0.0572001   -42.870  < 2e-16 ***\nDESTIN_GRID_ID983   0.3854988  0.0563902     6.836 8.13e-12 ***\nDESTIN_GRID_ID984   1.6006054  0.0564586    28.350  < 2e-16 ***\nDESTIN_GRID_ID991  -0.3422326  0.0564586    -6.062 1.35e-09 ***\nDESTIN_GRID_ID992  -0.5096265  0.0563650    -9.042  < 2e-16 ***\nDESTIN_GRID_ID993  -1.8091058  0.0568635   -31.815  < 2e-16 ***\nDESTIN_GRID_ID994  -1.8875597  0.0573412   -32.918  < 2e-16 ***\nDESTIN_GRID_ID995  -1.2578123  0.0566557   -22.201  < 2e-16 ***\nDESTIN_GRID_ID996  -1.8654534  0.0572854   -32.564  < 2e-16 ***\nDESTIN_GRID_ID997  -1.5709052  0.0575558   -27.294  < 2e-16 ***\nDESTIN_GRID_ID998  -1.2579294  0.0563650   -22.318  < 2e-16 ***\nDESTIN_GRID_ID999  -2.4230536  0.0570883   -42.444  < 2e-16 ***\nDESTIN_GRID_ID1001 -1.3348870  0.0582946   -22.899  < 2e-16 ***\nDESTIN_GRID_ID1003  0.2581340  0.0561061     4.601 4.21e-06 ***\nDESTIN_GRID_ID1004 -0.9759816  0.0563017   -17.335  < 2e-16 ***\nDESTIN_GRID_ID1011 -0.7830677  0.0573271   -13.660  < 2e-16 ***\nDESTIN_GRID_ID1012  0.1608878  0.0565312     2.846 0.004427 ** \nDESTIN_GRID_ID1013 -0.5147373  0.0564276    -9.122  < 2e-16 ***\nDESTIN_GRID_ID1014 -2.5324544  0.0588525   -43.031  < 2e-16 ***\nDESTIN_GRID_ID1015 -0.0763447  0.0562196    -1.358 0.174472    \nDESTIN_GRID_ID1016  0.2622252  0.0561213     4.672 2.98e-06 ***\nDESTIN_GRID_ID1018 -2.1182532  0.0574324   -36.883  < 2e-16 ***\nDESTIN_GRID_ID1019 -1.3317497  0.0563813   -23.620  < 2e-16 ***\nDESTIN_GRID_ID1023 -2.1566969  0.0577398   -37.352  < 2e-16 ***\nDESTIN_GRID_ID1024 -0.9819975  0.0563705   -17.420  < 2e-16 ***\nDESTIN_GRID_ID1025 -5.7842007  0.1193903   -48.448  < 2e-16 ***\nDESTIN_GRID_ID1033  0.0100424  0.0563468     0.178 0.858547    \nDESTIN_GRID_ID1034  0.2398906  0.0561859     4.270 1.96e-05 ***\nDESTIN_GRID_ID1035  0.1030493  0.0562063     1.833 0.066742 .  \nDESTIN_GRID_ID1036  0.2509939  0.0561632     4.469 7.86e-06 ***\nDESTIN_GRID_ID1037 -0.9191412  0.0563954   -16.298  < 2e-16 ***\nDESTIN_GRID_ID1043 -0.5474252  0.0571175    -9.584  < 2e-16 ***\nDESTIN_GRID_ID1045 -1.1615175  0.0563421   -20.615  < 2e-16 ***\nDESTIN_GRID_ID1046 -0.7510781  0.0563456   -13.330  < 2e-16 ***\nDESTIN_GRID_ID1053  0.5991766  0.0562063    10.660  < 2e-16 ***\nDESTIN_GRID_ID1054  0.1710829  0.0562390     3.042 0.002350 ** \nDESTIN_GRID_ID1055 -1.1398465  0.0567515   -20.085  < 2e-16 ***\nDESTIN_GRID_ID1056 -1.5001990  0.0572108   -26.222  < 2e-16 ***\nDESTIN_GRID_ID1064 -3.7246361  0.1038048   -35.881  < 2e-16 ***\nDESTIN_GRID_ID1066 -0.3533560  0.0561663    -6.291 3.15e-10 ***\nDESTIN_GRID_ID1067 -5.9066590  0.1534594   -38.490  < 2e-16 ***\nDESTIN_GRID_ID1074 -1.5516664  0.0579836   -26.760  < 2e-16 ***\nDESTIN_GRID_ID1075 -0.1082659  0.0564311    -1.919 0.055041 .  \nDESTIN_GRID_ID1076 -0.6703782  0.0564579   -11.874  < 2e-16 ***\nDESTIN_GRID_ID1077 -1.3805449  0.0569790   -24.229  < 2e-16 ***\nDESTIN_GRID_ID1079 -0.3812245  0.0563217    -6.769 1.30e-11 ***\nDESTIN_GRID_ID1085 -1.8295243  0.0755158   -24.227  < 2e-16 ***\nDESTIN_GRID_ID1087 -1.1653632  0.0563758   -20.671  < 2e-16 ***\nDESTIN_GRID_ID1088 -0.8386346  0.0563094   -14.893  < 2e-16 ***\nDESTIN_GRID_ID1094 -3.1302906  0.0791530   -39.547  < 2e-16 ***\nDESTIN_GRID_ID1095 -0.7537453  0.0581875   -12.954  < 2e-16 ***\nDESTIN_GRID_ID1096 -0.3548056  0.0584035    -6.075 1.24e-09 ***\nDESTIN_GRID_ID1097  0.3201060  0.0561528     5.701 1.19e-08 ***\nDESTIN_GRID_ID1098 -2.4151342  0.0607960   -39.725  < 2e-16 ***\nDESTIN_GRID_ID1099 -1.1028159  0.0566407   -19.470  < 2e-16 ***\nDESTIN_GRID_ID1105  0.8465919  0.0567721    14.912  < 2e-16 ***\nDESTIN_GRID_ID1106 -4.3426203  0.1159651   -37.448  < 2e-16 ***\nDESTIN_GRID_ID1107 -0.7992071  0.0565435   -14.134  < 2e-16 ***\nDESTIN_GRID_ID1108  1.1528038  0.0560536    20.566  < 2e-16 ***\nDESTIN_GRID_ID1109 -3.5793644  0.0666008   -53.744  < 2e-16 ***\nDESTIN_GRID_ID1116 -0.5009916  0.0566743    -8.840  < 2e-16 ***\nDESTIN_GRID_ID1117 -0.2066052  0.0565709    -3.652 0.000260 ***\nDESTIN_GRID_ID1118 -2.2193970  0.0594729   -37.318  < 2e-16 ***\nDESTIN_GRID_ID1119 -1.5188422  0.0571779   -26.563  < 2e-16 ***\nDESTIN_GRID_ID1120 -2.0742291  0.0591059   -35.093  < 2e-16 ***\nDESTIN_GRID_ID1129 -1.8175281  0.0566370   -32.091  < 2e-16 ***\nDESTIN_GRID_ID1130 -1.0044377  0.0562977   -17.842  < 2e-16 ***\nDESTIN_GRID_ID1131  0.2181029  0.0564318     3.865 0.000111 ***\nDESTIN_GRID_ID1136  0.6054945  0.0562291    10.768  < 2e-16 ***\nDESTIN_GRID_ID1138 -1.8536091  0.0593311   -31.242  < 2e-16 ***\nDESTIN_GRID_ID1139 -1.0279872  0.0565425   -18.181  < 2e-16 ***\nDESTIN_GRID_ID1141 -0.9886253  0.0566242   -17.459  < 2e-16 ***\nDESTIN_GRID_ID1148 -2.0551643  0.0639187   -32.153  < 2e-16 ***\nDESTIN_GRID_ID1149 -2.1838464  0.0577837   -37.793  < 2e-16 ***\nDESTIN_GRID_ID1150 -1.8166712  0.0564831   -32.163  < 2e-16 ***\nDESTIN_GRID_ID1151 -1.0052280  0.0564150   -17.818  < 2e-16 ***\nDESTIN_GRID_ID1158 -1.4146204  0.0572999   -24.688  < 2e-16 ***\nDESTIN_GRID_ID1159 -1.2932522  0.0568857   -22.734  < 2e-16 ***\nDESTIN_GRID_ID1160  0.3283993  0.0561525     5.848 4.96e-09 ***\nDESTIN_GRID_ID1171 -0.8067654  0.0563532   -14.316  < 2e-16 ***\nDESTIN_GRID_ID1172  0.5133678  0.0560951     9.152  < 2e-16 ***\nDESTIN_GRID_ID1173  0.1322312  0.0562564     2.351 0.018748 *  \nDESTIN_GRID_ID1174 -2.1193534  0.0692699   -30.596  < 2e-16 ***\nDESTIN_GRID_ID1178  0.7873455  0.0561230    14.029  < 2e-16 ***\nDESTIN_GRID_ID1179 -0.1734472  0.0562692    -3.082 0.002053 ** \nDESTIN_GRID_ID1180 -0.0630231  0.0562128    -1.121 0.262223    \nDESTIN_GRID_ID1181 -1.3080450  0.0567854   -23.035  < 2e-16 ***\nDESTIN_GRID_ID1183  0.4512814  0.0561507     8.037 9.21e-16 ***\nDESTIN_GRID_ID1190 -1.9087881  0.0623615   -30.608  < 2e-16 ***\nDESTIN_GRID_ID1192 -0.8524929  0.0562900   -15.145  < 2e-16 ***\nDESTIN_GRID_ID1193 -0.5816547  0.0562729   -10.336  < 2e-16 ***\nDESTIN_GRID_ID1194  0.0755808  0.0563466     1.341 0.179805    \nDESTIN_GRID_ID1200 -0.5260812  0.0565638    -9.301  < 2e-16 ***\nDESTIN_GRID_ID1201 -0.8010814  0.0565873   -14.157  < 2e-16 ***\nDESTIN_GRID_ID1203 -0.8844954  0.0566727   -15.607  < 2e-16 ***\nDESTIN_GRID_ID1204 -1.0127668  0.0567306   -17.852  < 2e-16 ***\nDESTIN_GRID_ID1211 -5.9398656  0.4507528   -13.178  < 2e-16 ***\nDESTIN_GRID_ID1214 -1.7834277  0.0567590   -31.421  < 2e-16 ***\nDESTIN_GRID_ID1215 -0.9337806  0.0572557   -16.309  < 2e-16 ***\nDESTIN_GRID_ID1216 -0.3587273  0.0569401    -6.300 2.97e-10 ***\nDESTIN_GRID_ID1220 -0.3196280  0.0563758    -5.670 1.43e-08 ***\nDESTIN_GRID_ID1221  0.2535282  0.0561680     4.514 6.37e-06 ***\nDESTIN_GRID_ID1222 -0.9442856  0.0575834   -16.399  < 2e-16 ***\nDESTIN_GRID_ID1223 -1.6023343  0.0575710   -27.832  < 2e-16 ***\nDESTIN_GRID_ID1224 -0.7943410  0.0565812   -14.039  < 2e-16 ***\nDESTIN_GRID_ID1231 -3.4210738  0.0847221   -40.380  < 2e-16 ***\nDESTIN_GRID_ID1232 -1.3894732  0.0609625   -22.792  < 2e-16 ***\nDESTIN_GRID_ID1235 -0.8779162  0.0563343   -15.584  < 2e-16 ***\nDESTIN_GRID_ID1236 -0.9440298  0.0566605   -16.661  < 2e-16 ***\nDESTIN_GRID_ID1241 -1.6143537  0.0574224   -28.114  < 2e-16 ***\nDESTIN_GRID_ID1242 -1.1434358  0.0568433   -20.116  < 2e-16 ***\nDESTIN_GRID_ID1243  0.0453269  0.0562358     0.806 0.420234    \nDESTIN_GRID_ID1246 -1.2791883  0.0568438   -22.504  < 2e-16 ***\nDESTIN_GRID_ID1256 -1.6562870  0.0567375   -29.192  < 2e-16 ***\nDESTIN_GRID_ID1257 -0.4477355  0.0563744    -7.942 1.99e-15 ***\nDESTIN_GRID_ID1258  0.5295764  0.0562633     9.412  < 2e-16 ***\nDESTIN_GRID_ID1262 -1.9177947  0.0579263   -33.107  < 2e-16 ***\nDESTIN_GRID_ID1263  0.4310573  0.0561086     7.683 1.56e-14 ***\nDESTIN_GRID_ID1264 -0.3639379  0.0565270    -6.438 1.21e-10 ***\nDESTIN_GRID_ID1265 -0.4531590  0.0566202    -8.003 1.21e-15 ***\nDESTIN_GRID_ID1266 -0.4075455  0.0564505    -7.220 5.22e-13 ***\nDESTIN_GRID_ID1267 -2.0690474  0.0594308   -34.814  < 2e-16 ***\nDESTIN_GRID_ID1272 -5.6181932  0.1312624   -42.801  < 2e-16 ***\nDESTIN_GRID_ID1273 -0.4750842  0.0564814    -8.411  < 2e-16 ***\nDESTIN_GRID_ID1277 -0.3444119  0.0562065    -6.128 8.92e-10 ***\nDESTIN_GRID_ID1278 -0.6294525  0.0563669   -11.167  < 2e-16 ***\nDESTIN_GRID_ID1283  0.8661871  0.0561086    15.438  < 2e-16 ***\nDESTIN_GRID_ID1284  0.4205212  0.0561497     7.489 6.93e-14 ***\nDESTIN_GRID_ID1285  0.1702762  0.0562057     3.030 0.002449 ** \nDESTIN_GRID_ID1286 -0.7085203  0.0569431   -12.443  < 2e-16 ***\nDESTIN_GRID_ID1289 -3.1104205  0.0691251   -44.997  < 2e-16 ***\nDESTIN_GRID_ID1293 -4.6804112  0.1038061   -45.088  < 2e-16 ***\nDESTIN_GRID_ID1294 -0.6216461  0.0567664   -10.951  < 2e-16 ***\nDESTIN_GRID_ID1295 -3.1182779  0.0616854   -50.551  < 2e-16 ***\nDESTIN_GRID_ID1298 -1.2194422  0.0564888   -21.587  < 2e-16 ***\nDESTIN_GRID_ID1299 -1.4234128  0.0568379   -25.043  < 2e-16 ***\nDESTIN_GRID_ID1304 -0.0876349  0.0563309    -1.556 0.119775    \nDESTIN_GRID_ID1305 -0.0798973  0.0561884    -1.422 0.155039    \nDESTIN_GRID_ID1307 -1.3165319  0.0592489   -22.220  < 2e-16 ***\nDESTIN_GRID_ID1308 -0.1656560  0.0562935    -2.943 0.003253 ** \nDESTIN_GRID_ID1310 -5.0734194  0.2305200   -22.009  < 2e-16 ***\nDESTIN_GRID_ID1316 -2.4052459  0.0582863   -41.266  < 2e-16 ***\nDESTIN_GRID_ID1317 -2.6572243  0.0578849   -45.905  < 2e-16 ***\nDESTIN_GRID_ID1318 -2.7987423  0.0588145   -47.586  < 2e-16 ***\nDESTIN_GRID_ID1319  0.1659234  0.0561396     2.956 0.003121 ** \nDESTIN_GRID_ID1320 -1.7880214  0.0576015   -31.041  < 2e-16 ***\nDESTIN_GRID_ID1324 -0.2657882  0.0594514    -4.471 7.80e-06 ***\nDESTIN_GRID_ID1325 -2.1853939  0.0584404   -37.395  < 2e-16 ***\nDESTIN_GRID_ID1326 -0.5201287  0.0563639    -9.228  < 2e-16 ***\nDESTIN_GRID_ID1327 -0.2459552  0.0562816    -4.370 1.24e-05 ***\nDESTIN_GRID_ID1328 -0.4391663  0.0564455    -7.780 7.23e-15 ***\nDESTIN_GRID_ID1329 -0.6477969  0.0568476   -11.395  < 2e-16 ***\nDESTIN_GRID_ID1330  0.6999003  0.0562364    12.446  < 2e-16 ***\nDESTIN_GRID_ID1331 -5.9102750  0.2940577   -20.099  < 2e-16 ***\nDESTIN_GRID_ID1333 -1.9915794  0.0586096   -33.980  < 2e-16 ***\nDESTIN_GRID_ID1334 -1.6336329  0.0578182   -28.255  < 2e-16 ***\nDESTIN_GRID_ID1335  0.0889970  0.0563009     1.581 0.113938    \nDESTIN_GRID_ID1336 -3.1584292  0.0740438   -42.656  < 2e-16 ***\nDESTIN_GRID_ID1337 -3.5649388  0.0660801   -53.949  < 2e-16 ***\nDESTIN_GRID_ID1338 -3.8426377  0.0630062   -60.988  < 2e-16 ***\nDESTIN_GRID_ID1339 -0.2611193  0.0561682    -4.649 3.34e-06 ***\nDESTIN_GRID_ID1340 -1.6971303  0.0570118   -29.768  < 2e-16 ***\nDESTIN_GRID_ID1341 -5.3161249  0.1106260   -48.055  < 2e-16 ***\nDESTIN_GRID_ID1346 -0.3876053  0.0565727    -6.851 7.31e-12 ***\nDESTIN_GRID_ID1347  0.8126757  0.0561324    14.478  < 2e-16 ***\nDESTIN_GRID_ID1348 -0.6542970  0.0564856   -11.583  < 2e-16 ***\nDESTIN_GRID_ID1349  0.3507531  0.0562830     6.232 4.61e-10 ***\nDESTIN_GRID_ID1350 -1.2918293  0.0577523   -22.368  < 2e-16 ***\nDESTIN_GRID_ID1353 -0.7050065  0.0565042   -12.477  < 2e-16 ***\nDESTIN_GRID_ID1354 -1.3545496  0.0569479   -23.786  < 2e-16 ***\nDESTIN_GRID_ID1355 -1.7433100  0.0572966   -30.426  < 2e-16 ***\nDESTIN_GRID_ID1357 -2.2115145  0.0593427   -37.267  < 2e-16 ***\nDESTIN_GRID_ID1358 -0.0981571  0.0561471    -1.748 0.080427 .  \nDESTIN_GRID_ID1359 -1.3860974  0.0563881   -24.581  < 2e-16 ***\nDESTIN_GRID_ID1360 -1.5914002  0.0564877   -28.173  < 2e-16 ***\nDESTIN_GRID_ID1361 -1.5840183  0.0569427   -27.818  < 2e-16 ***\nDESTIN_GRID_ID1362 -2.7457492  0.0627656   -43.746  < 2e-16 ***\nDESTIN_GRID_ID1368 -1.3258961  0.0569399   -23.286  < 2e-16 ***\nDESTIN_GRID_ID1369 -1.1314156  0.0567631   -19.932  < 2e-16 ***\nDESTIN_GRID_ID1370  0.4538584  0.0561289     8.086 6.17e-16 ***\nDESTIN_GRID_ID1371 -0.3861593  0.0564962    -6.835 8.19e-12 ***\nDESTIN_GRID_ID1372 -0.3948861  0.0564186    -6.999 2.57e-12 ***\nDESTIN_GRID_ID1373 -3.4333511  0.0669601   -51.275  < 2e-16 ***\nDESTIN_GRID_ID1374 -2.2100683  0.0582405   -37.947  < 2e-16 ***\nDESTIN_GRID_ID1375 -0.3718085  0.0565545    -6.574 4.89e-11 ***\nDESTIN_GRID_ID1376 -2.0078878  0.0585685   -34.283  < 2e-16 ***\nDESTIN_GRID_ID1379 -5.3077460  0.0957359   -55.442  < 2e-16 ***\nDESTIN_GRID_ID1380  0.4951456  0.0560773     8.830  < 2e-16 ***\nDESTIN_GRID_ID1381  0.6728320  0.0560667    12.001  < 2e-16 ***\nDESTIN_GRID_ID1382 -0.1552029  0.0562204    -2.761 0.005769 ** \nDESTIN_GRID_ID1383 -2.8691092  0.0594940   -48.225  < 2e-16 ***\nDESTIN_GRID_ID1388 -0.5533889  0.0564564    -9.802  < 2e-16 ***\nDESTIN_GRID_ID1389 -0.7944839  0.0565827   -14.041  < 2e-16 ***\nDESTIN_GRID_ID1390 -0.4527664  0.0564771    -8.017 1.09e-15 ***\nDESTIN_GRID_ID1391  0.2669355  0.0562247     4.748 2.06e-06 ***\nDESTIN_GRID_ID1392 -0.2512642  0.0571824    -4.394 1.11e-05 ***\nDESTIN_GRID_ID1393 -0.9822304  0.0566441   -17.340  < 2e-16 ***\nDESTIN_GRID_ID1394 -0.6574881  0.0563707   -11.664  < 2e-16 ***\nDESTIN_GRID_ID1395 -1.1231730  0.0565383   -19.866  < 2e-16 ***\nDESTIN_GRID_ID1396 -0.3667290  0.0562640    -6.518 7.12e-11 ***\nDESTIN_GRID_ID1397 -1.4807556  0.0566947   -26.118  < 2e-16 ***\nDESTIN_GRID_ID1398 -1.7487290  0.0580777   -30.110  < 2e-16 ***\nDESTIN_GRID_ID1400 -2.2290926  0.0571990   -38.971  < 2e-16 ***\nDESTIN_GRID_ID1401 -0.4882436  0.0561243    -8.699  < 2e-16 ***\nDESTIN_GRID_ID1402 -1.2149066  0.0563081   -21.576  < 2e-16 ***\nDESTIN_GRID_ID1404 -1.8917759  0.0619350   -30.545  < 2e-16 ***\nDESTIN_GRID_ID1410 -0.0009718  0.0562397    -0.017 0.986213    \nDESTIN_GRID_ID1411 -0.4239504  0.0565598    -7.496 6.60e-14 ***\nDESTIN_GRID_ID1412  0.1317093  0.0561818     2.344 0.019061 *  \nDESTIN_GRID_ID1413 -0.5240100  0.0564109    -9.289  < 2e-16 ***\nDESTIN_GRID_ID1414 -0.5897569  0.0563292   -10.470  < 2e-16 ***\nDESTIN_GRID_ID1415 -0.3048837  0.0562788    -5.417 6.05e-08 ***\nDESTIN_GRID_ID1416 -0.8467235  0.0564766   -14.992  < 2e-16 ***\nDESTIN_GRID_ID1417 -0.6773493  0.0562741   -12.037  < 2e-16 ***\nDESTIN_GRID_ID1418 -0.7729427  0.0563188   -13.724  < 2e-16 ***\nDESTIN_GRID_ID1419 -1.1073137  0.0565477   -19.582  < 2e-16 ***\nDESTIN_GRID_ID1422 -1.5938051  0.0563860   -28.266  < 2e-16 ***\nDESTIN_GRID_ID1423 -1.1105984  0.0562944   -19.728  < 2e-16 ***\nDESTIN_GRID_ID1430  0.2283646  0.0562506     4.060 4.91e-05 ***\nDESTIN_GRID_ID1431  0.4990108  0.0561450     8.888  < 2e-16 ***\nDESTIN_GRID_ID1432  0.2135470  0.0561585     3.803 0.000143 ***\nDESTIN_GRID_ID1433 -0.6528942  0.0568942   -11.476  < 2e-16 ***\nDESTIN_GRID_ID1434  0.3227479  0.0561593     5.747 9.08e-09 ***\nDESTIN_GRID_ID1435 -0.2265605  0.0562029    -4.031 5.55e-05 ***\nDESTIN_GRID_ID1436 -1.5437749  0.0570633   -27.054  < 2e-16 ***\nDESTIN_GRID_ID1437 -0.9315129  0.0564035   -16.515  < 2e-16 ***\nDESTIN_GRID_ID1438 -0.4321235  0.0561737    -7.693 1.44e-14 ***\nDESTIN_GRID_ID1439  0.3953123  0.0561093     7.045 1.85e-12 ***\nDESTIN_GRID_ID1440 -0.4629855  0.0564584    -8.200 2.39e-16 ***\nDESTIN_GRID_ID1442 -3.4994151  0.0594307   -58.882  < 2e-16 ***\nDESTIN_GRID_ID1443 -1.5163102  0.0563694   -26.900  < 2e-16 ***\nDESTIN_GRID_ID1444 -0.4788331  0.0563774    -8.493  < 2e-16 ***\nDESTIN_GRID_ID1452  0.9266210  0.0560856    16.522  < 2e-16 ***\nDESTIN_GRID_ID1453 -0.0533479  0.0562841    -0.948 0.343214    \nDESTIN_GRID_ID1454 -1.0656983  0.0574922   -18.536  < 2e-16 ***\nDESTIN_GRID_ID1455 -0.4472133  0.0564955    -7.916 2.45e-15 ***\nDESTIN_GRID_ID1456 -0.4868587  0.0563386    -8.642  < 2e-16 ***\nDESTIN_GRID_ID1457  0.0589720  0.0562086     1.049 0.294103    \nDESTIN_GRID_ID1458  0.9898239  0.0560540    17.658  < 2e-16 ***\nDESTIN_GRID_ID1459 -1.7974853  0.0567280   -31.686  < 2e-16 ***\nDESTIN_GRID_ID1460 -0.6096443  0.0561993   -10.848  < 2e-16 ***\nDESTIN_GRID_ID1461 -0.6872087  0.0564413   -12.176  < 2e-16 ***\nDESTIN_GRID_ID1464 -1.6204356  0.0565117   -28.674  < 2e-16 ***\nDESTIN_GRID_ID1465 -2.5452261  0.0573380   -44.390  < 2e-16 ***\nDESTIN_GRID_ID1472 -0.1432334  0.0565364    -2.533 0.011294 *  \nDESTIN_GRID_ID1473  0.7272539  0.0561232    12.958  < 2e-16 ***\nDESTIN_GRID_ID1474  0.4292917  0.0561106     7.651 2.00e-14 ***\nDESTIN_GRID_ID1475 -0.0038629  0.0562030    -0.069 0.945203    \nDESTIN_GRID_ID1476 -0.8527908  0.0565243   -15.087  < 2e-16 ***\nDESTIN_GRID_ID1477  0.8775866  0.0560465    15.658  < 2e-16 ***\nDESTIN_GRID_ID1478 -0.7021859  0.0562595   -12.481  < 2e-16 ***\nDESTIN_GRID_ID1479 -1.4706072  0.0565147   -26.022  < 2e-16 ***\nDESTIN_GRID_ID1480  0.7411403  0.0560534    13.222  < 2e-16 ***\nDESTIN_GRID_ID1481 -0.9387362  0.0564524   -16.629  < 2e-16 ***\nDESTIN_GRID_ID1482  0.2512082  0.0562343     4.467 7.93e-06 ***\nDESTIN_GRID_ID1485 -2.9470635  0.0577208   -51.057  < 2e-16 ***\nDESTIN_GRID_ID1494  0.5556617  0.0561667     9.893  < 2e-16 ***\nDESTIN_GRID_ID1495 -0.4186694  0.0563618    -7.428 1.10e-13 ***\nDESTIN_GRID_ID1496  0.3874791  0.0561216     6.904 5.05e-12 ***\nDESTIN_GRID_ID1497 -0.9130047  0.0565917   -16.133  < 2e-16 ***\nDESTIN_GRID_ID1498 -0.7721436  0.0564215   -13.685  < 2e-16 ***\nDESTIN_GRID_ID1499 -0.5024442  0.0561945    -8.941  < 2e-16 ***\nDESTIN_GRID_ID1500 -0.8005770  0.0566520   -14.131  < 2e-16 ***\nDESTIN_GRID_ID1501 -0.1748231  0.0561380    -3.114 0.001845 ** \nDESTIN_GRID_ID1502 -0.3362150  0.0561761    -5.985 2.16e-09 ***\nDESTIN_GRID_ID1506 -3.1937028  0.0885169   -36.080  < 2e-16 ***\nDESTIN_GRID_ID1515 -0.3522286  0.0579455    -6.079 1.21e-09 ***\nDESTIN_GRID_ID1516  0.4614424  0.0561177     8.223  < 2e-16 ***\nDESTIN_GRID_ID1517 -0.4434976  0.0564735    -7.853 4.06e-15 ***\nDESTIN_GRID_ID1518 -1.2541708  0.0566980   -22.120  < 2e-16 ***\nDESTIN_GRID_ID1519 -1.1068633  0.0566969   -19.522  < 2e-16 ***\nDESTIN_GRID_ID1520 -1.2737127  0.0564660   -22.557  < 2e-16 ***\nDESTIN_GRID_ID1521 -1.2197456  0.0565024   -21.587  < 2e-16 ***\nDESTIN_GRID_ID1522 -0.6325252  0.0562492   -11.245  < 2e-16 ***\nDESTIN_GRID_ID1523  0.7462053  0.0561883    13.280  < 2e-16 ***\nDESTIN_GRID_ID1524 -1.6785625  0.0574741   -29.206  < 2e-16 ***\nDESTIN_GRID_ID1527 -4.2477447  0.0668694   -63.523  < 2e-16 ***\nDESTIN_GRID_ID1535 -0.8075723  0.0907256    -8.901  < 2e-16 ***\nDESTIN_GRID_ID1536 -1.8565644  0.0634253   -29.272  < 2e-16 ***\nDESTIN_GRID_ID1537  0.0079073  0.0563749     0.140 0.888452    \nDESTIN_GRID_ID1538 -0.2546563  0.0562808    -4.525 6.05e-06 ***\nDESTIN_GRID_ID1539 -0.3036225  0.0562139    -5.401 6.62e-08 ***\nDESTIN_GRID_ID1540 -1.0105542  0.0563701   -17.927  < 2e-16 ***\nDESTIN_GRID_ID1541 -0.2492053  0.0565718    -4.405 1.06e-05 ***\nDESTIN_GRID_ID1542 -1.0032325  0.0567731   -17.671  < 2e-16 ***\nDESTIN_GRID_ID1543 -1.4649376  0.0631188   -23.209  < 2e-16 ***\nDESTIN_GRID_ID1544 -1.2510803  0.0568373   -22.012  < 2e-16 ***\nDESTIN_GRID_ID1547 -1.9046758  0.0580091   -32.834  < 2e-16 ***\nDESTIN_GRID_ID1556 -0.8299099  0.0924578    -8.976  < 2e-16 ***\nDESTIN_GRID_ID1557 -1.4877418  0.0599512   -24.816  < 2e-16 ***\nDESTIN_GRID_ID1558 -0.3812578  0.0576860    -6.609 3.86e-11 ***\nDESTIN_GRID_ID1559  0.2568606  0.0561412     4.575 4.76e-06 ***\nDESTIN_GRID_ID1560  0.2285186  0.0561302     4.071 4.68e-05 ***\nDESTIN_GRID_ID1561 -0.6469253  0.0564434   -11.461  < 2e-16 ***\nDESTIN_GRID_ID1562 -2.5931596  0.0584815   -44.342  < 2e-16 ***\nDESTIN_GRID_ID1563 -1.7848950  0.0568657   -31.388  < 2e-16 ***\nDESTIN_GRID_ID1564 -1.3914700  0.0566435   -24.565  < 2e-16 ***\nDESTIN_GRID_ID1565 -0.7999643  0.0563626   -14.193  < 2e-16 ***\nDESTIN_GRID_ID1566 -2.6013038  0.0585933   -44.396  < 2e-16 ***\nDESTIN_GRID_ID1567 -2.4443531  0.0589217   -41.485  < 2e-16 ***\nDESTIN_GRID_ID1568 -1.3997901  0.0571819   -24.480  < 2e-16 ***\nDESTIN_GRID_ID1578 -1.3317668  0.1247783   -10.673  < 2e-16 ***\nDESTIN_GRID_ID1580 -2.6312253  0.0633130   -41.559  < 2e-16 ***\nDESTIN_GRID_ID1581 -0.2057464  0.0562240    -3.659 0.000253 ***\nDESTIN_GRID_ID1582 -0.0366758  0.0561412    -0.653 0.513576    \nDESTIN_GRID_ID1583 -1.9573537  0.0602887   -32.466  < 2e-16 ***\nDESTIN_GRID_ID1584 -1.6683357  0.0574309   -29.049  < 2e-16 ***\nDESTIN_GRID_ID1585 -1.3375310  0.0567300   -23.577  < 2e-16 ***\nDESTIN_GRID_ID1586 -0.5228187  0.0562644    -9.292  < 2e-16 ***\nDESTIN_GRID_ID1589 -2.8095635  0.0603241   -46.574  < 2e-16 ***\nDESTIN_GRID_ID1590 -1.5912652  0.0576689   -27.593  < 2e-16 ***\nDESTIN_GRID_ID1600 -0.7719995  0.0583734   -13.225  < 2e-16 ***\nDESTIN_GRID_ID1601 -1.1343975  0.0565247   -20.069  < 2e-16 ***\nDESTIN_GRID_ID1602 -0.8012356  0.0564654   -14.190  < 2e-16 ***\nDESTIN_GRID_ID1603  0.3253909  0.0561394     5.796 6.79e-09 ***\nDESTIN_GRID_ID1604 -1.9584876  0.0571334   -34.279  < 2e-16 ***\nDESTIN_GRID_ID1605 -0.9184125  0.0563231   -16.306  < 2e-16 ***\nDESTIN_GRID_ID1606 -1.7694531  0.0580690   -30.472  < 2e-16 ***\nDESTIN_GRID_ID1607 -0.3420117  0.0561627    -6.090 1.13e-09 ***\nDESTIN_GRID_ID1608 -1.1995027  0.0564174   -21.261  < 2e-16 ***\nDESTIN_GRID_ID1609 -0.4067396  0.0562434    -7.232 4.77e-13 ***\nDESTIN_GRID_ID1610 -2.5602787  0.0625845   -40.909  < 2e-16 ***\nDESTIN_GRID_ID1622 -0.5307141  0.0574529    -9.237  < 2e-16 ***\nDESTIN_GRID_ID1623 -0.0941558  0.0561634    -1.676 0.093648 .  \nDESTIN_GRID_ID1624  0.4629904  0.0561303     8.248  < 2e-16 ***\nDESTIN_GRID_ID1625 -0.4570430  0.0563072    -8.117 4.78e-16 ***\nDESTIN_GRID_ID1626  1.2170957  0.0560377    21.719  < 2e-16 ***\nDESTIN_GRID_ID1627 -1.8811894  0.0567651   -33.140  < 2e-16 ***\nDESTIN_GRID_ID1628  0.1426169  0.0561152     2.542 0.011038 *  \nDESTIN_GRID_ID1629 -2.9468920  0.0582788   -50.565  < 2e-16 ***\nDESTIN_GRID_ID1630 -2.5444327  0.0574015   -44.327  < 2e-16 ***\nDESTIN_GRID_ID1631 -2.7063910  0.0588246   -46.008  < 2e-16 ***\nDESTIN_GRID_ID1642 -2.8422322  0.0654119   -43.451  < 2e-16 ***\nDESTIN_GRID_ID1643 -0.5850771  0.0563283   -10.387  < 2e-16 ***\nDESTIN_GRID_ID1644 -0.5786860  0.0565944   -10.225  < 2e-16 ***\nDESTIN_GRID_ID1645 -0.7519588  0.0563930   -13.334  < 2e-16 ***\nDESTIN_GRID_ID1646 -0.4625165  0.0565860    -8.174 2.99e-16 ***\nDESTIN_GRID_ID1647 -1.2365808  0.0563769   -21.934  < 2e-16 ***\nDESTIN_GRID_ID1648 -1.1033626  0.0563011   -19.598  < 2e-16 ***\nDESTIN_GRID_ID1649 -0.5813824  0.0561639   -10.352  < 2e-16 ***\nDESTIN_GRID_ID1650 -1.5115035  0.0565587   -26.724  < 2e-16 ***\nDESTIN_GRID_ID1664 -5.0505052  0.1428160   -35.364  < 2e-16 ***\nDESTIN_GRID_ID1665  0.0158901  0.0561500     0.283 0.777181    \nDESTIN_GRID_ID1666  0.0577189  0.0561440     1.028 0.303926    \nDESTIN_GRID_ID1667 -0.6540740  0.0578912   -11.298  < 2e-16 ***\nDESTIN_GRID_ID1668 -1.2237500  0.0564655   -21.673  < 2e-16 ***\nDESTIN_GRID_ID1670 -0.7326496  0.0561840   -13.040  < 2e-16 ***\nDESTIN_GRID_ID1671 -1.3128145  0.0573097   -22.907  < 2e-16 ***\nDESTIN_GRID_ID1672 -2.3117827  0.0575291   -40.185  < 2e-16 ***\nDESTIN_GRID_ID1684 -0.2525194  0.0567523    -4.449 8.61e-06 ***\nDESTIN_GRID_ID1685 -1.4936332  0.0568481   -26.274  < 2e-16 ***\nDESTIN_GRID_ID1686 -0.6041017  0.0563027   -10.730  < 2e-16 ***\nDESTIN_GRID_ID1687 -0.3463669  0.0564337    -6.138 8.38e-10 ***\nDESTIN_GRID_ID1688 -1.1541720  0.0564644   -20.441  < 2e-16 ***\nDESTIN_GRID_ID1689 -1.9162282  0.0569737   -33.634  < 2e-16 ***\nDESTIN_GRID_ID1690 -2.6258444  0.0577365   -45.480  < 2e-16 ***\nDESTIN_GRID_ID1691 -0.6372082  0.0561745   -11.343  < 2e-16 ***\nDESTIN_GRID_ID1692 -2.7295869  0.0580745   -47.001  < 2e-16 ***\nDESTIN_GRID_ID1706 -0.7213099  0.0565873   -12.747  < 2e-16 ***\nDESTIN_GRID_ID1707 -1.5162920  0.0566952   -26.745  < 2e-16 ***\nDESTIN_GRID_ID1708 -0.9197583  0.0564059   -16.306  < 2e-16 ***\nDESTIN_GRID_ID1709 -0.1623875  0.0561933    -2.890 0.003855 ** \nDESTIN_GRID_ID1710 -0.3449991  0.0562248    -6.136 8.46e-10 ***\nDESTIN_GRID_ID1711  0.1148760  0.0561152     2.047 0.040644 *  \nDESTIN_GRID_ID1712 -0.8012884  0.0561873   -14.261  < 2e-16 ***\nDESTIN_GRID_ID1713 -3.1775767  0.0584388   -54.374  < 2e-16 ***\nDESTIN_GRID_ID1714 -1.8678712  0.0567284   -32.927  < 2e-16 ***\nDESTIN_GRID_ID1727 -0.2392986  0.0562932    -4.251 2.13e-05 ***\nDESTIN_GRID_ID1728 -0.2182195  0.0561916    -3.883 0.000103 ***\nDESTIN_GRID_ID1729 -0.1080958  0.0561681    -1.925 0.054291 .  \nDESTIN_GRID_ID1730 -1.0988256  0.0566331   -19.403  < 2e-16 ***\nDESTIN_GRID_ID1731 -0.2765625  0.0561834    -4.922 8.54e-07 ***\nDESTIN_GRID_ID1732 -0.9576790  0.0562249   -17.033  < 2e-16 ***\nDESTIN_GRID_ID1733 -2.1257355  0.0566991   -37.491  < 2e-16 ***\nDESTIN_GRID_ID1734 -0.9176593  0.0562206   -16.322  < 2e-16 ***\nDESTIN_GRID_ID1735 -1.7634137  0.0583526   -30.220  < 2e-16 ***\nDESTIN_GRID_ID1748 -1.2815920  0.0568306   -22.551  < 2e-16 ***\nDESTIN_GRID_ID1749 -0.0846258  0.0561529    -1.507 0.131795    \nDESTIN_GRID_ID1750 -0.1015886  0.0561646    -1.809 0.070488 .  \nDESTIN_GRID_ID1751 -0.5491641  0.0563599    -9.744  < 2e-16 ***\nDESTIN_GRID_ID1753 -0.3839534  0.0561824    -6.834 8.25e-12 ***\nDESTIN_GRID_ID1754  0.4581878  0.0560575     8.174 3.00e-16 ***\nDESTIN_GRID_ID1755 -0.3376096  0.0561126    -6.017 1.78e-09 ***\nDESTIN_GRID_ID1756 -1.4143677  0.0563141   -25.116  < 2e-16 ***\nDESTIN_GRID_ID1757 -3.7105091  0.0606581   -61.171  < 2e-16 ***\nDESTIN_GRID_ID1769 -0.5480300  0.0563451    -9.726  < 2e-16 ***\nDESTIN_GRID_ID1770 -0.8141407  0.0566426   -14.373  < 2e-16 ***\nDESTIN_GRID_ID1771 -0.0151404  0.0562424    -0.269 0.787777    \nDESTIN_GRID_ID1772  1.0894845  0.0564628    19.296  < 2e-16 ***\nDESTIN_GRID_ID1774 -1.5350428  0.0564650   -27.186  < 2e-16 ***\nDESTIN_GRID_ID1775 -1.9571028  0.0565803   -34.590  < 2e-16 ***\nDESTIN_GRID_ID1776  0.2338752  0.0560669     4.171 3.03e-05 ***\nDESTIN_GRID_ID1777 -1.9401201  0.0565585   -34.303  < 2e-16 ***\nDESTIN_GRID_ID1778 -2.8691781  0.0605517   -47.384  < 2e-16 ***\nDESTIN_GRID_ID1790 -0.0130180  0.0562617    -0.231 0.817018    \nDESTIN_GRID_ID1791 -0.6760947  0.0564001   -11.987  < 2e-16 ***\nDESTIN_GRID_ID1792 -0.3916131  0.0564887    -6.933 4.13e-12 ***\nDESTIN_GRID_ID1793 -0.4101186  0.0563109    -7.283 3.26e-13 ***\nDESTIN_GRID_ID1794  1.4019396  0.0565021    24.812  < 2e-16 ***\nDESTIN_GRID_ID1795 -2.8587225  0.0599622   -47.675  < 2e-16 ***\nDESTIN_GRID_ID1796 -0.8668181  0.0562598   -15.407  < 2e-16 ***\nDESTIN_GRID_ID1797 -1.2938850  0.0562880   -22.987  < 2e-16 ***\nDESTIN_GRID_ID1798 -1.2151999  0.0562592   -21.600  < 2e-16 ***\nDESTIN_GRID_ID1799 -2.1646019  0.0568101   -38.102  < 2e-16 ***\nDESTIN_GRID_ID1800 -4.2838114  0.0860409   -49.788  < 2e-16 ***\nDESTIN_GRID_ID1811 -1.0537780  0.0566797   -18.592  < 2e-16 ***\nDESTIN_GRID_ID1812  0.3848652  0.0560969     6.861 6.85e-12 ***\nDESTIN_GRID_ID1813  0.6162226  0.0560849    10.987  < 2e-16 ***\nDESTIN_GRID_ID1817 -2.7036680  0.0577275   -46.835  < 2e-16 ***\nDESTIN_GRID_ID1818 -1.6075036  0.0563238   -28.540  < 2e-16 ***\nDESTIN_GRID_ID1819  0.0617289  0.0560815     1.101 0.271028    \nDESTIN_GRID_ID1820 -4.6282323  0.0758112   -61.049  < 2e-16 ***\nDESTIN_GRID_ID1832  0.1606066  0.0561946     2.858 0.004263 ** \nDESTIN_GRID_ID1833 -1.0937429  0.0565078   -19.356  < 2e-16 ***\nDESTIN_GRID_ID1834 -1.0764524  0.0564304   -19.076  < 2e-16 ***\nDESTIN_GRID_ID1835 -0.9856791  0.0565354   -17.435  < 2e-16 ***\nDESTIN_GRID_ID1837 -1.1248297  0.0577602   -19.474  < 2e-16 ***\nDESTIN_GRID_ID1839 -2.7767471  0.0576561   -48.160  < 2e-16 ***\nDESTIN_GRID_ID1840  0.1371328  0.0560917     2.445 0.014493 *  \nDESTIN_GRID_ID1841 -3.7681136  0.0627643   -60.036  < 2e-16 ***\nDESTIN_GRID_ID1842 -1.2528831  0.0589110   -21.267  < 2e-16 ***\nDESTIN_GRID_ID1853 -0.5788568  0.0563128   -10.279  < 2e-16 ***\nDESTIN_GRID_ID1854 -0.4160452  0.0562603    -7.395 1.41e-13 ***\nDESTIN_GRID_ID1855 -0.0191852  0.0561897    -0.341 0.732776    \nDESTIN_GRID_ID1858  0.0414177  0.0566256     0.731 0.464516    \nDESTIN_GRID_ID1860 -2.1310973  0.0602292   -35.383  < 2e-16 ***\nDESTIN_GRID_ID1861 -1.3952244  0.0563434   -24.763  < 2e-16 ***\nDESTIN_GRID_ID1874 -1.0855100  0.0569935   -19.046  < 2e-16 ***\nDESTIN_GRID_ID1875 -2.8574722  0.0608777   -46.938  < 2e-16 ***\nDESTIN_GRID_ID1876 -1.5313718  0.0612441   -25.004  < 2e-16 ***\nDESTIN_GRID_ID1877 -0.2312845  0.0562271    -4.113 3.90e-05 ***\nDESTIN_GRID_ID1880 -0.8847918  0.0577689   -15.316  < 2e-16 ***\nDESTIN_GRID_ID1882 -1.4881091  0.0563970   -26.386  < 2e-16 ***\nDESTIN_GRID_ID1883 -2.6017954  0.0600900   -43.298  < 2e-16 ***\nDESTIN_GRID_ID1895 -0.1139929  0.0562323    -2.027 0.042644 *  \nDESTIN_GRID_ID1896 -1.2466086  0.0565832   -22.031  < 2e-16 ***\nDESTIN_GRID_ID1897 -2.0829288  0.0575077   -36.220  < 2e-16 ***\nDESTIN_GRID_ID1898 -2.4278095  0.0615841   -39.423  < 2e-16 ***\nDESTIN_GRID_ID1901 -1.4093963  0.0596240   -23.638  < 2e-16 ***\nDESTIN_GRID_ID1903 -3.0379875  0.0592725   -51.255  < 2e-16 ***\nDESTIN_GRID_ID1917 -1.4581742  0.0568565   -25.647  < 2e-16 ***\nDESTIN_GRID_ID1918 -0.2412144  0.0564184    -4.275 1.91e-05 ***\nDESTIN_GRID_ID1919 -0.1151776  0.0562051    -2.049 0.040439 *  \nDESTIN_GRID_ID1922 -0.1789836  0.0570040    -3.140 0.001690 ** \nDESTIN_GRID_ID1924 -3.2785666  0.0608948   -53.840  < 2e-16 ***\nDESTIN_GRID_ID1937 -0.7695804  0.0565468   -13.610  < 2e-16 ***\nDESTIN_GRID_ID1938 -0.0194693  0.0561885    -0.346 0.728968    \nDESTIN_GRID_ID1939 -1.3027496  0.0567805   -22.944  < 2e-16 ***\nDESTIN_GRID_ID1942 -1.5342346  0.0591851   -25.923  < 2e-16 ***\nDESTIN_GRID_ID1959 -1.2667483  0.0569344   -22.249  < 2e-16 ***\nDESTIN_GRID_ID1960  1.0856630  0.0560463    19.371  < 2e-16 ***\nDESTIN_GRID_ID1961 -1.4236741  0.0569174   -25.013  < 2e-16 ***\nDESTIN_GRID_ID1962 -0.6072145  0.0563446   -10.777  < 2e-16 ***\nDESTIN_GRID_ID1964  0.1040360  0.0571538     1.820 0.068716 .  \nDESTIN_GRID_ID1979 -0.7365231  0.0566393   -13.004  < 2e-16 ***\nDESTIN_GRID_ID1980 -1.0450805  0.0564471   -18.514  < 2e-16 ***\nDESTIN_GRID_ID1981 -1.0952301  0.0565034   -19.383  < 2e-16 ***\nDESTIN_GRID_ID1982 -0.6022679  0.0565705   -10.646  < 2e-16 ***\nDESTIN_GRID_ID1983 -0.7476838  0.0563617   -13.266  < 2e-16 ***\nDESTIN_GRID_ID1984 -0.5719567  0.0563455   -10.151  < 2e-16 ***\nDESTIN_GRID_ID1985 -0.4486702  0.0563039    -7.969 1.60e-15 ***\nDESTIN_GRID_ID2001 -0.7559197  0.0564254   -13.397  < 2e-16 ***\nDESTIN_GRID_ID2002 -0.7571133  0.0562718   -13.455  < 2e-16 ***\nDESTIN_GRID_ID2003 -0.0957418  0.0561797    -1.704 0.088343 .  \nDESTIN_GRID_ID2004  0.0613884  0.0561709     1.093 0.274444    \nDESTIN_GRID_ID2005 -0.9289575  0.0564119   -16.467  < 2e-16 ***\nDESTIN_GRID_ID2006 -0.0196718  0.0562031    -0.350 0.726329    \nDESTIN_GRID_ID2007 -3.4532271  0.0650393   -53.094  < 2e-16 ***\nDESTIN_GRID_ID2022 -0.2413019  0.0564255    -4.276 1.90e-05 ***\nDESTIN_GRID_ID2023 -0.2385955  0.0562068    -4.245 2.19e-05 ***\nDESTIN_GRID_ID2024  0.0888361  0.0561369     1.582 0.113537    \nDESTIN_GRID_ID2025 -1.3189647  0.0564564   -23.363  < 2e-16 ***\nDESTIN_GRID_ID2026 -1.9836986  0.0574439   -34.533  < 2e-16 ***\nDESTIN_GRID_ID2027  0.0794034  0.0561736     1.414 0.157498    \nDESTIN_GRID_ID2043 -1.6939575  0.0573789   -29.522  < 2e-16 ***\nDESTIN_GRID_ID2044 -0.7416333  0.0563421   -13.163  < 2e-16 ***\nDESTIN_GRID_ID2045 -1.3486263  0.0573681   -23.508  < 2e-16 ***\nDESTIN_GRID_ID2046  0.0101104  0.0561227     0.180 0.857037    \nDESTIN_GRID_ID2047 -1.9129633  0.0569345   -33.599  < 2e-16 ***\nDESTIN_GRID_ID2048 -1.6345858  0.0567824   -28.787  < 2e-16 ***\nDESTIN_GRID_ID2049 -3.3672837  0.0637015   -52.860  < 2e-16 ***\nDESTIN_GRID_ID2064 -0.8558199  0.0564985   -15.148  < 2e-16 ***\nDESTIN_GRID_ID2065 -0.9830578  0.0564898   -17.402  < 2e-16 ***\nDESTIN_GRID_ID2066 -3.3265093  0.0676845   -49.147  < 2e-16 ***\nDESTIN_GRID_ID2067  1.5571567  0.0560353    27.789  < 2e-16 ***\nDESTIN_GRID_ID2068 -2.0045872  0.0580700   -34.520  < 2e-16 ***\nDESTIN_GRID_ID2069 -1.4433907  0.0567768   -25.422  < 2e-16 ***\nDESTIN_GRID_ID2085 -0.6616652  0.0565107   -11.709  < 2e-16 ***\nDESTIN_GRID_ID2086  0.6503283  0.0561269    11.587  < 2e-16 ***\nDESTIN_GRID_ID2087  0.3418799  0.0561442     6.089 1.13e-09 ***\nDESTIN_GRID_ID2088 -0.9151385  0.0563215   -16.248  < 2e-16 ***\nDESTIN_GRID_ID2089 -1.3927175  0.0567872   -24.525  < 2e-16 ***\nDESTIN_GRID_ID2090  1.2511807  0.0560550    22.321  < 2e-16 ***\nDESTIN_GRID_ID2091 -4.1458338  0.0905430   -45.789  < 2e-16 ***\nDESTIN_GRID_ID2105 -1.5215766  0.0870270   -17.484  < 2e-16 ***\nDESTIN_GRID_ID2106 -2.2032182  0.0581588   -37.883  < 2e-16 ***\nDESTIN_GRID_ID2107  0.5208126  0.0561288     9.279  < 2e-16 ***\nDESTIN_GRID_ID2108  0.1179298  0.0562113     2.098 0.035908 *  \nDESTIN_GRID_ID2109 -1.3567547  0.0564672   -24.027  < 2e-16 ***\nDESTIN_GRID_ID2110 -2.0168760  0.0573908   -35.143  < 2e-16 ***\nDESTIN_GRID_ID2111 -3.1899384  0.0667285   -47.805  < 2e-16 ***\nDESTIN_GRID_ID2128 -0.4609520  0.0566543    -8.136 4.08e-16 ***\nDESTIN_GRID_ID2129 -0.7918493  0.0570905   -13.870  < 2e-16 ***\nDESTIN_GRID_ID2130 -0.7544877  0.0563009   -13.401  < 2e-16 ***\nDESTIN_GRID_ID2131 -0.7887161  0.0565354   -13.951  < 2e-16 ***\nDESTIN_GRID_ID2132 -1.3675025  0.0566324   -24.147  < 2e-16 ***\nDESTIN_GRID_ID2148 -1.3925651  0.0584883   -23.809  < 2e-16 ***\nDESTIN_GRID_ID2149 -1.3470784  0.0571891   -23.555  < 2e-16 ***\nDESTIN_GRID_ID2150 -1.1519052  0.0567867   -20.285  < 2e-16 ***\nDESTIN_GRID_ID2151  0.6812585  0.0560839    12.147  < 2e-16 ***\nDESTIN_GRID_ID2152 -0.3767310  0.0562759    -6.694 2.17e-11 ***\nDESTIN_GRID_ID2153 -1.6570550  0.0573799   -28.879  < 2e-16 ***\nDESTIN_GRID_ID2171 -0.1614541  0.0563139    -2.867 0.004143 ** \nDESTIN_GRID_ID2172 -1.8136799  0.0573164   -31.643  < 2e-16 ***\nDESTIN_GRID_ID2173 -1.3600508  0.0565434   -24.053  < 2e-16 ***\nDESTIN_GRID_ID2174 -0.6597185  0.0564178   -11.693  < 2e-16 ***\nDESTIN_GRID_ID2191  0.0349026  0.0566418     0.616 0.537763    \nDESTIN_GRID_ID2192 -1.1757185  0.0571779   -20.562  < 2e-16 ***\nDESTIN_GRID_ID2193 -0.4855241  0.0563887    -8.610  < 2e-16 ***\nDESTIN_GRID_ID2194 -0.5772496  0.0563220   -10.249  < 2e-16 ***\nDESTIN_GRID_ID2195 -2.6357737  0.0695588   -37.893  < 2e-16 ***\nDESTIN_GRID_ID2212  0.3924103  0.0577911     6.790 1.12e-11 ***\nDESTIN_GRID_ID2213 -0.2740086  0.0567490    -4.828 1.38e-06 ***\nDESTIN_GRID_ID2214  0.6264175  0.0565157    11.084  < 2e-16 ***\nDESTIN_GRID_ID2215 -1.1816434  0.0569526   -20.748  < 2e-16 ***\nDESTIN_GRID_ID2216 -0.2350392  0.0563390    -4.172 3.02e-05 ***\nDESTIN_GRID_ID2233  0.5420208  0.0569699     9.514  < 2e-16 ***\nDESTIN_GRID_ID2234  1.1527985  0.0566628    20.345  < 2e-16 ***\nDESTIN_GRID_ID2235 -0.2339333  0.0568109    -4.118 3.83e-05 ***\nDESTIN_GRID_ID2236 -1.6835103  0.0577471   -29.153  < 2e-16 ***\nDESTIN_GRID_ID2237 -0.1584374  0.0572522    -2.767 0.005651 ** \nDESTIN_GRID_ID2256  0.0121830  0.0574721     0.212 0.832122    \nDESTIN_GRID_ID2257 -2.5505370  0.0633050   -40.290  < 2e-16 ***\nDESTIN_GRID_ID2258 -0.4115031  0.0564954    -7.284 3.24e-13 ***\nDESTIN_GRID_ID2259  0.6279892  0.0570194    11.014  < 2e-16 ***\nDESTIN_GRID_ID2277 -1.2173962  0.0620223   -19.628  < 2e-16 ***\nDESTIN_GRID_ID2278 -1.0456064  0.0586792   -17.819  < 2e-16 ***\nDESTIN_GRID_ID2279 -0.2190166  0.0565184    -3.875 0.000107 ***\nDESTIN_GRID_ID2280 -1.5661497  0.0658190   -23.795  < 2e-16 ***\nDESTIN_GRID_ID2297 -1.5180290  0.0597704   -25.398  < 2e-16 ***\nDESTIN_GRID_ID2300 -1.2084605  0.0598413   -20.194  < 2e-16 ***\nDESTIN_GRID_ID2301 -0.5177263  0.0569144    -9.097  < 2e-16 ***\nDESTIN_GRID_ID2318  0.8559589  0.0562935    15.205  < 2e-16 ***\nDESTIN_GRID_ID2319  0.7832506  0.0562798    13.917  < 2e-16 ***\nDESTIN_GRID_ID2322 -0.2353616  0.0569073    -4.136 3.54e-05 ***\nDESTIN_GRID_ID2337  0.1632978  0.0597609     2.733 0.006285 ** \nDESTIN_GRID_ID2341  1.0071028  0.0562664    17.899  < 2e-16 ***\nDESTIN_GRID_ID2343 -1.0978315  0.0577979   -18.994  < 2e-16 ***\nDESTIN_GRID_ID2361 -0.2505527  0.0568763    -4.405 1.06e-05 ***\nDESTIN_GRID_ID2364 -2.3271081  0.0667987   -34.838  < 2e-16 ***\nDESTIN_GRID_ID2379 -1.0610675  0.0631045   -16.814  < 2e-16 ***\nDESTIN_GRID_ID2384  0.8417938  0.0564273    14.918  < 2e-16 ***\nDESTIN_GRID_ID2405  1.6147145  0.0562218    28.720  < 2e-16 ***\nDESTIN_GRID_ID2406 -1.4182461  0.0610475   -23.232  < 2e-16 ***\nDESTIN_GRID_ID2426  1.0411268  0.0571498    18.218  < 2e-16 ***\nDESTIN_GRID_ID2427  1.3042126  0.0564316    23.111  < 2e-16 ***\nDESTIN_GRID_ID2505  0.7588019  0.0596962    12.711  < 2e-16 ***\nlog(dist)          -1.5867425  0.0003232 -4910.023  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 80378356  on 62117  degrees of freedom\nResidual deviance: 20588400  on 60483  degrees of freedom\nAIC: 20927016\n\nNumber of Fisher Scoring iterations: 9"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#conclusion-and-limitations",
    "href": "Take-home_Ex2/Take-home_Ex2.html#conclusion-and-limitations",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Conclusion and limitations",
    "text": "Conclusion and limitations\nFour Spatial Interaction Models were built and compared to find out the important factors influencing the commuter flow in the Weekday Morning peak period. The R-squared values for the UNC, ORC, DEC and DBC models are 0.24, 0.38, 0.37 and 0.59 respectively. From the UNC and ORC models, the significant factors affecting commuter flow are distance (negative relationship), destination MRT station exits count and destination school count (in order of highest influence first). From the DEC model, the significant factors are distance and 5room flat dwellers count.\nWhen the outliers were removed, the R-squared value of the new DBC model increased to 0.61. Possible reason why the model could not predict flow of bus stops near Woodlands Checkpoint region could be that the number of people commuting between JB and Singapore daily for work purpose is really too huge and concentrated over Woodlands. We are also lacking the work opportunities information in JB side for model to predict properly.\nWith the models created, possible ‘what-if’ scenarios can be simulated; take for instance what if there are new MRT stations / development of a new residential town in the future? The models could predict new flows patterns and assist transport authority to plan ahead.\nLimitations of this exercise would include:\n\nThe Passenger Volume by Origin Destination Bus Stops data used do not included any transfer trip information. With our attractive and propulsive attributes, we can only assume that passengers take only 1 bus trip from source to their intended destination. With the inclusion of the MRT train station exits locations, we factor in the possibility of passenger commuting to MRT station for transfer.\nThe population density distribution of Residents could only be estimated from the HDB.csv and not directly taken from the Resident Distribution by single age and subzone dataset because we have reduced our basic spatial unit to 750m hexagons instead of subzone (to reduce social-economic and spatial aggregation errors). Now, each hexagon could have a mix of 7 subzones inside it, thus use of Resident Distribution by single age and subzone dataset is inappropriate (otherwise we could have achieved better results)."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#acknowledgement",
    "href": "Take-home_Ex2/Take-home_Ex2.html#acknowledgement",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "Acknowledgement",
    "text": "Acknowledgement\nI would like to extend my heartfelt gratitude to Prof Kam for being an exceptional instructor and mentor throughout all his courses that I have attended. His dedication, patience, and generosity in sharing knowledge have made a profound impact on my MITB journey. Thank you!"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#references",
    "href": "Take-home_Ex2/Take-home_Ex2.html#references",
    "title": "Take-home_Ex2: Applied Spatial Interaction Models- A case study of Singapore public bus commuter flows",
    "section": "References",
    "text": "References\nTin Seong Kam. “2 Choropleth Mapping with R” From R for Geospatial Data Science and Analytics https://r4gdsa.netlify.app/chap02\nTin Seong Kam. “15 Processing and Visualszing Flow Data” From R for Geospatial Data Science and Analytics https://r4gdsa.netlify.app/chap15\nTin Seong Kam. “In-Class Exercise 4: Preparing Spatial Interaction Modelling Variables” https://isss624.netlify.app/in-class_ex/in-class_ex4/in-class_ex4-gds#data-integration-and-final-touch-up"
  }
]